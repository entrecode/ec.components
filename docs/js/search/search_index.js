var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.171,1,1.193]],["body/components/AceComponent.html",[0,0.285,1,1.72,2,0.168,3,0.162,4,0.591,5,0.808,6,0.823,7,1.025,8,0.146,9,2.572,10,0.343,11,3.017,12,6.186,13,5.257,14,2.464,15,1.569,16,4.422,17,4.811,18,1.802,19,1.88,20,2.558,21,2.83,22,0.679,23,1.766,24,0.007,25,0.771,26,2.073,27,1.764,28,3.146,29,4.811,30,1.133,31,4.811,32,0.308,33,0.503,34,2.569,35,1.657,36,4.104,37,4.481,38,1.237,39,1.527,40,3.088,41,1.579,42,2.558,43,1.846,44,0.678,45,4.212,46,3.17,47,3.009,48,3.146,49,4.104,50,4.811,51,4.811,52,3.017,53,6.284,54,7.918,55,0.881,56,2.673,57,6.545,58,2.26,59,4.481,60,0.339,61,3.453,62,3.561,63,6.545,64,0.718,65,1.619,66,1.111,67,3.145,68,3.145,69,3.145,70,1.729,71,0.785,72,2.053,73,3.294,74,1.606,75,1.039,76,1.067,77,1.88,78,3.145,79,3.017,80,3.145,81,3.017,82,3.145,83,3.294,84,2.053,85,3.294,86,0.975,87,0.833,88,0.656,89,3.017,90,3.145,91,4.811,92,3.145,93,4.28,94,4.283,95,4.811,96,4.811,97,3.145,98,4.811,99,3.017,100,3.145,101,3.146,102,2.33,103,1.765,104,3.009,105,1.229,106,2.01,107,3.145,108,1.515,109,3.145,110,1.69,111,3.145,112,1.839,113,0.76,114,2.618,115,3.145,116,2.756,117,3.145,118,2.158,119,2.704,120,3.145,121,1.509,122,2.704,123,3.17,124,2.402,125,2.402,126,1.229,127,2.902,128,2.402,129,2.402,130,1.711,131,3.017,132,0.269,133,3.017,134,1.256,135,1.446,136,2.799,137,3.145,138,2.572,139,1.829,140,2.266,141,1.178,142,0.754,143,1.972,144,1.972,145,0.105,146,0.07,147,2.402,148,4.811,149,4.811,150,3.145,151,3.145,152,5.352,153,3.145,154,3.675,155,2.799,156,5.201,157,3.145,158,5.843,159,3.145,160,3.146,161,3.145,162,1.662,163,4.283,164,3.145,165,1.566,166,3.145,167,3.145,168,3.145,169,3.935,170,3.145,171,1.972,172,0.571,173,1.215,174,0.889,175,1.108,176,1.108,177,1.314,178,1.682,179,0.823,180,0.823,181,0.754,182,1.259,183,0.741,184,0.767,185,1.284,186,1.712,187,0.781,188,1.068,189,2.089,190,0.781,191,1.946,192,0.767,193,0.781,194,0.781,195,0.823,196,0.767,197,1.259,198,0.781,199,0.823,200,0.767,201,0.823,202,0.754,203,0.754,204,1.38,205,1.529,206,0.741,207,0.767,208,0.767,209,0.754,210,0.823,211,0.781,212,1.845,213,0.781,214,0.767,215,0.781,216,0.781,217,0.781,218,0.767,219,0.823,220,0.754,221,0.781,222,0.823,223,0.767,224,0.823,225,0.767,226,0.741,227,0.889,228,0.823,229,0.767,230,0.823,231,0.741,232,0.767,233,0.823,234,0.754,235,0.823,236,0.679,237,0.823,238,0.754,239,1.4,240,0.823,241,0.754,242,0.823,243,0.754,244,0.823,245,0.728,246,0.823,247,0.767,248,0.715,249,0.767,250,0.781,251,0.823,252,0.767,253,0.823,254,0.823,255,0.767,256,0.823,257,0.767,258,0.823,259,0.767,260,0.823,261,0.715,262,0.823,263,0.754,264,0.767,265,0.823,266,0.767,267,0.781,268,0.823,269,0.754,270,0.781,271,1.724,272,0.754,273,0.781,274,0.623,275,0.781,276,0.767,277,0.767,278,0.767,279,0.781,280,0.781,281,0.823,282,0.754,283,0.767,284,0.823,285,0.767,286,0.794,287,0.767,288,0.823,289,0.767,290,0.823,291,0.767,292,0.823,293,0.767,294,0.823,295,0.767,296,0.823,297,0.767,298,0.715,299,0.741,300,0.823,301,0.754,302,0.823,303,0.754,304,0.823,305,0.754,306,0.823,307,0.754,308,0.823,309,0.754,310,0.794,311,0.823,312,0.754,313,0.794,314,0.728,315,0.823,316,0.003,317,0.003]],["title/modules/AceModule.html",[318,1.094,319,3.526]],["body/modules/AceModule.html",[1,2.417,2,0.36,3,0.348,8,0.313,23,2.456,24,0.007,25,1.486,58,2.328,60,0.361,132,0.576,141,3.268,145,0.301,146,0.151,172,1.223,316,0.006,317,0.006,318,1.817,319,6.865,320,2.753,321,6,322,6,323,6,324,6,325,3.395,326,2.423,327,2.239,328,6.741,329,4.568,330,3.176,331,6.741]],["title/interfaces/Action.html",[332,1.35,333,2.662]],["body/interfaces/Action.html",[0,0.257,2,0.307,3,0.297,8,0.267,15,1.38,18,2.76,20,3.226,24,0.007,26,1.201,27,1.027,30,1.356,32,0.565,33,0.771,35,1.528,39,1.409,41,1.222,43,2.126,47,2.647,60,0.336,64,0.738,65,1.785,71,0.94,76,1.022,88,0.935,104,3.737,132,0.492,142,1.38,145,0.27,146,0.129,181,1.766,188,0.827,282,1.766,316,0.005,317,0.005,326,2.07,332,2.243,333,5.166,334,4.709,335,3.348,336,3.662,337,4.165,338,5.167,339,3.54,340,3.078,341,1.695,342,4.141,343,5.125,344,3.569,345,2.405,346,6.559,347,5.628,348,5.125,349,1.618,350,2.202,351,2.949,352,5.125,353,1.121,354,4.141,355,5.125,356,5.125,357,5.125,358,5.125,359,5.125,360,1.48,361,5.125,362,5.125,363,5.125,364,5.125,365,5.125,366,5.125,367,5.125,368,6.559,369,6.559,370,5.125,371,5.125,372,5.125,373,4.444,374,5.125,375,3.61,376,5.125,377,5.125,378,5.125,379,5.125,380,5.125,381,4.397,382,5.125,383,3.472,384,5.125,385,3.765,386,5.125,387,5.125,388,4.709,389,5.125]],["title/interfaces/ActionbarConfig.html",[332,1.35,347,3.737]],["body/interfaces/ActionbarConfig.html",[0,0.266,2,0.324,3,0.313,8,0.282,15,1.455,18,3.12,20,3.336,24,0.007,26,1.267,27,1.083,30,1.43,35,1.566,39,1.458,41,1.289,43,2.168,47,2.792,60,0.345,65,1.642,71,0.991,76,1.047,104,3.83,132,0.519,142,1.455,145,0.277,146,0.136,181,1.827,188,0.872,282,1.827,316,0.005,317,0.005,326,2.183,332,2.299,333,4.997,334,4.966,335,2.373,336,2.596,337,3.83,338,3.662,339,3.255,341,1.267,342,4.283,343,5.405,344,4.035,345,2.536,346,6.784,347,6.362,348,5.405,349,1.706,350,2.323,351,3.11,352,5.405,353,1.182,354,4.283,355,5.405,356,5.405,357,5.405,358,5.405,359,5.405,360,1.561,361,5.405,362,5.405,363,5.405,364,5.405,365,5.405,366,5.405,367,5.405,368,6.784,369,6.784,370,5.405,371,5.405,372,5.405,373,4.596,374,5.405,375,3.807,376,5.405,377,5.405,378,5.405,379,5.405,380,5.405,381,4.638,382,5.405,383,3.662,384,5.405,385,3.971,386,5.405,387,5.405,388,4.966,389,5.405]],["title/components/AdminEntryInputComponent.html",[0,0.171,183,1.153]],["body/components/AdminEntryInputComponent.html",[0,0.298,1,1.044,2,0.228,3,0.221,4,1.314,5,1.1,6,1.119,8,0.199,10,0.467,18,2.26,19,2.053,22,0.924,24,0.007,26,2.095,27,1.786,30,1.421,32,0.42,33,0.631,35,1.604,39,1.718,40,3.581,41,1.907,42,2.967,43,2.061,55,0.715,60,0.314,64,0.722,66,1.031,86,0.638,87,0.855,88,0.429,108,1.397,110,1.025,112,1.695,113,0.7,121,1.893,122,3.391,123,3.677,124,3.268,125,3.268,126,1.672,127,3.639,128,3.268,129,3.268,130,2.328,132,0.366,145,0.142,146,0.096,172,0.777,173,1.524,174,1.115,178,1.951,179,1.119,180,1.119,181,1.025,182,1.579,183,1.788,184,1.044,185,1.536,186,1.986,187,1.062,188,1.193,189,2.28,190,1.062,191,2.173,192,1.044,193,1.062,194,1.062,195,1.119,196,1.044,197,1.579,198,1.062,199,1.119,200,1.044,201,1.119,202,1.025,203,1.025,204,1.648,205,1.829,206,1.008,207,1.044,208,1.044,209,1.025,210,1.119,211,1.062,212,2.094,213,1.062,214,1.044,215,1.062,216,1.062,217,1.062,218,1.044,219,1.119,220,1.025,221,1.062,222,1.119,223,1.044,224,1.119,225,1.044,226,1.008,227,1.115,228,1.119,229,1.044,230,1.119,231,1.008,232,1.044,233,1.119,234,1.025,235,1.119,236,0.924,237,1.119,238,1.025,239,1.675,240,1.119,241,1.025,242,1.119,243,1.025,244,1.119,245,0.99,246,1.119,247,1.044,248,0.973,249,1.044,250,1.062,251,1.119,252,1.044,253,1.119,254,1.119,255,1.044,256,1.119,257,1.044,258,1.119,259,1.044,260,1.119,261,0.973,262,1.119,263,1.025,264,1.044,265,1.119,266,1.044,267,1.062,268,1.119,269,1.025,270,1.062,271,1.882,272,1.025,273,1.062,274,0.847,275,1.062,276,1.044,277,1.044,278,1.044,279,1.062,280,1.062,281,1.119,282,1.025,283,1.044,284,1.119,285,1.044,286,1.081,287,1.044,288,1.119,289,1.044,290,1.119,291,1.044,292,1.119,293,1.044,294,1.119,295,1.044,296,1.119,297,1.044,298,0.973,299,1.008,300,1.119,301,1.025,302,1.119,303,1.025,304,1.119,305,1.025,306,1.119,307,1.025,308,1.119,309,1.025,310,1.081,311,1.119,312,1.025,313,1.081,314,0.99,315,1.119,316,0.004,317,0.004,353,0.833,375,2.683,390,5.471,391,5.471,392,3.083,393,3.091,394,3.091,395,5.371,396,6.793,397,3.551,398,3.784,399,4.132,400,4.935,401,4.578,402,6.034,403,4.935,404,4.609,405,3.344,406,2.328,407,3.246,408,6.034,409,3.809,410,2.019,411,3.499,412,2.683,413,2.488,414,3.499,415,1.873,416,2.93,417,4.279,418,2.93,419,3.499,420,4.935,421,3.639]],["title/directives/AssetDirective.html",[174,0.904,299,1.153]],["body/directives/AssetDirective.html",[2,0.267,3,0.258,4,1.591,7,1.63,8,0.312,10,0.546,15,1.61,21,3.675,22,1.08,24,0.007,25,1.077,26,1.402,32,0.49,33,0.703,35,1.701,39,1.703,44,0.947,46,3.929,55,1.054,60,0.336,64,0.766,65,1.673,66,1.137,70,1.798,71,1.096,74,1.451,76,1.095,77,1.178,86,1.001,87,0.659,88,0.673,103,2.465,113,0.942,116,3.405,121,2.108,132,0.428,142,1.199,145,0.166,146,0.112,174,1.498,175,1.762,176,1.762,177,2.089,185,2.158,299,1.583,316,0.005,317,0.005,337,4.296,339,1.955,341,1.402,353,0.973,360,1.286,397,3.868,405,3.719,406,2.721,407,3.405,410,2.36,415,2.189,418,3.425,421,4.892,422,2.3,423,4.452,424,4.017,425,6.719,426,6.719,427,7.924,428,5.845,429,5.468,430,5.306,431,2.363,432,6.719,433,1.697,434,5.495,435,4.757,436,5.002,437,5.002,438,5.132,439,5.002,440,5.002,441,2.415,442,5.002,443,3.545,444,1.54,445,2.643,446,5.002,447,5.981,448,5.002,449,2.465,450,5.981,451,2.089,452,5.002,453,4.6,454,5.002,455,5.002,456,4.09,457,3.017,458,5.002,459,5.002,460,3.271,461,5.002,462,5.002,463,5.002,464,5.002,465,3.604,466,3.604,467,3.271,468,3.82,469,6.719,470,7.22,471,3.82,472,2.909,473,5.002,474,3.604,475,3.136,476,4.452,477,5.495,478,5.002,479,4.09,480,5.002,481,5.002]],["title/components/AssetListComponent.html",[0,0.171,184,1.193]],["body/components/AssetListComponent.html",[0,0.27,1,0.955,2,0.209,3,0.202,4,0.736,5,1.007,6,1.024,8,0.182,15,1.357,18,2.122,19,0.922,20,2.913,22,0.846,24,0.007,25,0.908,26,2.09,27,1.781,30,1.334,32,0.384,33,0.81,35,1.371,38,0.956,39,1.542,43,0.972,44,1.028,46,2.744,47,3.353,55,0.671,60,0.235,64,0.741,65,1.251,66,1.129,70,1.408,72,1.228,74,1.223,75,1.437,76,1.014,77,1.822,84,1.777,86,0.992,87,0.875,88,0.775,103,1.437,105,1.53,108,1.311,110,0.939,113,0.658,116,2.214,123,4.502,132,0.335,145,0.13,146,0.088,172,0.711,173,1.431,174,1.046,178,1.874,179,1.024,180,1.024,181,0.939,182,1.482,183,0.922,184,1.778,185,1.827,186,1.908,187,0.972,188,1.349,189,2.228,190,0.972,191,2.11,192,0.955,193,0.972,194,0.972,195,1.024,196,0.955,197,1.482,198,0.972,199,1.024,200,0.955,201,1.024,202,0.939,203,0.939,204,1.483,205,1.741,206,0.922,207,0.955,208,0.955,209,0.939,210,1.024,211,0.972,212,2.024,213,0.972,214,0.955,215,0.972,216,0.972,217,0.972,218,0.955,219,1.024,220,0.939,221,0.972,222,1.024,223,0.955,224,1.024,225,0.955,226,0.922,227,1.229,228,1.024,229,0.955,230,1.024,231,0.922,232,0.955,233,1.024,234,0.939,235,1.024,236,1.223,237,1.024,238,0.939,239,1.595,240,1.024,241,0.939,242,1.024,243,0.939,244,1.024,245,0.906,246,1.024,247,0.955,248,0.891,249,0.955,250,0.972,251,1.024,252,0.955,253,1.024,254,1.024,255,0.955,256,1.024,257,0.955,258,1.024,259,0.955,260,1.024,261,0.891,262,1.024,263,0.939,264,0.955,265,1.024,266,0.955,267,0.972,268,1.024,269,0.939,270,0.972,271,1.927,272,0.939,273,0.972,274,0.776,275,0.972,276,2.309,277,0.955,278,0.955,279,0.972,280,0.972,281,1.024,282,0.939,283,0.955,284,1.024,285,0.955,286,0.989,287,0.955,288,1.024,289,0.955,290,1.024,291,0.955,292,1.024,293,0.955,294,1.024,295,0.955,296,1.024,297,0.955,298,0.891,299,0.922,300,1.024,301,0.939,302,1.024,303,0.939,304,1.024,305,0.939,306,1.024,307,0.939,308,1.024,309,0.939,310,0.989,311,1.024,312,0.939,313,0.989,314,0.906,315,1.024,316,0.004,317,0.004,340,1.636,341,1.182,342,3.183,344,3.223,349,1.1,354,3.74,360,1.007,397,2.845,424,2.978,451,1.636,457,2.362,482,5.042,483,4.632,484,3.486,485,5.042,486,4.209,487,3.51,488,3.416,489,6.654,490,3.139,491,5.664,492,3.192,493,7.178,494,2.717,495,5.664,496,2.262,497,4.082,498,5.042,499,3.486,500,1.564,501,3.486,502,1.949,503,3.916,504,3.916,505,3.916,506,2.006,507,3.916,508,2.991,509,2.277,510,2.991,511,2.006,512,3.916,513,2.201,514,3.486,515,3.916,516,1.674,517,1.897,518,3.916,519,3.916,520,3.916,521,4.172,522,3.486,523,3.916,524,2.561,525,3.916,526,3.916,527,3.916,528,3.916,529,3.202,530,3.916,531,3.916,532,3.916,533,2.277,534,2.131,535,3.916,536,3.916,537,2.822,538,3.551,539,3.916,540,3.916,541,4.326,542,3.916,543,2.455,544,2.201,545,5.042,546,4.082]],["title/components/AssetgroupSelectComponent.html",[0,0.171,192,1.193]],["body/components/AssetgroupSelectComponent.html",[0,0.281,1,1.06,2,0.232,3,0.224,4,0.817,5,1.117,6,1.137,8,0.202,15,1.462,19,1.024,20,3.086,22,0.939,24,0.007,26,2.097,27,1.788,30,1.437,32,0.426,33,0.639,35,1.672,38,0.624,39,1.349,44,0.86,47,3.515,60,0.253,64,0.698,65,1.437,66,1.075,71,0.709,76,0.546,77,1.024,86,0.648,87,0.858,88,0.436,108,1.412,110,1.042,113,0.818,132,0.372,145,0.145,146,0.097,172,0.789,173,1.541,174,1.127,178,1.965,179,1.137,180,1.137,181,1.042,182,1.596,183,1.024,184,1.06,185,1.769,186,2,187,1.079,188,1.199,189,2.29,190,1.079,191,2.184,192,1.864,193,2.3,194,1.079,195,1.137,196,1.06,197,1.596,198,1.079,199,1.137,200,1.06,201,1.137,202,1.042,203,1.042,204,1.529,205,1.845,206,1.024,207,1.06,208,1.06,209,1.042,210,1.137,211,1.079,212,2.107,213,1.079,214,1.06,215,1.079,216,1.079,217,1.079,218,1.06,219,1.137,220,1.042,221,1.079,222,1.137,223,1.06,224,1.137,225,1.06,226,1.024,227,1.542,228,1.137,229,1.06,230,1.137,231,1.024,232,1.06,233,1.137,234,1.042,235,1.137,236,0.939,237,1.137,238,1.042,239,1.69,240,1.137,241,1.042,242,1.137,243,1.042,244,1.137,245,1.006,246,1.137,247,1.06,248,0.989,249,1.06,250,1.079,251,1.137,252,1.06,253,1.137,254,1.137,255,1.06,256,1.137,257,1.06,258,1.137,259,1.06,260,1.137,261,0.989,262,1.137,263,1.042,264,1.06,265,1.137,266,1.06,267,1.079,268,1.137,269,1.042,270,1.079,271,1.89,272,1.042,273,1.079,274,0.861,275,1.079,276,1.06,277,1.06,278,1.06,279,1.079,280,1.079,281,1.137,282,1.042,283,1.06,284,1.137,285,1.06,286,1.098,287,1.06,288,1.137,289,1.06,290,1.137,291,1.06,292,1.137,293,1.06,294,1.137,295,1.06,296,1.137,297,1.06,298,0.989,299,1.024,300,1.137,301,1.042,302,1.137,303,1.042,304,1.137,305,1.042,306,1.137,307,1.042,308,1.137,309,1.042,310,1.098,311,1.137,312,1.042,313,1.098,314,1.006,315,1.137,316,0.004,317,0.004,335,1.699,341,1.595,353,1.188,431,2.227,444,1.338,445,2.491,547,8.022,548,7.37,549,3.555,550,5.431,551,5.495,552,4.421,553,7.05,554,4.009,555,4.252,556,5.766,557,4.347,558,5.431,559,4.347,560,4.347,561,4.347,562,4.347,563,3.87,564,3.87,565,3.87,566,3.133,567,2.106,568,2.443,569,2.843,570,4.347,571,4.347,572,4.99]],["title/injectables/AuthGuard.html",[433,1.236,573,3.526]],["body/injectables/AuthGuard.html",[2,0.321,3,0.311,8,0.28,10,0.658,15,1.444,24,0.007,25,0.966,32,0.591,33,0.794,34,2.619,38,0.865,44,1.069,55,1.032,56,3.097,60,0.372,64,0.676,66,1.003,71,1.238,73,5.193,76,1.043,86,0.898,87,0.591,88,0.604,113,0.699,126,2.964,132,0.515,145,0.2,146,0.135,248,1.725,316,0.005,317,0.005,339,2.355,353,1.173,405,3.639,406,3.278,407,3.582,410,2.842,431,2.21,433,2.096,487,4.001,506,4.462,517,3.674,573,5.465,574,7.754,575,5.363,576,7.584,577,3.487,578,5.727,579,4.411,580,3.363,581,4.885,582,4.755,583,3.32,584,6.781,585,9.165,586,3.548,587,4.11,588,7.584,589,6.025,590,5.066,591,4.965,592,6.202,593,4.755,594,2.17,595,3.504,596,4.927,597,3.504,598,2.04,599,2.257,600,6.025,601,4.602,602,5.363,603,6.025,604,6.025,605,7.584,606,6.025,607,6.025,608,5.363,609,6.025,610,6.025,611,6.025]],["title/modules/AuthModule.html",[318,1.094,612,3.526]],["body/modules/AuthModule.html",[0,0.263,2,0.32,3,0.309,8,0.278,10,0.654,23,2.502,24,0.007,58,2.069,60,0.4,76,0.753,132,0.512,134,2.393,141,3.101,145,0.298,146,0.134,172,1.088,245,2.237,266,2.356,267,1.487,283,2.356,316,0.005,317,0.005,318,1.944,320,2.447,325,3.157,326,2.154,327,1.99,330,2.954,340,2.503,424,2.447,496,3.019,573,6.595,612,7.133,613,5.334,614,5.334,615,5.334,616,5.334,617,5.334,618,5.52,619,5.144,620,4.9,621,4.993,622,3.308,623,3.565,624,2.755,625,6.728,626,5.669,627,4.9,628,6.728,629,4.318,630,5.334,631,5.992,632,4.9,633,5.334,634,4.9,635,5.992,636,5.992,637,6.181,638,5.992,639,5.992,640,5.992]],["title/injectables/AuthService.html",[433,1.236,619,2.75]],["body/injectables/AuthService.html",[2,0.329,3,0.178,8,0.16,10,0.376,23,2.536,24,0.007,25,0.989,27,0.918,32,0.337,37,3.526,38,0.984,39,1.57,44,1.275,45,2.717,55,0.912,60,0.284,64,0.627,65,1.797,66,1.073,70,1.237,72,1.615,74,1.48,75,1.773,76,1.239,79,3.229,86,1.293,87,0.851,88,0.919,103,1.262,113,0.927,116,2.678,121,1.615,132,0.294,142,1.479,145,0.114,146,0.077,248,1.669,267,2.037,271,1.333,274,1.02,286,1.853,316,0.005,317,0.004,326,1.851,340,1.437,349,1.925,353,0.67,397,4.147,399,5.023,403,6.297,405,2.578,407,3.009,410,1.623,433,1.559,435,3.229,449,1.889,451,3.428,474,5.752,486,4.189,496,3.188,500,2.736,502,3.411,513,4.613,578,3.106,590,2.995,598,1.165,599,1.289,619,2.894,621,2.075,641,3.063,642,3.933,643,3.711,644,5.673,645,4.212,646,4.447,647,4.447,648,5.494,649,4.212,650,5.88,651,3.933,652,3.711,653,5.603,654,2.802,655,4.212,656,4.584,657,4.584,658,5.15,659,4.584,660,5.15,661,5.15,662,4.584,663,6.851,664,6.851,665,5.15,666,5.15,667,3.063,668,3.441,669,4.584,670,5.15,671,3.441,672,5.752,673,5.299,674,4.584,675,3.441,676,5.15,677,3.441,678,1.71,679,5.233,680,5.15,681,6.047,682,2.825,683,3.441,684,5.15,685,3.441,686,4.132,687,2.814,688,3.441,689,6.854,690,5.15,691,3.441,692,3.441,693,5.15,694,3.441,695,5.15,696,3.441,697,2.894,698,3.063,699,3.441,700,2.25,701,2.25,702,1.762,703,2.075,704,6.851,705,6.851,706,5.15,707,5.15,708,5.15,709,6.099,710,5.15,711,3.441,712,5.15,713,3.441,714,6.172,715,5.233,716,3.441,717,3.441,718,4.584,719,3.441,720,2.814,721,3.063,722,3.441,723,2.075,724,3.441,725,3.441,726,3.441,727,3.441,728,3.441,729,3.441,730,3.441,731,5.15,732,3.441,733,5.15,734,3.441,735,3.229,736,3.441,737,2.995,738,3.229,739,3.441,740,5.15,741,5.15,742,3.441,743,3.441,744,3.441,745,4.212,746,5.15,747,3.441,748,5.15,749,3.933,750,5.15,751,5.15,752,3.526,753,5.15,754,5.15,755,4.584,756,5.15,757,3.441,758,5.15,759,3.441,760,3.441,761,3.441,762,3.441,763,3.441,764,3.441,765,3.441,766,3.441,767,3.441,768,2.25,769,3.063,770,2.075,771,3.441]],["title/classes/Collection.html",[146,0.109,772,2.581]],["body/classes/Collection.html",[2,0.185,3,0.179,7,2.927,8,0.161,10,0.379,24,0.007,25,1.512,32,0.852,33,0.543,34,2.842,38,1.23,39,1.478,43,2.444,44,0.731,60,0.215,64,0.743,66,1.094,71,1.202,74,1.486,75,2.004,76,1.19,77,1.734,84,1.626,86,1.296,87,0.852,88,0.892,113,0.994,121,1.089,142,1.765,145,0.115,146,0.165,162,1.79,188,0.891,227,0.641,316,0.004,317,0.004,327,1.153,335,3.019,341,2.016,353,0.676,360,2.235,422,1.596,441,2.878,444,2.923,451,2.166,488,3.742,492,3.749,509,4.002,517,3.334,534,3.744,590,4.002,591,4.518,592,2.839,597,2.019,654,3.376,678,3.143,697,1.951,772,4.993,773,3.09,774,5.074,775,5.184,776,5.184,777,5.184,778,6.882,779,5.628,780,3.957,781,5.184,782,5.184,783,3.376,784,5.184,785,5.184,786,3.96,787,5.523,788,3.487,789,3.608,790,3.472,791,3.127,792,8.261,793,3.472,794,5.184,795,5.184,796,6.028,797,3.472,798,4.15,799,5.184,800,5.184,801,3.472,802,5.184,803,3.55,804,3.55,805,5.184,806,3.472,807,5.184,808,5.184,809,3.472,810,5.184,811,5.184,812,3.472,813,3.472,814,2.914,815,5.184,816,3.472,817,5.184,818,3.472,819,5.184,820,5.184,821,3.472,822,5.184,823,3.472,824,3.472,825,3.472,826,3.472,827,3.09,828,3.09,829,3.09,830,3.09,831,3.09,832,3.164,833,3.09,834,3.09,835,3.09,836,2.094,837,2.177,838,5.019,839,3.55,840,6.204,841,5.184,842,5.184,843,3.472,844,1.831,845,3.472,846,3.472,847,6.882,848,7.364,849,6.204,850,8.005,851,3.472,852,3.472,853,3.472,854,3.472,855,3.09,856,3.472,857,3.472,858,3.472,859,3.472]],["title/classes/Config.html",[146,0.109,349,1.375]],["body/classes/Config.html",[2,0.329,3,0.319,8,0.287,10,0.674,24,0.007,32,0.606,33,1.019,38,0.887,39,1.606,41,1.635,44,1.3,55,0.731,56,3.589,64,0.716,65,1.758,66,0.931,75,1.992,76,1.137,86,0.92,87,0.606,88,0.841,103,2.826,113,0.717,145,0.205,146,0.188,316,0.005,317,0.005,349,2.795,375,3.872,451,2.58,567,2.991,583,3.371,599,3.144,682,3.384,860,5.497,861,4.657,862,4.479,863,6.175,864,6.175,865,6.175,866,6.299,867,7.702,868,4.146,869,7.702,870,6.856,871,7.702,872,5.55,873,4.191,874,4.45,875,3.36,876,6.175,877,6.175,878,6.175,879,7.702,880,8.394,881,6.175]],["title/components/CrudComponent.html",[0,0.171,196,1.193]],["body/components/CrudComponent.html",[0,0.241,1,0.736,2,0.161,3,0.156,4,1.301,5,0.776,6,0.79,7,0.983,8,0.14,10,0.329,15,1.117,19,0.711,20,2.493,22,0.652,24,0.007,25,1.173,26,2.069,27,1.761,30,1.098,32,0.296,33,0.596,35,1.434,38,0.669,39,1.632,41,1.553,43,1.955,44,1.164,47,2.945,55,0.552,58,1.61,60,0.374,64,0.704,65,1.301,66,1.084,71,0.761,75,1.007,76,1.128,77,1.098,84,1.462,86,1.032,87,0.857,88,0.828,103,3.03,105,2.705,106,2.675,108,1.482,110,0.723,112,1.799,113,0.743,132,0.258,135,1.388,145,0.1,146,0.067,162,1.967,172,0.548,173,1.438,174,0.861,175,1.063,176,1.063,177,1.261,178,1.646,179,0.79,180,0.79,181,0.723,182,1.219,183,0.711,184,0.736,185,1.251,186,1.676,187,0.749,188,1.326,189,2.061,190,0.749,191,1.914,192,0.736,193,0.749,194,0.749,195,0.79,196,1.784,197,1.219,198,0.749,199,0.79,200,0.736,201,0.79,202,0.723,203,0.723,204,1.6,205,1.49,206,0.711,207,0.736,208,0.736,209,0.723,210,0.79,211,1.157,212,1.811,213,1.718,214,0.736,215,0.749,216,1.718,217,0.749,218,0.736,219,0.79,220,0.723,221,0.749,222,0.79,223,0.736,224,0.79,225,0.736,226,0.711,227,1.63,228,0.79,229,0.736,230,0.79,231,0.711,232,0.736,233,0.79,234,0.723,235,0.79,236,1.495,237,0.79,238,0.723,239,1.365,240,0.79,241,0.723,242,0.79,243,0.723,244,0.79,245,0.699,246,0.79,247,0.736,248,0.687,249,0.736,250,0.749,251,0.79,252,0.736,253,0.79,254,0.79,255,0.736,256,0.79,257,0.736,258,0.79,259,0.736,260,0.79,261,0.687,262,0.79,263,0.723,264,0.736,265,0.79,266,0.736,267,0.749,268,0.79,269,0.723,270,0.749,271,1.701,272,0.723,273,0.749,274,0.598,275,0.749,276,0.736,277,0.736,278,0.736,279,0.749,280,0.749,281,0.79,282,0.723,283,0.736,284,0.79,285,0.736,286,0.762,287,0.736,288,0.79,289,0.736,290,0.79,291,0.736,292,0.79,293,0.736,294,0.79,295,0.736,296,0.79,297,0.736,298,0.687,299,0.711,300,0.79,301,0.723,302,0.79,303,0.723,304,0.79,305,0.723,306,0.79,307,0.723,308,0.79,309,0.723,310,0.762,311,0.79,312,0.723,313,0.762,314,0.699,315,0.79,316,0.003,317,0.003,327,1.548,339,1.179,340,1.947,341,0.972,342,3.599,349,1.6,353,0.587,354,3.2,360,1.198,405,1.947,406,1.642,407,2.503,410,1.424,424,2.325,430,2.922,431,2.017,444,1.435,445,2.485,449,1.71,472,1.755,487,4.024,494,2.988,533,1.755,537,3.359,541,5.588,544,1.696,546,2.175,580,1.13,586,3.53,587,3.021,595,1.755,596,2.468,598,1.022,599,3.148,619,3.599,621,3.434,678,2.127,697,1.696,723,1.82,861,2.32,872,2.175,882,2.686,883,3.359,884,2.459,885,3.812,886,3.359,887,4.661,888,3.004,889,3.434,890,2.917,891,4.149,892,6.404,893,5.579,894,4.149,895,4.661,896,4.661,897,4.661,898,3.434,899,4.287,900,3.2,901,1.928,902,2.35,903,4.661,904,4.175,905,1.578,906,5.701,907,2.536,908,3.018,909,3.018,910,3.018,911,2.63,912,3.86,913,3.018,914,3.018,915,4.149,916,3.018,917,2.711,918,4.661,919,3.018,920,3.359,921,4.661,922,3.018,923,3.102,924,2.459,925,3.018,926,4.661,927,3.018,928,3.018,929,2.199,930,2.872,931,3.018,932,3.018,933,3.018,934,3.018,935,1.82,936,1.592,937,2.468,938,1.973,939,2.468,940,2.468,941,2.468,942,2.686,943,2.686,944,2.686,945,2.686,946,2.305,947,1.973,948,1.82,949,3.018,950,2.305,951,3.018,952,3.018,953,3.018,954,2.175,955,3.018,956,3.018,957,3.018,958,2.175,959,3.018,960,5.069,961,2.686,962,2.305,963,2.686,964,3.018,965,2.468,966,3.018,967,3.018,968,2.175,969,3.018,970,3.018,971,5.694,972,2.686,973,2.686,974,3.018,975,3.018,976,2.811,977,2.09,978,3.899,979,3.018,980,1.755,981,3.048,982,3.018,983,1.82,984,2.066,985,2.066,986,3.018,987,4.149]],["title/interfaces/CrudConfig.html",[332,1.35,904,2.951]],["body/interfaces/CrudConfig.html",[0,0.286,2,0.22,3,0.213,8,0.318,10,0.45,18,2.2,24,0.007,25,1.536,27,1.048,32,0.404,33,0.615,38,0.844,44,1.217,53,4.233,55,0.972,60,0.309,64,0.785,65,1.726,66,0.71,70,3.103,74,1.269,88,0.995,113,0.952,145,0.137,162,2.029,176,2.07,185,1.64,188,1.24,193,1.458,204,1.65,227,1.682,236,1.612,261,1.698,274,1.74,298,1.866,316,0.004,317,0.004,332,1.621,341,2.058,344,3.317,350,3.138,424,3.35,430,5.144,441,2.949,457,3.543,492,2.572,494,3.35,506,3.823,511,3.009,516,2.511,524,3.842,583,2.572,586,3.507,672,5.912,678,2.621,679,4.487,735,4.68,737,3.982,738,4.293,780,3.009,862,3.417,875,3.196,883,4.233,890,3.009,904,4.502,905,2.528,929,4.296,936,2.174,941,3.37,977,2.635,988,3.668,989,2.583,990,5.875,991,7.464,992,7.464,993,7.464,994,7.464,995,6.266,996,7.464,997,7.464,998,6.644,999,7.464,1000,7.464,1001,5.644,1002,7.464,1003,7.464,1004,7.464,1005,7.464,1006,7.464,1007,7.464,1008,4.233,1009,4.611,1010,4.487,1011,5.229,1012,4.881,1013,2.454,1014,5.229,1015,4.487,1016,3.543,1017,4.233,1018,3.302,1019,5.875,1020,4.233,1021,3.099,1022,5.229,1023,2.701,1024,6.644,1025,5.111,1026,4.68,1027,6.644,1028,3.417,1029,4.804,1030,3.196,1031,6.104,1032,3.302,1033,4.804,1034,5.875,1035,3.302,1036,5.875,1037,3.668,1038,4.12,1039,4.12]],["title/injectables/CrudService.html",[433,1.236,1040,2.846]],["body/injectables/CrudService.html",[0,0.202,2,0.216,3,0.209,8,0.188,10,0.442,24,0.007,25,1.187,32,0.397,33,0.853,38,1.388,39,1.297,41,1.231,44,0.956,55,0.928,60,0.356,61,3.06,62,3.156,64,0.739,65,1.721,66,1.057,70,3.229,71,1.331,75,2.037,76,1.212,79,2.537,84,2.894,86,1.28,87,0.842,88,0.861,103,3.152,112,1.137,113,0.47,114,2.202,116,2.893,126,2.267,132,0.346,142,1.39,145,0.135,146,0.09,162,1.398,204,1.733,271,1.599,274,1.732,316,0.004,317,0.005,333,3.156,337,1.861,341,0.844,353,0.788,398,3.637,405,3.092,406,2.202,407,2.893,410,1.909,430,3.637,433,1.979,443,4.302,451,1.69,490,3.492,492,3.973,496,2.957,533,3.373,534,4.264,537,2.916,567,1.96,582,3.637,591,2.135,597,2.354,598,1.37,622,2.539,682,3.427,723,4.088,737,2.354,738,2.537,780,3.472,814,2.274,837,2.537,844,3.576,868,3.492,890,2.971,911,2.661,1013,2.423,1021,4.134,1025,2.771,1026,2.537,1040,3.373,1041,3.602,1042,3.637,1043,4.179,1044,3.637,1045,2.736,1046,3.971,1047,5.101,1048,5.163,1049,5.163,1050,5.163,1051,4.047,1052,4.743,1053,4.047,1054,3.26,1055,4.743,1056,4.047,1057,3.637,1058,5.8,1059,4.047,1060,5.8,1061,5.875,1062,4.047,1063,4.743,1064,4.047,1065,4.179,1066,4.25,1067,5.8,1068,4.047,1069,3.498,1070,5.163,1071,5.8,1072,6.778,1073,4.047,1074,4.047,1075,2.646,1076,3.602,1077,3.309,1078,2.771,1079,5.8,1080,4.047,1081,4.047,1082,4.047,1083,3.091,1084,4.047,1085,2.646,1086,3.602,1087,4.047,1088,3.942,1089,4.047,1090,4.047,1091,4.047,1092,3.602,1093,4.047,1094,3.602,1095,4.047,1096,4.047,1097,4.047,1098,6.778,1099,5.543,1100,3.309,1101,3.309,1102,3.309,1103,4.047,1104,5.8,1105,4.743,1106,2.354,1107,4.047,1108,5.177,1109,6.778,1110,3.309,1111,3.309,1112,3.309,1113,3.309,1114,5.543,1115,2.441,1116,3.309,1117,4.047,1118,3.602,1119,4.047]],["title/modules/DataModule.html",[318,1.094,1120,3.35]],["body/modules/DataModule.html",[2,0.234,3,0.226,8,0.203,23,2.529,24,0.007,58,1.512,60,0.404,76,0.55,103,2.25,132,0.374,134,1.749,141,2.651,145,0.255,146,0.098,172,0.795,183,2.065,188,1.101,196,2.245,202,2.101,203,2.101,204,1.642,211,2.285,213,2.285,214,2.278,215,2.318,216,2.285,217,2.318,303,2.206,305,2.206,316,0.004,317,0.004,318,1.371,320,1.788,325,2.562,326,1.574,327,1.454,329,3.447,330,2.766,353,0.852,391,3.155,413,3.567,544,2.461,595,2.546,612,6.634,618,5.552,623,2.893,624,2.013,625,5.459,627,3.581,629,3.155,644,5.279,646,4.419,652,4.419,702,3.141,873,2.382,937,3.581,938,2.863,939,3.581,946,4.684,947,4.01,1040,4.866,1120,6.856,1121,3.898,1122,3.898,1123,3.898,1124,3.898,1125,3.898,1126,6.634,1127,6.304,1128,6.02,1129,6.03,1130,5.047,1131,5.047,1132,4.378,1133,4.419,1134,5.459,1135,5.459,1136,2.998,1137,2.863,1138,4.378,1139,4.378,1140,3.898,1141,4.378,1142,3.699,1143,3.155,1144,5.459,1145,4.684,1146,4.378,1147,4.378,1148,2.998,1149,2.998,1150,3.898,1151,4.378,1152,3.581,1153,3.581,1154,4.378]],["title/components/DatetimeComponent.html",[0,0.171,200,1.193]],["body/components/DatetimeComponent.html",[0,0.29,1,0.96,2,0.21,3,0.203,4,0.74,5,1.012,6,1.03,7,1.282,8,0.183,10,0.43,15,1.936,16,5.447,19,0.927,22,0.85,23,2.017,24,0.007,25,1.171,26,2.091,27,1.782,30,1.339,32,0.386,33,0.595,35,1.658,36,4.583,38,1.05,39,1.276,40,2.682,44,0.801,48,4.779,49,5.065,52,3.564,55,0.673,60,0.303,64,0.658,65,1.254,66,1.066,71,0.928,75,1.228,76,0.839,77,1.572,81,3.564,84,2.293,86,0.847,87,0.852,88,0.57,89,3.564,99,3.564,103,2.086,105,1.538,106,2.375,108,1.316,110,0.943,112,1.597,113,0.9,114,3.093,122,4.792,131,3.564,132,0.336,133,3.564,134,1.572,143,2.468,144,2.468,145,0.131,146,0.088,171,2.468,172,0.714,173,1.436,174,1.05,175,1.387,176,1.387,177,1.644,178,1.879,179,1.03,180,1.03,181,0.943,182,1.487,183,0.927,184,0.96,185,1.466,186,1.912,187,0.977,188,1.16,189,2.231,190,0.977,191,2.113,192,0.96,193,0.977,194,1.924,195,1.03,196,0.96,197,1.487,198,0.977,199,1.03,200,1.891,201,1.03,202,0.943,203,0.943,204,1.485,205,1.746,206,0.927,207,0.96,208,0.96,209,0.943,210,1.03,211,0.977,212,2.028,213,0.977,214,0.96,215,0.977,216,0.977,217,0.977,218,0.96,219,1.03,220,0.943,221,0.977,222,1.03,223,0.96,224,1.03,225,0.96,226,0.927,227,1.35,228,1.03,229,0.96,230,1.03,231,0.927,232,0.96,233,1.03,234,0.943,235,1.03,236,0.85,237,1.03,238,0.943,239,1.599,240,1.03,241,0.943,242,1.03,243,0.943,244,1.03,245,0.911,246,1.03,247,0.96,248,0.895,249,0.96,250,0.977,251,1.03,252,0.96,253,1.03,254,1.03,255,0.96,256,1.03,257,0.96,258,1.03,259,0.96,260,1.03,261,0.895,262,1.03,263,0.943,264,0.96,265,1.03,266,0.96,267,0.977,268,1.03,269,0.943,270,0.977,271,1.842,272,0.943,273,0.977,274,0.779,275,0.977,276,0.96,277,0.96,278,0.96,279,0.977,280,0.977,281,1.03,282,0.943,283,0.96,284,1.03,285,0.96,286,0.994,287,0.96,288,1.03,289,0.96,290,1.03,291,0.96,292,1.03,293,0.96,294,1.03,295,0.96,296,1.03,297,0.96,298,0.895,299,0.927,300,1.03,301,0.943,302,1.03,303,0.943,304,1.03,305,0.943,306,1.03,307,0.943,308,1.03,309,0.943,310,0.994,311,1.03,312,0.943,313,0.994,314,0.911,315,1.03,316,0.004,317,0.004,341,1.186,393,2.912,554,3.859,678,1.888,980,3.306,1155,3.503,1156,5.267,1157,5.06,1158,5.685,1159,6.17,1160,7.309,1161,5.251,1162,6.673,1163,2.575,1164,3.564,1165,5.06,1166,3.936,1167,3.093,1168,3.936,1169,3.936,1170,5.685,1171,3.936,1172,3.936,1173,3.936,1174,3.936,1175,3.936,1176,3.936,1177,4.096,1178,3.936,1179,4.342,1180,5.685,1181,3.892,1182,2.836,1183,3.936,1184,3.936,1185,3.936]],["title/pipes/DatetimePipe.html",[1186,2.581,1187,3.526]],["body/pipes/DatetimePipe.html",[2,0.341,3,0.33,8,0.297,10,0.698,15,1.532,22,1.381,24,0.007,25,1.025,33,0.823,38,1.367,43,2.208,44,0.901,55,0.932,60,0.353,64,0.641,65,1.844,66,0.773,72,2.468,75,1.7,76,1.118,86,0.953,87,0.836,88,0.641,113,0.742,126,3.075,132,0.546,142,1.532,145,0.213,146,0.143,316,0.005,317,0.005,451,2.67,490,3.712,598,2.165,678,2.614,791,4.746,901,2.165,902,2.887,1156,5.671,1161,4.958,1181,5.388,1182,4.607,1186,4.498,1187,5.671,1188,5.691,1189,5.388,1190,5.671,1191,4.151,1192,6.393,1193,6.583,1194,8.131,1195,6.393,1196,7.005,1197,5.671,1198,4.18,1199,6.393,1200,6.393,1201,6.393,1202,6.393,1203,6.393,1204,6.393]],["title/interfaces/Day.html",[332,1.35,1179,3.737]],["body/interfaces/Day.html",[0,0.186,2,0.193,3,0.186,8,0.168,10,0.394,15,0.865,20,2.336,21,2.585,24,0.007,25,1.256,26,0.753,27,0.644,30,0.85,32,0.848,33,0.558,34,1.843,35,1.625,39,1.214,47,1.66,56,2.179,60,0.31,64,0.752,65,1.7,71,1.222,74,1.515,75,1.692,76,1.154,77,1.652,84,2.543,88,0.703,119,2.029,121,2.712,132,0.309,142,1.794,145,0.177,146,0.181,162,1.843,165,3.161,227,1.537,259,0.88,274,1.057,316,0.004,317,0.004,332,1.936,341,1.871,360,1.372,373,4.231,415,1.58,431,1.85,441,2.691,445,2.439,488,3.219,492,2.336,509,3.104,529,2.952,577,1.66,591,3.949,597,2.099,678,1.772,682,1.958,804,2.472,832,2.919,875,2.904,884,1.904,901,1.222,902,1.958,905,1.807,911,1.298,924,1.904,930,3.146,1008,2.601,1115,2.177,1136,5.551,1157,4.75,1159,4.849,1161,5.215,1163,1.88,1164,2.263,1165,7.806,1179,7.446,1181,5.699,1182,2.601,1198,2.36,1205,3.213,1206,8.966,1207,7.485,1208,4.036,1209,6.951,1210,7.485,1211,6.192,1212,8.499,1213,3.846,1214,3.846,1215,8.875,1216,5.551,1217,3.213,1218,3.61,1219,2.757,1220,3.61,1221,5.358,1222,3.626,1223,5.337,1224,2.601,1225,3.61,1226,4.75,1227,3.213,1228,7.836,1229,1.381,1230,3.61,1231,3.61,1232,3.61,1233,3.213,1234,3.61,1235,2.099,1236,3.61,1237,3.61,1238,6.349,1239,3.213,1240,3.61,1241,3.61,1242,5.337,1243,3.61,1244,3.61,1245,3.61,1246,3.61,1247,3.61,1248,3.61,1249,3.61,1250,3.61,1251,7.836,1252,5.337,1253,6.349,1254,5.337,1255,6.349,1256,5.337,1257,3.61,1258,3.61,1259,3.61,1260,3.61,1261,3.61,1262,7.485,1263,3.61,1264,3.61,1265,3.61,1266,3.61,1267,3.61,1268,7.015,1269,3.61,1270,5.337,1271,5.337,1272,5.192,1273,3.61,1274,3.61,1275,3.61,1276,3.61,1277,3.61,1278,5.337,1279,3.61,1280,3.61,1281,5.337,1282,3.61,1283,3.61,1284,3.61,1285,3.61,1286,3.61,1287,3.61,1288,3.61,1289,5.337,1290,3.61,1291,3.61,1292,3.61,1293,3.61,1294,3.61,1295,3.61,1296,3.61,1297,3.61,1298,3.61,1299,3.61,1300,6.349,1301,3.61,1302,6.349,1303,3.61,1304,3.61,1305,3.61,1306,3.61,1307,5.337,1308,3.61,1309,3.61,1310,3.61,1311,3.61,1312,3.61,1313,3.61,1314,2.029,1315,3.61,1316,3.213,1317,3.61,1318,5.337,1319,3.61,1320,3.61,1321,3.61,1322,3.61,1323,3.61,1324,3.61,1325,3.61,1326,3.61,1327,3.61,1328,3.61,1329,3.61,1330,3.61,1331,3.61,1332,3.61,1333,3.61,1334,3.61,1335,2.952,1336,3.61,1337,3.61,1338,3.61,1339,3.61]],["title/components/DefaultEntryInputComponent.html",[0,0.171,202,1.173]],["body/components/DefaultEntryInputComponent.html",[0,0.3,1,1.075,2,0.235,3,0.227,4,1.521,5,1.133,6,1.153,8,0.205,10,0.481,18,2.307,19,2.068,22,0.952,24,0.007,26,2.097,27,1.788,30,1.451,32,0.432,33,0.645,35,1.677,39,1.729,40,3.628,41,1.864,42,3.005,43,2.081,55,0.73,60,0.294,64,0.715,66,1.013,86,0.657,87,0.861,88,0.442,108,1.426,110,1.056,112,1.731,113,0.973,122,3.462,123,3.725,124,3.366,125,3.366,126,1.722,127,3.715,128,3.366,129,3.366,130,2.398,132,0.377,145,0.147,146,0.098,172,0.8,173,1.556,174,1.138,178,1.977,179,1.153,180,1.153,181,1.056,182,1.612,183,1.038,184,1.075,185,1.561,186,2.012,187,1.094,188,1.204,189,2.297,190,1.094,191,2.194,192,1.075,193,1.094,194,1.094,195,1.153,196,1.075,197,1.612,198,1.094,199,1.153,200,1.075,201,1.153,202,1.843,203,1.056,204,1.644,205,1.858,206,1.038,207,1.075,208,1.075,209,1.056,210,1.153,211,1.094,212,2.117,213,1.094,214,1.075,215,1.094,216,1.094,217,1.094,218,1.075,219,1.153,220,1.056,221,1.094,222,1.153,223,1.075,224,1.153,225,1.075,226,1.038,227,1.138,228,1.153,229,1.075,230,1.153,231,1.038,232,1.075,233,1.153,234,1.056,235,1.153,236,0.952,237,1.153,238,1.056,239,1.702,240,1.153,241,1.056,242,1.153,243,1.056,244,1.153,245,1.02,246,1.153,247,1.075,248,1.003,249,1.075,250,1.094,251,1.153,252,1.075,253,1.153,254,1.153,255,1.075,256,1.153,257,1.075,258,1.153,259,1.075,260,1.153,261,1.003,262,1.153,263,1.056,264,1.075,265,1.153,266,1.075,267,1.094,268,1.153,269,1.056,270,1.094,271,1.896,272,1.056,273,1.094,274,0.873,275,1.094,276,1.075,277,1.075,278,1.075,279,1.094,280,1.094,281,1.153,282,1.056,283,1.075,284,1.153,285,1.075,286,1.113,287,1.075,288,1.153,289,1.075,290,1.153,291,1.075,292,1.153,293,1.075,294,1.153,295,1.075,296,1.153,297,1.075,298,1.003,299,1.038,300,1.153,301,1.056,302,1.153,303,1.056,304,1.153,305,1.056,306,1.153,307,1.056,308,1.153,309,1.056,310,1.113,311,1.153,312,1.056,313,1.113,314,1.02,315,1.153,316,0.004,317,0.004,353,0.858,390,5.118,392,3.176,393,3.155,401,3.715,404,4.705,405,3.38,406,2.398,407,3.277,410,2.079,411,3.604,412,2.763,413,2.563,415,1.929,416,3.017,419,3.604,420,5.038,421,3.715,1142,4.284,1213,4.439,1340,4.407,1341,4.407]],["title/components/DefaultEntryOutputComponent.html",[0,0.171,203,1.173]],["body/components/DefaultEntryOutputComponent.html",[0,0.314,1,1.121,2,0.245,3,0.237,4,1.365,5,1.182,6,1.203,8,0.213,10,0.502,19,1.083,22,0.993,24,0.007,26,2.101,27,1.791,30,1.494,32,0.451,33,0.664,35,0.864,41,1.935,43,2.262,60,0.301,64,0.638,66,0.767,87,0.854,108,1.468,110,1.102,113,1.03,132,0.393,145,0.153,146,0.103,172,0.834,173,1.602,174,1.172,178,2.013,179,1.203,180,1.203,181,1.102,182,1.66,183,1.083,184,1.121,185,1.596,186,2.049,187,1.141,188,1.22,189,2.321,190,1.141,191,2.223,192,1.121,193,1.141,194,1.141,195,1.203,196,1.121,197,1.66,198,1.141,199,1.203,200,1.121,201,1.203,202,1.102,203,1.877,204,1.678,205,1.9,206,1.083,207,1.121,208,1.121,209,1.102,210,1.203,211,1.141,212,2.15,213,1.141,214,1.121,215,1.141,216,1.141,217,1.141,218,1.121,219,1.203,220,1.102,221,1.141,222,1.203,223,1.121,224,1.203,225,1.121,226,1.083,227,1.172,228,1.203,229,1.121,230,1.203,231,1.083,232,1.121,233,1.203,234,1.102,235,1.203,236,0.993,237,1.203,238,1.102,239,1.741,240,1.203,241,1.102,242,1.203,243,1.102,244,1.203,245,1.064,246,1.203,247,1.121,248,1.046,249,1.121,250,1.141,251,1.203,252,1.121,253,1.203,254,1.203,255,1.121,256,1.203,257,1.121,258,1.203,259,1.121,260,1.203,261,1.046,262,1.203,263,1.102,264,1.121,265,1.203,266,1.121,267,1.141,268,1.203,269,1.102,270,1.141,271,1.916,272,1.102,273,1.141,274,0.91,275,1.141,276,1.121,277,1.121,278,1.121,279,1.141,280,1.141,281,1.203,282,1.102,283,1.121,284,1.203,285,1.121,286,1.161,287,1.121,288,1.203,289,1.121,290,1.203,291,1.121,292,1.203,293,1.121,294,1.203,295,1.121,296,1.203,297,1.121,298,1.046,299,1.083,300,1.203,301,1.102,302,1.203,303,1.102,304,1.203,305,1.102,306,1.203,307,1.102,308,1.203,309,1.102,310,1.161,311,1.203,312,1.102,313,1.161,314,1.064,315,1.203,316,0.004,317,0.004,345,1.92,390,5.234,393,3.249,401,3.826,419,3.759,420,5.188,421,3.826,431,2.655,703,3.826,1142,4.381,1163,2.235,1213,4.571,1342,3.759,1343,5.647,1344,4.092,1345,4.092,1346,3.312,1347,5.647]],["title/components/DefaultInputComponent.html",[0,0.171,19,1.153]],["body/components/DefaultInputComponent.html",[0,0.301,1,1.092,2,0.239,3,0.231,4,1.347,5,1.151,6,1.172,8,0.208,10,0.489,19,1.824,22,0.967,24,0.007,26,2.098,27,1.789,30,1.468,32,0.439,33,0.652,35,1.53,39,1.768,40,3.976,41,1.962,42,3.294,43,2.25,55,0.917,60,0.321,64,0.686,66,0.936,87,0.848,108,1.442,110,1.074,112,2.176,113,0.899,122,4.353,126,2.435,127,4.671,130,3.39,132,0.383,134,1.789,145,0.149,146,0.1,172,0.813,173,1.574,174,1.151,178,1.991,179,1.172,180,1.172,181,1.074,182,1.63,183,1.055,184,1.092,185,1.574,186,2.026,187,1.112,188,1.21,189,2.307,190,1.112,191,2.205,192,1.092,193,1.112,194,1.112,195,1.172,196,1.092,197,1.63,198,1.112,199,1.172,200,1.092,201,1.172,202,1.074,203,1.074,204,1.542,205,1.875,206,1.055,207,1.092,208,1.092,209,1.074,210,1.172,211,1.112,212,2.13,213,1.112,214,1.092,215,1.112,216,1.112,217,1.112,218,1.092,219,1.172,220,1.074,221,1.112,222,1.172,223,1.092,224,1.172,225,1.092,226,1.055,227,1.151,228,1.172,229,1.092,230,1.172,231,1.055,232,1.092,233,1.172,234,1.074,235,1.172,236,0.967,237,1.172,238,1.074,239,1.717,240,1.172,241,1.074,242,1.172,243,1.074,244,1.172,245,1.037,246,1.172,247,1.092,248,1.019,249,1.092,250,1.112,251,1.172,252,1.092,253,1.172,254,1.172,255,1.092,256,1.172,257,1.092,258,1.172,259,1.092,260,1.172,261,1.019,262,1.172,263,1.074,264,1.092,265,1.172,266,1.092,267,1.112,268,1.172,269,1.074,270,1.112,271,1.904,272,1.074,273,1.112,274,0.887,275,1.112,276,1.092,277,1.092,278,1.092,279,1.112,280,1.112,281,1.172,282,1.074,283,1.092,284,1.172,285,1.092,286,1.131,287,1.092,288,1.172,289,1.092,290,1.172,291,1.092,292,1.172,293,1.092,294,1.172,295,1.092,296,1.172,297,1.092,298,1.019,299,1.055,300,1.172,301,1.074,302,1.172,303,1.074,304,1.172,305,1.074,306,1.172,307,1.074,308,1.172,309,1.074,310,1.131,311,1.172,312,1.074,313,1.131,314,1.037,315,1.172,316,0.004,317,0.004,392,3.228,393,3.191,404,4.759,409,3.987,412,5.105,1346,3.228,1348,6.658,1349,4.49,1350,4.479,1351,4.479,1352,4.479,1353,2.809,1354,6.231,1355,6.231]],["title/components/DefaultOutputComponent.html",[0,0.171,206,1.153]],["body/components/DefaultOutputComponent.html",[0,0.286,1,1.113,2,0.243,3,0.235,4,1.36,5,1.173,6,1.194,8,0.212,10,0.498,19,1.074,22,0.985,24,0.007,26,2.1,27,1.791,30,1.486,32,0.447,33,0.66,35,1.36,38,0.906,41,1.968,43,2.301,60,0.3,64,0.514,66,0.763,87,0.852,108,1.461,110,1.093,113,0.984,130,3.433,132,0.39,145,0.152,146,0.102,172,0.828,173,1.594,174,1.166,178,2.007,179,1.194,180,1.194,181,1.093,182,1.651,183,1.074,184,1.113,185,1.59,186,2.042,187,1.132,188,1.217,189,2.317,190,1.132,191,2.218,192,1.113,193,1.132,194,1.132,195,1.194,196,1.113,197,1.651,198,1.132,199,1.194,200,1.113,201,1.194,202,1.093,203,1.093,204,1.55,205,1.893,206,1.839,207,1.113,208,1.113,209,1.093,210,1.194,211,1.132,212,2.144,213,1.132,214,1.113,215,1.132,216,1.132,217,1.132,218,1.113,219,1.194,220,1.093,221,1.132,222,1.194,223,1.113,224,1.194,225,1.113,226,1.074,227,1.166,228,1.194,229,1.113,230,1.194,231,1.074,232,1.113,233,1.194,234,1.093,235,1.194,236,0.985,237,1.194,238,1.093,239,1.734,240,1.194,241,1.093,242,1.194,243,1.093,244,1.194,245,1.056,246,1.194,247,1.113,248,1.038,249,1.113,250,1.132,251,1.194,252,1.113,253,1.194,254,1.194,255,1.113,256,1.194,257,1.113,258,1.194,259,1.113,260,1.194,261,1.038,262,1.194,263,1.093,264,1.113,265,1.194,266,1.113,267,1.132,268,1.194,269,1.093,270,1.132,271,1.913,272,1.093,273,1.132,274,0.903,275,1.132,276,1.113,277,1.113,278,1.113,279,1.132,280,1.132,281,1.194,282,1.093,283,1.113,284,1.194,285,1.113,286,1.152,287,1.113,288,1.194,289,1.113,290,1.194,291,1.113,292,1.194,293,1.113,294,1.194,295,1.113,296,1.194,297,1.113,298,1.038,299,1.074,300,1.194,301,1.093,302,1.194,303,1.093,304,1.194,305,1.093,306,1.194,307,1.093,308,1.194,309,1.093,310,1.152,311,1.194,312,1.093,313,1.152,314,1.056,315,1.194,316,0.004,317,0.004,350,2.414,393,3.232,431,2.274,703,3.806,1163,2.223,1342,3.731,1343,5.617,1344,4.061,1345,4.061,1346,3.287,1347,8.52,1348,5.916,1353,2.86,1356,4.953,1357,6.31,1358,4.562,1359,4.562,1360,7.806,1361,4.321]],["title/directives/DropzoneDirective.html",[174,0.904,301,1.173]],["body/directives/DropzoneDirective.html",[2,0.302,3,0.292,8,0.426,10,0.617,22,1.222,24,0.007,25,1.412,26,1.52,32,0.555,35,1.6,38,0.812,60,0.234,64,0.656,66,1.108,71,0.923,76,1.07,86,0.843,87,0.555,88,0.567,104,3.913,108,1.97,113,0.657,132,0.483,145,0.188,146,0.18,174,1.627,301,1.746,314,1.686,316,0.005,317,0.005,341,1.681,353,1.101,360,2.389,431,2.479,444,2.824,445,2.773,510,5.564,567,3.529,568,4.094,577,4.464,598,1.915,599,2.119,911,3.059,1137,6.19,1272,6.59,1362,5.035,1363,7.285,1364,8.807,1365,5.27,1366,5.807,1367,8.059,1368,5.518,1369,8.51,1370,9.016,1371,4.625,1372,5.656,1373,5.958,1374,5.25,1375,6.485,1376,5.656,1377,5.656,1378,5.656,1379,7.285,1380,5.053,1381,5.656,1382,5.656,1383,5.067,1384,5.656,1385,5.656,1386,5.656,1387,5.656,1388,5.035,1389,5.656,1390,5.656,1391,8.059,1392,6.59,1393,7.839,1394,5.656,1395,5.656,1396,5.656,1397,5.656,1398,5.656,1399,5.656,1400,5.656]],["title/components/DynamicRackComponent.html",[0,0.171,207,1.193]],["body/components/DynamicRackComponent.html",[0,0.288,1,1.141,2,0.25,3,0.241,4,0.88,5,1.203,6,1.224,8,0.217,10,0.511,19,1.102,22,1.011,23,1.941,24,0.007,26,2.101,27,1.794,30,1.513,35,0.88,41,1.363,55,1.012,60,0.266,64,0.523,66,0.565,70,2.308,72,2.014,86,0.697,87,0.874,88,0.469,106,1.955,108,1.487,110,1.122,112,1.804,113,0.745,132,0.4,145,0.156,146,0.105,172,0.849,173,1.622,174,1.458,178,2.028,179,1.224,180,1.224,181,1.122,182,1.68,183,1.102,184,1.141,185,1.611,186,2.065,187,1.161,188,1.28,189,2.331,190,1.161,191,2.235,192,1.141,193,1.161,194,1.161,195,1.224,196,1.141,197,1.68,198,1.161,199,1.224,200,1.141,201,1.224,202,1.122,203,1.122,204,1.56,205,1.918,206,1.102,207,1.925,208,1.141,209,1.891,210,1.224,211,1.161,212,2.164,213,1.161,214,1.141,215,1.161,216,1.161,217,1.161,218,1.141,219,1.224,220,1.122,221,1.161,222,1.224,223,1.141,224,1.224,225,1.141,226,1.102,227,1.186,228,1.224,229,1.141,230,1.224,231,1.102,232,1.141,233,1.224,234,1.122,235,1.224,236,1.011,237,1.224,238,1.122,239,1.757,240,1.224,241,1.122,242,1.224,243,1.122,244,1.224,245,1.083,246,1.224,247,1.141,248,1.065,249,1.141,250,1.161,251,1.224,252,1.141,253,1.224,254,1.224,255,1.141,256,1.224,257,1.141,258,1.224,259,1.141,260,1.224,261,1.065,262,1.224,263,1.122,264,1.141,265,1.224,266,1.141,267,1.161,268,1.224,269,1.122,270,1.161,271,1.924,272,1.122,273,1.161,274,0.927,275,1.161,276,1.141,277,1.141,278,1.141,279,1.161,280,1.161,281,1.224,282,1.122,283,1.141,284,1.224,285,1.141,286,1.182,287,1.141,288,1.224,289,1.141,290,1.224,291,1.141,292,1.224,293,1.141,294,1.224,295,1.141,296,1.224,297,1.141,298,1.065,299,1.102,300,1.224,301,1.122,302,1.224,303,1.122,304,1.224,305,1.122,306,1.224,307,1.122,308,1.224,309,1.122,310,1.182,311,1.224,312,1.122,313,1.182,314,1.083,315,1.224,316,0.004,317,0.004,353,1.427,598,1.585,905,1.585,930,2.88,1163,2.262,1222,3.111,1401,5.252,1402,5.252,1403,4.165,1404,5.252,1405,6.422,1406,4.165,1407,6.524,1408,4.679,1409,5.252,1410,5.252,1411,5.716,1412,4.679,1413,4.679,1414,4.679]],["title/components/DynamicSlotComponent.html",[0,0.171,208,1.193]],["body/components/DynamicSlotComponent.html",[0,0.313,1,1.035,2,0.226,3,0.219,4,0.797,5,1.09,6,1.11,8,0.197,10,0.463,19,0.999,22,0.916,23,1.813,24,0.007,26,2.096,27,1.789,30,1.413,32,0.416,33,0.628,35,0.797,38,0.609,39,1.147,41,1.758,43,1.489,44,0.846,55,1.03,60,0.248,64,0.708,66,0.914,70,2.156,72,1.881,74,1.295,75,1.295,76,0.754,86,0.894,87,0.867,88,0.601,105,1.658,106,2.505,108,1.388,110,1.017,112,1.685,113,0.926,121,1.881,132,0.363,142,1.667,145,0.141,146,0.095,172,0.77,173,1.515,174,1.397,178,1.944,179,1.11,180,1.11,181,1.017,182,1.569,183,0.999,184,1.035,185,1.529,186,1.979,187,1.053,188,1.249,189,2.275,190,1.053,191,2.167,192,1.035,193,1.053,194,1.053,195,1.11,196,1.035,197,1.569,198,1.053,199,1.11,200,1.035,201,1.11,202,1.017,203,1.017,204,1.518,205,1.82,206,0.999,207,1.035,208,1.844,209,1.912,210,1.11,211,1.053,212,2.087,213,1.053,214,1.035,215,1.053,216,1.053,217,1.053,218,1.035,219,1.11,220,1.017,221,1.053,222,1.11,223,1.035,224,1.11,225,1.035,226,0.999,227,1.108,228,1.11,229,1.035,230,1.11,231,0.999,232,1.035,233,1.11,234,1.017,235,1.11,236,0.916,237,1.11,238,1.017,239,1.667,240,1.11,241,1.017,242,1.11,243,1.017,244,1.11,245,0.982,246,1.11,247,1.035,248,0.965,249,1.035,250,1.053,251,1.11,252,1.035,253,1.11,254,1.11,255,1.035,256,1.11,257,1.035,258,1.11,259,1.035,260,1.11,261,0.965,262,1.11,263,1.017,264,1.035,265,1.11,266,1.035,267,1.053,268,1.11,269,1.017,270,1.053,271,1.878,272,1.017,273,1.053,274,0.84,275,1.053,276,1.035,277,1.035,278,1.035,279,1.053,280,1.053,281,1.11,282,1.017,283,1.035,284,1.11,285,1.035,286,1.071,287,1.035,288,1.11,289,1.035,290,1.11,291,1.035,292,1.11,293,1.035,294,1.11,295,1.035,296,1.11,297,1.035,298,0.965,299,0.999,300,1.11,301,1.017,302,1.11,303,1.017,304,1.11,305,1.017,306,1.11,307,1.017,308,1.11,309,1.017,310,1.071,311,1.11,312,1.912,313,1.91,314,0.982,315,1.11,316,0.004,317,0.004,336,3.233,353,1.354,415,1.857,424,2.449,682,2.553,905,2.031,930,3.392,1163,2.113,1222,2.905,1401,6.525,1404,4.905,1406,3.776,1407,6.926,1409,5.69,1410,4.905,1411,5.339,1415,5.75,1416,3.776,1417,4.905,1418,6.774,1419,4.905,1420,5.998,1421,4.905,1422,4.242,1423,6.525,1424,4.242,1425,4.905,1426,3.488,1427,3.776,1428,4.242,1429,4.242,1430,4.242,1431,4.242,1432,4.242,1433,4.242,1434,4.242]],["title/directives/EntriesDirective.html",[174,0.904,303,1.173]],["body/directives/EntriesDirective.html",[0,0.151,2,0.231,3,0.224,4,0.815,7,1.413,8,0.201,10,0.473,15,1.46,21,3.411,22,0.937,24,0.007,25,1.289,26,1.271,27,0.773,32,0.425,33,0.637,35,1.644,38,1.011,39,1.7,43,2.206,44,0.859,45,2.288,46,3.699,55,0.834,60,0.362,61,3.214,64,0.734,65,1.145,66,1.154,75,1.649,76,1.191,77,1.799,86,0.908,87,0.597,88,0.806,103,3.261,113,0.934,116,3.26,121,2.396,132,0.371,135,1.994,142,1.039,145,0.144,146,0.097,162,1.498,174,1.301,175,1.528,176,1.528,177,1.811,188,1.011,204,1.606,236,1.521,303,1.46,316,0.004,317,0.004,339,1.695,341,1.593,349,1.712,353,1.186,360,1.81,405,3.19,406,2.36,407,2.984,410,2.046,422,1.994,424,3.899,429,5.074,433,1.539,438,4.653,449,2.802,453,4.171,468,3.312,471,3.312,472,4.441,477,6.245,494,3.285,517,4.236,537,6.904,567,2.101,580,1.624,587,3.935,594,1.743,599,3.209,839,4.821,888,3.715,900,4.688,901,2.825,902,3.061,948,2.615,958,3.125,973,3.86,976,2.615,1061,4.994,1075,2.836,1076,3.86,1435,3.86,1436,5.422,1437,6.245,1438,6.798,1439,6.798,1440,6.245,1441,6.091,1442,7.041,1443,6.091,1444,4.337,1445,3.983,1446,6.091,1447,4.337,1448,4.337,1449,4.337,1450,7.636,1451,4.337,1452,4.337,1453,4.653,1454,4.337,1455,4.337,1456,4.337,1457,4.337,1458,4.337,1459,4.337,1460,6.091,1461,4.337,1462,4.337,1463,4.337,1464,4.337,1465,4.337,1466,3.86,1467,4.337,1468,4.337,1469,7.041,1470,6.091,1471,3.547,1472,4.337,1473,4.337,1474,4.337,1475,3.547,1476,4.337,1477,7.041,1478,3.125,1479,4.337,1480,6.268,1481,7.636,1482,7.041,1483,4.337,1484,4.337,1485,4.337,1486,4.337,1487,4.337,1488,4.337,1489,4.337,1490,4.337]],["title/directives/EntryDirective.html",[174,0.904,305,1.173]],["body/directives/EntryDirective.html",[2,0.27,3,0.261,4,1.597,7,1.649,8,0.235,10,0.553,15,1.623,21,3.698,22,1.093,24,0.007,25,1.086,26,1.413,27,0.903,32,0.496,33,0.709,35,1.706,39,1.672,44,0.955,46,3.948,55,1.058,60,0.352,64,0.762,65,1.532,66,1.146,71,0.826,76,1.099,77,1.192,86,0.754,87,0.496,88,0.507,103,3.276,113,0.786,116,3.417,121,2.125,132,0.433,135,2.328,145,0.168,146,0.113,174,1.506,175,1.783,176,1.783,177,2.115,204,1.744,236,1.649,305,1.623,316,0.005,317,0.005,337,4.02,339,1.978,341,1.413,353,0.985,360,1.301,405,3.405,406,2.754,407,3.185,410,2.388,421,4.916,422,2.328,424,4.02,429,5.501,430,5.327,431,2.375,433,1.711,438,5.173,441,2.435,443,3.573,444,1.559,445,2.656,449,2.485,450,6.029,453,4.638,456,4.14,457,3.053,468,3.866,471,3.866,472,3.939,477,5.539,494,3.47,580,1.896,587,4.125,598,1.714,888,4.027,900,4.914,901,2.961,902,3.208,948,3.053,958,3.648,972,4.506,976,3.053,1061,3.31,1075,3.31,1118,4.506,1436,6.029,1437,6.243,1478,3.648,1480,4.506,1491,4.506,1492,6.243,1493,6.773,1494,5.062,1495,5.062,1496,5.062,1497,5.062,1498,5.062,1499,5.062,1500,5.062,1501,5.062,1502,5.062,1503,5.062,1504,5.062,1505,5.062,1506,6.773,1507,5.062,1508,5.062,1509,5.062,1510,5.062]],["title/components/EntryListPopComponent.html",[0,0.171,214,1.193]],["body/components/EntryListPopComponent.html",[0,0.25,1,0.795,2,0.174,3,0.168,4,0.612,5,1.27,6,0.852,8,0.151,10,0.356,15,1.184,18,1.851,19,0.767,21,2.892,22,0.704,24,0.007,25,1.256,26,2.076,27,1.769,30,1.164,32,0.319,33,0.517,34,2.062,35,1.473,38,0.858,39,1.738,43,1.227,44,0.697,46,3.228,55,0.707,60,0.324,61,2.607,62,2.689,64,0.749,65,1.122,66,1.139,71,0.532,74,1.629,75,0.704,76,0.948,77,1.687,86,1.068,87,0.851,88,0.718,102,2.394,103,2.629,104,4.205,105,1.273,106,2.064,108,1.746,110,0.781,113,0.832,123,4.206,132,0.278,135,1.498,145,0.108,146,0.175,165,2.46,172,0.591,173,1.248,174,0.913,178,1.713,179,0.852,180,0.852,181,0.781,182,1.293,183,0.767,184,0.795,185,1.312,186,1.744,187,0.809,188,1.395,189,2.112,190,0.809,191,1.973,192,0.795,193,0.809,194,0.809,195,0.852,196,0.795,197,1.293,198,0.809,199,0.852,200,0.795,201,0.852,202,0.781,203,0.781,204,1.567,205,1.562,206,0.767,207,0.795,208,0.795,209,0.781,210,0.852,211,0.809,212,1.874,213,0.809,214,1.625,215,0.809,216,0.809,217,0.809,218,0.795,219,0.852,220,0.781,221,0.809,222,0.852,223,0.795,224,0.852,225,0.795,226,0.767,227,1.604,228,0.852,229,0.795,230,0.852,231,0.767,232,0.795,233,0.852,234,0.781,235,0.852,236,0.704,237,0.852,238,0.781,239,1.431,240,0.852,241,0.781,242,0.852,243,0.781,244,0.852,245,0.754,246,0.852,247,0.795,248,0.741,249,0.795,250,0.809,251,0.852,252,0.795,253,0.852,254,0.852,255,0.795,256,0.852,257,0.795,258,0.852,259,0.795,260,0.852,261,0.741,262,0.852,263,0.781,264,0.795,265,0.852,266,0.795,267,0.809,268,0.852,269,2.163,270,0.809,271,1.743,272,0.781,273,0.809,274,0.645,275,0.809,276,0.795,277,0.795,278,0.795,279,0.809,280,1.778,281,0.852,282,0.781,283,0.795,284,0.852,285,0.795,286,0.823,287,0.795,288,0.852,289,0.795,290,0.852,291,0.795,292,0.852,293,0.795,294,0.852,295,0.795,296,0.852,297,0.795,298,0.741,299,0.767,300,0.852,301,0.781,302,0.852,303,0.781,304,0.852,305,0.781,306,0.852,307,0.781,308,0.852,309,0.781,310,0.823,311,0.852,312,0.781,313,0.823,314,1.543,315,0.852,316,0.003,317,0.003,335,2.333,341,1.031,342,4.238,344,2.892,345,1.361,349,1.678,353,0.962,354,4.404,360,1.535,373,1.965,383,2.981,390,6.395,431,1.942,444,2.206,445,2.334,451,2.064,488,1.965,534,2.689,567,2.394,568,2.778,577,3.875,702,1.669,780,1.669,783,4.103,873,1.773,898,4.321,911,1.777,912,1.719,917,1.895,929,4.144,946,6.778,958,2.348,977,3.514,984,2.231,985,2.231,1054,1.831,1061,2.13,1075,2.13,1130,4.548,1148,2.231,1208,1.622,1229,2.741,1366,4.303,1368,3.384,1380,2.043,1383,1.831,1511,2.488,1512,3.775,1513,5.933,1514,4.492,1515,4.563,1516,4.303,1517,3.561,1518,3.561,1519,4.303,1520,3.258,1521,4.557,1522,4.399,1523,2.9,1524,3.258,1525,2.9,1526,2.231,1527,2.488,1528,1.965,1529,2.488,1530,2.488,1531,2.9,1532,2.488,1533,3.384,1534,3.905,1535,2.664,1536,2.348,1537,2.488,1538,2.13,1539,2.9,1540,3.775,1541,3.258,1542,2.488,1543,3.561,1544,2.348,1545,2.488,1546,1.965,1547,2.348,1548,2.348,1549,2.488,1550,2.348,1551,2.488,1552,2.9,1553,2.9,1554,2.664,1555,2.664,1556,2.488,1557,2.043,1558,2.488,1559,2.488,1560,2.488,1561,2.9,1562,2.9,1563,2.664,1564,2.488,1565,3.258,1566,3.258,1567,2.664,1568,2.664,1569,2.488,1570,2.9]],["title/components/ErrorComponent.html",[0,0.171,218,1.193]],["body/components/ErrorComponent.html",[0,0.282,1,1.07,2,0.234,3,0.226,4,0.825,5,1.128,6,1.148,8,0.204,10,0.479,15,1.472,19,1.034,20,3.102,21,3.433,22,0.948,24,0.007,26,2.098,27,1.789,30,1.447,32,0.43,35,1.519,44,0.866,46,3.719,47,3.53,60,0.254,64,0.5,66,0.976,76,0.965,77,1.669,84,1.927,86,0.654,87,0.886,88,0.44,103,2.254,108,1.422,110,1.052,113,0.713,119,3.453,132,0.375,142,1.052,145,0.146,146,0.098,172,0.797,173,1.552,174,1.135,178,1.973,179,1.148,180,1.148,181,1.052,182,1.607,183,1.034,184,1.07,185,1.557,186,2.009,187,1.089,188,1.26,189,2.295,190,1.089,191,2.191,192,1.07,193,1.089,194,1.089,195,1.148,196,1.728,197,1.607,198,1.089,199,1.148,200,1.07,201,1.148,202,1.052,203,1.052,204,1.59,205,1.854,206,1.034,207,1.07,208,1.07,209,1.052,210,1.148,211,1.089,212,2.114,213,1.089,214,1.07,215,1.089,216,1.089,217,1.089,218,1.872,219,1.148,220,1.052,221,1.089,222,1.148,223,1.07,224,1.148,225,1.07,226,1.034,227,1.135,228,1.148,229,1.07,230,1.148,231,1.034,232,1.07,233,1.148,234,1.052,235,1.148,236,0.948,237,1.148,238,1.052,239,1.699,240,1.148,241,1.052,242,1.148,243,1.052,244,1.148,245,1.016,246,1.148,247,1.07,248,0.998,249,1.07,250,1.089,251,1.148,252,1.07,253,1.148,254,1.148,255,1.07,256,1.148,257,1.07,258,1.148,259,1.07,260,1.148,261,0.998,262,1.148,263,1.052,264,1.07,265,1.148,266,1.07,267,1.089,268,1.148,269,1.052,270,1.089,271,1.895,272,1.052,273,1.089,274,0.869,275,1.089,276,1.07,277,1.07,278,1.07,279,1.089,280,1.089,281,1.148,282,1.052,283,1.07,284,1.148,285,1.07,286,1.109,287,1.07,288,1.148,289,1.07,290,1.148,291,1.07,292,1.148,293,1.07,294,1.148,295,1.07,296,1.148,297,1.07,298,0.998,299,1.034,300,1.148,301,1.052,302,1.148,303,1.052,304,1.148,305,1.052,306,1.148,307,1.052,308,1.148,309,1.052,310,1.109,311,1.148,312,1.052,313,1.109,314,1.016,315,1.148,316,0.004,317,0.004,327,2.04,340,2.566,353,0.854,405,1.833,492,3.953,580,3.382,581,4.397,598,1.486,883,4.427,884,3.241,885,5.024,886,4.427,901,2.08,902,2.817,1163,2.497,1198,2.87,1571,3.907,1572,6.143,1573,3.005,1574,6.143,1575,4.389,1576,4.389,1577,4.389,1578,4.389,1579,5.468,1580,4.389,1581,4.389,1582,4.389,1583,4.389,1584,4.389,1585,4.389,1586,4.389,1587,4.389,1588,6.143,1589,4.389]],["title/classes/Field.html",[41,1.039,146,0.109]],["body/classes/Field.html",[0,0.265,2,0.199,3,0.193,7,1.783,8,0.174,15,1.312,24,0.007,25,1.038,32,0.537,33,0.966,34,1.29,35,1.638,38,1.357,41,2.019,42,2.531,43,1.608,44,1.118,55,0.94,56,3.1,60,0.155,64,0.783,65,1.839,66,1.164,71,0.61,75,1.182,76,1.078,86,0.557,87,0.824,88,0.977,112,2.536,113,0.976,118,3.198,142,1.312,145,0.124,146,0.2,188,1.232,227,1.011,316,0.004,317,0.004,336,2.34,337,3.648,340,2.979,341,1.947,349,2.482,350,3.334,353,0.727,360,2.039,394,4.063,422,1.718,431,2.212,441,2.328,449,1.371,460,3.579,490,4.112,500,2.587,511,1.913,516,1.597,524,3.579,554,4.184,569,3.579,643,3.944,682,2.377,786,4.18,814,3.076,861,2.725,868,2.582,905,2.846,923,3.455,924,2.887,929,2.582,965,3.055,1023,1.718,1028,3.183,1030,2.978,1032,4.267,1106,3.183,1163,2.795,1190,3.944,1191,3.417,1213,2.692,1216,2.558,1222,4.071,1229,1.429,1235,3.183,1546,3.301,1590,3.326,1591,4.606,1592,5.447,1593,5.447,1594,3.88,1595,4.974,1596,5.832,1597,5.717,1598,4.063,1599,7.132,1600,7.132,1601,5.473,1602,3.736,1603,3.736,1604,3.736,1605,3.736,1606,4.18,1607,3.432,1608,3.736,1609,3.736,1610,4.872,1611,4.476,1612,3.736,1613,4.872,1614,5.473,1615,4.18,1616,3.736,1617,3.736,1618,3.736,1619,3.736,1620,4.872,1621,3.432,1622,3.183,1623,3.736,1624,3.736,1625,3.736,1626,7.933,1627,3.736,1628,3.432,1629,3.736,1630,3.736,1631,3.736,1632,3.736,1633,3.736,1634,3.736,1635,4.872,1636,3.301,1637,3.736,1638,4.872,1639,2.253,1640,3.055,1641,2.558,1642,3.326,1643,3.076,1644,2.173,1645,3.055,1646,3.326,1647,3.326,1648,3.055,1649,1.971,1650,3.326,1651,3.055,1652,3.055,1653,4.18,1654,4.476,1655,2.033,1656,3.326,1657,4.18,1658,3.326,1659,3.326,1660,2.443,1661,3.326,1662,3.326,1663,2.692,1664,3.055,1665,3.326,1666,2.853,1667,2.692,1668,2.853,1669,2.253,1670,3.326,1671,2.853,1672,4.476,1673,3.736,1674,3.736,1675,3.326,1676,3.736,1677,3.326,1678,3.736,1679,3.055,1680,3.736]],["title/interfaces/FieldConfig.html",[332,1.35,1681,2.951]],["body/interfaces/FieldConfig.html",[2,0.395,3,0.382,8,0.344,10,0.808,24,0.007,32,0.726,41,1.926,65,1.614,66,0.894,112,2.413,145,0.246,188,1.063,316,0.006,317,0.006,332,2.37,861,4.518,868,4.052,989,4.64,1045,4.052,1591,5.248,1681,5.18,1682,7.645,1683,7.4]],["title/interfaces/FileOptions.html",[332,1.35,1001,3.2]],["body/interfaces/FileOptions.html",[0,0.119,2,0.182,3,0.176,8,0.37,10,0.372,24,0.007,25,1.275,32,0.334,33,0.535,39,1.712,41,0.724,43,2.116,44,0.481,55,0.865,60,0.363,64,0.722,65,1.627,66,0.412,70,1.838,71,1.461,72,1.069,75,1.325,76,1.21,79,2.137,84,2.139,87,0.501,88,0.944,103,1.251,112,1.724,113,0.396,116,3.109,118,3.058,126,1.332,132,0.291,142,1.961,145,0.204,146,0.076,162,2.12,185,2.127,188,0.979,204,1.094,226,0.803,227,1.26,271,1.325,274,0.675,298,2.082,316,0.004,317,0.005,332,2.016,333,1.855,336,2.915,337,2.351,338,3.084,341,1.829,349,1.916,360,1.878,397,1.457,398,3.848,401,2.056,405,2.563,407,1.998,410,1.608,428,5.265,433,1.55,443,1.798,444,1.049,445,2.222,449,1.251,465,5.265,466,2.456,474,2.456,479,2.788,486,3.339,492,2.686,496,2.451,500,1.361,516,2.623,521,3.206,533,1.982,543,2.137,551,2.056,552,5.428,572,2.788,582,2.137,590,1.982,594,0.975,598,1.154,599,2.299,622,1.492,678,2.038,701,2.229,702,2.619,737,3.569,745,2.788,752,2.334,814,1.916,832,2.351,868,1.608,873,3.976,875,2.782,890,1.746,905,2.309,911,1.838,968,3.685,1001,4.778,1010,2.603,1013,1.424,1023,1.567,1028,1.982,1030,1.855,1040,1.982,1042,2.137,1043,2.456,1044,2.137,1045,1.608,1046,2.334,1047,3.449,1054,2.874,1078,2.334,1083,2.603,1088,4.462,1108,4.687,1131,3.084,1149,2.334,1353,2.137,1445,2.229,1528,2.056,1598,2.619,1684,2.788,1685,7.083,1686,6.829,1687,7.083,1688,6.504,1689,6.504,1690,6.504,1691,3.906,1692,3.206,1693,3.906,1694,2.874,1695,4.552,1696,4.552,1697,3.034,1698,4.687,1699,2.603,1700,3.034,1701,3.034,1702,2.603,1703,3.034,1704,3.034,1705,3.034,1706,2.603,1707,3.034,1708,3.034,1709,5.463,1710,3.034,1711,5.463,1712,3.034,1713,3.034,1714,3.034,1715,2.788,1716,2.788,1717,2.788,1718,2.334,1719,2.788,1720,4.914,1721,2.456,1722,3.034,1723,4.552,1724,3.034,1725,4.552,1726,4.552,1727,3.034,1728,3.034,1729,3.034,1730,3.034,1731,4.552,1732,3.848,1733,3.034,1734,2.456,1735,2.603,1736,2.334,1737,3.034,1738,6.829,1739,3.034,1740,3.034,1741,3.034,1742,3.034,1743,3.034,1744,5.463,1745,2.788,1746,3.034,1747,3.034,1748,4.552,1749,3.034,1750,4.552,1751,4.552,1752,4.552,1753,4.552,1754,4.552,1755,4.552,1756,4.552,1757,4.552,1758,2.456,1759,2.788,1760,3.034,1761,3.034,1762,3.034,1763,4.552,1764,3.034,1765,3.034,1766,3.034,1767,3.034,1768,3.034,1769,2.603,1770,2.603,1771,5.463,1772,3.034,1773,3.034,1774,4.552,1775,3.034,1776,3.034,1777,3.034,1778,2.603,1779,3.034,1780,1.855,1781,2.456,1782,3.034,1783,3.034,1784,3.034,1785,3.034,1786,3.034,1787,3.034,1788,3.034,1789,3.034,1790,3.034,1791,3.034,1792,3.034,1793,3.034,1794,2.229,1795,3.034,1796,3.034,1797,3.034,1798,2.788,1799,3.034,1800,3.034,1801,3.034]],["title/modules/FilesModule.html",[318,1.094,1126,3.526]],["body/modules/FilesModule.html",[2,0.273,3,0.264,8,0.238,23,2.319,24,0.007,58,1.766,60,0.403,132,0.437,134,2.043,141,2.874,145,0.272,146,0.114,172,0.928,175,1.802,184,2.303,185,1.686,187,2.344,188,0.98,190,2.37,192,2.329,193,1.269,225,2.303,226,1.205,227,1.26,295,2.329,297,2.303,298,1.163,299,2.224,301,2.264,309,2.264,316,0.005,317,0.005,318,1.525,320,2.089,325,2.849,326,1.838,327,1.699,329,3.833,330,2.665,483,4.183,544,2.874,548,4.183,551,5.289,566,3.686,618,5.289,623,3.217,624,2.352,627,4.183,947,4.46,1126,7.206,1127,6.004,1128,6.176,1133,4.915,1145,5.86,1150,4.553,1152,4.183,1802,4.553,1803,4.553,1804,5.114,1805,4.553,1806,4.553,1807,5.114,1808,3.906,1809,3.686,1810,4.553,1811,4.553,1812,4.553,1813,5.114,1814,5.114,1815,4.553,1816,4.183,1817,4.183]],["title/interfaces/Focus.html",[332,1.35,1818,3.526]],["body/interfaces/Focus.html",[2,0.395,3,0.382,8,0.344,24,0.007,32,0.726,33,0.899,44,1.211,60,0.306,64,0.603,66,0.894,76,0.93,132,0.633,145,0.246,316,0.006,317,0.006,332,2.37,445,3.043,1818,6.189,1819,6.587,1820,8.313,1821,7.637,1822,7.4]],["title/directives/FocusDirective.html",[174,0.904,307,1.173]],["body/directives/FocusDirective.html",[2,0.368,3,0.356,8,0.321,15,1.976,20,3.859,22,1.491,24,0.007,26,1.839,32,0.677,35,1.716,44,1.162,47,4.199,60,0.286,64,0.671,66,1.065,76,0.868,77,1.626,86,1.029,87,0.677,88,0.692,104,4.199,108,1.908,132,0.59,145,0.23,146,0.154,174,1.628,307,1.976,316,0.006,317,0.006,341,1.44,353,1.344,444,2.125,445,2.872,517,3.344,598,2.338,1371,5.645,1823,6.145,1824,9.332,1825,8.244,1826,6.903,1827,5.645,1828,6.903,1829,6.903,1830,6.903,1831,6.903,1832,6.903]],["title/interfaces/FormConfig.html",[332,1.35,1833,3.526]],["body/interfaces/FormConfig.html",[2,0.376,3,0.364,8,0.328,10,0.77,18,3.128,24,0.007,25,1.339,32,0.692,33,0.874,60,0.292,64,0.68,65,1.672,88,0.922,145,0.235,316,0.006,317,0.006,332,2.305,341,1.856,350,3.195,884,4.406,936,3.722,989,4.424,1012,6.014,1833,6.627,1834,6.28,1835,6.83,1836,5.459,1837,9.196,1838,8.186,1839,6.627,1840,5.77]],["title/modules/FormModule.html",[318,1.094,1841,3.35]],["body/modules/FormModule.html",[2,0.263,3,0.254,8,0.229,19,2.123,23,2.274,24,0.007,58,1.699,60,0.405,113,0.771,132,0.421,134,1.965,141,2.818,145,0.268,146,0.11,172,0.893,194,2.33,198,2.33,200,2.289,206,2.123,220,2.25,221,2.33,259,2.289,293,2.289,316,0.005,317,0.005,318,1.486,320,2.009,325,2.776,326,1.769,327,1.634,329,3.735,330,2.597,412,3.085,413,2.862,623,3.135,624,2.262,626,5.152,923,2.383,938,3.218,1143,3.546,1187,6.765,1356,3.369,1841,6.863,1842,4.38,1843,4.38,1844,4.38,1845,4.38,1846,4.38,1847,6.765,1848,6.765,1849,6.428,1850,6.139,1851,5.23,1852,5.671,1853,5.671,1854,5.938,1855,4.92,1856,4.024,1857,4.38,1858,4.92,1859,4.38,1860,4.92,1861,4.92,1862,4.92,1863,4.92,1864,4.92,1865,4.024,1866,3.546,1867,4.92,1868,4.92,1869,4.024,1870,4.92,1871,4.92]],["title/injectables/FormService.html",[433,1.236,1854,3.35]],["body/injectables/FormService.html",[2,0.245,3,0.237,8,0.213,10,0.5,14,3.715,24,0.007,25,1.015,32,0.45,33,0.663,38,1.042,39,1.775,40,4.005,41,2.077,42,3.4,44,0.893,55,0.859,56,2.586,60,0.351,64,0.709,65,0.862,66,1.071,70,2.608,71,1.34,72,1.986,75,1.833,76,1.218,77,1.08,86,1.297,87,0.853,88,0.872,112,2.771,113,0.532,119,3.559,122,2.577,127,4.718,132,0.392,134,1.831,142,2.035,145,0.152,146,0.162,220,1.875,316,0.004,317,0.004,332,1.748,335,2.475,340,2.645,341,0.957,349,1.779,350,3.392,353,1.232,360,2.11,433,1.832,492,2.007,500,1.831,502,3.152,567,2.221,580,2.717,622,2.772,844,3.341,901,2.78,902,3.115,905,1.553,948,2.765,980,4.775,1346,3.304,1573,3.139,1598,4.713,1636,3.819,1694,3.559,1854,4.336,1872,4.081,1873,6.332,1874,3.683,1875,6.332,1876,6.332,1877,6.332,1878,6.332,1879,6.332,1880,6.332,1881,4.585,1882,6.332,1883,4.585,1884,3.243,1885,6.332,1886,4.585,1887,6.332,1888,6.332,1889,4.585,1890,6.332,1891,4.585,1892,6.332,1893,6.457,1894,6.332,1895,4.585,1896,5.179,1897,6.332,1898,4.585,1899,7.823,1900,7.254,1901,4.585,1902,4.585,1903,5.637,1904,4.081,1905,4.585,1906,6.332,1907,4.585,1908,4.585,1909,4.585,1910,4.585,1911,4.585,1912,6.332,1913,4.585,1914,6.332,1915,4.585,1916,4.585,1917,4.585,1918,4.585,1919,4.585,1920,4.585,1921,4.081,1922,4.585,1923,4.585,1924,4.585,1925,4.585,1926,4.585,1927,4.585,1928,4.585,1929,4.585,1930,6.332]],["title/injectables/GeocodeService.html",[433,1.236,1931,3.2]],["body/injectables/GeocodeService.html",[2,0.281,3,0.272,8,0.244,10,0.574,11,4.358,24,0.007,32,0.516,35,1.556,39,1.771,44,0.98,60,0.356,64,0.701,66,1.04,71,1.351,75,1.909,76,1.192,86,1.283,87,0.844,88,0.863,108,1.916,116,3.235,132,0.45,141,2.603,142,1.865,145,0.175,146,0.118,178,1.353,239,2.219,316,0.006,317,0.005,353,1.024,397,2.971,433,1.966,441,2.498,510,5.308,524,4.545,534,4.683,598,1.782,599,1.971,837,3.3,844,2.776,862,4.042,875,4.504,1057,3.3,1191,3.667,1373,5.684,1515,4.759,1884,3.56,1931,4.545,1932,4.304,1933,5.965,1934,7.782,1935,6.95,1936,6.95,1937,6.95,1938,6.95,1939,5.263,1940,8.278,1941,8.025,1942,5.263,1943,6.95,1944,6.95,1945,5.263,1946,7.038,1947,6.95,1948,5.263,1949,5.684,1950,7.661,1951,5.684,1952,6.95,1953,5.263,1954,6.95,1955,6.95,1956,5.263,1957,4.304,1958,5.263,1959,5.263,1960,5.263,1961,5.263,1962,4.684,1963,5.263,1964,5.263,1965,5.263,1966,5.263,1967,4.192,1968,5.263,1969,5.263,1970,6.95,1971,4.304,1972,6.187,1973,5.263,1974,6.187,1975,5.263,1976,5.263,1977,5.263,1978,5.263,1979,5.263,1980,5.263,1981,4.019,1982,4.684,1983,5.263,1984,6.187,1985,5.263,1986,5.263,1987,5.263,1988,5.263,1989,5.263,1990,5.263,1991,5.263,1992,5.263,1993,5.263,1994,5.263]],["title/pipes/GroupPipe.html",[1186,2.581,1189,3.35]],["body/pipes/GroupPipe.html",[2,0.362,3,0.35,8,0.315,10,0.74,15,1.626,22,1.465,24,0.007,33,0.987,38,1.382,42,3.188,43,2.367,44,0.956,55,0.966,60,0.338,64,0.552,65,1.644,66,0.82,72,2.559,75,1.762,76,1.141,86,1.011,87,0.858,88,0.68,126,3.188,132,0.58,145,0.226,146,0.152,316,0.006,317,0.006,345,2.833,490,3.848,678,3.085,791,4.92,1186,4.616,1189,6.216,1190,5.879,1191,3.578,1197,5.879,1995,6.038,1996,8.158,1997,6.783,1998,6.783,1999,6.783]],["title/injectables/HistoryService.html",[433,1.236,1129,3.526]],["body/injectables/HistoryService.html",[2,0.239,3,0.37,8,0.208,10,0.489,24,0.007,32,0.439,33,0.652,38,1.169,39,1.768,44,1.01,60,0.371,64,0.768,65,1.657,66,1.096,71,0.731,72,2.43,75,1.867,76,1.108,77,1.055,84,2.43,86,1.154,87,0.76,88,0.776,103,2.286,113,0.945,116,3.181,121,1.955,132,0.383,135,2.06,142,1.717,145,0.149,146,0.1,165,3.102,204,1.111,271,1.934,274,1.419,316,0.004,317,0.004,336,3.311,339,1.751,351,3.191,353,1.213,360,1.602,396,7.07,414,3.663,424,3.163,433,1.81,444,1.918,475,2.809,476,3.987,492,3.969,496,3.764,577,2.865,579,2.605,580,2.334,587,3.976,595,2.605,652,5.581,737,2.605,738,2.809,768,4.075,770,4.321,783,4.214,862,4.504,868,4.36,893,6.044,899,5.195,900,4.575,976,2.702,1047,5.195,1061,5.654,1075,2.929,1078,3.067,1108,4.759,1129,5.581,1314,3.502,1478,4.49,2000,3.987,2001,4.759,2002,7.848,2003,6.231,2004,6.231,2005,3.987,2006,6.231,2007,6.231,2008,4.479,2009,4.49,2010,5.546,2011,8.428,2012,6.231,2013,8.646,2014,4.479,2015,3.474,2016,5.581,2017,6.231,2018,4.479,2019,4.49,2020,5.546,2021,4.479,2022,4.479,2023,4.479,2024,6.894,2025,4.479,2026,4.479,2027,4.479,2028,3.987,2029,4.479,2030,4.479,2031,8.646,2032,4.479,2033,4.479,2034,4.479,2035,6.231,2036,7.165,2037,4.479,2038,4.479,2039,6.231,2040,4.479,2041,4.479,2042,4.479,2043,6.231,2044,6.231,2045,4.479,2046,4.479]],["title/components/IconComponent.html",[0,0.171,223,1.193]],["body/components/IconComponent.html",[0,0.294,1,1.002,2,0.219,3,0.212,4,0.772,5,1.056,6,1.075,7,1.338,8,0.191,10,0.448,15,1.405,19,0.968,20,2.992,22,0.887,24,0.007,26,2.094,27,1.786,30,1.381,32,0.403,33,0.613,34,2.025,35,1.481,44,0.826,47,3.427,55,0.883,60,0.326,64,0.557,65,1.102,66,0.901,73,4.014,74,1.266,75,0.887,76,0.516,77,0.968,86,0.612,87,0.93,88,0.412,108,1.357,110,0.985,113,0.793,118,3.343,121,2.472,132,0.351,139,4.335,145,0.227,146,0.153,172,0.746,173,1.481,174,1.083,175,1.447,176,1.447,177,1.716,178,1.916,179,1.075,180,1.075,181,0.985,182,1.534,183,0.968,184,1.002,185,1.502,186,1.95,187,1.019,188,1.177,189,2.256,190,1.019,191,2.144,192,1.002,193,1.019,194,1.019,195,1.075,196,1.002,197,1.534,198,1.019,199,1.075,200,1.002,201,1.075,202,0.985,203,0.985,204,1.504,205,1.788,206,0.968,207,1.002,208,1.002,209,0.985,210,1.075,211,1.019,212,2.062,213,1.019,214,1.002,215,1.019,216,1.019,217,1.019,218,1.002,219,1.075,220,0.985,221,1.019,222,1.075,223,1.818,224,1.075,225,1.002,226,0.968,227,1.083,228,1.075,229,1.002,230,1.075,231,0.968,232,1.002,233,1.075,234,0.985,235,1.075,236,0.887,237,1.075,238,0.985,239,1.638,240,1.075,241,0.985,242,1.075,243,0.985,244,1.075,245,0.951,246,1.075,247,1.002,248,0.934,249,1.002,250,1.019,251,1.075,252,1.002,253,1.075,254,1.075,255,1.002,256,1.075,257,1.002,258,1.075,259,1.002,260,1.075,261,0.934,262,1.075,263,0.985,264,1.002,265,1.075,266,1.002,267,1.019,268,1.075,269,0.985,270,1.019,271,1.863,272,0.985,273,1.019,274,0.814,275,1.019,276,1.002,277,1.002,278,1.002,279,1.019,280,1.019,281,1.075,282,0.985,283,1.002,284,1.075,285,1.002,286,1.038,287,1.002,288,1.075,289,1.002,290,1.075,291,1.002,292,1.075,293,1.002,294,1.075,295,1.002,296,1.075,297,1.002,298,0.934,299,0.968,300,1.075,301,0.985,302,1.075,303,0.985,304,1.075,305,0.985,306,1.075,307,0.985,308,1.075,309,0.985,310,1.038,311,1.075,312,0.985,313,1.038,314,0.951,315,1.075,316,0.004,317,0.005,353,0.8,415,2.566,422,1.889,506,3.002,568,2.309,579,3.975,593,2.576,598,1.391,651,3.137,901,2.524,935,2.477,1009,2.309,1163,2.408,1314,2.309,1595,6.153,1621,2.576,2047,3.657,2048,6.704,2049,4.335,2050,5.218,2051,3.676,2052,3.676,2053,5.862,2054,4.108,2055,6.047,2056,5.862,2057,4.108,2058,4.108,2059,5.218,2060,4.794,2061,3.657,2062,3.359,2063,4.477,2064,5.218,2065,5.218,2066,3.657,2067,5.22,2068,3.657,2069,3.657,2070,3.657,2071,5.862,2072,4.108,2073,4.108,2074,4.108,2075,2.477,2076,4.108,2077,5.862]],["title/modules/IconModule.html",[318,1.094,1851,2.951]],["body/modules/IconModule.html",[2,0.373,3,0.36,8,0.324,23,2.677,24,0.007,58,2.412,60,0.388,132,0.597,141,3.318,145,0.305,146,0.156,172,1.267,223,2.402,316,0.006,317,0.006,318,1.856,320,2.852,325,3.467,326,2.51,327,2.319,330,3.244,623,3.916,624,3.211,1851,5.868,2055,6.209,2069,6.216,2078,6.216,2079,6.216,2080,6.216,2081,6.216,2082,6.983,2083,6.983]],["title/injectables/IconService.html",[433,1.236,2055,3.2]],["body/injectables/IconService.html",[2,0.359,3,0.347,7,2.191,8,0.312,10,0.734,18,2.519,24,0.007,27,1.652,32,0.659,33,0.849,38,0.966,39,1.667,55,0.961,60,0.375,64,0.548,66,0.813,74,2.033,83,6.198,113,1.012,118,3.64,121,2.546,132,0.575,145,0.224,146,0.15,175,2.369,176,2.369,177,2.809,316,0.006,317,0.006,394,4.157,433,2.202,622,3.962,901,3.065,902,2.977,1198,4.397,1595,6.168,1694,4.561,2048,6.913,2050,7.224,2055,5.307,2070,5.986,2084,5.986,2085,7.128,2086,6.724]],["title/directives/ImageDirective.html",[174,0.904,309,1.173]],["body/directives/ImageDirective.html",[2,0.264,3,0.255,4,1.254,8,0.23,10,0.54,15,1.598,18,1.853,21,3.655,22,1.068,24,0.007,25,1.069,26,1.391,32,0.485,33,0.698,35,1.697,38,0.711,39,1.545,44,0.94,46,3.912,55,0.999,60,0.36,64,0.753,65,1.766,66,1.117,71,0.807,76,1.162,77,1.571,86,1.204,87,0.792,88,0.809,104,4.082,108,1.544,113,0.574,118,3.622,132,0.423,145,0.165,146,0.111,174,1.492,185,2.031,226,2.154,299,1.571,309,1.598,310,2.04,316,0.005,317,0.005,337,3.876,341,1.391,353,0.963,360,1.94,405,3.522,406,2.692,407,3.394,410,2.334,415,2.166,422,2.275,424,3.837,428,5.819,429,4.806,435,3.102,447,5.937,449,2.447,451,2.066,465,6.075,466,3.565,467,3.235,468,3.778,470,5.937,471,3.778,472,2.877,599,1.853,673,2.984,968,3.565,1018,5.281,1029,5.454,1088,2.877,1106,3.879,1698,6.78,1699,3.778,1732,3.102,1780,4.587,1812,4.404,2087,4.404,2088,6.669,2089,5.454,2090,5.819,2091,9.146,2092,6.669,2093,6.895,2094,6.669,2095,4.947,2096,6.604,2097,5.937,2098,4.947,2099,5.937,2100,4.947,2101,4.947,2102,6.669,2103,6.669,2104,4.947,2105,6.669,2106,4.947,2107,6.669,2108,4.947,2109,4.947,2110,4.947,2111,4.947,2112,7.545,2113,4.947,2114,4.947,2115,4.947,2116,5.937,2117,4.947,2118,4.947,2119,5.454,2120,4.947,2121,6.669,2122,4.947,2123,4.947,2124,4.947,2125,6.669,2126,4.947]],["title/components/ImageSelectPopComponent.html",[0,0.171,225,1.193]],["body/components/ImageSelectPopComponent.html",[0,0.255,1,0.661,2,0.145,3,0.14,4,0.509,5,1.101,6,0.709,8,0.126,10,0.296,15,1.027,18,1.604,19,0.638,20,2.326,22,0.585,24,0.007,25,1.253,26,2.059,27,1.753,30,1.009,32,0.266,33,0.448,34,0.935,35,1.47,38,1.15,39,1.761,41,0.575,44,0.604,45,2.26,47,2.777,55,0.779,60,0.332,61,2.26,62,2.331,64,0.732,65,0.805,66,1.117,71,0.442,72,1.344,74,1.64,75,0.585,76,0.983,77,1.422,84,2.453,86,0.9,87,0.801,88,0.605,102,2.075,104,4.076,105,1.059,106,1.789,108,1.619,110,0.649,112,2.134,113,0.93,123,4.025,132,0.232,135,1.245,142,1.958,145,0.09,146,0.164,165,2.132,172,0.492,173,1.082,174,0.791,178,1.552,179,0.709,180,0.709,181,0.649,182,1.121,183,0.638,184,0.661,185,1.327,186,1.58,187,0.672,188,1.005,189,1.987,190,0.672,191,1.83,192,0.661,193,0.672,194,0.672,195,0.709,196,0.661,197,1.121,198,0.672,199,0.709,200,0.661,201,0.709,202,1.273,203,0.649,204,1.354,205,1.39,206,0.638,207,0.661,208,0.661,209,0.649,210,0.709,211,0.672,212,1.721,213,0.672,214,0.661,215,0.672,216,0.672,217,0.672,218,0.661,219,0.709,220,1.273,221,0.672,222,0.709,223,0.661,224,0.709,225,1.473,226,2.033,227,1.78,228,0.709,229,0.661,230,0.709,231,0.638,232,0.661,233,0.709,234,0.649,235,0.709,236,1.421,237,0.709,238,0.649,239,1.273,240,0.709,241,0.649,242,0.709,243,0.649,244,0.709,245,0.627,246,0.709,247,0.661,248,0.616,249,0.661,250,0.672,251,0.709,252,0.661,253,0.709,254,0.709,255,0.661,256,0.709,257,0.661,258,0.709,259,0.661,260,0.709,261,0.616,262,0.709,263,0.649,264,0.661,265,0.709,266,0.661,267,0.672,268,0.709,269,2.09,270,0.672,271,1.64,272,0.649,273,0.672,274,0.536,275,0.672,276,0.661,277,0.661,278,0.661,279,0.672,280,0.672,281,0.709,282,0.649,283,0.661,284,0.709,285,0.661,286,0.684,287,0.661,288,0.709,289,0.661,290,0.709,291,0.661,292,0.709,293,0.661,294,0.709,295,0.661,296,0.709,297,0.661,298,0.616,299,0.638,300,0.709,301,0.649,302,0.709,303,0.649,304,0.709,305,0.649,306,0.709,307,0.649,308,0.709,309,0.649,310,1.342,311,0.709,312,0.649,313,0.684,314,1.398,315,0.709,316,0.003,317,0.003,335,2.076,339,2.076,341,1.108,342,3.931,345,1.131,350,2.516,353,0.527,354,4.117,360,1.366,394,1.387,405,2.922,407,2.733,413,1.575,415,1.186,431,1.759,441,1.91,444,1.636,445,2.143,451,1.789,494,1.749,496,1.082,506,2.194,551,5.011,552,4.124,566,1.952,577,3.682,780,1.387,783,3.286,803,2.933,901,2.572,902,2.566,911,1.54,912,1.429,917,1.575,929,3.977,948,1.634,968,1.952,977,3.285,1018,2.407,1032,2.407,1033,4.345,1054,1.522,1142,1.634,1208,1.348,1222,3.186,1229,2.516,1314,2.407,1361,2.933,1366,3.829,1368,2.933,1380,1.698,1383,1.522,1511,2.069,1512,3.271,1516,3.829,1517,3.087,1518,3.087,1519,3.829,1521,4.751,1526,1.855,1527,2.069,1528,1.634,1529,2.069,1530,2.069,1532,2.069,1533,2.933,1534,3.474,1535,2.215,1536,1.952,1537,2.069,1538,1.771,1539,2.411,1542,2.069,1543,3.087,1544,1.952,1545,2.069,1546,1.634,1547,1.952,1548,1.952,1549,2.069,1550,1.952,1551,2.069,1553,2.411,1554,2.215,1555,2.215,1556,2.069,1557,1.698,1558,2.069,1559,2.069,1560,2.069,1563,2.215,1564,2.069,1720,1.952,1758,1.952,1780,4.254,1817,7.06,1833,4.352,1838,2.411,1904,2.411,2127,7.685,2128,3.087,2129,8.169,2130,6.994,2131,6.039,2132,5.313,2133,2.215,2134,4.283,2135,3.813,2136,4.283,2137,3.813,2138,2.709,2139,2.709,2140,2.411,2141,2.709,2142,2.709,2143,2.411,2144,2.709,2145,2.411,2146,2.709,2147,2.709,2148,2.709,2149,6.578,2150,2.411,2151,2.709,2152,6.578,2153,2.709,2154,2.069,2155,3.271,2156,5.375,2157,2.709,2158,2.709,2159,2.709,2160,4.283,2161,4.283,2162,4.283,2163,3.503,2164,4.283,2165,4.283,2166,2.709,2167,4.283,2168,2.709,2169,2.709,2170,2.215,2171,2.709,2172,2.709,2173,2.215,2174,2.709,2175,6.578,2176,2.709,2177,4.283,2178,2.709,2179,2.709,2180,4.283,2181,2.709,2182,2.709,2183,2.709,2184,2.709,2185,2.709,2186,2.709,2187,2.709,2188,2.411,2189,2.709,2190,2.709,2191,2.069,2192,2.709,2193,2.069,2194,1.698,2195,2.709,2196,4.283,2197,4.283,2198,2.709,2199,2.709,2200,2.709,2201,4.283]],["title/components/InputComponent.html",[0,0.171,110,1.173]],["body/components/InputComponent.html",[0,0.317,1,0.745,2,0.163,3,0.158,4,1.079,5,0.785,6,0.799,8,0.142,10,0.333,13,2.644,15,1.128,16,3.598,18,1.762,19,1.352,21,2.78,22,0.66,23,1.734,24,0.007,25,0.754,26,2.071,27,1.765,30,1.108,32,0.3,33,0.849,35,1.758,36,4.042,38,1.245,39,0.9,40,3.828,41,1.908,42,3.091,43,2.124,44,0.663,46,3.122,48,3.077,49,4.042,52,2.95,55,0.999,60,0.288,64,0.742,65,0.884,66,1.106,71,1.052,72,2.184,74,0.66,75,0.66,76,0.994,77,1.64,81,2.95,83,3.222,84,2.718,85,3.222,86,0.855,87,0.859,88,0.575,89,2.95,99,2.95,101,3.077,102,2.279,103,1.726,105,1.194,106,1.276,108,1.089,110,1.986,112,2.462,113,0.918,114,2.56,121,1.8,122,2.644,123,2.78,127,3.888,131,2.95,132,0.261,133,2.95,134,1.22,139,2.736,142,1.128,143,1.916,144,1.916,145,0.102,146,0.068,160,3.077,171,2.95,172,0.554,173,1.188,174,1.191,178,1.657,179,0.799,180,0.799,181,0.732,182,1.231,183,0.72,184,0.745,185,1.261,186,1.686,187,0.758,188,1.136,189,2.069,190,0.758,191,1.924,192,0.745,193,0.758,194,0.758,195,0.799,196,0.745,197,1.231,198,0.758,199,0.799,200,0.745,201,0.799,202,0.732,203,0.732,204,1.366,205,1.501,206,0.72,207,0.745,208,1.868,209,1.545,210,0.799,211,0.758,212,1.821,213,0.758,214,0.745,215,0.758,216,0.758,217,0.758,218,0.745,219,0.799,220,0.732,221,0.758,222,0.799,223,0.745,224,0.799,225,0.745,226,0.72,227,0.869,228,0.799,229,0.745,230,0.799,231,0.72,232,0.745,233,0.799,234,0.732,235,0.799,236,0.66,237,0.799,238,0.732,239,1.375,240,0.799,241,0.732,242,0.799,243,0.732,244,0.799,245,0.707,246,0.799,247,0.745,248,0.695,249,0.745,250,0.758,251,0.799,252,0.745,253,0.799,254,0.799,255,0.745,256,0.799,257,0.745,258,0.799,259,0.745,260,0.799,261,0.695,262,0.799,263,0.732,264,0.745,265,0.799,266,0.745,267,0.758,268,0.799,269,0.732,270,0.758,271,1.708,272,0.732,273,0.758,274,0.605,275,0.758,276,0.745,277,0.745,278,0.745,279,0.758,280,0.758,281,0.799,282,0.732,283,0.745,284,0.799,285,0.745,286,0.772,287,0.745,288,0.799,289,0.745,290,0.799,291,0.745,292,0.799,293,0.745,294,0.799,295,0.745,296,0.799,297,0.745,298,0.695,299,0.72,300,0.799,301,0.732,302,0.799,303,0.732,304,0.799,305,0.732,306,0.799,307,0.732,308,0.799,309,0.732,310,0.772,311,0.799,312,1.375,313,0.772,314,0.707,315,0.799,316,0.003,317,0.003,336,2.756,340,1.276,345,1.276,349,1.956,383,2.838,393,2.41,394,2.41,412,1.916,413,1.777,424,2.632,431,1.878,444,1.767,445,1.87,511,2.41,583,2.06,682,1.726,832,2.163,839,3.222,844,1.612,905,1.035,911,2.317,930,2.574,935,1.842,980,2.736,1016,2.838,1021,2.482,1035,3.623,1042,2.95,1057,1.916,1142,1.842,1163,1.658,1167,2.56,1404,3.848,1407,5.317,1415,4.135,1417,3.848,1418,5.272,1419,3.848,1421,2.498,1423,3.848,1425,2.498,1426,1.777,1591,3.225,1677,4.188,1732,1.916,1903,5.108,2015,2.11,2051,2.95,2052,2.95,2067,3.594,2119,2.498,2137,4.188,2202,2.719,2203,6.446,2204,6.446,2205,6.196,2206,3.055,2207,3.055,2208,6.545,2209,3.055,2210,4.188,2211,3.055,2212,3.055,2213,3.055,2214,3.055,2215,3.055,2216,4.705,2217,3.055,2218,3.055,2219,3.055,2220,3.055,2221,3.055,2222,3.055,2223,2.719,2224,3.055,2225,3.077,2226,4.188,2227,3.594,2228,4.705,2229,4.705,2230,4.705,2231,3.055,2232,3.055,2233,3.594,2234,2.719,2235,2.719,2236,2.498,2237,6.545,2238,3.055,2239,3.055,2240,6.446,2241,6.961,2242,4.705,2243,3.055,2244,3.055,2245,3.055,2246,5.738,2247,3.055,2248,4.705,2249,3.055,2250,3.055,2251,2.719,2252,3.055,2253,3.055,2254,3.055,2255,3.055,2256,3.055,2257,3.055,2258,3.055,2259,3.055,2260,3.055,2261,3.055,2262,3.055,2263,3.055]],["title/components/InputErrorsComponent.html",[0,0.171,229,1.193]],["body/components/InputErrorsComponent.html",[0,0.298,1,1.053,2,0.23,3,0.223,4,1.32,5,1.109,6,1.129,8,0.2,10,0.471,19,1.017,22,0.932,24,0.007,26,2.097,27,1.788,30,1.43,32,0.423,33,0.635,35,1.669,39,1.161,40,4.189,44,1.074,55,0.719,60,0.332,64,0.572,66,0.921,76,0.883,86,0.643,87,0.857,88,0.433,108,1.405,110,1.034,112,2.34,113,0.705,122,3.947,126,2.373,132,0.369,134,1.724,145,0.144,146,0.096,172,0.783,173,1.533,174,1.121,178,1.959,179,1.129,180,1.129,181,1.034,182,1.588,183,1.017,184,1.053,185,1.543,186,1.994,187,1.071,188,1.196,189,2.285,190,1.071,191,2.179,192,1.053,193,1.071,194,1.071,195,1.129,196,1.053,197,1.588,198,1.071,199,1.129,200,1.053,201,1.129,202,1.034,203,1.034,204,1.526,205,1.837,206,1.017,207,1.053,208,1.053,209,1.034,210,1.129,211,1.071,212,2.101,213,1.071,214,1.053,215,1.071,216,1.071,217,1.071,218,1.053,219,1.129,220,1.034,221,1.071,222,1.129,223,1.053,224,1.129,225,1.053,226,1.017,227,1.121,228,1.129,229,1.859,230,1.129,231,1.017,232,1.053,233,1.129,234,1.034,235,1.129,236,0.932,237,1.129,238,1.034,239,1.683,240,1.129,241,1.034,242,1.129,243,1.034,244,1.129,245,0.999,246,1.129,247,1.053,248,0.982,249,1.053,250,1.071,251,1.129,252,1.053,253,1.129,254,1.129,255,1.053,256,1.129,257,1.053,258,1.129,259,1.053,260,1.129,261,0.982,262,1.129,263,1.034,264,1.053,265,1.129,266,1.053,267,1.071,268,1.129,269,1.034,270,1.071,271,1.887,272,1.034,273,1.071,274,0.855,275,1.071,276,1.053,277,1.053,278,1.053,279,1.071,280,1.071,281,1.129,282,1.034,283,1.053,284,1.129,285,1.053,286,1.09,287,1.053,288,1.129,289,1.053,290,1.129,291,1.053,292,1.129,293,1.053,294,1.129,295,1.053,296,1.129,297,1.053,298,0.982,299,1.017,300,1.129,301,1.034,302,1.129,303,1.034,304,1.129,305,1.034,306,1.129,307,1.034,308,1.129,309,1.034,310,1.09,311,1.129,312,1.034,313,1.09,314,0.999,315,1.129,316,0.004,317,0.004,353,0.84,415,1.889,513,3.412,580,3.326,581,4.532,599,2.631,682,2.227,868,3.788,901,2.72,902,3.056,905,1.462,981,2.822,1163,2.139,1198,2.822,1314,3.412,1573,2.955,2001,5.82,2264,7.148,2265,6.567,2266,3.842,2267,5.404,2268,6.071,2269,6.071,2270,7.62,2271,6.071,2272,4.316,2273,4.965,2274,3.97,2275,4.316,2276,4.316,2277,6.071,2278,4.316,2279,4.316,2280,4.316,2281,6.071]],["title/modules/IoModule.html",[318,1.094,1849,3.35]],["body/modules/IoModule.html",[2,0.316,3,0.306,8,0.275,19,1.94,23,2.268,24,0.007,35,1.114,58,2.047,60,0.399,110,2.331,132,0.507,134,2.367,141,3.085,145,0.288,146,0.132,172,1.076,206,1.94,207,2.353,208,2.353,209,1.799,229,2.372,263,2.331,312,2.312,313,1.497,316,0.005,317,0.005,318,1.678,320,2.42,325,3.135,326,2.131,327,1.968,329,4.218,330,2.933,412,3.716,413,3.447,623,3.541,624,2.725,626,5.64,1142,4.527,1143,4.271,1356,4.058,1402,4.847,1415,4.271,1427,5.276,1849,6.782,2236,4.847,2265,4.847,2282,5.276,2283,5.276,2284,5.276,2285,5.927,2286,5.927,2287,5.927,2288,5.927,2289,5.927]],["title/interfaces/ItemConfig.html",[332,1.35,1836,2.846]],["body/interfaces/ItemConfig.html",[2,0.284,3,0.274,8,0.247,10,0.58,24,0.007,32,0.521,33,0.98,34,2.416,38,1.123,41,1.947,43,2.445,44,0.986,55,1.125,56,3.745,60,0.324,64,0.788,65,1.795,72,2.194,74,1.795,85,4.789,88,0.98,116,2.077,118,3.976,126,2.734,145,0.177,146,0.205,188,1.005,227,1.292,316,0.005,317,0.005,332,1.93,338,4.219,339,3.464,340,3.831,349,2.197,350,3.179,351,4.697,555,4.219,567,2.574,593,4.386,682,2.869,792,6.227,836,5.346,874,5.041,905,2.814,924,3.69,936,2.803,989,3.332,1016,4.219,1021,4.125,1031,5.721,1163,2.927,1193,5.041,1214,5.041,1515,4.789,1591,2.987,1636,4.219,1640,5.721,1643,2.987,1645,5.721,1670,6.227,1671,4.059,1681,5.011,1836,4.833,2049,4.068,2154,6.346,2290,4.73,2291,6.227,2292,6.795,2293,6.995,2294,6.961,2295,5.721,2296,6.995,2297,6.995,2298,6.227,2299,6.995,2300,5.041,2301,6.227,2302,3.829]],["title/components/ListComponent.html",[0,0.171,231,1.153]],["body/components/ListComponent.html",[0,0.244,1,0.663,2,0.145,3,0.14,4,0.808,5,0.699,6,0.711,7,0.886,8,0.126,10,0.297,15,1.03,19,0.641,21,2.58,22,0.587,24,0.007,25,1.176,26,2.06,27,1.751,30,1.012,32,0.746,33,0.557,34,1.484,35,1.624,38,1.124,39,1.34,41,0.577,42,1.063,43,2.311,44,0.606,45,2.81,46,2.081,55,0.83,59,1.862,60,0.273,64,0.722,66,1.122,70,0.978,71,1.241,72,1.671,75,1.307,76,1.086,77,1.728,84,2.681,86,1.044,87,0.87,88,0.735,108,0.995,110,0.652,113,0.765,121,1.899,132,0.232,145,0.09,146,0.061,162,1.84,172,0.494,173,1.085,174,0.794,175,1.514,176,1.514,177,1.795,178,1.556,179,0.711,180,0.711,181,0.652,182,1.124,183,0.641,184,0.663,185,1.171,186,1.583,187,0.675,188,1.381,189,1.99,190,0.675,191,1.833,192,0.663,193,0.675,194,0.675,195,0.711,196,0.663,197,1.124,198,0.675,199,0.711,200,0.663,201,0.711,202,0.652,203,0.652,204,1.308,205,1.394,206,0.641,207,0.663,208,0.663,209,0.652,210,0.711,211,0.675,212,1.724,213,0.675,214,0.663,215,0.675,216,0.675,217,0.675,218,0.663,219,0.711,220,0.652,221,0.675,222,0.711,223,0.663,224,0.711,225,0.663,226,0.641,227,1.735,228,0.711,229,0.663,230,0.711,231,1.65,232,0.663,233,0.711,234,0.652,235,0.711,236,0.587,237,0.711,238,0.652,239,1.277,240,0.711,241,0.652,242,0.711,243,0.652,244,0.711,245,0.629,246,0.711,247,0.663,248,0.619,249,0.663,250,0.675,251,0.711,252,0.663,253,0.711,254,0.711,255,0.663,256,0.711,257,0.663,258,0.711,259,0.663,260,0.711,261,0.619,262,0.711,263,0.652,264,0.663,265,0.711,266,0.663,267,0.675,268,0.711,269,0.652,270,0.675,271,1.643,272,0.652,273,0.675,274,1.055,275,0.675,276,0.663,277,0.663,278,0.663,279,0.675,280,0.675,281,0.711,282,0.652,283,0.663,284,0.711,285,0.663,286,0.687,287,0.663,288,0.711,289,0.663,290,0.711,291,0.663,292,0.711,293,0.663,294,0.711,295,0.663,296,0.711,297,0.663,298,0.619,299,0.641,300,0.711,301,0.652,302,0.711,303,0.652,304,0.711,305,0.652,306,0.711,307,0.652,308,0.711,309,0.652,310,0.687,311,0.711,312,0.652,313,0.687,314,0.629,315,0.711,316,0.003,317,0.003,336,1.163,341,0.896,342,3.938,344,4.029,345,1.136,349,2.253,350,2.038,353,0.836,354,3.938,360,1.694,373,3.975,381,4.622,383,3.213,422,1.25,424,1.111,431,2.041,441,1.915,444,2.259,445,2.612,451,1.795,485,3.825,490,2.855,497,3.839,509,1.582,516,2.277,517,3.192,522,3.825,529,3.514,538,4.393,544,1.528,545,3.825,673,1.64,678,1.769,682,0.998,702,1.393,772,4.452,832,1.25,839,1.862,884,2.267,898,3.975,901,2.576,905,1.455,911,1.545,912,2.267,923,2.932,935,1.64,936,1.435,962,4.068,984,1.862,985,1.862,1008,3.096,1032,2.415,1057,1.705,1163,1.877,1208,2.652,1235,2.499,1349,1.96,1353,1.705,1380,2.694,1383,1.528,1569,2.077,1622,2.499,1641,1.862,1818,3.096,1827,2.224,1896,3.514,2051,2.694,2052,2.694,2155,5.034,2302,1.96,2303,2.421,2304,4.297,2305,4.297,2306,3.514,2307,3.514,2308,5.387,2309,6.052,2310,6.052,2311,6.052,2312,6.052,2313,4.297,2314,6.052,2315,5.327,2316,4.012,2317,5.208,2318,2.421,2319,4.297,2320,3.514,2321,2.719,2322,2.719,2323,2.719,2324,2.719,2325,2.719,2326,2.719,2327,2.719,2328,2.719,2329,2.719,2330,4.622,2331,2.719,2332,2.719,2333,3.825,2334,2.719,2335,4.297,2336,4.361,2337,4.297,2338,3.825,2339,4.297,2340,2.719,2341,2.719,2342,2.719,2343,2.719,2344,3.096,2345,4.297,2346,2.719,2347,2.719,2348,6.052,2349,4.297,2350,2.719,2351,2.719,2352,2.719,2353,2.719,2354,2.719,2355,2.719,2356,2.719,2357,1.862,2358,2.421,2359,2.224,2360,2.224,2361,2.224,2362,5.39,2363,2.224,2364,1.862,2365,2.224,2366,2.077,2367,2.421,2368,3.282,2369,2.421,2370,3.514,2371,2.421,2372,2.224,2373,2.719,2374,2.421,2375,2.719,2376,2.719,2377,2.421,2378,2.719,2379,4.297,2380,2.719,2381,3.825,2382,2.719,2383,2.719,2384,2.421,2385,2.719,2386,2.719,2387,2.719,2388,2.719,2389,2.719,2390,6.237,2391,2.719,2392,4.297,2393,2.719,2394,2.719,2395,2.421,2396,2.421,2397,2.719,2398,2.719,2399,2.719,2400,2.719,2401,4.297,2402,2.719,2403,2.719,2404,2.719,2405,4.297,2406,4.297,2407,6.052,2408,2.421,2409,4.297,2410,4.297,2411,4.297,2412,3.825]],["title/interfaces/ListConfig.html",[332,1.35,344,2.37]],["body/interfaces/ListConfig.html",[2,0.235,3,0.227,8,0.204,10,0.48,18,2.304,24,0.007,25,1.514,27,1.097,32,0.431,33,0.877,38,0.883,43,2.242,56,2.511,60,0.255,64,0.79,65,1.767,74,1.809,84,2.628,87,0.603,88,0.993,113,0.973,121,1.929,145,0.146,146,0.137,188,1.389,227,1.621,316,0.004,317,0.005,332,1.697,339,3.274,340,2.569,341,2.035,344,2.979,349,2.159,360,1.581,424,2.511,429,5.536,431,1.792,441,3.36,490,4.346,497,6.038,506,4.291,510,4.697,511,3.15,577,3.532,594,2.511,678,2.043,735,3.856,814,3.456,861,3.062,862,4.468,868,3.952,898,3.709,912,3.244,923,3.721,936,2.319,989,2.756,998,6.838,1015,4.697,1032,4.709,1163,2.952,1191,3.244,1222,2.979,1224,4.432,1229,2.939,1235,5.104,1567,6.283,1568,6.283,1628,3.856,1655,4.915,1669,3.709,1692,3.856,1780,4.775,1836,4.125,1840,3.595,1921,5.474,2019,4.432,2300,4.432,2316,3.244,2364,4.211,2413,3.913,2414,7.682,2415,6.838,2416,6.283,2417,7.682,2418,6.838,2419,7.458,2420,7.458,2421,7.682,2422,7.682,2423,5.474,2424,5.474,2425,4.432,2426,4.697,2427,6.15,2428,3.456,2429,5.474,2430,5.474]],["title/injectables/ListConfigService.html",[433,1.236,538,3.068]],["body/injectables/ListConfigService.html",[2,0.294,3,0.284,8,0.256,24,0.007,25,0.883,32,0.54,33,0.882,38,1.143,39,1.522,41,1.52,44,1.009,60,0.296,64,0.686,65,1.035,66,1.101,74,1.718,76,1.207,77,1.984,86,1.334,87,0.878,88,0.897,132,0.471,142,2.215,145,0.183,146,0.123,188,1.399,316,0.005,317,0.005,340,3.324,345,2.3,349,2.625,360,1.416,433,2.01,538,4.49,579,3.203,844,2.905,868,4.359,977,2.47,1069,4.799,1224,3.969,1732,3.453,2019,5.16,2429,4.902,2431,7.058,2432,3.969,2433,8.425,2434,7.16,2435,7.16,2436,5.856,2437,7.16,2438,7.16,2439,4.902,2440,7.16,2441,5.507,2442,7.16,2443,5.507,2444,7.16,2445,4.902,2446,7.16,2447,4.902,2448,7.16,2449,5.507,2450,5.507,2451,5.507,2452,5.507,2453,7.16,2454,4.902,2455,7.16,2456,5.507,2457,5.507,2458,5.507,2459,7.957,2460,5.507,2461,7.16,2462,5.507,2463,5.507,2464,7.16,2465,5.507,2466,5.507,2467,7.16,2468,5.507,2469,5.507,2470,5.507,2471,7.16,2472,5.507,2473,5.507,2474,5.507]],["title/components/ListHeaderComponent.html",[0,0.171,232,1.193]],["body/components/ListHeaderComponent.html",[0,0.285,1,0.899,2,0.197,3,0.19,4,0.693,5,0.947,6,0.964,8,0.171,10,0.402,19,0.868,22,0.796,23,1.638,24,0.007,26,2.086,27,1.777,30,1.276,32,0.361,33,0.741,34,1.872,35,1.484,38,1.018,39,1.772,40,3.032,41,1.942,44,0.764,60,0.338,64,0.682,66,1.065,72,2.223,75,1.53,76,1.074,77,1.669,86,1.177,87,0.897,88,0.839,105,2.118,106,2.264,108,1.254,110,0.883,112,1.523,113,0.629,121,1.7,132,0.315,145,0.123,146,0.082,172,0.669,173,1.369,174,1.001,178,1.821,179,0.964,180,0.964,181,0.883,182,1.418,183,0.868,184,0.899,185,1.412,186,1.854,187,0.915,188,1.372,189,2.191,190,0.915,191,2.065,192,0.899,193,0.915,194,0.915,195,0.964,196,0.899,197,1.418,198,0.915,199,0.964,200,0.899,201,0.964,202,0.883,203,0.883,204,1.455,205,1.681,206,0.868,207,0.899,208,0.899,209,0.883,210,0.964,211,0.915,212,1.975,213,0.915,214,0.899,215,0.915,216,0.915,217,0.915,218,0.899,219,0.964,220,1.809,221,0.915,222,0.964,223,0.899,224,0.964,225,0.899,226,0.868,227,1.605,228,0.964,229,0.899,230,0.964,231,0.868,232,1.728,233,0.964,234,0.883,235,0.964,236,0.796,237,0.964,238,0.883,239,1.54,240,0.964,241,0.883,242,0.964,243,0.883,244,0.964,245,0.853,246,0.964,247,0.899,248,0.838,249,0.899,250,0.915,251,0.964,252,0.899,253,0.964,254,0.964,255,0.899,256,0.964,257,0.899,258,0.964,259,0.899,260,0.964,261,0.838,262,0.964,263,0.883,264,0.899,265,0.964,266,0.899,267,0.915,268,0.964,269,1.299,270,0.915,271,1.808,272,0.883,273,0.915,274,0.73,275,0.915,276,0.899,277,0.899,278,0.899,279,0.915,280,0.915,281,0.964,282,0.883,283,0.899,284,0.964,285,0.899,286,0.931,287,0.899,288,0.964,289,0.899,290,0.964,291,0.899,292,0.964,293,0.899,294,0.964,295,0.899,296,0.964,297,0.899,298,0.838,299,0.868,300,0.964,301,0.883,302,0.964,303,0.883,304,0.964,305,0.883,306,0.964,307,0.883,308,0.964,309,0.883,310,0.931,311,0.964,312,0.883,313,0.931,314,0.853,315,0.964,316,0.004,317,0.004,326,1.948,344,3.657,345,1.539,350,2.073,353,0.717,360,0.947,393,2.775,415,1.613,490,4.283,538,4.95,702,1.888,783,2.948,884,2.859,923,3.432,929,4.031,935,2.223,940,3.014,1009,3.046,1015,4.139,1037,3.281,1044,3.398,1167,2.005,1224,3.905,1235,4.121,2009,3.905,2051,3.398,2052,3.398,2318,3.281,2408,3.281,2425,3.905,2431,6.807,2475,7.289,2476,3.281,2477,5.419,2478,5.419,2479,5.419,2480,5.419,2481,5.419,2482,5.419,2483,5.419,2484,3.685,2485,3.685,2486,5.419,2487,3.685,2488,5.419,2489,3.685,2490,4.824,2491,7.894,2492,3.685,2493,5.419,2494,3.685,2495,5.419,2496,3.685,2497,3.544,2498,3.685,2499,5.794,2500,4.824,2501,3.685,2502,3.685,2503,3.685,2504,3.685,2505,3.685,2506,3.685,2507,3.685,2508,5.419,2509,3.685,2510,3.685,2511,3.685,2512,3.685]],["title/components/ListItemsComponent.html",[0,0.171,234,1.173]],["body/components/ListItemsComponent.html",[0,0.262,1,0.889,2,0.195,3,0.188,4,0.685,5,0.937,6,0.954,8,0.169,10,0.398,15,1.288,19,0.859,21,3.094,22,0.787,23,1.625,24,0.007,25,1.13,26,2.085,27,1.776,30,1.266,32,0.358,33,0.563,35,1.602,39,1.028,40,2.536,43,2.404,44,0.758,46,3.414,55,0.835,60,0.292,64,0.694,66,1.075,71,0.595,72,2.211,75,1.161,76,0.989,77,1.266,86,0.952,87,0.85,88,0.815,108,1.244,110,0.874,113,0.624,121,1.686,132,0.312,145,0.121,146,0.081,165,3.179,172,0.662,173,1.358,174,0.993,178,1.812,179,0.954,180,0.954,181,0.874,182,1.407,183,0.859,184,0.889,185,1.403,186,1.844,187,0.905,188,1.374,189,2.184,190,0.905,191,2.057,192,0.889,193,0.905,194,0.905,195,0.954,196,0.889,197,1.407,198,0.905,199,0.954,200,0.889,201,0.954,202,0.874,203,0.874,204,1.45,205,1.671,206,0.859,207,0.889,208,0.889,209,0.874,210,0.954,211,0.905,212,1.966,213,0.905,214,0.889,215,0.905,216,0.905,217,0.905,218,0.889,219,0.954,220,0.874,221,0.905,222,0.954,223,0.889,224,0.954,225,0.889,226,0.859,227,1.674,228,0.954,229,0.889,230,0.954,231,1.266,232,0.889,233,0.954,234,1.885,235,0.954,236,0.787,237,0.954,238,0.874,239,1.531,240,0.954,241,0.874,242,0.954,243,0.874,244,0.954,245,0.844,246,0.954,247,0.889,248,0.829,249,0.889,250,0.905,251,0.954,252,0.889,253,0.954,254,0.954,255,0.889,256,0.954,257,0.889,258,0.954,259,0.889,260,0.954,261,0.829,262,0.954,263,0.874,264,0.889,265,0.954,266,0.889,267,0.905,268,0.954,269,0.874,270,0.905,271,1.803,272,0.874,273,0.905,274,0.722,275,0.905,276,0.889,277,0.889,278,0.889,279,0.905,280,0.905,281,0.954,282,0.874,283,0.889,284,0.954,285,0.889,286,0.921,287,0.889,288,0.954,289,0.889,290,0.954,291,0.889,292,0.954,293,0.889,294,0.954,295,0.889,296,0.954,297,0.889,298,0.829,299,0.859,300,0.954,301,0.874,302,0.954,303,0.874,304,0.954,305,0.874,306,0.954,307,0.874,308,0.954,309,0.874,310,0.921,311,0.954,312,0.874,313,0.921,314,1.74,315,0.954,316,0.004,317,0.004,341,1.332,342,4.42,345,1.523,353,0.71,354,4.224,373,3.852,381,5.384,415,1.596,431,2.054,444,2.421,445,2.297,497,4.602,506,2.754,516,2.298,517,2.604,544,2.049,590,3.127,678,2.341,783,2.925,836,3.242,839,3.681,898,4.533,912,3.719,923,2.604,935,2.199,962,4.106,984,3.681,985,2.496,1023,2.472,1054,3.022,1163,2.483,1177,3.874,1235,3.127,1392,2.982,1569,2.785,1607,3.371,2051,3.371,2052,3.371,2308,5.685,2316,2.836,2320,4.397,2330,4.106,2333,4.786,2390,3.245,2395,4.786,2396,3.245,2425,3.874,2431,6.861,2513,7.347,2514,3.245,2515,5.376,2516,5.376,2517,5.376,2518,5.376,2519,7.049,2520,3.646,2521,5.376,2522,3.646,2523,5.376,2524,4.397,2525,5.376,2526,3.646,2527,3.646,2528,3.646,2529,3.646,2530,3.646,2531,5.376,2532,3.646,2533,5.376,2534,3.646,2535,3.646,2536,3.646,2537,3.245,2538,3.646,2539,3.646,2540,3.646,2541,3.646]],["title/modules/ListModule.html",[318,1.094,2542,3.35]],["body/modules/ListModule.html",[2,0.303,3,0.293,8,0.264,23,2.439,24,0.007,58,1.96,60,0.402,132,0.485,141,3.023,145,0.283,146,0.127,172,1.03,188,1.159,231,2.259,232,2.339,234,2.298,264,2.339,280,2.38,316,0.005,317,0.005,318,1.632,320,2.317,325,3.049,326,2.04,327,1.884,330,2.853,538,5.658,544,3.189,623,3.444,624,2.609,702,2.906,1189,6.566,1841,6.566,1851,5.442,1853,5.901,1866,4.089,1869,4.64,2475,4.64,2513,4.64,2542,6.839,2543,5.05,2544,5.05,2545,5.05,2546,5.05,2547,5.05,2548,6.178,2549,5.674,2550,5.05,2551,5.05,2552,5.674,2553,5.674,2554,5.674,2555,5.674,2556,5.674]],["title/components/LoaderComponent.html",[0,0.171,236,1.057]],["body/components/LoaderComponent.html",[0,0.281,1,0.864,2,0.189,3,0.183,4,1.18,5,0.91,6,0.927,7,1.154,8,0.164,10,0.387,19,0.834,22,0.765,24,0.007,25,0.568,26,2.083,27,1.775,30,1.239,32,0.347,33,0.551,35,0.666,38,0.756,44,1.097,55,1.002,59,3.603,60,0.26,61,2.776,62,2.863,64,0.511,66,0.974,71,0.859,74,1.501,75,1.604,76,0.874,77,1.239,86,0.784,87,0.829,88,0.527,102,3.366,104,3.196,108,1.609,110,0.849,113,0.862,116,3.619,118,2.816,121,1.651,126,2.716,130,1.927,132,0.303,135,1.628,142,0.849,145,0.175,146,0.14,172,0.643,173,1.329,174,1.16,175,1.248,176,1.248,177,1.479,178,1.786,179,0.927,180,0.927,181,0.849,182,1.377,183,0.834,184,0.864,185,1.38,186,1.818,187,0.879,188,1.118,189,2.166,190,0.879,191,2.036,192,0.864,193,0.879,194,0.879,195,0.927,196,0.864,197,1.377,198,0.879,199,0.927,200,0.864,201,0.927,202,0.849,203,0.849,204,1.437,205,1.643,206,0.834,207,0.864,208,0.864,209,0.849,210,0.927,211,0.879,212,1.943,213,0.879,214,0.864,215,0.879,216,0.879,217,0.879,218,0.864,219,0.927,220,0.849,221,0.879,222,0.927,223,0.864,224,0.927,225,0.864,226,0.834,227,0.972,228,0.927,229,0.864,230,0.927,231,0.834,232,0.864,233,0.927,234,0.849,235,0.927,236,1.74,237,0.927,238,0.849,239,1.505,240,0.927,241,0.849,242,0.927,243,0.849,244,0.927,245,0.82,246,0.927,247,0.864,248,0.806,249,0.864,250,0.879,251,0.927,252,0.864,253,0.927,254,0.927,255,0.864,256,0.927,257,0.864,258,0.927,259,0.864,260,0.927,261,0.806,262,0.927,263,0.849,264,0.864,265,0.927,266,0.864,267,0.879,268,0.927,269,0.849,270,0.879,271,1.788,272,0.849,273,0.879,274,0.701,275,0.879,276,0.864,277,0.864,278,0.864,279,0.879,280,0.879,281,0.927,282,0.849,283,0.864,284,0.927,285,0.864,286,0.895,287,0.864,288,0.927,289,0.864,290,0.927,291,0.864,292,0.927,293,0.864,294,0.927,295,0.864,296,0.927,297,0.864,298,0.806,299,0.834,300,0.927,301,0.849,302,0.927,303,0.849,304,0.927,305,0.849,306,0.927,307,0.849,308,0.927,309,0.849,310,0.895,311,0.927,312,0.849,313,0.895,314,1.958,315,0.927,316,0.004,317,0.004,327,1.176,333,1.927,335,1.384,341,0.739,353,0.689,360,1.614,422,1.628,424,3.453,433,1.329,449,1.299,475,2.221,494,3.895,500,1.415,508,5.943,577,2.887,579,2.06,580,1.971,594,1.013,598,1.782,599,3.404,622,1.55,673,2.136,718,4.684,772,4.105,780,2.695,798,3.173,899,3.906,917,2.06,923,4.169,935,2.136,977,3.49,1017,2.552,1023,1.628,1030,2.863,1045,2.482,1046,3.603,1167,3.416,1211,4.019,1229,3.292,1365,2.316,1594,1.927,1628,3.299,1639,2.136,1649,1.868,1667,2.552,1691,2.705,1694,2.957,1769,4.019,1884,1.814,1967,3.173,1981,4.795,1984,4.684,2015,1.588,2051,3.299,2052,3.299,2128,2.552,2163,2.896,2336,4.524,2428,3.529,2557,3.153,2558,5.262,2559,5.262,2560,4.303,2561,5.262,2562,5.262,2563,6.293,2564,8.606,2565,3.542,2566,5.262,2567,3.542,2568,3.542,2569,4.684,2570,3.542,2571,5.262,2572,3.542,2573,3.542,2574,5.262,2575,2.316,2576,4.758,2577,3.153,2578,2.06,2579,3.153,2580,3.153,2581,4.684,2582,3.153,2583,5.589,2584,3.153,2585,4.684,2586,5.589,2587,5.589,2588,3.153,2589,3.153,2590,3.153,2591,3.153,2592,3.153,2593,2.552,2594,3.153,2595,3.153,2596,3.153,2597,3.153,2598,5.262,2599,3.542,2600,3.542,2601,3.542,2602,3.542,2603,3.153,2604,5.262,2605,3.542,2606,3.542]],["title/modules/LoaderModule.html",[318,1.094,1852,3.2]],["body/modules/LoaderModule.html",[2,0.37,3,0.358,8,0.322,23,2.668,24,0.007,58,2.393,60,0.387,132,0.592,141,3.307,145,0.304,146,0.155,172,1.258,236,2.125,316,0.006,317,0.006,318,1.847,320,2.83,325,3.452,326,2.491,327,2.302,330,3.229,623,3.898,624,3.186,899,5.327,1852,6.354,2607,6.168,2608,6.168,2609,6.168,2610,6.168,2611,6.929,2612,5.667,2613,6.929]],["title/injectables/LoaderService.html",[433,1.236,899,2.75]],["body/injectables/LoaderService.html",[2,0.334,3,0.323,8,0.291,10,0.684,24,0.007,32,0.615,33,0.813,38,0.9,44,1.096,55,1.096,60,0.322,64,0.688,66,1.021,74,1.908,75,2.027,76,1.111,77,1.476,83,5.323,86,1.159,87,0.762,88,0.779,113,0.728,116,3.761,132,0.536,145,0.208,146,0.14,236,2.078,316,0.005,317,0.005,395,6.92,433,2.134,472,4.915,494,4.079,508,7.07,622,3.403,899,4.369,1023,3.574,1471,5.126,1628,4.874,2015,3.486,2225,5.083,2336,6.089,2569,6.92,2576,6.338,2612,5.126,2614,5.579,2615,7.773,2616,6.268,2617,6.268,2618,6.268,2619,6.268]],["title/components/LocationMapComponent.html",[0,0.171,238,1.173]],["body/components/LocationMapComponent.html",[0,0.296,1,1.02,2,0.223,3,0.216,4,0.786,5,1.075,6,1.094,8,0.194,10,0.456,19,0.985,22,0.903,24,0.007,25,0.951,26,2.095,27,1.786,28,3.881,30,1.398,32,0.41,35,1.657,38,1.311,44,0.837,60,0.173,64,0.671,66,0.996,71,0.682,74,1.623,76,0.868,77,1.398,84,2.836,86,0.885,87,0.864,88,0.595,108,1.374,110,1.002,112,1.668,113,0.801,132,0.357,142,1.002,145,0.139,146,0.093,160,2.734,172,0.759,173,1.499,174,1.096,178,1.931,179,1.094,180,1.094,181,1.002,182,1.553,183,0.985,184,1.02,185,1.517,186,1.966,187,1.037,188,1.184,189,2.267,190,1.037,191,2.157,192,1.02,193,1.037,194,1.037,195,1.094,196,1.02,197,1.553,198,1.037,199,1.094,200,1.02,201,1.094,202,1.002,203,1.002,204,1.512,205,1.806,206,0.985,207,1.02,208,1.02,209,1.002,210,1.094,211,1.037,212,2.076,213,1.037,214,1.02,215,1.037,216,1.037,217,1.037,218,1.02,219,1.094,220,1.002,221,1.037,222,1.094,223,1.02,224,1.094,225,1.02,226,0.985,227,1.096,228,1.094,229,1.02,230,1.094,231,0.985,232,1.02,233,1.094,234,1.002,235,1.094,236,0.903,237,1.094,238,1.801,239,2.112,240,1.094,241,1.002,242,1.094,243,1.002,244,1.094,245,0.968,246,1.094,247,1.02,248,0.951,249,1.02,250,1.037,251,1.094,252,1.02,253,1.094,254,1.094,255,1.02,256,1.094,257,1.02,258,1.094,259,1.02,260,1.094,261,0.951,262,1.094,263,1.002,264,1.02,265,1.094,266,1.02,267,1.037,268,1.094,269,1.002,270,1.037,271,1.871,272,1.002,273,1.037,274,0.828,275,1.037,276,1.02,277,1.02,278,1.02,279,1.037,280,1.037,281,1.094,282,1.002,283,1.02,284,1.094,285,1.02,286,1.056,287,1.02,288,1.094,289,1.02,290,1.094,291,1.02,292,1.094,293,1.02,294,1.094,295,1.02,296,1.094,297,1.02,298,0.951,299,0.985,300,1.094,301,1.002,302,1.094,303,1.002,304,1.094,305,1.002,306,1.094,307,1.002,308,1.094,309,1.002,310,1.056,311,1.094,312,1.002,313,1.056,314,0.968,315,1.094,316,0.004,317,0.004,341,1.238,431,2.189,441,2.134,444,1.287,445,2.448,555,4.162,862,3.452,875,4.714,911,2.134,1229,2.271,1798,3.419,1933,4.277,1971,5.644,1972,7.063,1974,7.063,2620,6.476,2621,3.721,2622,5.935,2623,5.935,2624,5.935,2625,5.284,2626,7.547,2627,5.284,2628,5.935,2629,5.935,2630,4.18,2631,8.243,2632,4.18,2633,4.18,2634,4.18,2635,5.935,2636,4.18,2637,5.935,2638,5.284,2639,4.18,2640,5.935,2641,4.18,2642,4.18,2643,4.18,2644,4.18,2645,4.18,2646,4.18]],["title/modules/LocationModule.html",[318,1.094,2647,3.737]],["body/modules/LocationModule.html",[0,0.292,2,0.328,3,0.317,8,0.286,10,0.671,23,2.532,24,0.007,58,2.123,60,0.4,132,0.525,134,2.455,135,2.827,141,3.138,142,1.473,145,0.292,146,0.137,172,1.116,238,2.313,239,2.008,241,2.313,243,2.313,316,0.005,317,0.005,318,2.019,320,2.51,325,3.208,326,2.21,327,2.042,329,4.317,330,3.002,393,3.934,496,3.068,618,5.556,622,3.362,623,3.623,624,2.827,626,5.259,1931,6.024,1957,5.027,1967,3.708,2647,7.521,2648,5.472,2649,5.472,2650,6.147,2651,5.472,2652,5.472,2653,5.027,2654,7.68,2655,7.386,2656,6.147,2657,5.027,2658,5.472,2659,6.147,2660,5.472,2661,6.147,2662,6.147,2663,6.147,2664,6.147,2665,6.147]],["title/components/LocationPickerComponent.html",[0,0.171,241,1.173]],["body/components/LocationPickerComponent.html",[0,0.292,1,0.832,2,0.182,3,0.176,4,0.641,5,0.877,6,0.892,8,0.158,10,0.372,13,2.875,15,1.635,16,4.583,18,1.916,19,1.928,22,0.737,23,1.855,24,0.007,25,1.23,26,2.08,27,1.771,28,3.346,30,1.205,32,0.334,33,0.535,35,1.74,36,4.277,38,1.274,39,1.656,40,3.62,41,1.629,42,2.666,43,1.905,44,0.721,48,3.346,49,4.277,52,3.208,55,0.606,60,0.318,64,0.714,65,0.962,66,1.113,74,1.105,76,0.965,77,1.721,81,3.208,84,2.14,86,1.017,87,0.849,88,0.684,89,3.208,99,3.208,101,3.346,102,2.478,103,1.877,105,1.999,106,2.564,108,1.184,110,1.752,112,2.156,113,0.792,114,2.784,122,4.601,123,3.304,124,2.605,125,2.605,126,1.333,127,3.086,128,2.605,129,2.605,130,1.856,131,3.208,132,0.292,133,3.208,134,1.362,135,1.568,142,0.817,143,2.139,144,2.139,145,0.113,146,0.076,171,2.139,172,0.619,173,1.292,174,0.945,178,1.753,179,0.892,180,0.892,181,0.817,182,1.339,183,0.803,184,0.832,185,1.349,186,1.785,187,0.846,188,1.102,189,2.142,190,0.846,191,2.008,192,0.832,193,0.846,194,0.846,195,0.892,196,0.832,197,1.339,198,0.846,199,0.892,200,0.832,201,0.892,202,0.817,203,0.817,204,1.419,205,1.606,206,0.803,207,0.832,208,0.832,209,0.817,210,0.892,211,0.846,212,1.912,213,0.846,214,0.832,215,0.846,216,0.846,217,0.846,218,0.832,219,0.892,220,0.817,221,0.846,222,0.892,223,0.832,224,0.892,225,0.832,226,0.803,227,0.945,228,0.892,229,0.832,230,0.892,231,0.803,232,0.832,233,0.892,234,0.817,235,0.892,236,0.737,237,0.892,238,1.907,239,2.194,240,0.892,241,1.752,242,0.892,243,1.907,244,0.892,245,0.79,246,0.892,247,0.832,248,0.776,249,0.832,250,0.846,251,0.892,252,0.832,253,0.892,254,0.892,255,0.832,256,0.892,257,0.832,258,0.892,259,0.832,260,0.892,261,0.776,262,0.892,263,0.817,264,0.832,265,0.892,266,0.832,267,0.846,268,0.892,269,0.817,270,0.846,271,1.768,272,0.817,273,0.846,274,0.675,275,0.846,276,0.832,277,0.832,278,0.832,279,0.846,280,0.846,281,0.892,282,0.817,283,0.832,284,0.892,285,0.832,286,0.861,287,0.832,288,0.892,289,0.832,290,0.892,291,0.832,292,0.892,293,0.832,294,0.892,295,0.832,296,0.892,297,0.832,298,0.776,299,0.803,300,0.892,301,0.817,302,0.892,303,0.817,304,0.892,305,0.817,306,0.892,307,0.817,308,0.892,309,0.817,310,0.861,311,0.892,312,0.817,313,0.861,314,0.79,315,0.892,316,0.004,317,0.004,341,1.281,353,0.996,393,2.62,416,2.335,451,1.425,492,2.239,554,3.639,703,3.086,875,4.454,923,2.478,1177,3.687,1194,4.554,1426,3.967,1606,5.861,1931,5.662,1946,4.184,1949,4.184,1950,4.554,1951,4.184,2135,4.554,2620,6.895,2625,4.554,2638,4.554,2657,2.789,2658,3.036,2660,3.036,2666,3.036,2667,5.116,2668,5.116,2669,5.116,2670,6.821,2671,6.139,2672,3.036,2673,5.116,2674,3.411,2675,3.411,2676,3.411,2677,3.411,2678,3.411,2679,6.821,2680,3.411,2681,3.411,2682,5.116,2683,3.411,2684,3.411,2685,3.411,2686,3.411,2687,3.411,2688,3.411,2689,3.411,2690,3.411,2691,5.116,2692,5.116,2693,3.411,2694,3.411,2695,6.139,2696,3.411,2697,3.411,2698,3.411,2699,3.411,2700,5.116]],["title/components/LocationSearchComponent.html",[0,0.171,243,1.173]],["body/components/LocationSearchComponent.html",[0,0.278,1,1.032,2,0.226,3,0.218,4,0.796,5,1.088,6,1.107,8,0.197,10,0.462,15,1.435,19,0.997,22,0.914,24,0.007,26,2.096,27,1.786,30,1.41,32,0.415,33,0.627,35,1.734,38,0.998,44,0.844,55,0.709,60,0.288,64,0.566,66,1,71,0.691,76,0.753,77,1.41,84,2.669,86,0.631,87,0.852,88,0.424,104,3.474,105,1.654,106,2.501,108,1.749,110,1.014,113,0.807,132,0.362,145,0.141,146,0.095,172,0.768,173,1.512,174,1.106,178,1.942,179,1.107,180,1.107,181,1.014,182,1.567,183,0.997,184,1.032,185,1.527,186,1.976,187,1.05,188,1.189,189,2.274,190,1.05,191,2.165,192,1.032,193,1.05,194,1.05,195,1.107,196,1.032,197,1.567,198,1.05,199,1.107,200,1.032,201,1.107,202,1.014,203,1.014,204,1.517,205,1.818,206,0.997,207,1.032,208,1.032,209,1.014,210,1.107,211,1.05,212,2.086,213,1.05,214,1.032,215,1.05,216,1.05,217,1.05,218,1.032,219,1.107,220,1.014,221,1.05,222,1.107,223,1.032,224,1.107,225,1.032,226,0.997,227,1.395,228,1.107,229,1.032,230,1.107,231,0.997,232,1.032,233,1.107,234,1.014,235,1.107,236,0.914,237,1.107,238,1.014,239,2.172,240,1.107,241,1.014,242,1.107,243,1.811,244,1.107,245,0.98,246,1.107,247,1.032,248,0.963,249,1.032,250,1.05,251,1.107,252,1.032,253,1.107,254,1.107,255,1.032,256,1.107,257,1.032,258,1.107,259,1.032,260,1.107,261,0.963,262,1.107,263,1.014,264,1.032,265,1.107,266,1.032,267,1.05,268,1.107,269,1.014,270,1.05,271,1.877,272,1.014,273,1.05,274,0.838,275,1.05,276,1.032,277,1.032,278,1.032,279,1.05,280,1.05,281,1.107,282,1.014,283,1.032,284,1.107,285,1.032,286,1.069,287,1.032,288,1.107,289,1.032,290,1.107,291,1.032,292,1.107,293,1.032,294,1.107,295,1.032,296,1.107,297,1.032,298,0.963,299,0.997,300,1.107,301,1.014,302,1.107,303,1.014,304,1.107,305,1.014,306,1.107,307,1.014,308,1.107,309,1.014,310,1.069,311,1.107,312,1.014,313,1.069,314,0.98,315,1.107,316,0.004,317,0.005,353,1.165,431,2.201,444,1.303,445,2.461,533,4.041,554,3.969,599,2.243,875,3.258,911,2.152,1115,4.992,1515,5.173,1606,6.321,1821,6.178,1931,5.684,1933,4.315,1941,7.574,1946,4.897,1971,5.682,2620,6.499,2657,3.461,2672,3.767,2701,3.767,2702,6.185,2703,5.988,2704,7.554,2705,5.988,2706,4.232,2707,4.232,2708,4.232,2709,4.232,2710,4.232,2711,4.232,2712,4.232,2713,4.232,2714,4.232,2715,4.232]],["title/components/LoginComponent.html",[0,0.171,245,1.133]],["body/components/LoginComponent.html",[0,0.266,1,0.924,2,0.202,3,0.195,4,0.712,5,0.974,6,0.991,7,1.234,8,0.176,10,0.413,15,1.325,19,0.892,22,0.818,24,0.007,25,0.607,26,2.088,27,1.779,30,1.302,32,0.371,33,0.579,35,1.435,38,0.544,39,1.614,44,0.779,55,0.85,60,0.349,64,0.701,66,1.057,71,0.902,72,1.734,76,0.476,77,0.892,86,0.824,87,0.844,88,0.72,93,3.616,105,1.48,106,2.31,108,1.28,110,0.908,113,0.886,126,2.161,132,0.324,142,0.908,145,0.126,146,0.085,172,0.687,173,1.396,174,1.021,175,1.334,176,1.334,177,1.582,178,1.845,179,0.991,180,0.991,181,0.908,182,1.447,183,0.892,184,0.924,185,1.435,186,1.878,187,0.94,188,1.145,189,2.208,190,0.94,191,2.086,192,0.924,193,0.94,194,0.94,195,0.991,196,0.924,197,1.447,198,0.94,199,0.991,200,0.924,201,0.991,202,0.908,203,0.908,204,1.468,205,1.708,206,0.892,207,0.924,208,0.924,209,0.908,210,0.991,211,0.94,212,1.997,213,0.94,214,0.924,215,0.94,216,0.94,217,0.94,218,0.924,219,0.991,220,0.908,221,0.94,222,0.991,223,0.924,224,0.991,225,0.924,226,0.892,227,1.021,228,0.991,229,0.924,230,0.991,231,0.892,232,0.924,233,0.991,234,0.908,235,0.991,236,1.194,237,0.991,238,0.908,239,1.565,240,0.991,241,0.908,242,0.991,243,0.908,244,0.991,245,1.662,246,0.991,247,1.592,248,2.075,249,0.924,250,0.94,251,0.991,252,0.924,253,0.991,254,0.991,255,0.924,256,0.991,257,0.924,258,0.991,259,0.924,260,0.991,261,0.862,262,0.991,263,0.908,264,0.924,265,0.991,266,0.924,267,1.62,268,0.991,269,0.908,270,0.94,271,1.822,272,0.908,273,0.94,274,0.75,275,0.94,276,0.924,277,0.924,278,0.924,279,0.94,280,0.94,281,0.991,282,0.908,283,0.924,284,0.991,285,0.924,286,0.957,287,0.924,288,0.991,289,0.924,290,0.991,291,0.924,292,0.991,293,0.924,294,0.991,295,0.924,296,0.991,297,0.924,298,0.862,299,0.892,300,0.991,301,0.908,302,0.991,303,0.908,304,0.991,305,0.908,306,0.991,307,0.908,308,0.991,309,0.908,310,0.957,311,0.991,312,0.908,313,0.957,314,0.877,315,0.991,316,0.004,317,0.004,339,2.161,353,0.737,397,2.791,415,1.658,418,2.594,431,2.224,435,4.787,444,1.702,445,2.682,467,2.477,494,3.446,517,3.861,580,3.319,583,2.42,584,3.984,586,3.9,587,3.761,591,4.451,593,3.467,594,1.582,619,4.915,621,4.604,632,3.098,686,3.335,687,3.098,697,2.129,888,3.445,889,3.938,900,4.48,901,2.7,902,2.925,905,1.872,907,2.061,950,2.893,954,2.73,976,3.335,977,2.48,978,4.471,983,2.284,1229,2.115,1621,3.467,1694,3.107,1884,2.832,2716,3.372,2717,4.922,2718,5.212,2719,5.529,2720,4.522,2721,3.372,2722,5.529,2723,4.922,2724,3.788,2725,4.522,2726,4.922,2727,3.788,2728,3.788,2729,3.788,2730,4.223,2731,3.788,2732,3.788,2733,3.788,2734,3.788,2735,3.098,2736,3.098,2737,3.372,2738,3.098,2739,3.098,2740,3.788,2741,3.098,2742,3.788,2743,3.372,2744,3.098,2745,3.788,2746,3.372,2747,3.098,2748,3.098]],["title/components/LoginFormComponent.html",[0,0.171,247,1.193]],["body/components/LoginFormComponent.html",[0,0.285,1,0.767,2,0.168,3,0.162,4,0.591,5,0.808,6,0.823,7,1.025,8,0.146,10,0.343,15,1.153,18,1.178,19,0.741,20,2.558,22,0.679,24,0.007,25,1.241,26,2.073,27,1.764,30,1.133,32,0.308,33,0.503,34,1.662,35,1.619,38,1.147,39,1.565,41,1.772,42,1.88,44,0.923,47,3.009,60,0.32,64,0.666,65,1.098,66,1.111,71,0.785,75,1.039,76,0.935,77,1.133,86,0.871,87,0.819,88,0.586,108,1.114,110,0.754,112,2.608,113,0.986,119,2.704,126,2.558,127,3.947,132,0.269,134,1.256,142,0.754,145,0.105,146,0.131,172,0.571,173,1.215,174,0.889,175,1.108,176,1.108,177,1.314,178,1.682,179,0.823,180,0.823,181,0.754,182,1.259,183,0.741,184,0.767,185,1.284,186,1.712,187,0.781,188,1.068,189,2.089,190,0.781,191,1.946,192,0.767,193,0.781,194,0.781,195,0.823,196,0.767,197,1.259,198,0.781,199,0.823,200,0.767,201,0.823,202,0.754,203,0.754,204,1.38,205,1.529,206,0.741,207,0.767,208,0.767,209,0.754,210,0.823,211,0.781,212,1.845,213,0.781,214,0.767,215,0.781,216,0.781,217,0.781,218,0.767,219,0.823,220,0.754,221,0.781,222,0.823,223,0.767,224,0.823,225,0.767,226,0.741,227,0.889,228,0.823,229,0.767,230,0.823,231,0.741,232,0.767,233,0.823,234,0.754,235,0.823,236,1.413,237,0.823,238,0.754,239,1.4,240,0.823,241,0.754,242,0.823,243,0.754,244,0.823,245,0.728,246,0.823,247,1.596,248,2.092,249,0.767,250,0.781,251,0.823,252,0.767,253,0.823,254,0.823,255,0.767,256,0.823,257,0.767,258,0.823,259,0.767,260,0.823,261,0.715,262,0.823,263,0.754,264,0.767,265,0.823,266,0.767,267,2.072,268,0.823,269,0.754,270,0.781,271,1.724,272,0.754,273,0.781,274,0.953,275,0.781,276,0.767,277,0.767,278,0.767,279,0.781,280,0.781,281,0.823,282,0.754,283,0.767,284,0.823,285,0.767,286,0.794,287,0.767,288,0.823,289,0.767,290,0.823,291,0.767,292,0.823,293,0.767,294,0.823,295,0.767,296,0.823,297,0.767,298,0.715,299,0.741,300,0.823,301,0.754,302,0.823,303,0.754,304,0.823,305,0.754,306,0.823,307,0.754,308,0.823,309,0.754,310,0.794,311,0.823,312,0.754,313,0.794,314,0.728,315,0.823,316,0.003,317,0.003,326,1.729,341,1.219,350,3.054,353,0.612,397,2.498,422,1.446,431,2.055,433,1.215,443,2.538,444,2.571,445,2.522,449,2.729,472,1.829,488,3.524,494,2.88,506,2.464,534,1.711,554,3.258,580,3.181,581,2.618,586,3.498,686,3.524,720,2.572,837,1.972,888,3.082,901,2.519,902,2.729,907,1.711,911,2.674,981,2.057,1012,4.28,1020,3.467,1028,2.798,1115,2.902,1198,2.057,1229,1.84,1383,2.704,1598,3.352,1839,6.351,2015,2.158,2718,4.102,2730,4.463,2748,2.572,2749,8.225,2750,7.057,2751,2.572,2752,5.826,2753,4.283,2754,4.283,2755,6.621,2756,5.352,2757,5.826,2758,5.201,2759,6.278,2760,6.278,2761,5.201,2762,5.201,2763,5.201,2764,5.201,2765,3.145,2766,7.438,2767,4.811,2768,4.811,2769,1.662,2770,3.145,2771,4.283,2772,3.145,2773,5.352,2774,4.283,2775,3.145,2776,4.283,2777,3.145,2778,4.283,2779,2.799,2780,4.283,2781,3.145,2782,4.283,2783,3.145,2784,3.467,2785,3.145,2786,3.145,2787,4.283,2788,3.145,2789,4.283,2790,3.145,2791,4.283,2792,4.283,2793,3.145,2794,3.145,2795,4.283,2796,3.145,2797,3.145,2798,3.145,2799,4.283,2800,3.675,2801,3.145,2802,3.145,2803,3.145,2804,2.799,2805,2.799,2806,2.402,2807,3.145,2808,2.799,2809,2.799,2810,2.799,2811,4.283,2812,2.799,2813,2.402,2814,4.283,2815,3.145,2816,3.145,2817,3.145,2818,3.145,2819,2.799,2820,2.799,2821,2.799,2822,2.799,2823,3.145,2824,2.799,2825,2.799,2826,3.935]],["title/pipes/MaxItemsPipe.html",[1186,2.581,1847,3.526]],["body/pipes/MaxItemsPipe.html",[2,0.372,3,0.36,8,0.324,10,0.761,15,1.671,22,1.506,24,0.007,38,1.002,43,2.059,44,0.983,60,0.289,64,0.568,66,0.843,76,1.043,86,1.039,87,0.868,88,0.699,113,0.81,132,0.596,145,0.232,146,0.156,316,0.006,317,0.006,441,3.412,678,3.153,832,3.814,1164,5.551,1186,4.937,1191,3.679,1197,5.977,1596,7.763,1847,5.977,2827,7.383,2828,6.208,2829,7.383,2830,8.294,2831,8.294,2832,6.974,2833,6.974]],["title/components/MediumEditorComponent.html",[0,0.171,249,1.193]],["body/components/MediumEditorComponent.html",[0,0.283,1,0.885,2,0.194,3,0.187,4,0.682,5,0.933,6,0.949,7,1.182,8,0.169,10,0.396,11,3.359,13,5.195,15,1.284,16,3.993,19,0.855,20,2.788,22,0.784,23,1.925,24,0.007,25,0.859,26,2.085,27,1.776,28,3.504,30,1.262,32,0.356,33,0.561,34,2.711,35,1.526,36,4.41,37,5.376,38,1.261,39,1.218,44,0.755,45,2.826,47,3.234,48,3.504,49,4.41,52,3.359,60,0.264,64,0.693,65,1.007,66,1.094,71,0.874,72,1.681,76,0.943,77,1.849,81,3.359,84,2.206,86,0.798,87,0.835,88,0.814,89,3.359,99,3.359,101,3.504,102,2.595,103,2.979,104,3.234,105,1.418,106,2.238,108,1.628,110,0.87,112,1.505,113,0.739,114,2.915,116,2.932,121,1.681,131,3.359,132,0.31,133,3.359,134,1.449,143,2.275,144,2.275,145,0.121,146,0.081,147,2.772,152,2.968,154,2.772,155,3.23,160,3.504,163,3.23,171,2.275,172,0.659,173,1.353,174,0.99,175,1.278,176,1.278,177,1.516,178,1.808,179,0.949,180,0.949,181,0.87,182,1.402,183,0.855,184,0.885,185,1.4,186,1.84,187,0.901,188,1.128,189,2.181,190,0.901,191,2.054,192,0.885,193,0.901,194,0.901,195,0.949,196,0.885,197,1.402,198,0.901,199,0.949,200,0.885,201,0.949,202,0.87,203,0.87,204,1.448,205,1.666,206,0.855,207,0.885,208,0.885,209,0.87,210,0.949,211,0.901,212,1.963,213,0.901,214,0.885,215,0.901,216,0.901,217,0.901,218,0.885,219,0.949,220,0.87,221,0.901,222,0.949,223,0.885,224,0.949,225,0.885,226,0.855,227,0.99,228,0.949,229,0.885,230,0.949,231,0.855,232,0.885,233,0.949,234,0.87,235,0.949,236,0.784,237,0.949,238,0.87,239,1.526,240,0.949,241,0.87,242,0.949,243,0.87,244,0.949,245,0.84,246,0.949,247,0.885,248,0.826,249,1.83,250,2.148,251,0.949,252,0.885,253,0.949,254,0.949,255,0.885,256,0.949,257,0.885,258,0.949,259,0.885,260,0.949,261,0.826,262,0.949,263,0.87,264,0.885,265,0.949,266,0.885,267,0.901,268,0.949,269,0.87,270,0.901,271,1.8,272,0.87,273,0.901,274,0.719,275,0.901,276,0.885,277,0.885,278,0.885,279,0.901,280,0.901,281,0.949,282,0.87,283,0.885,284,0.949,285,0.885,286,0.917,287,0.885,288,0.949,289,0.885,290,0.949,291,0.885,292,0.949,293,0.885,294,0.949,295,0.885,296,0.949,297,0.885,298,0.826,299,0.855,300,0.949,301,0.87,302,0.949,303,0.87,304,0.949,305,0.87,306,0.949,307,0.87,308,0.949,309,0.87,310,0.917,311,0.949,312,0.87,313,0.917,314,0.84,315,0.949,316,0.004,317,0.004,336,2.29,431,2.049,444,1.117,445,2.291,554,3.735,599,2.386,814,3.011,958,2.615,1475,2.968,1675,3.23,2306,4.381,2307,4.381,2330,4.092,2372,2.968,2834,6.969,2835,8.123,2836,3.23,2837,5.358,2838,5.358,2839,5.358,2840,5.669,2841,5.358,2842,5.358,2843,6.26,2844,6.369,2845,3.629,2846,7.851,2847,3.629,2848,3.629,2849,3.629,2850,3.629,2851,4.769,2852,3.629,2853,3.629,2854,3.629,2855,3.629,2856,3.629,2857,3.629,2858,3.629,2859,3.629,2860,3.629,2861,3.629,2862,3.629,2863,3.629,2864,3.629,2865,3.629,2866,3.629,2867,3.629,2868,3.629,2869,2.968,2870,3.629,2871,3.629]],["title/modules/MediumModule.html",[318,1.094,2872,3.526]],["body/modules/MediumModule.html",[2,0.358,3,0.347,8,0.312,23,2.451,24,0.007,25,1.485,58,2.319,60,0.375,132,0.574,141,3.263,145,0.301,146,0.15,172,1.219,249,2.405,250,1.667,316,0.006,317,0.006,318,1.813,320,2.743,325,3.387,326,2.414,327,2.231,330,3.169,623,3.826,624,3.088,2834,5.129,2872,6.86,2873,5.978,2874,5.978,2875,6.716,2876,5.978,2877,6.716,2878,6.716]],["title/components/MenuComponent.html",[0,0.171,252,1.193]],["body/components/MenuComponent.html",[0,0.243,1,0.75,2,0.164,3,0.159,4,0.578,5,0.791,6,0.805,8,0.143,10,0.336,14,3.313,15,1.134,19,0.724,21,2.791,22,0.664,24,0.007,25,1.037,26,2.071,27,1.763,28,3.093,30,1.114,32,0.302,33,0.495,35,1.587,38,1.103,39,1.102,43,2.234,44,0.667,46,3.134,55,0.873,60,0.239,64,0.625,65,1.443,66,1.113,75,1.397,76,1.196,77,1.524,84,1.484,86,1.212,87,0.876,88,0.815,108,1.095,110,0.737,113,0.944,119,1.729,121,2.486,132,0.263,142,0.737,145,0.102,146,0.069,162,1.062,172,0.558,173,1.195,174,0.874,178,1.663,179,0.805,180,0.805,181,0.737,182,1.237,183,0.724,184,0.75,185,1.266,186,1.692,187,0.763,188,1.059,189,2.074,190,0.763,191,1.929,192,0.75,193,0.763,194,0.763,195,0.805,196,0.75,197,1.237,198,0.763,199,0.805,200,0.75,201,0.805,202,0.737,203,0.737,204,1.369,205,1.508,206,0.724,207,0.75,208,0.75,209,0.737,210,0.805,211,0.763,212,1.827,213,0.763,214,0.75,215,0.763,216,0.763,217,0.763,218,0.75,219,0.805,220,0.737,221,0.763,222,0.805,223,0.75,224,0.805,225,0.75,226,0.724,227,1.195,228,0.805,229,0.75,230,0.805,231,0.724,232,0.75,233,0.805,234,0.737,235,0.805,236,0.664,237,0.805,238,0.737,239,1.381,240,0.805,241,0.737,242,0.805,243,0.737,244,0.805,245,0.712,246,0.805,247,0.75,248,0.7,249,0.75,250,0.763,251,0.805,252,1.798,253,1.508,254,0.805,255,0.75,256,0.805,257,0.75,258,0.805,259,0.75,260,0.805,261,0.7,262,0.805,263,0.737,264,0.75,265,0.805,266,0.75,267,0.763,268,0.805,269,0.737,270,0.763,271,1.712,272,0.737,273,0.763,274,0.937,275,0.763,276,0.75,277,0.75,278,0.75,279,0.763,280,0.763,281,0.805,282,0.737,283,0.75,284,0.805,285,0.75,286,0.777,287,0.75,288,0.805,289,0.75,290,0.805,291,0.75,292,0.805,293,0.75,294,0.805,295,0.75,296,0.805,297,0.75,298,0.7,299,0.724,300,0.805,301,0.737,302,0.805,303,0.737,304,0.805,305,0.737,306,0.805,307,0.737,308,0.805,309,0.737,310,0.777,311,0.805,312,0.737,313,0.777,314,0.712,315,0.805,316,0.003,317,0.003,327,1.571,338,5.342,339,2.729,341,1.202,353,0.599,385,3.093,388,3.868,430,4.815,433,1.195,441,2.325,487,4.97,492,2.07,506,2.422,511,3.313,567,1.49,577,2.974,595,1.789,598,1.042,599,2.158,678,1.571,791,2.852,832,3.39,836,4.781,875,2.573,884,2.495,893,5.428,1221,6.209,1426,4.288,1594,2.573,1884,2.422,2578,2.751,2879,2.738,2880,7.81,2881,4.73,2882,4.73,2883,8.3,2884,8.3,2885,6.469,2886,4.73,2887,4.73,2888,4.73,2889,4.73,2890,4.73,2891,6.469,2892,4.21,2893,4.73,2894,6.982,2895,6.982,2896,2.738,2897,4.73,2898,4.73,2899,6.469,2900,4.73,2901,4.73,2902,4.73,2903,3.076,2904,6.563,2905,4.73,2906,3.612,2907,3.076,2908,3.076,2909,3.076,2910,3.076,2911,3.076,2912,4.73,2913,4.21,2914,3.076,2915,3.076,2916,4.73,2917,4.73,2918,3.076,2919,4.73,2920,3.076,2921,4.73,2922,3.076,2923,4.73,2924,4.73,2925,3.076,2926,4.21,2927,4.73,2928,3.076,2929,4.21,2930,4.73,2931,3.076,2932,3.076,2933,4.73,2934,3.076,2935,4.73,2936,3.076,2937,3.076,2938,3.076,2939,5.13,2940,3.076,2941,4.73,2942,3.076,2943,3.076,2944,3.076,2945,3.076,2946,3.076,2947,5.762,2948,3.076,2949,5.762,2950,3.076,2951,4.73,2952,3.076,2953,3.076,2954,3.076,2955,3.076,2956,3.076,2957,6.469,2958,5.762,2959,3.076,2960,3.076,2961,3.076,2962,5.762,2963,3.076,2964,4.73,2965,4.73,2966,4.73]],["title/components/MockupComponent.html",[0,0.171,255,1.193]],["body/components/MockupComponent.html",[0,0.285,1,0.902,2,0.344,3,0.191,4,0.696,5,0.951,6,0.968,8,0.172,10,0.404,19,0.872,22,0.799,24,0.006,26,2.086,27,1.777,30,1.28,35,0.696,43,1.349,60,0.153,87,0.801,108,1.258,110,0.887,113,0.631,132,0.316,145,0.123,146,0.144,162,3.439,172,0.672,173,1.373,174,1.004,178,1.825,179,0.968,180,0.968,181,0.887,182,1.422,183,0.872,184,0.902,185,1.416,186,1.857,187,0.918,188,1.136,189,2.193,190,0.918,191,2.068,192,0.902,193,0.918,194,0.918,195,0.968,196,0.902,197,1.422,198,0.918,199,0.968,200,0.902,201,0.968,202,0.887,203,0.887,204,1.457,205,1.685,206,0.872,207,0.902,208,0.902,209,0.887,210,0.968,211,0.918,212,1.978,213,0.918,214,0.902,215,0.918,216,0.918,217,0.918,218,0.902,219,0.968,220,0.887,221,0.918,222,0.968,223,0.902,224,0.968,225,0.902,226,0.872,227,1.311,228,0.968,229,0.902,230,0.968,231,0.872,232,0.902,233,0.968,234,0.887,235,0.968,236,0.799,237,0.968,238,0.887,239,1.544,240,0.968,241,0.887,242,0.968,243,0.887,244,0.968,245,0.857,246,0.968,247,0.902,248,0.842,249,0.902,250,0.918,251,0.968,252,0.902,253,0.968,254,0.968,255,1.731,256,0.968,257,0.902,258,0.968,259,0.902,260,0.968,261,0.842,262,0.968,263,0.887,264,0.902,265,0.968,266,0.902,267,0.918,268,0.968,269,0.887,270,0.918,271,1.81,272,0.887,273,0.918,274,1.929,275,0.918,276,0.902,277,0.902,278,0.902,279,0.918,280,0.918,281,0.968,282,0.887,283,0.902,284,0.968,285,0.902,286,0.935,287,0.902,288,0.968,289,0.902,290,0.968,291,0.902,292,0.968,293,0.902,294,0.968,295,0.902,296,0.968,297,0.902,298,0.842,299,0.872,300,0.968,301,0.887,302,0.968,303,0.887,304,0.968,305,0.887,306,0.968,307,0.887,308,0.968,309,0.887,310,0.935,311,0.968,312,0.887,313,0.935,314,0.857,315,0.968,316,0.004,317,0.004,350,3.809,393,2.784,580,2.036,905,1.841,1365,3.554,2718,3.161,2967,3.294,2968,3.554,2969,5.435,2970,5.435,2971,5.435,2972,7.099,2973,5.435,2974,9.727,2975,9.837,2976,9.837,2977,9.697,2978,9.697,2979,4.838,2980,5.435,2981,5.435]],["title/components/ModalComponent.html",[0,0.171,257,1.193]],["body/components/ModalComponent.html",[0,0.24,1,0.728,2,0.159,3,0.154,4,1.621,5,1.188,6,0.781,7,0.973,8,0.139,10,0.326,15,1.108,18,1.732,19,0.703,20,2.476,21,2.74,22,0.645,24,0.007,25,1.218,26,2.069,27,1.762,30,1.089,32,0.293,33,0.666,34,1.954,35,1.621,38,1.091,39,1.713,44,0.652,45,2.439,46,3.085,47,2.928,53,6.133,55,0.548,60,0.234,64,0.769,65,1.476,66,1.141,74,1.838,75,1.222,76,0.955,77,1.716,84,1.45,86,0.949,87,0.822,88,0.825,93,3.023,102,3.085,104,4.146,105,1.167,108,1.686,110,0.716,113,0.882,123,4.123,132,0.255,139,2.689,142,0.716,145,0.099,146,0.17,156,4.115,162,1.597,165,2.302,172,0.542,173,1.168,174,0.854,175,1.052,176,2.244,177,1.247,178,1.637,179,0.781,180,0.781,181,0.716,182,1.21,183,0.703,184,0.728,185,1.243,186,1.666,187,0.741,188,1.046,189,2.054,190,0.741,191,1.906,192,0.728,193,0.741,194,0.741,195,0.781,196,0.728,197,1.21,198,0.741,199,0.781,200,0.728,201,0.781,202,0.716,203,0.716,204,1.355,205,1.48,206,0.703,207,0.728,208,0.728,209,0.716,210,0.781,211,0.741,212,1.802,213,0.741,214,0.728,215,0.741,216,0.741,217,0.741,218,0.728,219,0.781,220,0.716,221,0.741,222,0.781,223,0.728,224,0.781,225,0.728,226,0.703,227,0.854,228,0.781,229,0.728,230,0.781,231,0.703,232,0.728,233,0.781,234,0.716,235,0.781,236,0.645,237,0.781,238,0.716,239,1.356,240,0.781,241,0.716,242,0.781,243,0.716,244,0.781,245,0.691,246,0.781,247,0.728,248,0.679,249,0.728,250,0.741,251,0.781,252,0.728,253,0.781,254,0.781,255,0.728,256,0.781,257,1.553,258,0.781,259,0.728,260,0.781,261,0.679,262,0.781,263,0.716,264,0.728,265,0.781,266,0.728,267,0.741,268,0.781,269,2.129,270,0.741,271,1.696,272,0.716,273,0.741,274,0.591,275,0.741,276,0.728,277,0.728,278,0.728,279,0.741,280,0.741,281,0.781,282,0.716,283,0.728,284,0.781,285,0.728,286,0.754,287,0.728,288,0.781,289,0.728,290,0.781,291,0.728,292,0.781,293,0.728,294,0.781,295,0.728,296,0.781,297,0.728,298,0.679,299,0.703,300,0.781,301,0.716,302,0.781,303,0.716,304,0.781,305,0.716,306,0.781,307,0.716,308,0.781,309,0.716,310,0.754,311,0.781,312,0.716,313,0.754,314,1.07,315,0.781,316,0.003,317,0.003,335,2.211,336,2.723,341,0.965,342,4.095,353,0.9,354,4.27,360,1.771,431,1.347,433,1.168,441,1.662,444,1.423,445,0.973,449,2.673,451,1.931,475,2.899,516,1.277,569,3.023,577,3.786,599,2.119,622,2.024,780,1.53,783,3.465,786,3.531,832,1.373,912,2.984,917,1.737,924,2.439,929,4.068,977,3.408,1009,2.598,1025,2.045,1026,1.872,1028,2.689,1032,3.179,1033,3.781,1054,1.678,1208,2.816,1224,3.332,1229,2.635,1235,4.419,1365,3.023,1368,3.166,1380,1.872,1383,1.678,1516,4.076,1517,3.332,1518,3.332,1519,4.076,1521,4.875,1526,2.045,1527,2.281,1528,1.801,1529,2.281,1530,2.281,1532,2.281,1533,4.361,1534,3.699,1536,2.152,1537,2.281,1538,1.953,1542,2.281,1543,3.332,1544,2.152,1545,2.281,1546,1.801,1547,5.25,1548,2.152,1549,2.281,1550,2.152,1551,2.281,1556,2.281,1557,1.872,1558,2.281,1559,2.281,1560,2.281,1564,2.281,1594,2.515,1635,4.115,1643,4.27,1679,3.781,1835,3.781,2049,2.689,2059,4.115,2133,2.442,2145,2.658,2193,3.531,2338,5.035,2769,1.597,2968,3.023,2982,2.658,2983,6.856,2984,3.781,2985,3.332,2986,4.623,2987,4.623,2988,4.623,2989,4.623,2990,7.851,2991,6.889,2992,6.764,2993,4.623,2994,4.623,2995,3.332,2996,2.986,2997,4.623,2998,2.986,2999,8.234,3000,2.986,3001,2.986,3002,2.986,3003,2.986,3004,3.781,3005,4.623,3006,3.781,3007,4.623,3008,2.986,3009,2.986,3010,3.781,3011,2.986,3012,2.986,3013,2.986,3014,2.986,3015,2.986,3016,4.115,3017,2.986,3018,4.623,3019,4.623,3020,4.623,3021,4.623,3022,2.986,3023,2.986,3024,5.035,3025,4.623,3026,2.986,3027,2.986,3028,2.986,3029,2.986,3030,2.986,3031,2.986,3032,2.986,3033,2.986,3034,2.986,3035,2.986,3036,4.623]],["title/interfaces/ModelConfig.html",[332,1.35,1514,3.068]],["body/interfaces/ModelConfig.html",[2,0.384,3,0.371,8,0.334,10,0.785,24,0.007,32,0.706,33,0.884,41,2.029,60,0.298,64,0.586,74,1.825,88,0.847,145,0.239,316,0.006,317,0.006,332,2.554,345,3.005,678,2.806,682,3.1,861,4.206,989,4.511,1013,3.529,1045,3.986,1148,4.926,1514,5.298,1591,5.041,1681,5.582,3037,4.926,3038,6.909,3039,4.914]],["title/injectables/ModelConfigService.html",[433,1.236,1130,2.951]],["body/injectables/ModelConfigService.html",[0,0.18,2,0.185,3,0.179,7,2.239,8,0.161,10,0.676,18,1.296,24,0.007,25,1.392,32,0.339,33,0.88,38,1.108,41,1.935,42,2.021,43,1.537,44,0.969,60,0.364,64,0.707,65,1.687,66,0.993,70,2.226,74,1.776,75,1.815,76,1.181,86,1.15,87,0.806,88,0.773,103,3.386,112,2.066,113,1.032,116,2.685,126,2.021,130,2.814,132,0.296,142,1.849,145,0.115,146,0.164,204,0.617,316,0.004,317,0.004,337,3.381,339,2.874,341,1.292,349,2.709,350,3.323,351,1.772,353,0.674,360,1.89,394,2.649,399,2.369,405,2.87,407,3.015,410,1.633,416,2.369,433,1.857,451,1.446,496,1.382,513,3.862,516,2.211,546,2.494,554,3.421,555,3.119,583,3.008,598,1.172,599,2.755,678,2.442,702,1.772,768,3.382,796,3.541,832,1.591,838,3.243,861,4.093,868,1.633,872,5.56,873,2.814,890,2.649,901,2.097,902,2.521,904,5.161,905,2.327,936,2.728,948,2.087,980,2.013,995,3.95,1032,2.907,1040,4.487,1042,3.243,1061,2.263,1065,5.56,1066,3.243,1075,2.263,1106,2.013,1130,3.119,1131,4.144,1140,3.08,1148,5.755,1156,2.494,1163,2.421,1193,2.494,1208,1.723,1222,3,1353,2.17,1514,3.243,1591,1.945,1597,3.727,1598,3.172,1639,3.119,1671,2.643,1679,2.83,1681,4.653,1720,3.727,1721,4.463,1734,2.494,2089,4.23,2154,2.643,2188,4.604,2292,2.83,2357,3.541,2432,2.494,2436,4.23,2497,3.382,2576,5.035,3010,2.83,3037,5.755,3038,4.23,3039,3.996,3040,4.23,3041,3.95,3042,4.604,3043,6.871,3044,5.172,3045,6.871,3046,5.172,3047,6.871,3048,3.461,3049,3.08,3050,5.172,3051,7.996,3052,3.461,3053,4.604,3054,4.604,3055,4.23,3056,4.23,3057,4.604,3058,5.172,3059,5.172,3060,3.461,3061,3.461,3062,3.883,3063,5.172,3064,3.461,3065,5.172,3066,4.604,3067,5.172,3068,5.172,3069,4.23,3070,5.172,3071,3.461,3072,4.604,3073,3.08,3074,7.118,3075,3.461,3076,5.172,3077,3.461,3078,3.461,3079,3.461,3080,3.461,3081,5.172,3082,3.461,3083,4.604,3084,3.461,3085,4.604,3086,2.494,3087,3.95,3088,3.461,3089,5.172,3090,3.461,3091,2.643,3092,3.08,3093,3.08,3094,5.172,3095,4.604,3096,4.604,3097,5.172,3098,3.461,3099,3.461,3100,3.461,3101,3.461,3102,3.461,3103,3.461,3104,3.461,3105,3.461,3106,3.461,3107,3.461,3108,6.193,3109,4.604,3110,4.604,3111,3.461,3112,3.461,3113,3.461,3114,5.172,3115,5.172,3116,3.461,3117,3.461,3118,3.461,3119,3.461,3120,3.461,3121,3.461,3122,2.83,3123,2.83,3124,3.08,3125,2.643,3126,3.461,3127,3.461,3128,3.461,3129,3.461,3130,5.172,3131,6.193,3132,3.461,3133,3.461,3134,5.172,3135,3.461,3136,3.461,3137,3.461,3138,3.461,3139,3.461,3140,3.461,3141,3.461,3142,3.461]],["title/interfaces/ModelConfiguration.html",[332,1.35,3143,4.002]],["body/interfaces/ModelConfiguration.html",[2,0.384,3,0.371,8,0.334,10,0.785,24,0.007,32,0.706,33,0.884,41,2.029,60,0.298,64,0.586,74,1.825,88,0.847,145,0.239,316,0.006,317,0.006,332,2.554,345,3.005,678,2.806,682,3.1,861,4.206,1013,3.529,1045,3.986,1148,4.926,1591,5.041,1681,5.582,3037,4.926,3038,6.909,3039,4.914,3143,6.909,3144,6.405]],["title/classes/Notification.html",[146,0.109,586,2.092]],["body/classes/Notification.html",[2,0.413,3,0.269,8,0.242,10,0.845,24,0.007,25,1.106,27,1.231,32,0.511,33,0.722,38,0.991,55,0.818,60,0.216,64,0.793,65,1.737,66,1.151,74,2.015,75,1.904,86,0.776,87,0.511,88,0.981,121,2.165,126,2.697,145,0.173,146,0.154,261,2.005,314,2.04,316,0.005,317,0.005,339,3.568,341,1.615,353,1.507,394,3.535,441,2.783,451,2.883,506,3.535,516,2.951,577,4.053,578,4.163,580,3.647,581,4.796,583,3.021,586,4.223,678,2.738,697,4.954,900,3.879,923,3.343,930,3.697,977,3.697,983,4.972,1163,3.105,1167,4.485,1214,4.974,1445,5.764,1557,4.328,1594,3.755,1669,4.163,1672,4.259,2210,6.144,2490,6.144,2497,4.513,2718,4.014,3024,4.635,3145,4.635,3146,6.902,3147,6.902,3148,6.902,3149,4.633,3150,5.207,3151,5.207,3152,5.207,3153,4.726,3154,5.207,3155,5.207,3156,6.144,3157,4.726,3158,5.207,3159,6.902,3160,5.207,3161,6.902,3162,5.207,3163,6.902,3164,5.207,3165,4.635,3166,5.207]],["title/components/NotificationsComponent.html",[0,0.171,261,1.113]],["body/components/NotificationsComponent.html",[0,0.296,1,0.876,2,0.192,3,0.185,4,0.999,5,1.627,6,0.939,7,1.732,8,0.167,10,0.392,15,1.274,19,0.846,22,0.775,24,0.007,25,0.576,26,2.084,27,1.776,30,1.252,32,0.352,33,0.662,35,1.404,38,0.516,39,1.017,55,0.829,56,1.466,60,0.29,64,0.637,66,0.765,71,1.033,72,1.126,74,1.613,75,1.148,76,0.796,86,0.535,87,0.815,88,0.533,108,1.23,110,0.861,113,0.908,121,1.668,132,0.307,140,2.587,145,0.233,146,0.175,172,0.652,173,1.343,174,0.982,175,1.265,176,1.265,177,1.5,178,1.798,179,0.939,180,0.939,181,0.861,182,1.391,183,0.846,184,0.876,185,1.391,186,1.831,187,0.891,188,1.123,189,2.174,190,0.891,191,2.046,192,0.876,193,0.891,194,0.891,195,0.939,196,0.876,197,1.391,198,0.891,199,0.939,200,0.876,201,0.939,202,0.861,203,0.861,204,1.443,205,1.656,206,0.846,207,0.876,208,0.876,209,0.861,210,0.939,211,0.891,212,1.954,213,0.891,214,0.876,215,0.891,216,0.891,217,0.891,218,0.876,219,0.939,220,0.861,221,0.891,222,0.939,223,0.876,224,0.939,225,0.876,226,0.846,227,0.982,228,0.939,229,0.876,230,0.939,231,0.846,232,0.876,233,0.939,234,0.861,235,0.939,236,0.775,237,0.939,238,0.861,239,1.517,240,0.939,241,0.861,242,0.939,243,0.861,244,0.939,245,0.831,246,0.939,247,0.876,248,0.817,249,0.876,250,0.891,251,0.939,252,0.876,253,0.939,254,0.939,255,0.876,256,0.939,257,0.876,258,0.939,259,0.876,260,0.939,261,1.699,262,0.939,263,0.861,264,0.876,265,0.939,266,0.876,267,0.891,268,0.939,269,0.861,270,0.891,271,1.795,272,0.861,273,0.891,274,0.711,275,0.891,276,0.876,277,0.876,278,0.876,279,0.891,280,0.891,281,0.939,282,0.861,283,0.876,284,0.939,285,0.876,286,0.907,287,0.876,288,0.939,289,0.876,290,0.939,291,0.876,292,0.939,293,0.876,294,0.939,295,0.876,296,0.939,297,0.876,298,0.817,299,0.846,300,0.939,301,0.861,302,0.939,303,0.861,304,0.939,305,0.861,306,0.939,307,0.861,308,0.939,309,0.861,310,0.907,311,0.939,312,0.861,313,0.907,314,1.81,315,0.939,316,0.004,317,0.004,318,0.803,332,0.991,339,3.056,353,1.035,385,2.348,422,1.651,441,1.911,500,1.434,516,1.535,580,3.113,581,3.444,583,2.327,586,4.181,587,3.92,598,2.143,601,4.834,622,1.572,678,1.193,682,1.317,697,3.557,723,2.166,735,2.251,768,2.348,772,4.126,798,2.166,832,1.651,889,3.206,900,4.198,911,1.911,923,3.389,924,1.894,930,2.384,976,3.206,977,3.727,978,4.334,981,2.348,983,3.817,1013,1.5,1020,2.587,1023,1.651,1030,1.954,1035,2.018,1045,2.508,1085,2.348,1163,2.23,1167,4.404,1208,1.788,1229,2.033,1314,2.018,1445,2.348,1478,2.587,1538,4.575,1546,3.206,1594,1.954,1649,3.339,1692,3.969,1884,1.839,1967,3.206,2005,3.196,2015,2.384,2060,2.936,2233,2.742,2344,3.831,2384,3.196,2426,2.742,2524,4.347,2563,3.831,2575,3.476,2578,3.092,2597,3.196,2718,3.092,2800,2.742,3062,2.251,3091,4.06,3149,2.018,3167,3.196,3168,5.316,3169,5.316,3170,5.316,3171,5.316,3172,3.591,3173,2.936,3174,3.196,3175,2.348,3176,4.732,3177,3.196,3178,5.634,3179,5.176,3180,4.347,3181,2.936,3182,3.196,3183,3.196,3184,3.196,3185,2.936,3186,3.196,3187,3.196,3188,3.196,3189,3.196,3190,3.196,3191,2.458,3192,2.742,3193,3.196,3194,3.196,3195,4.732,3196,3.196,3197,3.196,3198,4.732,3199,3.196,3200,3.196,3201,3.196,3202,3.196,3203,3.196,3204,6.329,3205,3.591,3206,3.591,3207,3.591,3208,3.591,3209,6.329,3210,5.634,3211,3.591,3212,3.591,3213,3.591,3214,3.591,3215,3.591,3216,5.316,3217,3.591,3218,3.196,3219,4.732,3220,3.196,3221,3.591]],["title/modules/NotificationsModule.html",[318,1.094,3222,3.526]],["body/modules/NotificationsModule.html",[2,0.345,3,0.334,8,0.3,23,2.7,24,0.007,58,2.234,60,0.398,132,0.553,141,3.21,145,0.297,146,0.145,172,1.174,218,2.38,261,2.22,316,0.005,317,0.005,318,1.772,320,2.642,325,3.311,326,2.325,327,2.148,330,3.098,360,1.663,587,4.4,623,3.739,624,2.974,646,4.661,1850,6.1,1851,5.625,1856,5.29,1866,4.661,3165,5.758,3203,5.758,3222,7.115,3223,5.758,3224,5.758,3225,6.469,3226,5.758,3227,5.758,3228,6.469,3229,6.469,3230,5.758]],["title/injectables/NotificationsService.html",[433,1.236,587,2.308]],["body/injectables/NotificationsService.html",[0,0.23,2,0.259,3,0.251,8,0.226,10,0.53,23,2.611,24,0.007,25,1.285,27,1.175,32,0.476,33,0.69,38,1.074,39,1.653,44,0.929,55,0.78,60,0.332,64,0.682,66,1.068,70,1.747,71,1.41,72,2.067,74,1.615,76,1.13,77,1.144,86,1.114,87,0.733,88,0.749,93,4.309,113,1.026,116,2.575,132,0.415,138,3.974,141,1.82,142,1.792,145,0.162,146,0.109,175,1.712,176,1.712,314,1.855,316,0.005,317,0.005,318,1.473,341,1.56,353,1.455,385,3.177,401,3.974,433,2.182,441,2.369,443,3.476,451,2.03,506,3.375,509,3.832,517,3.192,534,4.701,578,2.93,581,2.644,586,4.244,587,3.108,591,4.742,597,2.826,599,3.002,622,2.884,645,5.388,646,4.748,672,6.226,703,2.93,752,3.327,837,3.047,838,3.047,911,3.106,983,2.93,995,5.032,1023,2.234,1085,4.309,1167,3.585,1222,3.192,1229,3.066,1643,2.731,1692,3.047,2330,7.037,2357,4.511,3210,4.325,3218,4.325,3219,5.865,3220,4.325,3230,7.691,3231,3.974,3232,6.589,3233,5.388,3234,9.43,3235,8.016,3236,6.589,3237,8.016,3238,4.859,3239,6.589,3240,6.589,3241,4.859,3242,8.016,3243,7.135,3244,8.639,3245,6.589,3246,4.859,3247,6.589,3248,4.859,3249,6.589,3250,4.859,3251,6.589,3252,4.859,3253,5.71,3254,4.325,3255,4.859,3256,4.859,3257,4.859,3258,4.859,3259,4.859,3260,4.859,3261,4.859,3262,4.325,3263,4.859,3264,4.859,3265,4.859,3266,4.859,3267,4.859,3268,4.859,3269,4.859,3270,4.859]],["title/components/OutputComponent.html",[0,0.171,263,1.173]],["body/components/OutputComponent.html",[0,0.318,1,1.017,2,0.223,3,0.215,4,1.296,5,1.072,6,1.091,8,0.194,10,0.455,15,1.42,18,2.22,19,0.982,21,3.339,22,0.901,24,0.007,26,2.095,27,1.785,30,1.396,32,0.409,33,0.785,35,1.548,38,0.599,39,1.133,41,2.001,43,2.301,44,0.835,46,3.635,55,0.816,60,0.328,64,0.69,66,0.995,72,1.859,74,1.489,75,1.712,76,0.745,77,0.982,86,0.622,87,0.849,88,0.418,105,1.63,106,1.742,108,1.372,110,1,113,0.871,121,1.308,123,3.339,132,0.356,145,0.139,146,0.093,172,0.757,173,1.497,174,1.095,178,1.929,179,1.091,180,1.091,181,1,182,1.55,183,0.982,184,1.017,185,1.515,186,1.964,187,1.035,188,1.183,189,2.265,190,1.035,191,2.155,192,1.017,193,1.035,194,1.035,195,1.091,196,1.017,197,1.55,198,1.035,199,1.091,200,1.017,201,1.091,202,1,203,1,204,1.511,205,1.803,206,1.867,207,1.017,208,2.066,209,1.974,210,1.091,211,1.035,212,2.074,213,1.035,214,1.017,215,1.035,216,1.035,217,1.035,218,1.017,219,1.091,220,1,221,1.035,222,1.091,223,1.017,224,1.091,225,1.017,226,0.982,227,1.095,228,1.091,229,1.017,230,1.091,231,0.982,232,1.017,233,1.091,234,1,235,1.091,236,0.901,237,1.091,238,1,239,1.652,240,1.091,241,1,242,1.091,243,1,244,1.091,245,0.965,246,1.091,247,1.017,248,0.949,249,1.017,250,1.035,251,1.091,252,1.017,253,1.091,254,1.091,255,1.017,256,1.091,257,1.017,258,1.091,259,1.017,260,1.091,261,0.949,262,1.091,263,1.799,264,1.017,265,1.091,266,1.017,267,1.035,268,1.091,269,1,270,1.035,271,1.87,272,1,273,1.035,274,0.826,275,1.035,276,1.017,277,1.017,278,1.017,279,1.035,280,1.035,281,1.091,282,1,283,1.017,284,1.091,285,1.017,286,1.053,287,1.017,288,1.091,289,1.017,290,1.091,291,1.017,292,1.091,293,1.017,294,1.091,295,1.017,296,1.091,297,1.017,298,0.949,299,0.982,300,1.091,301,1,302,1.091,303,1,304,1.091,305,1,306,1.091,307,1,308,1.091,309,1,310,1.053,311,1.091,312,1.652,313,1.053,314,0.965,315,1.091,316,0.004,317,0.004,336,2.533,421,3.574,424,2.815,431,2.4,453,4.057,682,2.174,839,4.057,884,3.959,905,1.412,930,1.87,935,2.515,1142,2.515,1143,3.005,1346,3.005,1353,2.615,1356,2.856,1407,6.055,1415,4.967,1417,4.846,1418,6.138,1419,4.846,1421,3.411,1423,3.411,1425,3.411,1426,2.426,2051,3.716,2052,3.716,2208,5.275,2223,3.713,2234,3.713,2235,3.713,2236,3.411,2237,5.275,3271,3.713,3272,4.171,3273,4.171,3274,4.171,3275,4.171]],["title/classes/Pagination.html",[146,0.109,2316,2.581]],["body/classes/Pagination.html",[2,0.327,3,0.175,7,1.107,8,0.158,10,0.371,23,1.542,24,0.007,25,1.274,32,0.333,33,0.534,38,0.88,39,1.466,40,2.407,43,2.029,44,0.719,45,2.691,55,0.726,60,0.254,64,0.704,66,1.128,71,1.191,72,1.6,74,1.102,75,1.655,76,1.216,77,2.087,84,2.851,86,1.185,87,0.779,88,0.838,113,0.847,121,2.749,142,0.814,145,0.113,146,0.152,162,3.06,227,1.258,316,0.003,317,0.003,336,2.181,341,1.599,344,4.126,349,2.571,353,0.661,360,1.311,383,2.049,398,3.199,422,1.562,424,3.653,441,3.493,443,2.691,449,1.247,451,2.559,472,4.623,475,4.575,488,5.044,492,2.233,511,1.74,516,2.911,517,4.126,534,4.17,577,2.346,580,2.55,583,2.233,591,3.849,594,2.824,597,1.976,599,2.294,678,2.911,682,1.872,749,3.897,832,1.562,837,2.131,872,3.676,936,1.793,1023,1.562,1024,4.541,1044,4.269,1045,2.407,1208,4.307,1211,6.693,1314,1.91,1438,6.061,1439,6.061,1440,5.568,1622,2.967,1628,2.131,1649,1.793,1778,2.595,1780,4.707,1781,2.449,2001,4.678,2273,4.172,2274,4.006,2316,4.905,2344,3.676,2377,5.453,2415,5.453,2436,5.568,2829,6.061,2892,4.541,2906,3.897,3039,2.967,3243,6.821,3276,3.025,3277,9.149,3278,8.176,3279,5.568,3280,6.808,3281,4.541,3282,4.541,3283,5.102,3284,6.808,3285,3.398,3286,5.102,3287,3.398,3288,3.398,3289,3.398,3290,4.172,3291,3.398,3292,3.398,3293,3.398,3294,5.102,3295,3.398,3296,3.398,3297,3.398,3298,3.398,3299,5.102,3300,3.398,3301,3.398,3302,3.398,3303,3.398,3304,5.102,3305,5.568,3306,3.398,3307,5.102,3308,3.398,3309,5.102,3310,6.125,3311,5.102,3312,3.398,3313,4.541,3314,5.102,3315,3.398,3316,2.595,3317,3.025,3318,3.025,3319,3.025,3320,3.025,3321,3.398,3322,3.398,3323,3.398,3324,3.398,3325,7.948,3326,3.398,3327,3.398,3328,8.763,3329,6.808,3330,7.297,3331,3.398,3332,3.398,3333,6.808,3334,5.102,3335,3.398,3336,3.398,3337,3.398,3338,3.398,3339,6.125,3340,3.398,3341,3.398]],["title/components/PaginationComponent.html",[0,0.171,264,1.193]],["body/components/PaginationComponent.html",[0,0.288,1,0.933,2,0.204,3,0.197,4,0.719,5,0.983,6,1.001,8,0.178,10,0.418,15,1.335,19,0.901,20,2.874,21,3.181,22,0.826,24,0.007,26,2.089,27,1.78,30,1.312,32,0.375,33,0.583,34,3.027,35,1.504,38,0.549,44,0.785,45,2.938,46,3.493,47,3.316,55,0.854,60,0.299,64,0.651,65,1.047,66,1.042,71,0.909,72,2.262,75,1.203,76,1.005,77,1.547,84,2.262,86,0.83,87,0.846,88,0.558,104,3.796,105,2.566,106,2.743,108,1.669,110,0.917,113,0.646,121,1.2,132,0.327,142,0.917,145,0.127,146,0.147,147,2.921,162,2.491,172,0.694,173,1.406,174,1.029,178,1.854,179,1.001,180,1.001,181,0.917,182,1.457,183,0.901,184,0.933,185,1.443,186,1.887,187,0.949,188,1.149,189,2.214,190,0.949,191,2.093,192,0.933,193,0.949,194,0.949,195,1.001,196,0.933,197,1.457,198,0.949,199,1.001,200,0.933,201,1.001,202,0.917,203,0.917,204,1.472,205,1.718,206,0.901,207,0.933,208,0.933,209,0.917,210,1.001,211,0.949,212,2.005,213,0.949,214,0.933,215,0.949,216,0.949,217,0.949,218,0.933,219,1.001,220,0.917,221,0.949,222,1.001,223,0.933,224,1.001,225,0.933,226,0.901,227,1.029,228,1.001,229,0.933,230,1.001,231,0.901,232,0.933,233,1.001,234,0.917,235,1.001,236,0.826,237,1.001,238,0.917,239,1.574,240,1.001,241,0.917,242,1.001,243,0.917,244,1.001,245,0.885,246,1.001,247,0.933,248,0.87,249,0.933,250,0.949,251,1.001,252,0.933,253,1.001,254,1.001,255,0.933,256,1.001,257,0.933,258,1.001,259,0.933,260,1.001,261,0.87,262,1.001,263,0.917,264,1.759,265,1.001,266,0.933,267,0.949,268,1.001,269,0.917,270,0.949,271,1.827,272,0.917,273,0.949,274,0.758,275,0.949,276,0.933,277,0.933,278,0.933,279,0.949,280,0.949,281,1.001,282,0.917,283,0.933,284,1.001,285,0.933,286,0.966,287,0.933,288,1.001,289,0.933,290,1.001,291,0.933,292,1.001,293,0.933,294,1.001,295,0.933,296,1.001,297,0.933,298,0.87,299,0.901,300,1.001,301,0.917,302,1.001,303,0.917,304,1.001,305,0.917,306,1.001,307,0.917,308,1.001,309,0.917,310,0.966,311,1.001,312,0.917,313,0.966,314,0.885,315,1.001,316,0.004,317,0.004,341,0.798,345,1.598,349,2.32,383,3.358,421,3.358,422,1.759,444,1.714,453,3.813,516,2.38,533,3.239,567,1.853,594,2.614,599,3.231,884,2.938,901,3.041,923,2.697,936,2.018,1208,2.772,1214,5.197,1780,3.03,2316,4.938,2317,4.496,2381,3.405,2499,5.898,2500,4.957,2537,3.405,3281,4.957,3342,3.405,3343,5.568,3344,7.212,3345,5.568,3346,3.825,3347,3.825,3348,5.568,3349,3.825,3350,3.825,3351,5.508,3352,3.825,3353,3.825,3354,3.825,3355,3.825,3356,5.568,3357,3.825,3358,5.568,3359,3.825,3360,4.957,3361,4.957,3362,3.825,3363,3.825,3364,5.568,3365,3.825,3366,3.825,3367,5.568,3368,5.568,3369,5.568,3370,5.568,3371,5.568,3372,5.568,3373,5.568,3374,5.568,3375,5.568,3376,5.568,3377,5.568,3378,5.568,3379,5.568,3380,5.568]],["title/classes/PaginationConfig.html",[146,0.109,2317,3.35]],["body/classes/PaginationConfig.html",[0,0.273,2,0.338,3,0.327,8,0.294,10,0.692,24,0.007,32,0.622,33,0.819,38,0.911,40,3.694,60,0.263,64,0.722,66,1.072,86,0.945,87,0.622,88,0.636,113,0.986,121,2.456,145,0.211,146,0.175,162,2.704,316,0.005,317,0.005,341,1.937,349,2.492,353,1.653,441,3.189,511,4.01,594,2.758,788,4.986,789,4.554,861,3.898,902,2.326,907,4.26,923,3.793,977,3.978,989,3.976,1106,4.554,1163,2.758,1198,4.146,1208,3.898,1211,5.98,1672,5.185,2316,4.13,2317,6.24,3282,6.969,3381,8.112,3382,8.871,3383,8.871,3384,8.459,3385,7.829,3386,6.341,3387,5.642,3388,6.341,3389,5.98,3390,7.829,3391,7.829,3392,7.829]],["title/components/PasswordResetComponent.html",[0,0.171,266,1.193]],["body/components/PasswordResetComponent.html",[0,0.267,1,0.932,2,0.204,3,0.197,4,0.718,5,0.982,6,0.999,7,1.244,8,0.177,10,0.417,15,1.333,19,0.9,22,0.825,24,0.007,25,1.052,26,2.088,27,1.779,30,1.31,32,0.375,33,0.582,35,1.503,38,0.549,39,1.465,41,1.181,44,0.784,55,0.854,60,0.298,64,0.689,65,1.233,66,1.059,71,0.623,72,1.745,76,0.48,77,0.9,86,0.569,87,0.829,88,0.658,105,1.493,106,2.324,108,1.288,110,0.915,112,2.025,113,0.762,132,0.326,142,0.915,145,0.127,146,0.085,165,2.769,172,0.693,173,1.405,174,1.027,175,1.346,176,1.346,177,1.596,178,1.853,179,0.999,180,0.999,181,0.915,182,1.455,183,0.9,184,0.932,185,1.442,186,1.886,187,0.948,188,1.148,189,2.213,190,0.948,191,2.092,192,0.932,193,0.948,194,0.948,195,0.999,196,0.932,197,1.455,198,0.948,199,0.999,200,0.932,201,0.999,202,0.915,203,0.915,204,1.472,205,1.716,206,0.9,207,0.932,208,0.932,209,0.915,210,0.999,211,0.948,212,2.004,213,0.948,214,0.932,215,0.948,216,0.948,217,0.948,218,0.932,219,0.999,220,0.915,221,0.948,222,0.999,223,0.932,224,0.999,225,0.932,226,0.9,227,1.027,228,0.999,229,0.932,230,0.999,231,0.9,232,0.932,233,0.999,234,0.915,235,0.999,236,1.201,237,0.999,238,0.915,239,1.572,240,0.999,241,0.915,242,0.999,243,0.915,244,0.999,245,0.884,246,0.999,247,0.932,248,0.869,249,0.932,250,0.948,251,0.999,252,0.932,253,0.999,254,0.999,255,0.932,256,0.999,257,0.932,258,0.999,259,0.932,260,0.999,261,0.869,262,0.999,263,0.915,264,0.932,265,0.999,266,1.758,267,2.099,268,0.999,269,0.915,270,0.948,271,1.827,272,0.915,273,0.948,274,0.756,275,0.948,276,0.932,277,0.932,278,0.932,279,0.948,280,0.948,281,0.999,282,0.915,283,0.932,284,0.999,285,0.932,286,0.965,287,0.932,288,0.999,289,0.932,290,0.999,291,0.932,292,0.999,293,0.932,294,0.999,295,0.932,296,0.999,297,0.932,298,0.869,299,0.9,300,0.999,301,0.915,302,0.999,303,0.915,304,0.999,305,0.915,306,0.999,307,0.915,308,0.999,309,0.915,310,0.965,311,0.999,312,0.915,313,0.965,314,0.884,315,0.999,316,0.004,317,0.004,326,3.149,339,2.174,341,1.369,353,0.743,397,3.275,415,1.672,418,2.615,431,2.1,434,4.549,435,4.114,444,2.02,445,2.348,467,2.498,494,3.454,516,2.378,554,3.814,578,4.347,580,2.084,581,2.078,586,3.615,587,3.772,601,4.249,608,3.4,619,4.753,621,4.62,632,3.124,634,7.26,686,5.101,888,3.461,901,1.884,905,1.884,907,2.078,954,2.753,983,3.355,1229,2.128,2016,4.009,2096,7.165,2718,4.65,2721,3.4,2744,3.124,2747,3.124,2773,5.894,2826,3.124,3185,3.124,3393,7.902,3394,3.4,3395,7.117,3396,5.563,3397,5.563,3398,5.563,3399,7.207,3400,5.563,3401,3.82,3402,5.563,3403,3.82,3404,3.82,3405,3.82,3406,5.563,3407,3.82,3408,3.82,3409,4.952,3410,4.952,3411,4.952,3412,3.82,3413,3.82,3414,3.82,3415,3.82,3416,3.4,3417,3.82,3418,3.82,3419,3.82,3420,3.82,3421,3.82,3422,3.82,3423,3.82,3424,3.82,3425,3.82,3426,5.563]],["title/components/PopComponent.html",[0,0.171,269,1.173]],["body/components/PopComponent.html",[0,0.255,1,0.833,2,0.182,3,0.176,4,0.642,5,1.58,6,0.894,7,1.113,8,0.159,10,0.373,19,0.805,20,1.496,22,0.738,24,0.007,25,1.406,26,2.08,27,1.775,30,1.207,32,0.335,33,0.536,34,1.769,35,1.497,38,0.736,39,1.678,44,0.866,55,0.866,56,2.092,60,0.212,64,0.695,65,0.963,66,1.072,71,0.558,74,1.769,75,1.106,76,0.919,77,1.448,86,1.018,87,0.849,88,0.684,102,3.307,104,4.034,108,1.975,110,0.819,113,0.849,132,0.292,145,0.114,146,0.115,165,3.399,172,0.62,173,1.294,174,0.946,175,1.204,176,1.204,177,1.427,178,1.755,179,0.894,180,0.894,181,0.819,182,1.34,183,0.805,184,0.833,185,1.351,186,1.786,187,0.848,188,1.103,189,2.143,190,0.848,191,2.009,192,0.833,193,0.848,194,0.848,195,0.894,196,0.833,197,1.34,198,0.848,199,0.894,200,0.833,201,0.894,202,0.819,203,0.819,204,1.42,205,1.608,206,0.805,207,0.833,208,0.833,209,0.819,210,0.894,211,0.848,212,1.914,213,0.848,214,0.833,215,0.848,216,0.848,217,0.848,218,0.833,219,0.894,220,0.819,221,0.848,222,0.894,223,0.833,224,0.894,225,0.833,226,0.805,227,0.946,228,0.894,229,0.833,230,0.894,231,0.805,232,0.833,233,0.894,234,0.819,235,0.894,236,0.738,237,0.894,238,0.819,239,1.473,240,0.894,241,0.819,242,0.894,243,0.819,244,0.894,245,0.791,246,0.894,247,0.833,248,0.777,249,0.833,250,0.848,251,0.894,252,0.833,253,0.894,254,0.894,255,0.833,256,0.894,257,0.833,258,0.894,259,0.833,260,0.894,261,0.777,262,0.894,263,0.819,264,0.833,265,0.894,266,0.833,267,0.848,268,0.894,269,1.636,270,0.848,271,1.769,272,0.819,273,0.848,274,0.677,275,0.848,276,0.833,277,0.833,278,0.833,279,0.848,280,0.848,281,0.894,282,0.819,283,0.833,284,0.894,285,0.833,286,0.863,287,0.833,288,0.894,289,0.833,290,0.894,291,0.833,292,0.894,293,0.833,294,0.894,295,0.833,296,0.894,297,0.833,298,0.777,299,0.805,300,0.894,301,0.819,302,0.894,303,0.819,304,0.894,305,0.819,306,0.894,307,0.819,308,0.894,309,0.819,310,0.863,311,0.894,312,0.819,313,0.863,314,1.423,315,0.894,316,0.004,317,0.004,335,2.002,341,1.526,342,3.837,353,0.665,354,3.454,360,2.105,422,1.571,431,1.989,438,2.61,444,2.364,445,2.225,451,2.14,488,2.061,517,1.655,577,4.258,594,0.978,780,2.624,783,4.178,911,1.228,912,3.242,917,2.98,923,2.482,929,4.495,935,2.061,962,3.913,977,3.979,1013,1.427,1035,1.921,1054,2.879,1208,2.551,1229,3.313,1366,2.462,1368,4.208,1380,2.143,1383,2.879,1388,3.042,1393,6.511,1512,3.913,1516,4.92,1517,3.692,1518,4.92,1519,4.92,1521,4.466,1526,3.508,1528,3.09,1533,4.675,1534,3.35,1536,2.462,1538,3.35,1543,4.92,1544,3.692,1546,3.09,1547,3.692,1548,3.692,1550,3.692,1557,3.212,1611,2.795,1613,3.042,1643,1.921,1649,1.803,1827,2.795,2009,2.462,2015,1.533,2049,3.575,2051,3.212,2052,3.212,2133,2.795,2163,4.19,2302,2.462,2374,3.042,2578,1.987,2784,2.462,2808,3.042,2968,2.235,2983,2.795,2985,2.462,2992,3.042,3149,1.921,3409,3.042,3427,3.042,3428,4.56,3429,5.123,3430,5.123,3431,5.123,3432,3.417,3433,3.417,3434,3.417,3435,3.417,3436,3.417,3437,3.417,3438,3.417,3439,3.417,3440,3.417,3441,3.417,3442,3.417,3443,3.417,3444,3.417,3445,3.417,3446,3.417,3447,3.042,3448,3.417,3449,3.417,3450,3.417,3451,3.417,3452,5.123,3453,6.146,3454,3.417,3455,3.417,3456,3.417,3457,3.417,3458,3.417,3459,3.417,3460,3.417,3461,3.417,3462,3.417,3463,3.417]],["title/modules/PopModule.html",[318,1.094,1850,3.2]],["body/modules/PopModule.html",[2,0.354,3,0.342,8,0.308,23,2.617,24,0.007,58,2.288,60,0.397,132,0.566,141,3.244,145,0.3,146,0.148,172,1.203,257,2.387,269,2.346,316,0.006,317,0.006,318,1.798,320,2.706,325,3.36,326,2.382,327,2.201,330,3.143,623,3.794,624,3.047,947,4.333,1521,5.456,1850,6.441,1851,5.658,1866,4.775,3447,5.898,3464,5.898,3465,5.898,3466,6.626,3467,5.898,3468,5.898,3469,6.626,3470,6.626]],["title/injectables/PopService.html",[433,1.236,1521,2.846]],["body/injectables/PopService.html",[2,0.337,3,0.326,8,0.293,10,0.69,24,0.007,32,0.62,33,0.818,38,1.273,60,0.351,64,0.636,66,1.025,71,1.275,113,1.029,121,2.451,132,0.54,142,1.514,145,0.21,146,0.141,162,2.182,269,1.514,316,0.005,317,0.005,345,2.639,353,1.651,393,4.002,433,2.142,441,2.808,444,2.611,772,4.893,780,4.002,803,5.349,868,3.686,929,4.59,947,4.132,977,3.504,1009,5.213,1032,4.391,1521,4.544,1538,5.794,2009,5.63,2563,6.943,3471,5.625,3472,9.104,3473,7.813,3474,8.86,3475,8.86,3476,7.813,3477,6.319,3478,6.319,3479,6.319,3480,6.319,3481,6.319,3482,6.319,3483,6.319,3484,6.319,3485,6.319,3486,6.319]],["title/injectables/ResourceConfig.html",[433,1.236,486,2.662]],["body/injectables/ResourceConfig.html",[2,0.123,3,0.119,4,0.706,8,0.255,10,0.41,24,0.007,25,1.552,27,0.41,32,0.226,34,0.794,35,0.706,38,1.27,39,0.911,41,1.934,42,2.891,44,0.775,55,0.445,60,0.269,64,0.634,65,1.771,66,0.919,70,3.18,71,0.375,74,0.497,75,0.811,76,1.193,86,0.903,87,0.825,88,0.607,94,2.048,103,1.378,112,2.39,113,0.638,114,1.252,118,2.135,130,1.252,132,0.197,145,0.077,146,0.051,183,1.121,185,1.428,188,1.313,193,0.932,204,0.67,226,1.121,271,1.481,274,1.088,316,0.003,317,0.003,339,3.16,341,1.687,349,2.433,350,3.742,351,4.398,353,0.448,360,2.447,391,1.658,394,1.924,399,3.762,400,1.881,413,1.338,428,5.153,433,1.202,441,0.827,460,5.505,486,2.044,490,4.146,496,2.195,516,0.983,521,1.442,552,2.985,555,3.314,567,1.114,578,1.387,579,1.338,598,0.779,599,0.862,647,1.658,650,2.869,672,5.153,678,1.581,686,3.314,701,5.094,702,1.178,703,4.134,715,4.197,737,3.196,738,4.074,770,1.387,832,2.527,844,1.214,861,1.145,862,1.338,868,1.085,873,1.252,875,2.044,901,2.051,902,2.515,904,4.312,936,1.214,948,1.387,1044,1.442,1065,6.289,1088,2.185,1131,3.314,1149,1.575,1161,2.769,1163,3.025,1190,2.707,1221,1.757,1222,4.687,1533,1.575,1573,1.575,1592,2.869,1593,1.757,1597,6.13,1653,2.869,1667,2.707,1693,1.757,1720,1.658,1721,3.43,1734,2.707,1735,1.757,1736,1.575,1758,1.658,2093,3.893,2116,4.237,2191,5.811,2292,6.884,2294,5.784,2428,2.111,2432,1.658,2439,2.048,2445,2.048,2575,1.504,3073,2.048,3086,1.658,3092,4.237,3095,3.344,3096,3.344,3122,5.314,3123,1.881,3124,2.048,3125,5.461,3175,2.456,3487,5.094,3488,5.495,3489,7.398,3490,3.756,3491,3.756,3492,7.15,3493,2.3,3494,2.3,3495,6.498,3496,3.756,3497,3.756,3498,2.3,3499,2.3,3500,3.756,3501,2.3,3502,2.3,3503,3.756,3504,2.3,3505,3.756,3506,2.3,3507,2.048,3508,2.3,3509,2.3,3510,1.658,3511,1.757,3512,3.756,3513,2.3,3514,2.3,3515,2.3,3516,2.048,3517,2.3,3518,2.3,3519,2.3,3520,3.756,3521,2.3,3522,2.3,3523,2.3,3524,8.319,3525,4.76,3526,2.3,3527,2.3,3528,4.76,3529,2.3,3530,3.756,3531,5.495,3532,2.3,3533,2.3,3534,2.3,3535,2.3,3536,1.881,3537,2.3,3538,8.319,3539,8.319,3540,2.3,3541,2.3,3542,2.3,3543,2.3,3544,2.3,3545,2.3,3546,2.3,3547,2.3,3548,2.3,3549,2.3,3550,2.3,3551,5.495,3552,2.3,3553,2.3,3554,1.881,3555,4.76,3556,3.756,3557,3.756,3558,2.3,3559,3.756,3560,3.756,3561,2.3,3562,2.3,3563,2.3,3564,2.3,3565,2.3,3566,2.3,3567,2.3,3568,2.3,3569,2.3,3570,2.3,3571,2.3,3572,2.3,3573,2.048,3574,2.3,3575,2.3,3576,2.3,3577,2.3,3578,2.3,3579,1.757,3580,2.3,3581,2.3,3582,2.3,3583,2.3,3584,2.3,3585,2.3,3586,2.3,3587,2.3,3588,2.3,3589,2.3,3590,2.3,3591,2.3,3592,4.76,3593,5.495,3594,3.756,3595,4.76,3596,3.756,3597,3.756,3598,2.3,3599,2.3,3600,2.3,3601,2.3,3602,2.3,3603,2.3,3604,2.3,3605,2.3,3606,2.3,3607,2.3,3608,2.3,3609,2.3,3610,2.3,3611,2.3,3612,2.3,3613,3.756,3614,2.3,3615,2.3,3616,2.3,3617,2.3,3618,2.048,3619,2.3,3620,2.3,3621,2.3,3622,2.3,3623,2.3,3624,2.3,3625,2.3,3626,2.3,3627,2.3,3628,2.3,3629,2.3,3630,2.3,3631,2.3,3632,2.3,3633,2.3,3634,3.756,3635,2.3,3636,2.3,3637,2.048,3638,2.3,3639,2.3,3640,2.3,3641,2.3,3642,2.3,3643,3.756,3644,2.3,3645,3.756,3646,2.3,3647,3.756,3648,2.3,3649,2.3,3650,2.3,3651,2.3,3652,2.3]],["title/components/ResourceCrudComponent.html",[0,0.171,272,1.173]],["body/components/ResourceCrudComponent.html",[0,0.246,1,0.766,2,0.167,3,0.162,4,1.325,5,0.807,6,0.821,8,0.146,10,0.343,15,1.152,19,0.739,20,2.555,22,0.678,24,0.007,25,0.77,26,2.073,27,1.764,30,1.132,32,0.308,33,0.503,35,1.5,38,0.451,39,1.564,43,1.192,44,1.214,47,3.007,55,0.775,60,0.368,64,0.717,65,1.325,66,1.099,70,2.868,71,0.952,75,1.412,76,1.067,77,1.54,84,1.507,86,0.87,87,0.864,88,0.8,105,2.754,106,2.731,108,1.514,110,0.752,113,0.818,132,0.268,135,1.444,145,0.104,146,0.07,162,1.084,172,0.57,173,1.474,174,0.887,178,1.681,179,0.821,180,0.821,181,0.752,182,1.257,183,0.739,184,0.766,185,1.283,186,1.711,187,0.779,188,1.32,189,2.087,190,0.779,191,1.945,192,0.766,193,0.779,194,0.779,195,0.821,196,0.766,197,1.257,198,0.779,199,0.821,200,0.766,201,0.821,202,0.752,203,0.752,204,1.38,205,1.527,206,0.739,207,0.766,208,0.766,209,0.752,210,0.821,211,0.779,212,1.844,213,0.779,214,0.766,215,0.779,216,0.779,217,0.779,218,0.766,219,0.821,220,0.752,221,0.779,222,0.821,223,0.766,224,0.821,225,0.766,226,0.739,227,1.668,228,0.821,229,0.766,230,0.821,231,0.739,232,0.766,233,0.821,234,0.752,235,0.821,236,1.522,237,0.821,238,0.752,239,1.399,240,0.821,241,0.752,242,0.821,243,0.752,244,0.821,245,0.727,246,0.821,247,0.766,248,0.714,249,0.766,250,0.779,251,0.821,252,0.766,253,0.821,254,0.821,255,0.766,256,0.821,257,0.766,258,0.821,259,0.766,260,0.821,261,0.714,262,0.821,263,0.752,264,0.766,265,0.821,266,0.766,267,0.779,268,0.821,269,0.752,270,0.779,271,2.004,272,1.781,273,0.779,274,0.622,275,0.779,276,1.887,277,0.766,278,1.719,279,0.779,280,0.779,281,0.821,282,0.752,283,0.766,284,0.821,285,0.766,286,0.793,287,0.766,288,0.821,289,0.766,290,0.821,291,0.766,292,0.821,293,0.766,294,0.821,295,0.766,296,0.821,297,0.766,298,0.714,299,0.739,300,0.821,301,0.752,302,0.821,303,0.752,304,0.821,305,0.752,306,0.821,307,0.752,308,0.821,309,0.752,310,0.793,311,0.821,312,0.752,313,0.793,314,0.727,315,0.821,316,0.003,317,0.003,327,1.596,340,2.007,341,0.655,349,1.64,353,0.611,397,3.411,405,2.438,406,1.708,407,2.555,410,1.481,424,1.962,431,2.324,444,1.797,445,2.719,449,1.763,487,3.921,493,4.277,494,3.035,496,2.815,498,6.273,499,4.277,500,1.919,501,4.277,502,2.906,513,2.7,514,4.277,517,2.327,541,5.677,543,1.969,544,1.764,567,1.521,587,3.085,590,1.826,595,1.826,596,2.567,598,1.063,599,2.186,619,3.675,621,3.52,678,2.172,700,2.053,872,2.262,883,3.462,884,2.535,885,3.929,886,3.462,888,3.079,890,2.461,891,4.277,893,5.631,894,4.277,898,4.25,899,4.348,900,3.28,904,4.25,905,1.627,906,4.277,907,2.614,911,2.351,912,2.535,915,4.277,917,2.794,929,3.764,930,2.933,936,1.656,940,2.567,941,2.567,942,2.795,943,2.795,944,2.795,945,2.795,947,2.053,954,2.262,960,5.196,961,2.795,963,2.795,984,2.15,985,2.15,987,4.277,1009,2.7,1012,4.276,1540,3.67,2295,3.929,3039,2.794,3086,2.262,3157,2.15,3487,5.98,3653,7.478,3654,2.795,3655,6.539,3656,5.837,3657,4.805,3658,3.139,3659,3.139,3660,3.139,3661,3.139,3662,3.139,3663,6.539,3664,3.139,3665,3.139,3666,3.139,3667,3.139,3668,3.139,3669,3.139,3670,3.139,3671,3.139,3672,3.139,3673,3.139,3674,3.139,3675,2.398,3676,3.139,3677,3.139,3678,3.139,3679,2.567,3680,3.139,3681,3.139,3682,3.139,3683,3.139,3684,3.139,3685,3.139,3686,3.139,3687,3.139]],["title/classes/ResourceForm.html",[146,0.109,3511,3.737]],["body/classes/ResourceForm.html",[2,0.275,3,0.266,8,0.239,10,0.562,18,2.567,24,0.007,25,1.099,32,0.505,33,0.939,38,1.288,39,1.819,41,1.958,43,1.279,44,0.966,53,4.939,60,0.354,64,0.759,65,1.765,66,1.143,70,2.464,71,1.257,72,1.616,74,1.48,75,1.846,76,1.18,86,1.274,87,0.88,88,0.857,112,2.733,116,2.679,121,2.15,123,4.345,145,0.171,146,0.153,271,1.937,316,0.005,317,0.005,335,2.014,341,1.43,345,2.153,349,2.591,353,1.003,383,3.108,397,3.894,405,2.863,418,3.528,456,4.214,496,3.638,502,4.535,511,3.511,678,1.711,682,2.826,700,3.37,786,5.882,861,2.565,980,2.997,1021,4.331,1047,5.314,1057,3.231,1078,3.528,1106,3.986,1353,3.231,1591,3.852,1643,4.329,1644,3.986,1669,3.108,1833,6.333,1835,4.214,1836,2.997,2173,4.214,2430,4.587,2575,4.482,3487,5.747,3510,3.713,3511,5.235,3679,4.214,3688,7.187,3689,4.587,3690,6.854,3691,6.854,3692,6.854,3693,7.702,3694,7.702,3695,6.854,3696,5.153,3697,5.605,3698,5.153,3699,5.153,3700,5.153,3701,5.153,3702,5.153,3703,6.854,3704,5.153,3705,6.854,3706,5.153,3707,5.153,3708,5.153,3709,5.153,3710,5.153,3711,5.153,3712,5.153,3713,5.153,3714,5.153,3715,5.153,3716,5.153,3717,5.153]],["title/components/ResourceListPopComponent.html",[0,0.171,277,1.193]],["body/components/ResourceListPopComponent.html",[0,0.249,1,0.786,2,0.172,3,0.166,4,0.606,5,1.26,6,0.843,8,0.15,15,1.175,18,1.836,19,0.759,21,2.873,22,0.696,24,0.007,25,1.251,26,2.075,27,1.768,30,1.155,32,0.316,33,0.513,34,1.113,35,1.512,38,0.852,39,1.735,43,1.217,44,0.691,46,3.211,55,0.703,60,0.333,61,2.586,62,2.667,64,0.755,65,1.115,66,1.144,71,0.8,74,1.622,75,0.696,76,0.944,77,1.68,86,1.063,87,0.849,88,0.715,102,2.375,104,4.198,105,1.26,106,2.048,108,1.738,110,0.772,113,0.828,123,4.196,132,0.275,135,1.482,145,0.107,146,0.174,165,2.44,172,0.585,173,1.238,174,0.905,178,1.704,179,0.843,180,0.843,181,0.772,182,1.282,183,0.759,184,0.786,185,1.304,186,1.734,187,0.8,188,1.397,189,2.105,190,0.8,191,1.965,192,0.786,193,0.8,194,0.8,195,0.843,196,0.786,197,1.282,198,0.8,199,0.843,200,0.786,201,0.843,202,0.772,203,0.772,204,1.392,205,1.552,206,0.759,207,0.786,208,0.786,209,0.772,210,0.843,211,0.8,212,1.866,213,0.8,214,0.786,215,0.8,216,0.8,217,0.8,218,0.786,219,0.843,220,0.772,221,0.8,222,0.843,223,0.786,224,0.843,225,0.786,226,0.759,227,1.6,228,0.843,229,0.786,230,0.843,231,0.759,232,0.786,233,0.843,234,0.772,235,0.843,236,0.696,237,0.843,238,0.772,239,1.422,240,0.843,241,0.772,242,0.843,243,0.772,244,0.843,245,0.746,246,0.843,247,0.786,248,0.733,249,0.786,250,0.8,251,0.843,252,0.786,253,0.843,254,0.843,255,0.786,256,0.843,257,0.786,258,0.843,259,0.786,260,0.843,261,0.733,262,0.843,263,0.772,264,0.786,265,0.843,266,0.786,267,0.8,268,0.843,269,2.159,270,0.8,271,1.913,272,0.772,273,0.8,274,0.638,275,0.8,276,0.786,277,1.617,278,0.786,279,0.8,280,1.77,281,0.843,282,0.772,283,0.786,284,0.843,285,0.786,286,0.814,287,0.786,288,0.843,289,0.786,290,0.843,291,0.786,292,0.843,293,0.786,294,0.843,295,0.786,296,0.843,297,0.786,298,0.733,299,0.759,300,0.843,301,0.772,302,0.843,303,0.772,304,0.843,305,0.772,306,0.843,307,0.772,308,0.843,309,0.772,310,0.814,311,0.843,312,0.772,313,0.814,314,1.534,315,0.843,316,0.003,317,0.003,335,1.26,341,1.023,342,4.221,344,2.873,345,1.346,349,1.667,353,0.954,354,4.388,360,1.525,373,1.944,383,4.301,397,2.536,431,2.077,444,2.312,445,2.621,451,2.048,486,4.648,488,1.944,496,2.369,502,2.953,534,2.667,577,3.864,667,2.869,700,2.108,701,2.108,702,1.651,780,1.651,783,4.086,873,2.667,898,4.301,911,1.762,912,1.7,917,1.874,929,4.03,977,3.501,984,2.207,985,2.207,1054,1.811,1208,1.605,1229,2.728,1366,4.275,1368,3.356,1380,2.021,1383,1.811,1511,2.462,1512,3.744,1513,5.9,1515,4.538,1516,4.275,1517,3.532,1518,3.532,1519,4.275,1521,4.54,1522,2.869,1523,2.869,1525,2.869,1526,2.207,1527,2.462,1528,1.944,1529,2.462,1530,2.462,1531,2.869,1532,2.462,1533,3.356,1534,3.879,1535,2.636,1536,2.323,1537,2.462,1538,2.108,1540,3.744,1542,2.462,1543,3.532,1544,2.323,1545,2.462,1546,1.944,1547,2.323,1548,2.323,1549,2.462,1550,2.323,1551,2.462,1552,2.869,1554,4.009,1555,2.636,1556,2.462,1557,2.021,1558,2.462,1559,2.462,1560,2.462,1561,2.869,1562,2.869,1563,2.636,1564,2.462,1567,2.636,1568,2.636,1569,2.462,1570,2.869,2140,2.869,2143,2.869,3487,5.89,3510,2.323,3675,6.88,3679,2.636,3718,5.28,3719,3.223,3720,3.223,3721,3.223,3722,3.223,3723,3.223]],["title/modules/ResourceModule.html",[318,1.094,1127,3.35]],["body/modules/ResourceModule.html",[2,0.281,3,0.272,8,0.245,23,2.353,24,0.007,58,1.819,60,0.403,132,0.45,134,2.104,135,2.422,141,2.916,145,0.275,146,0.118,172,0.956,175,1.856,188,0.999,270,2.354,271,2.019,272,2.274,273,2.354,274,1.377,275,2.354,276,2.338,277,2.314,278,2.314,279,2.354,316,0.005,317,0.005,318,1.555,320,2.151,325,2.905,326,1.894,327,1.75,329,3.909,330,2.718,486,4.811,543,3.303,544,2.961,618,5.722,623,3.281,624,2.422,701,3.445,702,2.698,938,3.445,947,5.092,1047,4.97,1078,3.607,1127,6.836,1128,6.204,1133,5.012,1145,4.023,1152,4.308,1808,4.023,1809,3.796,3653,4.308,3675,5.947,3688,4.308,3724,4.689,3725,4.689,3726,5.268,3727,4.689,3728,4.689,3729,5.268,3730,5.268,3731,4.689,3732,4.689,3733,5.268]],["title/injectables/ResourceService.html",[433,1.236,1047,2.75]],["body/injectables/ResourceService.html",[0,0.182,2,0.187,3,0.181,8,0.163,10,0.382,24,0.007,25,1.396,32,0.343,33,0.84,38,1.381,39,1.482,41,1.107,43,1.834,44,0.735,55,0.875,56,1.43,60,0.355,64,0.744,65,1.717,66,1.052,70,3.131,71,1.31,72,1.098,75,2.016,76,1.203,79,2.195,84,2.952,86,1.256,87,0.827,88,0.845,112,0.984,113,0.606,114,1.905,116,3.028,126,2.039,132,0.299,142,1.494,145,0.173,146,0.078,162,1.209,188,0.896,204,1.232,271,2.103,274,1.7,316,0.004,317,0.006,332,0.966,333,2.838,337,1.61,341,1.442,345,1.462,349,2.177,351,2.672,353,0.681,360,1.776,397,3.431,398,3.91,405,2.886,406,1.905,407,2.7,410,1.651,433,1.866,443,4.088,444,1.606,445,1.141,451,1.462,486,4.216,490,4.16,492,4.209,496,3.593,502,3.996,521,3.271,533,3.626,534,4.021,543,2.195,546,2.523,582,3.271,591,4.088,597,2.036,598,1.185,622,2.283,644,2.289,682,3.351,700,2.289,702,1.793,723,3.761,737,3.034,738,3.271,780,2.672,814,1.967,837,2.195,844,3.645,868,3.486,890,2.672,911,2.885,920,2.523,1013,2.179,1021,3.899,1025,2.397,1026,2.195,1040,2.036,1042,3.271,1043,3.759,1044,3.271,1045,2.461,1046,3.572,1047,2.932,1048,4.643,1049,4.643,1050,4.643,1052,4.266,1054,2.932,1055,4.266,1057,3.271,1063,4.266,1065,3.759,1066,3.91,1069,3.146,1077,2.863,1088,3.034,1099,5.099,1100,2.863,1101,2.863,1102,2.863,1105,4.266,1106,2.036,1110,2.863,1111,2.863,1112,2.863,1113,2.863,1114,6.043,1115,2.111,1116,2.863,1492,2.863,1528,2.111,1615,2.674,1692,2.195,1706,3.984,3040,2.863,3487,5.767,3510,2.523,3697,4.266,3734,2.863,3735,5.216,3736,3.501,3737,6.151,3738,6.151,3739,3.501,3740,4.643,3741,3.501,3742,4.643,3743,3.501,3744,3.501,3745,4.643,3746,3.501,3747,3.984,3748,4.643,3749,3.501,3750,4.643,3751,4.643,3752,3.501,3753,3.501,3754,2.863,3755,3.116,3756,2.863,3757,4.643,3758,3.116,3759,6.151,3760,3.116,3761,3.116,3762,3.116,3763,3.116,3764,3.116,3765,3.116,3766,3.116,3767,3.116,3768,3.116,3769,3.116,3770,3.116,3771,3.116,3772,3.116,3773,3.116,3774,3.116,3775,5.55,3776,3.116,3777,4.643,3778,3.116,3779,3.116,3780,3.116,3781,3.116]],["title/interfaces/SdkField.html",[332,1.35,3087,3.737]],["body/interfaces/SdkField.html",[2,0.457,3,0.297,8,0.267,10,1.005,15,1.766,24,0.007,25,1.452,32,0.565,33,0.771,38,1.339,41,2.101,55,0.873,58,2.545,64,0.802,65,1.829,70,3.08,76,0.926,84,2.312,88,0.739,113,1.052,145,0.191,204,1.528,316,0.005,317,0.005,332,2.034,336,2.461,339,3.54,341,2.029,349,2.588,394,4.64,500,2.3,554,3.669,555,5.167,654,3.133,682,2.982,796,6.386,1032,4.141,1045,3.476,1066,5.372,1088,4.286,1598,4.64,1607,4.62,1628,4.62,3037,3.942,3054,5.125,3066,5.125,3087,5.628,3109,7.626,3110,7.626,3157,5.045,3782,5.125,3783,5.125,3784,5.758,3785,7.369,3786,7.369]],["title/modules/SdkModule.html",[318,1.094,1128,3.2]],["body/modules/SdkModule.html",[2,0.381,3,0.368,8,0.332,23,2.702,24,0.007,58,2.465,60,0.382,132,0.61,141,3.15,145,0.297,146,0.16,172,1.296,175,2.515,316,0.006,317,0.006,318,1.88,320,2.915,325,3.513,326,2.566,327,2.371,329,4.012,330,3.287,407,3.729,1128,6.24,1808,5.452,1809,5.144,3787,6.354,3788,6.354,3789,7.138,3790,7.138]],["title/injectables/SdkService.html",[407,1.912,433,1.236]],["body/injectables/SdkService.html",[2,0.323,3,0.172,8,0.155,10,0.364,23,2.299,24,0.007,25,1.266,32,0.327,33,0.526,34,1.737,37,5.209,38,1.168,39,1.835,44,0.951,45,4.78,55,1.034,60,0.344,64,0.726,65,1.36,66,1.12,70,1.808,71,1.327,72,2.842,73,3.443,74,1.831,75,1.456,76,1.18,77,1.184,84,1.577,86,1.177,87,0.774,88,0.901,103,2.655,105,1.303,113,0.984,116,3.366,118,2.255,119,1.874,121,2.796,132,0.285,145,0.111,146,0.075,154,3.841,169,2.726,185,1.105,316,0.003,317,0.003,337,2.784,341,1.263,353,0.649,360,1.956,375,5.097,396,2.726,397,4.1,399,6.044,405,2.101,407,2.635,414,2.726,421,3.033,433,1.828,435,5.216,449,2.897,453,3.443,467,2.18,475,4.228,496,2.693,500,2.693,502,3.357,511,3.454,578,5.017,580,1.884,591,4.014,597,1.939,599,2.268,621,3.033,642,3.841,643,3.624,644,6.245,645,4.112,646,3.624,647,5.215,648,4.476,649,4.112,650,5.15,651,3.841,652,3.624,653,5.515,654,2.736,655,4.112,656,4.476,657,4.476,659,4.476,662,2.967,669,4.476,673,3.033,674,4.476,682,1.845,700,2.18,703,2.01,709,6.003,721,2.967,723,2.01,752,2.282,770,5.376,772,2.653,844,1.759,862,2.925,866,4.112,911,1.808,924,2.653,1214,3.624,1383,2.826,1669,4.067,2028,2.967,2096,4.952,2194,3.153,2560,4.112,2738,5.515,2739,2.726,2741,2.726,3041,5.15,3083,4.476,3125,3.841,3507,2.967,3573,4.476,3791,2.967,3792,5.029,3793,5.029,3794,5.029,3795,5.029,3796,6.743,3797,6.743,3798,6.743,3799,8.477,3800,5.029,3801,5.029,3802,6.055,3803,3.333,3804,5.029,3805,3.333,3806,6.055,3807,5.029,3808,3.333,3809,5.029,3810,8.129,3811,5.029,3812,3.333,3813,7.608,3814,5.029,3815,3.333,3816,5.029,3817,3.333,3818,4.476,3819,3.333,3820,3.333,3821,3.333,3822,3.333,3823,6.055,3824,3.333,3825,3.333,3826,5.029,3827,3.333,3828,3.333,3829,3.333,3830,3.333,3831,3.333,3832,3.333,3833,3.333,3834,3.333,3835,3.333,3836,3.333,3837,3.333,3838,3.333,3839,6.055,3840,3.333,3841,3.333,3842,5.029,3843,3.333,3844,3.333,3845,3.333,3846,6.055,3847,2.967,3848,3.333,3849,3.333,3850,3.333,3851,3.333,3852,3.333,3853,5.029,3854,3.333,3855,3.333,3856,3.333,3857,3.333,3858,3.333,3859,5.029,3860,3.333,3861,3.333,3862,3.333,3863,3.333,3864,3.333,3865,3.333,3866,6.743,3867,3.333,3868,5.029,3869,3.333,3870,3.333,3871,3.333,3872,3.333,3873,3.333]],["title/modules/SelectModule.html",[318,1.094,3874,3.526]],["body/modules/SelectModule.html",[2,0.33,3,0.319,8,0.287,23,2.329,24,0.007,25,1.45,58,2.135,60,0.395,132,0.528,141,3.146,145,0.292,146,0.138,172,1.122,181,2.325,282,2.343,316,0.005,317,0.005,318,1.723,320,2.525,325,3.22,326,2.222,327,2.053,330,3.012,623,3.636,624,2.843,629,4.455,1135,7.476,1136,4.233,1137,4.043,1145,4.722,1852,6.032,1865,5.056,2542,6.643,3874,7.065,3875,5.503,3876,5.503,3877,6.182,3878,6.182,3879,5.503,3880,6.182,3881,5.503,3882,6.182]],["title/components/SignupComponent.html",[0,0.171,283,1.193]],["body/components/SignupComponent.html",[0,0.261,1,0.878,2,0.192,3,0.186,4,0.677,5,0.925,6,0.942,7,1.173,8,0.167,10,0.393,15,1.277,18,1.995,19,0.848,22,0.778,24,0.007,25,0.577,26,2.084,27,1.775,30,1.254,32,0.353,33,0.557,35,1.471,38,0.91,39,1.497,41,1.131,44,0.751,55,0.959,60,0.335,64,0.714,66,1.101,71,0.587,72,1.989,74,1.15,76,0.669,77,1.254,86,0.794,87,0.833,88,0.749,93,4.145,105,2.081,106,2.648,108,1.233,110,0.863,112,1.496,113,0.965,123,4.114,126,2.477,132,0.308,142,0.863,145,0.12,146,0.08,172,0.653,173,1.345,174,0.984,175,1.268,176,1.268,177,1.504,178,1.801,179,0.942,180,0.942,181,0.863,182,1.393,183,0.848,184,0.878,185,1.393,186,1.833,187,0.893,188,1.124,189,2.176,190,0.893,191,2.048,192,0.878,193,0.893,194,0.893,195,0.942,196,0.878,197,1.393,198,0.893,199,0.942,200,0.878,201,0.942,202,0.863,203,0.863,204,1.445,205,1.659,206,0.848,207,0.878,208,0.878,209,0.863,210,0.942,211,0.893,212,1.956,213,0.893,214,0.878,215,0.893,216,0.893,217,0.893,218,0.878,219,0.942,220,0.863,221,0.893,222,0.942,223,0.878,224,0.942,225,0.878,226,0.848,227,0.984,228,0.942,229,0.878,230,0.942,231,0.848,232,0.878,233,0.942,234,0.863,235,0.942,236,1.15,237,0.942,238,0.863,239,1.519,240,0.942,241,0.863,242,0.942,243,0.863,244,0.942,245,2.074,246,0.942,247,1.546,248,1.966,249,0.878,250,0.893,251,0.942,252,0.878,253,0.942,254,0.942,255,0.878,256,0.942,257,0.878,258,0.942,259,0.878,260,0.942,261,0.819,262,0.942,263,0.863,264,0.878,265,0.942,266,0.878,267,1.573,268,0.942,269,0.863,270,0.893,271,1.796,272,0.863,273,0.893,274,0.713,275,0.893,276,0.878,277,0.878,278,0.878,279,0.893,280,0.893,281,0.942,282,0.863,283,1.709,284,0.942,285,0.878,286,2.046,287,0.878,288,0.942,289,0.878,290,0.942,291,0.878,292,0.942,293,0.878,294,0.942,295,0.878,296,0.942,297,0.878,298,0.819,299,0.848,300,0.942,301,0.863,302,0.942,303,0.863,304,0.942,305,0.863,306,0.942,307,0.863,308,0.942,309,0.863,310,0.909,311,0.942,312,0.863,313,0.909,314,0.833,315,0.942,316,0.004,317,0.004,339,2.081,397,3.196,418,2.465,431,2.041,435,5.079,444,1.952,445,2.551,467,2.354,494,3.66,517,3.792,580,3.181,583,2.331,584,4.568,586,4.021,587,2.513,591,4.481,593,3.975,594,1.814,619,4.553,621,3.823,633,3.205,686,3.212,687,2.944,697,2.023,698,3.205,715,6.487,888,3.344,889,3.823,900,3.563,901,2.147,902,1.954,905,1.219,907,1.959,950,2.75,954,2.594,976,3.212,977,2.389,978,4.341,983,2.171,1229,2.037,1594,2.898,1621,3.975,1694,3.563,1884,3.247,2717,4.741,2718,5.336,2723,5.643,2725,2.944,2726,3.205,2730,4.842,2735,2.944,2736,2.944,2738,2.944,2739,2.944,2741,2.944,2743,3.205,2744,2.944,2746,3.205,2747,2.944,3883,3.205,3884,5.326,3885,5.326,3886,3.6,3887,3.483,3888,3.6,3889,3.6,3890,3.6,3891,3.6,3892,3.6,3893,3.6,3894,3.6,3895,3.6,3896,3.6,3897,3.6,3898,3.6,3899,3.6,3900,3.6,3901,3.6,3902,3.6,3903,3.6,3904,3.6,3905,3.6,3906,3.6]],["title/components/SignupFormComponent.html",[0,0.171,285,1.193]],["body/components/SignupFormComponent.html",[0,0.274,1,0.8,2,0.175,3,0.169,4,0.616,5,0.843,6,0.858,7,1.068,8,0.152,10,0.358,15,1.19,18,1.86,19,0.772,20,2.624,22,0.708,24,0.007,25,1.072,26,2.077,27,1.768,30,1.17,32,0.322,33,0.52,34,1.133,35,1.476,38,1.249,39,1.446,41,1.758,42,1.282,44,1.013,47,3.611,55,0.588,60,0.297,64,0.659,65,0.934,66,1.14,74,1.073,75,1.295,76,1.041,77,1.575,86,0.893,87,0.828,88,0.601,108,1.15,110,0.786,112,2.586,113,1.041,119,3.369,123,4.459,126,2.613,127,2.996,132,0.28,134,1.31,142,0.786,145,0.109,146,0.111,172,0.595,173,1.254,174,0.917,175,1.155,176,1.155,177,1.37,178,1.719,179,0.858,180,0.858,181,0.786,182,1.299,183,0.772,184,0.8,185,1.317,186,1.75,187,0.814,188,1.086,189,2.116,190,0.814,191,1.978,192,0.8,193,0.814,194,0.814,195,0.858,196,0.8,197,1.299,198,0.814,199,0.858,200,0.8,201,0.858,202,0.786,203,0.786,204,1.401,205,1.568,206,0.772,207,0.8,208,0.8,209,0.786,210,0.858,211,0.814,212,1.88,213,0.814,214,0.8,215,0.814,216,0.814,217,0.814,218,0.8,219,0.858,220,0.786,221,0.814,222,0.858,223,0.8,224,0.858,225,0.8,226,0.772,227,0.917,228,0.858,229,0.8,230,0.858,231,0.772,232,0.8,233,0.858,234,0.786,235,0.858,236,1.073,237,0.858,238,0.786,239,1.437,240,0.858,241,0.786,242,0.858,243,0.786,244,0.858,245,0.759,246,0.858,247,2.285,248,2.039,249,0.8,250,0.814,251,0.858,252,0.8,253,0.858,254,0.858,255,0.8,256,0.858,257,0.8,258,0.858,259,0.8,260,0.858,261,0.746,262,0.858,263,0.786,264,0.8,265,0.858,266,0.8,267,1.876,268,0.858,269,0.786,270,0.814,271,1.747,272,0.786,273,0.814,274,0.984,275,0.814,276,0.8,277,0.8,278,0.8,279,0.814,280,0.814,281,0.858,282,0.786,283,0.8,284,0.858,285,1.631,286,2.092,287,0.8,288,0.858,289,0.8,290,0.858,291,0.8,292,0.858,293,0.8,294,0.858,295,0.8,296,0.858,297,0.8,298,0.746,299,0.772,300,0.858,301,0.786,302,0.858,303,0.786,304,0.858,305,0.786,306,0.858,307,0.786,308,0.858,309,0.786,310,0.828,311,0.858,312,0.786,313,0.828,314,0.759,315,0.858,316,0.003,317,0.003,326,2.155,341,1.036,350,2.892,397,2.563,431,1.447,443,2.62,444,2.418,445,1.618,449,2.881,472,1.907,488,2.996,494,2.448,506,1.68,554,3.329,580,2.832,581,1.784,586,3.232,686,2.996,715,6.178,720,2.682,888,3.163,901,2.03,902,1.822,911,2.155,938,2.144,981,2.144,1012,4.373,1020,4.32,1028,1.907,1115,1.978,1229,1.254,1383,1.843,1594,2.702,1598,3.425,1839,6.339,2015,1.471,2718,3.889,2730,4.579,2748,2.682,2750,2.505,2751,2.682,2752,5.337,2753,4.421,2754,4.421,2755,6.396,2756,6.422,2757,5.337,2758,4.421,2759,6.991,2760,5.953,2761,4.421,2762,4.421,2763,4.421,2764,4.421,2769,1.133,2771,2.919,2773,5.469,2774,2.919,2776,2.919,2778,2.919,2779,2.919,2780,2.919,2782,2.919,2784,2.363,2787,2.919,2789,2.919,2791,5.337,2792,5.337,2795,2.919,2799,2.919,2800,2.505,2804,2.919,2805,2.919,2806,2.505,2809,2.919,2810,2.919,2811,5.337,2812,2.919,2813,2.505,2814,2.919,2819,2.919,2820,2.919,2821,2.919,2822,2.919,2824,2.919,2825,2.919,2826,4.062,3887,3.248,3907,6.991,3908,6.422,3909,5.995,3910,4.967,3911,3.279,3912,3.279,3913,4.967,3914,3.279,3915,3.279,3916,3.279,3917,3.279,3918,3.279,3919,3.279,3920,3.279,3921,3.279,3922,3.279,3923,3.279,3924,3.279,3925,3.279,3926,4.967,3927,3.279,3928,3.279,3929,3.279,3930,3.279,3931,3.279,3932,3.279,3933,3.279,3934,3.279,3935,3.279,3936,3.279,3937,3.279,3938,3.279,3939,3.279,3940,3.279]],["title/directives/SlotHostDirective.html",[174,0.904,312,1.173]],["body/directives/SlotHostDirective.html",[0,0.329,2,0.361,3,0.35,8,0.315,10,0.739,22,1.463,24,0.007,26,1.701,27,1.454,32,0.664,33,0.853,34,2.815,39,1.559,41,1.73,55,0.966,60,0.28,64,0.664,66,0.985,86,1.01,87,0.664,88,0.679,102,3.949,132,0.579,145,0.225,146,0.151,174,1.615,312,1.954,313,2.059,314,2.1,316,0.006,317,0.006,353,1.702,415,2.965,424,3.706,494,3.329,500,3.256,642,6.226,930,3.656,1222,3.949,1409,7.997,1453,6.226,3941,7.784,3942,6.03,3943,8.152,3944,6.774,3945,6.774,3946,8.152,3947,6.774]],["title/classes/Sorter.html",[146,0.109,3948,3.526]],["body/classes/Sorter.html",[2,0.263,3,0.255,7,1.607,8,0.229,10,0.727,24,0.007,25,1.067,32,0.739,33,1.016,34,2.786,38,1.082,43,2.37,44,1.137,55,0.584,60,0.204,64,0.752,65,1.737,66,0.91,71,0.805,75,1.916,76,1.2,86,0.992,87,0.653,88,0.889,113,0.573,118,2.986,142,1.806,145,0.268,146,0.168,162,2.602,316,0.006,317,0.005,340,3.369,341,1.811,398,3.094,422,2.269,441,3.028,451,3.147,500,1.971,509,3.872,524,4.353,579,2.869,599,2.822,642,3.768,678,3.156,682,3.09,749,6.775,855,4.392,874,3.555,917,2.869,924,3.975,1030,2.684,1057,3.094,1153,7.556,1374,3.555,1453,3.768,1471,6.162,1636,2.976,1649,2.603,1655,5.308,1732,3.094,1840,4.035,1884,3.41,1949,5.444,2049,3.872,2300,3.555,2416,6.888,2423,5.926,2575,4.353,3279,6.597,3316,5.085,3948,6.254,3949,3.768,3950,6.657,3951,8.066,3952,6.657,3953,5.444,3954,5.444,3955,5.444,3956,4.934,3957,6.657,3958,4.934,3959,8.423,3960,6.657,3961,4.934,3962,3.555,3963,5.444,3964,4.035,3965,4.392,3966,4.392,3967,4.392,3968,4.392,3969,4.934,3970,4.392,3971,4.392,3972,4.934,3973,6.657,3974,4.934,3975,4.934,3976,4.934,3977,4.934,3978,4.934,3979,6.657,3980,4.934,3981,4.934,3982,4.934,3983,4.934,3984,4.934,3985,4.934,3986,4.934,3987,4.934]],["title/interfaces/Symbol.html",[332,1.35,901,1.657]],["body/interfaces/Symbol.html",[2,0.375,3,0.363,8,0.327,10,0.768,24,0.007,32,0.69,33,0.873,56,3.405,64,0.679,65,1.806,74,1.801,87,0.955,88,0.891,93,4.602,139,4.85,145,0.234,316,0.006,317,0.006,332,2.301,796,4.818,901,3.254,1016,5.029,1361,5.71,1598,4.271,2020,7.423,2049,5.588,3069,6.82,3988,6.264,3989,7.423,3990,8.339]],["title/modules/SymbolModule.html",[318,1.094,1853,3.2]],["body/modules/SymbolModule.html",[0,0.311,2,0.343,3,0.408,4,1.486,8,0.299,10,0.703,23,2.585,24,0.007,30,1.516,55,0.936,58,2.224,60,0.386,87,0.631,113,0.747,132,0.55,139,3.744,141,2.96,145,0.297,146,0.177,172,1.169,316,0.005,317,0.005,318,1.767,320,2.629,325,3.301,326,2.314,327,2.138,330,3.089,351,3.298,375,4.037,422,2.96,457,3.883,496,3.157,583,2.818,598,2.18,622,3.46,623,3.728,624,2.96,678,2.138,772,4.169,796,4.408,901,3.227,902,3.496,1013,2.689,1161,3.744,1186,3.396,1374,4.639,1694,3.618,1794,4.21,1853,6.093,1874,3.744,2015,2.887,2075,3.883,2428,5.144,2578,3.744,2593,4.639,3149,3.618,3351,4.917,3991,5.731,3992,5.731,3993,6.438,3994,3.883,3995,6.994,3996,5.731,3997,5.265,3998,5.731,3999,5.731,4000,5.731,4001,5.731,4002,5.731,4003,5.731,4004,7.035,4005,6.463,4006,5.265,4007,5.265,4008,6.532,4009,6.438]],["title/injectables/SymbolPipe.html",[433,1.236,4008,3.737]],["body/injectables/SymbolPipe.html",[2,0.46,3,0.339,8,0.305,10,0.717,15,1.575,24,0.007,32,0.644,44,1.128,58,2.269,60,0.357,64,0.535,65,1.73,66,0.794,75,1.728,76,1.085,86,0.979,87,0.938,88,0.659,132,0.562,145,0.219,146,0.147,173,1.659,316,0.005,317,0.005,353,1.279,433,2.179,449,2.936,500,3.196,598,2.225,654,4.354,682,2.411,901,3.298,902,3.377,1094,7.123,1186,4.738,1191,4.221,1197,5.766,2049,4.654,3351,6.112,4007,5.373,4008,6.112,4010,5.848,4011,8.002,4012,6.57,4013,8.002,4014,5.848,4015,6.57]],["title/injectables/SymbolService.html",[433,1.236,902,1.795]],["body/injectables/SymbolService.html",[2,0.272,3,0.263,7,1.662,8,0.237,10,0.557,24,0.007,32,0.751,33,0.712,38,0.978,39,1.676,44,0.96,55,1.101,60,0.338,64,0.749,65,1.794,66,1.098,71,0.832,74,2.086,75,1.892,76,1.142,77,1.805,83,5.598,86,1.269,87,0.926,88,0.854,93,4.451,113,0.949,118,3.93,121,2.565,132,0.436,142,1.631,145,0.17,146,0.114,162,1.761,175,1.797,176,1.797,177,2.13,316,0.005,317,0.005,353,1.491,433,1.935,475,3.198,622,3.579,697,3.826,844,2.69,862,3.959,868,4.134,901,3.365,902,2.497,1069,3.076,1557,4.268,1693,5.199,2048,7.21,2049,3.959,2428,3.826,3004,5.567,3042,6.059,3995,6.686,4006,7.166,4014,4.54,4016,4.54,4017,6.807,4018,6.807,4019,5.1,4020,6.807,4021,5.1,4022,5.199,4023,6.807,4024,5.1,4025,6.807,4026,5.1,4027,6.807,4028,6.807,4029,5.1,4030,6.807,4031,5.1,4032,5.1,4033,5.1,4034,6.807,4035,5.1,4036,5.1,4037,5.1,4038,5.1,4039,5.1,4040,5.1,4041,5.1,4042,5.1,4043,5.1,4044,5.1,4045,5.1,4046,5.1,4047,5.1]],["title/components/TabComponent.html",[0,0.171,287,1.193]],["body/components/TabComponent.html",[0,0.274,1,0.998,2,0.218,3,0.211,4,0.769,5,1.052,6,1.071,8,0.19,10,0.447,19,0.964,22,0.884,24,0.007,25,1.093,26,2.093,27,1.784,30,1.377,32,0.401,33,0.612,35,1.584,39,1.118,44,0.824,60,0.242,64,0.702,65,1.399,66,1.075,71,0.954,74,1.607,75,1.263,76,0.735,77,1.377,86,0.61,87,0.845,88,0.41,104,3.764,108,1.353,110,0.981,113,0.679,126,2.285,132,0.35,145,0.136,146,0.091,172,0.743,173,1.477,174,1.08,178,1.913,179,1.071,180,1.071,181,0.981,182,1.53,183,0.964,184,0.998,185,1.499,186,1.947,187,1.016,188,1.176,189,2.254,190,1.016,191,2.141,192,0.998,193,1.016,194,1.016,195,1.071,196,0.998,197,1.53,198,1.016,199,1.071,200,0.998,201,1.071,202,0.981,203,0.981,204,1.503,205,1.785,206,0.964,207,0.998,208,0.998,209,0.981,210,1.071,211,1.016,212,2.059,213,1.016,214,0.998,215,1.016,216,1.016,217,1.016,218,0.998,219,1.071,220,0.981,221,1.016,222,1.071,223,0.998,224,1.071,225,0.998,226,0.964,227,1.663,228,1.071,229,0.998,230,1.071,231,0.964,232,0.998,233,1.071,234,0.981,235,1.071,236,0.884,237,1.071,238,0.981,239,1.635,240,1.071,241,0.981,242,1.071,243,0.981,244,1.071,245,0.947,246,1.071,247,0.998,248,0.931,249,0.998,250,1.016,251,1.071,252,0.998,253,1.071,254,1.071,255,0.998,256,1.071,257,0.998,258,1.071,259,0.998,260,1.071,261,0.931,262,1.071,263,0.981,264,0.998,265,1.071,266,0.998,267,1.016,268,1.071,269,0.981,270,1.016,271,1.861,272,0.981,273,1.016,274,0.81,275,1.016,276,0.998,277,0.998,278,0.998,279,1.016,280,1.016,281,1.071,282,0.981,283,0.998,284,1.071,285,0.998,286,1.034,287,1.815,288,1.071,289,2.196,290,1.071,291,0.998,292,1.071,293,0.998,294,1.071,295,0.998,296,1.071,297,0.998,298,0.931,299,0.964,300,1.071,301,0.981,302,1.071,303,0.981,304,1.071,305,0.981,306,1.071,307,0.981,308,1.071,309,0.981,310,1.034,311,1.071,312,0.981,313,1.034,314,0.947,315,1.071,316,0.004,317,0.004,335,2.285,341,1.22,350,3.011,353,1.328,360,1.052,373,3.526,415,1.791,431,2.555,444,1.8,445,2.745,487,4.152,517,3.604,577,4.277,836,5.196,911,2.675,930,2.622,1164,3.666,1335,4.781,1371,3.347,1373,6.436,1546,3.526,1967,3.526,4048,3.643,4049,7.214,4050,5.846,4051,8.77,4052,5.846,4053,5.846,4054,4.092,4055,4.092,4056,4.092,4057,4.092,4058,4.092,4059,4.092,4060,4.092,4061,5.846,4062,4.092,4063,3.643,4064,4.092,4065,4.092]],["title/components/TabsComponent.html",[0,0.171,289,1.193]],["body/components/TabsComponent.html",[0,0.29,1,0.961,2,0.21,3,0.203,4,1.07,5,1.013,6,1.031,7,1.284,8,0.183,10,0.43,15,1.364,19,0.928,22,0.851,24,0.007,25,0.632,26,2.091,27,1.782,30,1.34,32,0.387,33,0.596,35,1.458,38,0.566,44,0.802,55,0.467,56,2.324,60,0.277,64,0.632,65,1.255,66,1.007,72,1.785,73,3.896,74,1.229,75,1.58,76,0.975,77,1.723,86,0.995,87,0.865,88,0.669,105,1.54,108,1.317,110,0.945,113,0.775,119,3.198,132,0.337,142,1.364,145,0.131,146,0.088,162,1.361,172,0.715,173,1.437,174,1.051,175,1.389,176,1.389,177,1.646,178,1.88,179,1.031,180,1.031,181,0.945,182,1.489,183,0.928,184,0.961,185,1.468,186,1.913,187,0.978,188,1.161,189,2.232,190,0.978,191,2.114,192,0.961,193,0.978,194,0.978,195,1.031,196,0.961,197,1.489,198,0.978,199,1.031,200,0.961,201,1.031,202,0.945,203,0.945,204,1.486,205,1.747,206,0.928,207,0.961,208,0.961,209,0.945,210,1.031,211,0.978,212,2.029,213,0.978,214,0.961,215,0.978,216,0.978,217,0.978,218,0.961,219,1.031,220,0.945,221,0.978,222,1.031,223,0.961,224,1.031,225,0.961,226,0.928,227,1.683,228,1.031,229,0.961,230,1.031,231,0.928,232,0.961,233,1.031,234,0.945,235,1.031,236,0.851,237,1.031,238,0.945,239,1.601,240,1.031,241,0.945,242,1.031,243,0.945,244,1.031,245,0.912,246,1.031,247,0.961,248,0.897,249,0.961,250,0.978,251,1.031,252,0.961,253,1.031,254,1.031,255,0.961,256,1.031,257,0.961,258,1.031,259,0.961,260,1.031,261,0.897,262,1.031,263,0.945,264,0.961,265,1.031,266,0.961,267,0.978,268,1.031,269,0.945,270,0.978,271,1.842,272,0.945,273,0.978,274,0.781,275,0.978,276,0.961,277,0.961,278,0.961,279,0.978,280,0.978,281,1.031,282,0.945,283,0.961,284,1.031,285,0.961,286,0.995,287,2.179,288,1.031,289,1.971,290,1.031,291,0.961,292,1.031,293,0.961,294,1.031,295,0.961,296,1.031,297,0.961,298,0.897,299,0.928,300,1.031,301,0.945,302,1.031,303,0.945,304,1.031,305,0.945,306,1.031,307,0.945,308,1.031,309,0.945,310,0.995,311,1.031,312,0.945,313,1.437,314,0.912,315,1.031,316,0.004,317,0.005,338,2.377,353,0.767,360,1.463,373,3.432,393,2.915,422,1.812,444,1.213,487,4.092,541,5.586,567,1.909,583,2.491,595,2.292,598,1.335,599,1.476,681,4.101,844,2.079,893,5.285,1018,4.11,1235,2.292,1426,3.31,1526,2.699,1615,4.346,2015,2.552,2119,3.223,2499,5.981,2896,3.508,2939,3.508,3016,5.066,4049,7.209,4066,3.508,4067,4.654,4068,5.691,4069,6.679,4070,5.691,4071,7.314,4072,7.314,4073,5.691,4074,5.691,4075,3.941,4076,3.941,4077,5.691,4078,7.314,4079,3.941,4080,5.691,4081,3.941,4082,3.941,4083,5.691,4084,3.508,4085,3.941,4086,3.941,4087,3.941,4088,3.941,4089,3.941,4090,3.941,4091,3.941,4092,3.941,4093,3.941,4094,3.941,4095,3.941,4096,3.941,4097,3.941,4098,3.941,4099,3.941,4100,3.941,4101,3.941,4102,5.691,4103,3.941,4104,3.941,4105,5.691]],["title/components/TinymceComponent.html",[0,0.171,291,1.193]],["body/components/TinymceComponent.html",[0,0.241,1,0.732,2,0.16,3,0.155,4,0.564,5,0.771,6,0.785,7,0.978,8,0.139,10,0.328,11,2.91,13,5.245,15,1.112,16,3.558,19,0.707,22,0.648,23,1.715,24,0.007,25,1.023,26,2.069,27,1.76,28,3.035,30,1.093,32,0.294,33,0.486,34,2.521,35,1.517,36,4.004,37,4.372,38,1.318,39,1.396,40,3.012,44,0.654,45,4.148,48,3.035,49,4.004,52,2.91,55,0.865,60,0.378,64,0.684,65,1.431,66,1.103,71,1.127,72,2.003,74,1.698,76,1.036,77,1.852,79,1.882,81,2.91,84,2.708,86,0.952,87,0.823,88,0.64,89,2.91,99,2.91,101,3.035,102,2.248,103,1.703,104,2.936,105,1.173,106,1.939,108,1.074,110,0.719,113,1.002,114,2.525,116,2.698,118,2.081,119,3.589,121,2.003,130,1.633,131,2.91,132,0.257,133,2.91,134,1.199,143,1.882,144,1.882,145,0.1,146,0.067,147,2.292,152,5.97,154,2.292,160,3.035,165,1.494,169,2.454,171,1.882,172,0.545,173,1.172,174,0.857,175,1.057,176,1.057,177,1.254,178,1.641,179,0.785,180,0.785,181,0.719,182,1.214,183,0.707,184,0.732,185,1.247,186,1.671,187,0.745,188,1.049,189,2.057,190,0.745,191,1.91,192,0.732,193,0.745,194,0.745,195,0.785,196,0.732,197,1.214,198,0.745,199,0.785,200,0.732,201,0.785,202,0.719,203,0.719,204,1.357,205,1.485,206,0.707,207,0.732,208,0.732,209,0.719,210,0.785,211,0.745,212,1.806,213,0.745,214,0.732,215,0.745,216,0.745,217,0.745,218,0.732,219,0.785,220,0.719,221,0.745,222,0.785,223,0.732,224,0.785,225,0.732,226,1.337,227,0.857,228,0.785,229,0.732,230,0.785,231,0.707,232,0.732,233,0.785,234,0.719,235,0.785,236,0.648,237,0.785,238,0.719,239,1.36,240,0.785,241,0.719,242,0.785,243,0.719,244,0.785,245,0.695,246,0.785,247,0.732,248,0.683,249,0.732,250,0.745,251,0.785,252,0.732,253,0.785,254,0.785,255,0.732,256,0.785,257,0.732,258,0.785,259,0.732,260,0.785,261,0.683,262,0.785,263,0.719,264,0.732,265,0.785,266,0.732,267,0.745,268,0.785,269,0.719,270,0.745,271,1.698,272,0.719,273,0.745,274,0.919,275,0.745,276,0.732,277,0.732,278,0.732,279,0.745,280,0.745,281,0.785,282,0.719,283,0.732,284,0.785,285,0.732,286,0.758,287,0.732,288,0.785,289,0.732,290,0.785,291,1.684,292,0.785,293,0.732,294,0.785,295,0.732,296,0.785,297,0.732,298,0.683,299,0.707,300,0.785,301,0.719,302,0.785,303,0.719,304,0.785,305,0.719,306,0.785,307,0.719,308,0.785,309,0.719,310,1.172,311,0.785,312,0.719,313,0.758,314,0.695,315,0.785,316,0.003,317,0.003,335,1.814,353,0.584,360,1.459,385,1.963,431,2.351,441,1.668,444,1.429,445,2.48,449,2.678,492,2.795,517,2.248,533,2.699,578,2.799,591,4.148,597,1.745,598,1.016,873,3.087,884,2.448,905,1.572,911,2.295,929,2.189,930,2.081,1018,3.189,1167,2.525,1177,3.344,1217,2.671,1579,2.671,1780,3.087,1821,5.222,1981,2.292,1982,2.671,2015,2.081,2097,5.684,2205,6.146,2251,2.671,2306,3.795,2307,3.795,2372,2.454,2702,5.051,2784,3.344,2840,6.146,2843,5.684,2851,7,2869,2.454,3175,3.035,3290,3.795,3618,5.051,3994,4.403,4049,3.545,4106,2.671,4107,6.048,4108,4.641,4109,4.641,4110,4.641,4111,4.641,4112,5.674,4113,3.001,4114,6.385,4115,4.641,4116,3.795,4117,4.641,4118,3.344,4119,4.641,4120,3.001,4121,4.641,4122,4.131,4123,3.001,4124,3.001,4125,3.001,4126,4.641,4127,4.641,4128,3.001,4129,4.641,4130,3.001,4131,3.001,4132,3.001,4133,3.001,4134,3.001,4135,3.001,4136,3.001,4137,3.001,4138,3.001,4139,3.001,4140,3.001,4141,3.001,4142,3.001,4143,3.001,4144,3.001,4145,3.001,4146,3.001,4147,3.001,4148,3.001,4149,3.001,4150,3.001,4151,3.001,4152,3.001,4153,3.001,4154,3.001,4155,3.001,4156,3.001,4157,3.795,4158,3.001,4159,3.001,4160,3.001,4161,3.001,4162,3.001,4163,3.001,4164,3.001,4165,3.001,4166,3.001,4167,4.641,4168,3.001,4169,3.001,4170,3.001,4171,3.001,4172,3.001,4173,3.001,4174,3.001,4175,4.641,4176,3.001,4177,3.001,4178,3.001,4179,3.001,4180,3.001,4181,3.001,4182,3.001,4183,3.001]],["title/modules/TinymceModule.html",[318,1.094,4184,3.526]],["body/modules/TinymceModule.html",[2,0.382,3,0.369,8,0.332,23,2.163,24,0.007,58,2.472,60,0.349,132,0.612,141,3.352,145,0.307,146,0.16,172,1.299,291,2.421,316,0.006,317,0.006,318,1.883,320,2.923,325,3.518,326,2.573,327,2.377,329,4.734,330,3.292,4184,6.947,4185,6.371,4186,6.371,4187,6.371,4188,7.157,4189,7.157]],["title/components/ToggleComponent.html",[0,0.171,293,1.193]],["body/components/ToggleComponent.html",[0,0.295,1,1.013,2,0.221,3,0.214,4,1.292,5,1.067,6,1.086,8,0.193,10,0.453,15,1.416,16,4.311,19,0.978,22,0.897,23,2.078,24,0.007,25,0.947,26,2.094,27,1.785,30,1.391,32,0.407,33,0.618,35,1.59,36,4.696,38,1.321,44,0.833,48,3.863,49,4.696,52,3.704,55,0.887,60,0.245,64,0.56,65,1.11,66,1.022,76,0.941,77,1.764,81,3.704,83,5.128,84,2.157,85,4.044,86,0.88,87,0.863,88,0.592,89,3.704,99,3.704,101,3.863,108,1.367,110,0.995,113,0.982,114,3.214,121,2.349,131,3.704,132,0.355,133,3.704,134,1.658,143,2.603,144,2.603,145,0.138,146,0.093,160,4.496,171,2.603,172,0.754,173,1.492,174,1.091,178,1.925,179,1.086,180,1.086,181,0.995,182,1.545,183,0.978,184,1.013,185,1.511,186,1.959,187,1.03,188,1.181,189,2.263,190,1.03,191,2.152,192,1.013,193,1.03,194,1.03,195,1.086,196,1.013,197,1.545,198,1.03,199,1.086,200,1.013,201,1.086,202,0.995,203,0.995,204,1.509,205,1.799,206,0.978,207,1.013,208,1.013,209,0.995,210,1.086,211,1.03,212,2.07,213,1.03,214,1.013,215,1.03,216,1.03,217,1.03,218,1.013,219,1.086,220,0.995,221,1.03,222,1.086,223,1.013,224,1.086,225,1.013,226,0.978,227,1.091,228,1.086,229,1.013,230,1.086,231,0.978,232,1.013,233,1.086,234,0.995,235,1.086,236,0.897,237,1.086,238,0.995,239,1.648,240,1.086,241,0.995,242,1.086,243,0.995,244,1.086,245,0.961,246,1.086,247,1.013,248,0.944,249,1.013,250,1.03,251,1.086,252,1.013,253,1.086,254,1.086,255,1.013,256,1.086,257,1.013,258,1.086,259,1.013,260,1.086,261,0.944,262,1.086,263,0.995,264,1.013,265,1.086,266,1.013,267,1.03,268,1.086,269,0.995,270,1.03,271,1.868,272,0.995,273,1.03,274,0.822,275,1.03,276,1.013,277,1.013,278,1.013,279,1.03,280,1.03,281,1.086,282,0.995,283,1.013,284,1.086,285,1.013,286,1.049,287,1.013,288,1.086,289,1.013,290,1.086,291,1.013,292,1.086,293,1.93,294,1.086,295,1.013,296,1.086,297,1.013,298,0.944,299,0.978,300,1.086,301,0.995,302,1.086,303,0.995,304,1.086,305,0.995,306,1.086,307,0.995,308,1.086,309,0.995,310,1.049,311,1.086,312,0.995,313,1.049,314,0.961,315,1.086,316,0.004,317,0.004,341,1.804,554,3.94,783,5.04,1177,2.992,1222,2.861,2128,4.256,2425,4.256,2869,3.395,2968,3.863,4190,3.696,4191,5.906,4192,5.906,4193,4.152,4194,4.152,4195,4.152,4196,5.906,4197,4.152,4198,4.152,4199,5.906,4200,4.152,4201,4.152]],["title/injectables/TypeConfigService.html",[433,1.236,1131,2.951]],["body/injectables/TypeConfigService.html",[2,0.155,3,0.15,4,0.85,8,0.135,10,0.317,19,1.065,24,0.007,25,1.527,27,1.507,32,0.285,33,0.925,35,1.717,38,1.399,41,0.96,42,1.767,44,0.884,55,0.536,56,1.846,60,0.35,64,0.757,65,1.535,66,0.987,71,0.738,74,0.977,75,1.355,76,1.159,77,0.684,84,1.418,86,0.935,87,0.615,88,0.629,113,0.873,132,0.248,142,1.084,145,0.097,146,0.065,183,1.601,185,1.857,188,0.649,202,2.135,203,1.915,204,1.683,206,1.696,227,1.601,239,1.084,316,0.003,317,0.003,337,2.079,340,3.008,341,0.943,349,2.407,350,1.73,353,0.565,360,1.162,391,2.091,393,2.316,399,4.294,400,3.698,411,3.698,412,1.82,413,3.231,431,2.496,433,1.403,441,2.254,460,4.101,490,4.286,554,2.251,567,1.406,590,1.688,598,0.983,599,2.697,686,2.727,703,3.782,861,2.765,890,2.316,901,2.438,902,2.301,904,3.782,936,2.385,948,1.75,1018,2.541,1035,1.631,1045,2.959,1061,1.898,1069,1.75,1075,1.898,1106,2.63,1131,2.727,1142,2.727,1143,3.258,1149,5.47,1156,3.258,1161,4.188,1163,3.306,1167,3.918,1181,3.096,1182,2.091,1190,5.886,1196,4.945,1209,2.373,1222,4.623,1356,1.987,1361,3.096,1426,2.63,1573,1.987,1591,4.047,1592,6.749,1593,6.976,1597,5.886,1598,2.316,1636,3.782,1639,2.727,1660,2.957,1671,2.216,1681,4.343,1721,3.258,1758,6.091,1780,2.46,1781,5.604,2015,2.028,2191,6.239,2291,4.025,2432,2.091,2447,2.583,2454,4.025,2979,4.025,3004,2.373,3037,5.47,3039,2.63,3049,2.583,3085,4.025,3086,2.091,3637,4.025,4202,4.521,4203,4.521,4204,7.776,4205,6.272,4206,4.521,4207,6.272,4208,2.902,4209,2.902,4210,4.521,4211,2.902,4212,4.521,4213,4.521,4214,4.521,4215,4.521,4216,2.902,4217,2.902,4218,4.521,4219,4.521,4220,2.902,4221,4.521,4222,4.521,4223,4.521,4224,8.453,4225,7.776,4226,7.776,4227,7.201,4228,7.201,4229,4.025,4230,4.521,4231,4.521,4232,4.025,4233,4.521,4234,7.524,4235,4.521,4236,4.521,4237,4.521,4238,6.798,4239,6.272,4240,4.521,4241,4.521,4242,4.521,4243,2.583,4244,4.521,4245,2.902,4246,2.902,4247,2.902,4248,2.902,4249,2.902,4250,2.583,4251,2.902,4252,2.902,4253,2.902,4254,2.902,4255,2.902]],["title/modules/UiModule.html",[318,1.094,618,2.951]],["body/modules/UiModule.html",[2,0.308,3,0.297,8,0.268,23,1.742,24,0.007,58,1.991,60,0.401,132,0.493,134,2.302,141,2.159,145,0.285,146,0.129,172,1.046,316,0.005,317,0.005,318,1.649,320,2.354,325,3.08,326,2.072,327,1.914,330,2.882,618,6.02,623,3.479,624,2.65,626,5.567,1133,5.859,1841,6.581,1850,6.285,1851,5.796,1852,6.285,1853,6.285,1856,4.714,1865,4.714,1866,4.153,1869,4.714,2542,6.581,2548,6.581,2550,5.131,2551,5.131,3222,6.926,3874,6.926,3881,5.131,4256,5.131,4257,5.764,4258,5.131,4259,5.764,4260,5.764,4261,5.764]],["title/interfaces/Update.html",[332,1.35,492,2.142]],["body/interfaces/Update.html",[0,0.143,2,0.219,3,0.212,8,0.19,10,0.448,24,0.007,25,1.382,32,0.402,33,0.824,38,1.344,39,1.12,41,0.871,43,1.453,55,0.882,56,2.391,60,0.369,64,0.758,65,1.738,70,2.832,71,1.216,72,1.837,75,1.922,76,1.192,79,2.572,84,2.792,88,0.892,112,1.152,114,2.232,116,2.669,126,1.603,132,0.351,142,1.637,145,0.195,146,0.092,162,1.417,188,1.211,204,1.044,271,2.105,274,1.738,316,0.004,317,0.005,332,1.616,333,2.232,337,1.886,341,1.554,345,1.713,349,1.152,351,4.195,360,1.915,397,2.92,398,4.282,405,2.446,407,2.288,410,1.935,433,1.725,443,3.603,444,1.263,445,1.908,486,3.186,490,4.067,492,4.194,496,3.634,502,3.4,521,4.67,533,3.972,534,3.716,543,2.572,546,2.956,582,2.572,591,3.603,597,2.385,598,1.389,622,1.795,644,2.682,682,3.005,700,2.682,702,2.101,723,4.119,737,4.332,738,4.67,780,2.101,814,2.305,837,2.572,844,3.603,868,3.222,890,2.101,911,2.832,920,4.22,1013,1.713,1021,3.089,1025,2.808,1026,2.572,1040,3.406,1042,2.572,1043,2.956,1044,2.572,1045,1.935,1046,2.808,1047,2.305,1052,3.354,1054,2.305,1055,3.354,1057,2.572,1063,3.354,1065,2.956,1066,3.672,1069,2.474,1077,3.354,1088,3.406,1099,5.585,1100,3.354,1101,3.354,1102,3.354,1105,4.789,1106,2.385,1110,3.354,1111,3.354,1112,3.354,1113,3.354,1114,6.442,1115,2.474,1116,3.354,1492,4.789,1528,3.532,1615,4.472,1692,3.672,1706,3.133,3040,4.789,3487,2.682,3510,2.956,3697,3.354,3734,3.354,3737,5.213,3738,5.213,3740,3.651,3742,3.651,3745,3.651,3747,3.133,3748,3.651,3750,3.651,3751,3.651,3754,4.789,3755,5.213,3756,4.789,3757,7.012,3758,3.651,3759,6.63,3760,3.651,3761,3.651,3762,3.651,3763,3.651,3764,3.651,3765,3.651,3766,3.651,3767,3.651,3768,3.651,3769,3.651,3770,3.651,3771,3.651,3772,3.651,3773,3.651,3774,3.651,3775,6.079,3776,3.651,3777,5.213,3778,3.651,3779,3.651,3780,3.651,3781,3.651]],["title/interfaces/Upload.html",[298,1.113,332,1.35]],["body/interfaces/Upload.html",[0,0.12,2,0.184,3,0.178,8,0.341,10,0.376,24,0.007,25,1.279,32,0.337,33,0.539,39,1.715,41,0.73,43,2.311,44,0.485,55,0.812,60,0.364,64,0.716,65,1.5,66,0.416,70,1.851,71,1.45,72,1.615,75,1.333,76,1.211,79,2.158,84,2.301,87,0.337,88,0.929,103,1.262,112,1.447,113,0.399,116,3.119,118,3.073,126,1.345,132,0.294,142,1.967,145,0.205,146,0.077,162,2.132,185,2.147,188,1.179,204,1.101,226,0.81,227,1.265,271,1.333,274,0.681,298,2.119,316,0.004,317,0.005,332,1.891,333,1.872,336,2.929,337,2.368,338,2.075,341,1.429,349,1.925,360,1.886,397,1.471,398,4.6,401,2.075,405,2.578,407,2.013,410,1.623,428,4.937,433,1.559,443,1.815,444,1.059,445,2.39,449,1.262,465,6.047,466,2.48,474,2.48,479,2.814,486,3.358,492,2.999,496,2.465,500,1.374,516,2.638,521,4.296,533,2.001,543,2.158,551,2.075,552,5.44,572,2.814,582,2.158,590,2.001,594,0.984,598,1.165,599,2.312,622,1.506,678,2.437,701,2.25,702,2.638,737,3.589,745,2.814,752,2.356,814,1.934,832,2.368,868,1.623,873,3.992,875,1.872,890,1.762,905,1.744,911,2.219,968,3.711,1001,4.48,1010,2.628,1013,1.437,1023,1.582,1028,2.001,1030,2.802,1040,2.995,1042,2.158,1043,2.48,1044,2.158,1045,1.623,1046,2.356,1047,3.469,1054,2.894,1078,2.356,1083,2.628,1088,4.478,1108,4.714,1131,3.106,1149,2.356,1353,2.158,1445,2.25,1528,3.106,1598,2.638,1684,2.814,1685,5.494,1686,4.584,1687,5.494,1688,4.584,1689,4.584,1690,4.584,1691,2.628,1692,2.158,1693,2.628,1694,1.934,1695,3.063,1696,4.584,1697,3.063,1698,4.714,1699,2.628,1700,3.063,1701,3.063,1702,2.628,1703,3.063,1704,3.063,1705,3.063,1706,2.628,1707,3.063,1708,3.063,1709,5.494,1710,3.063,1711,5.494,1712,3.063,1713,3.063,1714,3.063,1715,2.814,1716,2.814,1717,2.814,1718,2.356,1719,2.814,1720,4.937,1721,2.48,1722,3.063,1723,4.584,1724,3.063,1725,4.584,1726,4.584,1727,3.063,1728,3.063,1729,3.063,1730,3.063,1731,4.584,1732,3.87,1733,3.063,1734,2.48,1735,2.628,1736,2.356,1737,3.063,1738,6.854,1739,3.063,1740,3.063,1741,3.063,1742,3.063,1743,3.063,1744,5.494,1745,2.814,1746,3.063,1747,3.063,1748,4.584,1749,3.063,1750,4.584,1751,4.584,1752,4.584,1753,4.584,1754,4.584,1755,4.584,1756,4.584,1757,4.584,1758,2.48,1759,2.814,1760,3.063,1761,3.063,1762,3.063,1763,4.584,1764,3.063,1765,3.063,1766,3.063,1767,3.063,1768,3.063,1769,2.628,1770,2.628,1771,5.494,1772,3.063,1773,3.063,1774,4.584,1775,3.063,1776,3.063,1777,3.063,1778,2.628,1779,3.063,1780,1.872,1781,2.48,1782,3.063,1783,3.063,1784,3.063,1785,3.063,1786,3.063,1787,3.063,1788,3.063,1789,3.063,1790,3.063,1791,3.063,1792,3.063,1793,3.063,1794,2.25,1795,3.063,1796,3.063,1797,3.063,1798,2.814,1799,3.063,1800,3.063,1801,3.063]],["title/components/UploadComponent.html",[0,0.171,295,1.193]],["body/components/UploadComponent.html",[0,0.263,1,0.714,2,0.156,3,0.151,4,0.55,5,0.753,6,0.766,8,0.42,10,0.32,15,1.091,19,0.69,22,0.632,24,0.007,25,0.896,26,2.067,27,1.758,30,1.073,32,0.287,33,0.477,35,1.727,38,0.981,39,1.069,41,0.967,42,3.048,44,0.642,55,0.856,60,0.339,64,0.721,65,1.283,66,1.115,71,1.028,74,1.361,76,1.092,77,1.316,84,1.753,86,1.077,87,0.852,88,0.861,104,2.898,105,1.78,106,2.334,108,1.58,110,0.702,113,0.93,116,2.184,121,1.428,132,0.25,145,0.097,146,0.065,165,3.883,172,0.532,173,1.15,174,0.841,178,1.62,179,0.766,180,0.766,181,0.702,182,1.191,183,0.69,184,0.714,185,1.833,186,1.649,187,0.727,188,1.038,189,2.041,190,0.727,191,1.891,192,0.714,193,0.727,194,0.727,195,0.766,196,0.714,197,1.191,198,0.727,199,0.766,200,0.714,201,0.766,202,0.702,203,0.702,204,1.345,205,1.462,206,0.69,207,0.714,208,0.714,209,0.702,210,0.766,211,0.727,212,1.786,213,0.727,214,0.714,215,0.727,216,0.727,217,0.727,218,0.714,219,0.766,220,0.702,221,0.727,222,0.766,223,0.714,224,0.766,225,0.714,226,0.69,227,1.164,228,0.766,229,0.714,230,0.766,231,0.69,232,0.714,233,0.766,234,0.702,235,0.766,236,1.361,237,0.766,238,0.702,239,1.339,240,0.766,241,0.702,242,0.766,243,0.702,244,0.766,245,0.678,246,0.766,247,0.714,248,0.666,249,0.714,250,0.727,251,0.766,252,0.714,253,0.766,254,0.766,255,0.714,256,0.766,257,0.714,258,0.766,259,0.714,260,0.766,261,0.666,262,0.766,263,0.702,264,0.714,265,0.766,266,0.714,267,0.727,268,0.766,269,1.636,270,0.727,271,1.685,272,0.702,273,0.727,274,1.107,275,0.727,276,0.714,277,0.714,278,0.714,279,0.727,280,0.727,281,0.766,282,0.702,283,0.714,284,0.766,285,0.714,286,0.74,287,0.714,288,0.766,289,0.714,290,0.766,291,0.714,292,0.766,293,0.714,294,0.766,295,1.537,296,0.766,297,0.714,298,2.164,299,0.69,300,0.766,301,0.702,302,0.766,303,0.702,304,0.766,305,0.702,306,0.766,307,0.702,308,0.766,309,0.702,310,0.74,311,0.766,312,0.702,313,0.74,314,0.678,315,0.766,316,0.003,317,0.003,339,1.78,341,0.95,353,0.57,397,3.814,405,1.902,406,1.593,407,2.463,410,1.382,431,1.989,434,3.724,435,3.503,444,2.402,445,2.458,467,1.915,472,1.703,474,5.208,494,3.081,509,2.648,511,2.332,551,4.55,552,3.503,554,3.399,556,4.569,566,3.281,567,2.206,568,2.559,579,1.703,580,2.093,586,3.621,587,2.973,598,0.992,599,2.361,723,1.766,752,2.005,770,2.746,791,1.766,873,2.478,884,2.402,888,2.948,889,3.37,899,4.24,900,3.14,901,2.907,902,2.312,905,2.312,907,1.593,911,2.266,929,3.863,950,2.237,976,2.746,977,2.042,978,3.826,981,1.915,983,1.766,1001,3.654,1009,2.559,1018,2.559,1066,2.855,1088,2.648,1115,4.55,1272,2.395,1392,2.395,1445,1.915,1475,2.395,1611,3.724,1732,1.836,1745,2.395,1759,3.724,1884,2.332,2150,2.607,2170,5.154,2225,2.978,2302,3.281,2336,5.621,2718,3.665,2735,2.395,2736,2.395,2737,2.607,2929,4.053,3253,3.478,4250,2.607,4262,2.607,4263,4.554,4264,6.302,4265,6.302,4266,6.302,4267,4.053,4268,4.554,4269,4.554,4270,2.928,4271,2.928,4272,2.928,4273,2.928,4274,4.053,4275,2.928,4276,2.928,4277,2.928,4278,3.724,4279,2.928,4280,4.554,4281,2.928,4282,2.928,4283,4.053,4284,2.928,4285,4.554,4286,2.928,4287,4.554,4288,2.928,4289,2.928,4290,2.928,4291,2.928,4292,4.554,4293,2.928,4294,2.928,4295,2.928,4296,2.928,4297,2.928,4298,2.928,4299,4.554,4300,2.928,4301,2.928,4302,2.607,4303,2.928,4304,2.928,4305,2.928,4306,2.928,4307,2.928,4308,2.607,4309,2.928,4310,2.928,4311,2.928,4312,2.928,4313,2.928,4314,2.928,4315,5.587,4316,2.928,4317,2.928,4318,2.928,4319,2.928,4320,2.928,4321,2.928,4322,2.928,4323,2.928,4324,2.928,4325,2.928,4326,2.928,4327,2.928,4328,4.554,4329,4.554,4330,4.554,4331,4.554,4332,4.554,4333,4.554]],["title/components/UploadSelectComponent.html",[0,0.171,297,1.193]],["body/components/UploadSelectComponent.html",[0,0.277,1,0.825,2,0.18,3,0.174,4,0.636,5,0.869,6,0.885,8,0.157,15,1.218,19,0.796,20,2.673,22,0.73,24,0.007,26,2.079,27,1.77,30,1.197,32,0.332,33,0.532,35,1.694,38,0.975,39,1.562,42,2.989,44,0.717,47,3.123,60,0.338,64,0.74,65,1.277,66,1.132,71,1.188,74,1.467,76,0.915,77,1.715,86,1.012,87,0.847,88,0.795,105,1.321,106,2.123,108,1.177,110,0.81,113,0.888,132,0.289,135,1.555,145,0.112,146,0.076,165,3.381,172,0.614,173,1.284,174,0.939,178,1.746,179,0.885,180,0.885,181,0.81,182,1.33,183,0.796,184,0.825,185,1.6,186,1.777,187,0.839,188,1.099,189,2.136,190,0.839,191,2.001,192,0.825,193,0.839,194,0.839,195,0.885,196,0.825,197,1.33,198,0.839,199,0.885,200,0.825,201,0.885,202,0.81,203,0.81,204,1.415,205,1.598,206,0.796,207,0.825,208,0.825,209,0.81,210,0.885,211,0.839,212,1.905,213,0.839,214,0.825,215,0.839,216,0.839,217,0.839,218,0.825,219,0.885,220,0.81,221,0.839,222,0.885,223,0.825,224,0.885,225,0.825,226,0.796,227,1.254,228,0.885,229,0.825,230,0.885,231,0.796,232,0.825,233,0.885,234,0.81,235,0.885,236,1.467,237,0.885,238,0.81,239,1.464,240,0.885,241,0.81,242,0.885,243,0.81,244,0.885,245,0.783,246,0.885,247,0.825,248,0.769,249,0.825,250,0.839,251,0.885,252,0.825,253,0.885,254,0.885,255,0.825,256,0.885,257,0.825,258,0.885,259,0.825,260,0.885,261,0.769,262,0.885,263,0.81,264,0.825,265,0.885,266,0.825,267,0.839,268,0.885,269,0.81,270,0.839,271,1.763,272,0.81,273,0.839,274,0.67,275,0.839,276,0.825,277,0.825,278,0.825,279,0.839,280,0.839,281,0.885,282,0.81,283,0.825,284,0.885,285,0.825,286,0.854,287,0.825,288,0.885,289,0.825,290,0.885,291,0.825,292,0.885,293,0.825,294,0.885,295,1.776,296,0.885,297,1.656,298,2.153,299,0.796,300,0.885,301,0.81,302,0.885,303,0.81,304,0.885,305,0.81,306,0.885,307,0.81,308,0.885,309,0.81,310,0.854,311,0.885,312,0.81,313,0.854,314,0.783,315,0.885,316,0.003,317,0.003,341,1.596,349,1.716,353,0.658,360,1.57,385,2.211,415,1.48,431,2.228,444,2.242,445,2.937,465,2.436,466,2.436,494,2.494,549,2.765,550,4.524,551,5.279,552,3.829,555,3.683,556,4.994,558,3.01,563,3.01,564,3.01,565,3.01,566,2.436,873,2.765,901,3.096,902,2.806,904,3.683,905,2.068,911,2.441,923,2.462,929,2.398,936,1.784,948,2.039,1001,3.994,1018,4.46,1137,3.324,1426,2.956,1573,2.315,1610,4.524,1698,2.582,1699,2.582,1815,3.01,1816,7.69,1820,6.046,2170,2.765,2320,4.157,3086,2.436,4267,4.524,4274,4.524,4278,4.157,4283,4.524,4302,3.01,4334,8.37,4335,6.791,4336,6.791,4337,6.791,4338,5.083,4339,5.083,4340,6.107,4341,5.436,4342,5.083,4343,3.381,4344,3.381,4345,3.381,4346,3.381,4347,3.381,4348,3.381,4349,3.381,4350,3.381,4351,3.381,4352,5.083,4353,3.381,4354,5.083,4355,3.381,4356,5.083,4357,3.381,4358,3.381,4359,3.381,4360,3.381,4361,6.107,4362,3.381,4363,3.381,4364,3.381,4365,3.381,4366,3.381,4367,5.083,4368,6.791,4369,5.083,4370,5.083,4371,5.083]],["title/modules/UtilityModule.html",[318,1.094,2548,3.35]],["body/modules/UtilityModule.html",[2,0.308,3,0.298,8,0.268,23,2.23,24,0.007,58,1.993,60,0.401,132,0.493,134,2.304,141,3.047,145,0.285,146,0.129,172,1.047,247,2.344,248,1.313,252,2.344,255,2.344,285,2.344,286,1.457,287,2.344,289,2.344,307,2.304,316,0.005,317,0.005,318,1.65,320,2.356,325,3.082,326,2.074,327,1.916,329,3.243,330,2.884,595,3.356,623,3.481,624,2.653,626,5.57,938,4.825,1133,5.862,1134,7.241,1849,6.582,1859,5.136,2548,6.817,2750,4.407,3908,4.719,4063,5.136,4084,5.136,4372,5.136,4373,5.136,4374,5.77,4375,5.136,4376,5.77,4377,5.77,4378,5.77,4379,5.77]],["title/pipes/VisibleFieldsPipe.html",[1186,2.581,1848,3.526]],["body/pipes/VisibleFieldsPipe.html",[2,0.353,3,0.342,8,0.307,10,0.722,15,1.586,22,1.429,24,0.007,33,0.693,39,1.266,41,1.991,44,0.933,60,0.358,64,0.655,66,0.971,74,1.736,76,1.01,86,0.986,87,0.849,88,0.663,112,2.75,132,0.566,145,0.22,146,0.148,316,0.006,317,0.006,327,2.669,345,2.764,360,2.066,415,2.897,490,4.247,516,3.436,678,3.064,1026,5.04,1163,2.832,1186,4.567,1191,3.491,1197,5.792,1848,6.488,1854,6.499,1857,5.891,3747,6.139,4380,7.705,4381,5.891,4382,8.037,4383,8.037,4384,6.618,4385,8.037,4386,6.618,4387,6.618,4388,6.618,4389,6.618]],["title/interfaces/WithLoader.html",[332,1.35,888,2.581]],["body/interfaces/WithLoader.html",[0,0.296,2,0.386,3,0.374,8,0.336,10,0.791,24,0.007,32,0.71,33,0.888,55,1.099,60,0.3,64,0.59,145,0.241,236,2.003,316,0.006,317,0.006,332,2.56,424,3.464,494,3.973,524,5.546,888,4.475,2575,5.546,2612,5.923,4390,6.447,4391,6.447,4392,7.55]],["title/interfaces/WithNotifications.html",[332,1.35,889,2.951]],["body/interfaces/WithNotifications.html",[0,0.289,2,0.371,3,0.359,8,0.323,10,0.759,24,0.007,25,1.327,32,0.682,33,0.867,55,1.084,56,3.382,60,0.288,64,0.674,88,0.918,145,0.231,316,0.006,317,0.006,332,2.526,341,1.845,580,3.102,586,4.241,889,4.995,911,2.977,1016,4.995,1410,7.486,1594,4.506,2019,6.597,2024,7.372,3305,7.486,4393,6.192,4394,6.192]],["title/changelog.html",[1164,2.58,3153,2.818,4395,3.663]],["body/changelog.html",[0,0.28,4,0.662,5,1.347,7,1.148,14,2.685,15,0.844,18,1.32,24,0.006,25,1.003,27,1.74,33,0.725,34,2.162,35,1.66,37,2.412,38,0.753,39,0.674,40,1.662,41,1.894,42,2.048,43,0.874,44,0.977,55,1.096,59,2.412,60,0.307,61,1.859,64,0.287,70,1.884,71,1.313,72,1.644,74,1.677,76,0.443,84,2.991,88,0.743,101,2.304,102,1.707,103,1.923,108,0.816,112,1.948,113,0.86,116,2.048,118,1.58,119,2.946,135,3.187,139,2.049,146,0.174,174,1.28,176,2.834,185,1.961,188,1.268,204,1.533,209,0.844,220,0.844,227,1.718,231,1.235,234,0.844,245,0.816,248,1.686,267,0.874,271,1.824,272,0.844,274,1.373,276,0.859,278,0.859,298,1.192,314,0.816,316,0.004,317,0.004,318,1.172,326,1.267,333,1.917,335,1.377,337,3.407,349,2.531,350,2.971,360,0.906,394,1.805,397,1.506,405,1.472,407,2.048,427,3.136,430,2.209,431,2.159,443,2.765,444,2.134,457,2.125,460,4.093,487,2.765,490,2.953,492,1.542,494,1.439,496,2.094,500,1.407,506,1.805,509,3.64,513,2.946,516,1.506,521,2.209,544,2.946,552,2.209,554,1.754,555,2.125,568,3.518,569,2.304,577,3.407,583,2.294,619,1.98,621,2.125,622,1.542,629,2.539,643,5.34,647,2.539,654,3.772,672,2.539,679,2.691,689,3.136,697,3.518,737,2.049,738,2.209,768,2.304,779,2.881,780,4.402,783,3.772,791,2.125,798,5.699,814,1.98,861,2.61,890,2.685,898,3.775,902,1.293,905,1.775,911,1.267,923,3.358,929,4.055,938,2.304,980,2.049,1010,2.691,1011,3.136,1013,1.472,1015,2.691,1023,1.62,1030,1.917,1035,1.98,1042,3.287,1066,2.209,1083,4.003,1085,4.093,1088,3.64,1092,3.136,1120,2.412,1136,3.589,1137,3.428,1156,3.777,1159,2.691,1161,2.049,1222,3.762,1229,2.005,1239,3.136,1349,2.539,1365,3.428,1426,3.048,1437,4.287,1515,3.589,1546,2.125,1557,2.209,1593,2.691,1594,2.852,1595,4.347,1596,2.881,1597,2.539,1607,2.209,1620,3.136,1621,2.209,1622,3.048,1641,3.589,1649,3.302,1655,3.406,1668,2.691,1669,3.161,1692,2.209,1770,2.691,1794,2.304,1839,3.777,1874,2.049,1884,1.805,2015,2.351,2016,2.539,2089,2.881,2090,2.539,2193,4.781,2194,6.093,2225,3.428,2302,6.285,2316,2.765,2317,3.589,2359,2.881,2416,2.881,2418,3.136,2419,3.136,2420,6.171,2425,2.539,2426,2.691,2428,1.98,2576,2.412,2769,1.217,2968,4.846,2983,4.287,2985,2.539,3006,2.881,3039,2.049,3055,4.287,3056,2.881,3074,4.666,3153,3.589,3157,4.746,3191,4.746,3262,3.136,3384,3.136,3536,2.881,3554,2.881,3754,2.881,3962,2.539,3994,2.125,4007,2.881,4122,8.237,4234,3.136,4243,3.136,4278,4.287,4395,3.136,4396,5.932,4397,3.523,4398,3.523,4399,3.523,4400,3.523,4401,3.523,4402,6.932,4403,3.523,4404,3.523,4405,3.523,4406,3.523,4407,3.136,4408,3.523,4409,3.136,4410,2.881,4411,3.523,4412,3.523,4413,5.242,4414,5.242,4415,3.523,4416,2.946,4417,3.523,4418,3.523,4419,3.589,4420,3.523,4421,3.523,4422,3.523,4423,3.523,4424,3.523,4425,3.136,4426,8.265,4427,3.523,4428,3.523,4429,3.136,4430,3.136,4431,3.523,4432,3.523,4433,3.523,4434,3.523,4435,3.523,4436,4.666,4437,3.523,4438,3.523,4439,3.136,4440,3.523,4441,3.136,4442,3.523,4443,3.523,4444,3.523,4445,3.523,4446,3.523,4447,3.523,4448,3.523,4449,3.523,4450,3.523,4451,3.523,4452,3.523,4453,3.523,4454,3.523,4455,3.523,4456,3.523,4457,5.242,4458,3.523,4459,5.242,4460,3.523,4461,3.523,4462,3.523,4463,3.523,4464,3.523,4465,3.523,4466,3.523,4467,3.523,4468,6.932,4469,4.666,4470,5.242,4471,2.691,4472,3.523,4473,3.523,4474,3.523,4475,3.523,4476,3.523,4477,3.523,4478,3.523,4479,3.136,4480,3.523,4481,3.523,4482,3.523,4483,3.523,4484,3.523,4485,3.523,4486,3.523,4487,3.523,4488,3.523,4489,2.304,4490,3.523,4491,3.523,4492,3.523,4493,3.136,4494,3.523,4495,3.523,4496,3.523,4497,3.523,4498,3.523,4499,3.523,4500,3.523,4501,3.523,4502,3.523,4503,3.523,4504,3.523,4505,3.523,4506,3.523,4507,2.691,4508,3.523,4509,6.259,4510,3.523,4511,3.523,4512,2.881,4513,3.523,4514,3.136,4515,5.242,4516,3.523,4517,5.242,4518,3.523]],["title/coverage.html",[4519,5.893]],["body/coverage.html",[0,0.345,1,0.769,8,0.146,9,3.941,12,2.158,19,0.742,24,0.007,41,0.669,43,0.782,64,0.257,71,0.514,110,0.755,112,0.886,146,0.197,174,1.431,181,0.755,183,0.742,184,0.769,187,0.782,188,1.176,190,0.782,192,0.769,194,0.782,196,0.769,198,0.782,200,0.769,202,0.755,203,0.755,204,1.043,206,0.742,207,0.769,208,0.769,211,0.782,213,0.782,214,0.769,215,0.782,216,0.782,217,0.782,218,0.769,220,0.755,221,0.782,223,0.769,225,0.769,227,1.081,229,0.769,231,0.742,232,0.769,234,0.755,236,0.681,238,0.755,241,0.755,243,0.755,245,0.73,247,0.769,249,0.769,252,0.769,255,0.769,257,0.769,259,0.769,261,0.717,263,0.755,264,0.769,266,0.769,269,0.755,270,0.782,272,0.755,273,0.782,274,0.954,275,0.782,276,0.769,277,0.769,278,0.769,279,0.782,280,0.782,282,0.755,283,0.769,285,0.769,287,0.769,289,0.769,291,0.769,293,0.769,295,0.769,297,0.769,298,0.717,299,0.742,301,0.755,303,0.755,305,0.755,307,0.755,309,0.755,312,0.755,316,0.003,317,0.003,332,2.525,333,1.715,334,4.785,340,2.737,344,1.527,347,2.408,349,1.354,351,1.615,390,6.021,391,2.272,392,4.217,407,1.232,412,1.976,423,2.806,433,2.323,482,2.806,483,2.578,484,5.209,486,1.715,492,1.38,521,1.976,537,2.272,538,1.976,543,3.022,547,2.806,548,2.578,549,6.089,551,1.901,573,2.272,574,2.806,575,2.806,580,1.181,586,1.348,587,1.487,619,1.772,620,2.578,634,2.578,637,2.578,641,2.806,681,6.354,701,2.061,772,1.663,773,2.806,832,3.673,860,2.806,882,2.806,888,1.663,889,1.901,899,1.772,901,1.067,902,1.157,904,1.901,937,2.578,939,3.941,946,3.681,988,2.806,989,4.857,1001,2.061,1040,1.833,1041,2.806,1047,1.772,1129,2.272,1130,1.901,1131,1.901,1142,2.907,1144,4.29,1148,4.006,1149,2.158,1155,2.806,1179,2.408,1186,3.457,1187,2.272,1188,2.806,1189,2.158,1205,4.29,1219,2.408,1342,3.941,1348,3.941,1356,2.158,1362,2.806,1401,3.941,1402,2.578,1403,2.806,1415,2.272,1416,2.806,1435,2.806,1491,2.806,1511,5.916,1514,1.976,1521,1.833,1571,2.806,1590,2.806,1591,1.772,1681,1.901,1682,4.29,1684,4.785,1702,2.408,1718,2.158,1781,7.094,1810,2.806,1811,2.806,1816,2.578,1817,2.578,1818,2.272,1819,2.806,1823,2.806,1833,2.272,1834,2.806,1836,1.833,1847,2.272,1848,2.272,1854,2.158,1872,2.806,1931,2.061,1932,3.941,1933,2.272,1995,2.806,2000,2.806,2047,2.806,2055,2.061,2063,2.408,2084,2.806,2085,2.578,2087,2.806,2127,2.806,2202,2.806,2264,2.806,2265,2.578,2266,2.806,2290,2.806,2303,2.806,2316,1.663,2317,2.158,2413,2.806,2431,4.469,2432,4.722,2475,2.578,2476,2.806,2513,2.578,2514,2.806,2557,2.806,2614,2.806,2620,4.469,2621,2.806,2653,2.578,2655,2.578,2666,2.806,2701,2.806,2716,2.806,2749,2.806,2750,2.408,2751,5.359,2806,2.408,2813,2.408,2827,2.806,2828,2.806,2834,2.408,2835,2.806,2836,2.806,2879,2.806,2967,2.806,2982,2.806,3037,4.834,3087,2.408,3143,2.578,3144,2.806,3145,2.806,3167,2.806,3231,3.941,3253,2.408,3271,2.806,3276,2.806,3342,2.806,3381,2.806,3393,2.806,3394,2.806,3427,2.806,3471,2.806,3487,5.705,3511,2.408,3653,2.578,3654,2.806,3675,4.469,3688,3.941,3689,2.806,3731,2.806,3732,2.806,3734,3.941,3782,2.806,3783,2.806,3791,2.806,3883,2.806,3907,2.806,3908,2.578,3941,2.806,3942,2.806,3948,2.272,3949,5.393,3953,2.578,3954,2.578,3955,2.578,3964,2.578,3988,2.806,4008,3.681,4010,4.29,4016,2.806,4048,2.806,4066,2.806,4106,2.806,4157,2.578,4190,2.806,4262,2.806,4334,2.806,4380,2.806,4381,2.806,4390,2.806,4391,2.806,4393,2.806,4394,2.806,4429,4.29,4430,2.806,4439,5.833,4441,4.29,4519,2.806,4520,3.152,4521,6.553,4522,3.152,4523,9.321,4524,3.152,4525,7.445,4526,3.152,4527,3.152,4528,3.152,4529,3.152,4530,3.152,4531,4.82,4532,3.152,4533,5.851,4534,3.152,4535,3.152,4536,3.152,4537,4.82,4538,3.152,4539,3.152,4540,3.152,4541,3.152,4542,6.553,4543,3.152,4544,3.152,4545,6.553,4546,3.152,4547,3.152,4548,3.152,4549,2.806,4550,2.806,4551,4.29,4552,2.806,4553,4.82,4554,4.82,4555,3.152,4556,3.152,4557,3.152,4558,3.152,4559,3.152,4560,7.06,4561,3.152,4562,4.82,4563,5.851,4564,3.152,4565,5.851,4566,4.82,4567,5.851,4568,3.152,4569,3.152,4570,3.152,4571,3.152,4572,3.152,4573,3.152,4574,3.152,4575,4.82,4576,3.152,4577,3.152,4578,6.553,4579,3.152,4580,4.82,4581,3.152,4582,6.553,4583,3.152,4584,4.82,4585,3.152,4586,5.851,4587,3.152,4588,3.152,4589,3.152,4590,4.82,4591,4.82,4592,5.851,4593,4.82,4594,5.851,4595,3.152,4596,3.152,4597,2.806,4598,2.806,4599,4.82,4600,3.152,4601,3.152,4602,3.152,4603,7.06,4604,3.152,4605,4.82,4606,3.152,4607,3.152,4608,3.152,4609,7.445,4610,3.152,4611,3.152,4612,4.82,4613,4.82,4614,3.152,4615,3.152,4616,4.82,4617,3.152,4618,3.152,4619,3.152,4620,3.152,4621,4.82,4622,3.152,4623,3.152,4624,3.152,4625,5.851,4626,4.82,4627,4.82,4628,3.152,4629,2.806,4630,2.806,4631,3.152,4632,3.152,4633,3.152,4634,3.152,4635,3.152,4636,3.152,4637,3.152,4638,3.152,4639,3.152,4640,3.152,4641,3.152,4642,3.152,4643,3.152,4644,4.82,4645,3.152,4646,3.152,4647,4.82,4648,2.806,4649,4.29,4650,2.806,4651,5.851,4652,3.152,4653,5.851,4654,5.851,4655,3.152,4656,3.152,4657,3.152,4658,3.152,4659,3.152,4660,4.82,4661,3.152,4662,3.152,4663,3.152,4664,3.152,4665,3.152,4666,3.152,4667,3.152,4668,3.152,4669,3.152,4670,3.152,4671,3.152,4672,2.806,4673,2.806,4674,2.806,4675,2.806,4676,3.152]],["title/dependencies.html",[58,2.027,4416,2.313]],["body/dependencies.html",[12,4.751,13,3.9,24,0.007,58,2.396,132,0.593,134,2.771,175,2.913,209,1.663,316,0.006,317,0.006,502,3.454,595,4.035,629,5.959,630,6.176,643,5,1136,4.751,1137,4.537,1181,4.751,1182,5,1809,5.959,1957,5.674,2002,6.176,2010,6.176,2984,5.674,4107,5,4396,5.299,4471,5.299,4514,6.176,4677,7.361,4678,6.938,4679,6.176,4680,9.582,4681,6.176,4682,6.938,4683,6.176,4684,6.176,4685,5,4686,6.938,4687,6.938,4688,6.938,4689,6.938,4690,6.938,4691,6.938,4692,6.938,4693,6.176,4694,6.938,4695,6.938,4696,6.938,4697,6.938,4698,6.938]],["title/miscellaneous/functions.html",[340,2.452,4699,3.143]],["body/miscellaneous/functions.html",[24,0.007,32,0.71,65,1.361,86,1.341,87,0.882,88,0.902,316,0.006,317,0.006,340,3.025,341,1.511,424,2.958,441,2.604,620,5.923,628,6.447,637,7.356,749,7.312,1655,4.894,3949,5.532,3953,6.936,3954,6.936,3955,6.936,3963,5.923,3968,6.447,3970,6.447,3971,6.447,4699,5.532,4700,7.243,4701,8.006]],["title/index.html",[32,0.404,1164,2.58,3153,2.818]],["body/index.html",[0,0.306,3,0.353,8,0.397,14,4.498,18,1.925,24,0.007,32,0.671,34,2.832,55,1.04,56,2.098,58,1.775,60,0.382,61,4.633,62,4.462,64,0.418,66,0.621,71,1.116,84,1.612,87,0.504,135,2.363,145,0.171,146,0.115,227,0.949,239,1.64,274,1.355,316,0.005,317,0.005,318,1.909,320,3.141,327,2.272,336,2.925,338,4.126,345,2.146,422,2.363,449,2.51,492,2.249,500,2.052,502,4.082,511,3.504,513,4.609,568,4.322,580,2.881,583,3.589,590,2.988,592,4.202,593,4.29,644,3.36,654,3.722,673,4.126,735,3.222,768,3.36,770,4.638,774,4.202,791,4.126,838,4.822,907,4.462,920,3.703,930,3.449,995,5.874,1008,5.542,1013,2.146,1069,3.099,1164,4.29,1233,7.299,1335,6.29,1607,3.222,1621,3.222,1641,4.684,1644,5.557,1669,4.126,1694,4.322,1718,4.684,1770,3.925,1874,5.107,1967,3.099,2019,3.703,2193,3.925,2226,6.846,2298,4.574,2357,5.266,2563,3.703,2968,3.36,2984,4.202,3053,4.574,3153,3.518,3157,3.518,3175,4.474,3387,3.703,3579,3.925,3756,4.202,3847,4.574,3887,3.36,3962,6.459,4022,3.925,4067,6.29,4308,4.574,4396,3.925,4410,4.202,4416,5.232,4419,5.266,4471,3.925,4507,3.925,4677,4.574,4685,6.459,4702,5.138,4703,5.138,4704,7.691,4705,5.138,4706,5.138,4707,4.574,4708,5.138,4709,6.846,4710,5.138,4711,7.299,4712,5.138,4713,5.138,4714,5.138,4715,6.09,4716,4.29,4717,5.595,4718,5.138,4719,6.983,4720,6.841,4721,5.138,4722,5.138,4723,5.138,4724,5.138,4725,5.138,4726,4.574,4727,4.574,4728,5.138,4729,5.138,4730,5.138,4731,5.138,4732,5.138,4733,5.138,4734,6.953,4735,5.874,4736,4.574,4737,5.138,4738,5.138,4739,5.138,4740,5.138,4741,5.138,4742,5.138,4743,5.138,4744,5.138,4745,6.841,4746,6.841,4747,5.138,4748,5.138,4749,5.138,4750,5.138,4751,5.138,4752,5.138,4753,5.138,4754,5.138,4755,5.138,4756,5.138,4757,5.138,4758,5.138,4759,6.841,4760,5.138,4761,5.138,4762,5.138,4763,5.138,4764,5.138,4765,5.138,4766,5.138,4767,5.138,4768,6.09,4769,6.841,4770,5.138,4771,5.138,4772,5.138,4773,4.574,4774,5.138,4775,5.138]],["title/modules.html",[318,1.48]],["body/modules.html",[24,0.006,175,3.517,176,3.517,316,0.006,317,0.006,318,1.524,319,4.912,612,4.912,618,4.111,1120,4.667,1126,4.912,1127,4.667,1128,4.458,1841,4.667,1849,4.667,1850,4.458,1851,4.111,1852,4.458,1853,4.458,2542,4.667,2548,4.667,2647,5.206,2872,4.912,3222,4.912,3874,4.912,4184,4.912,4341,8.885,4776,9.982]],["title/overview.html",[4777,5.056]],["body/overview.html",[0,0.087,1,1.853,19,1.181,23,0.75,24,0.007,25,1.217,58,0.857,110,1.696,141,0.93,145,0.083,146,0.055,172,0.45,174,0.458,181,1.696,183,1.181,184,1.726,187,1.756,190,1.756,192,1.726,194,1.756,196,1.726,198,1.756,200,1.726,202,1.201,203,1.201,206,1.181,207,1.726,208,1.726,211,1.756,213,1.756,214,1.726,215,1.756,216,1.756,217,1.756,218,1.726,220,1.696,221,1.756,223,1.726,225,1.726,229,1.726,231,1.666,232,1.726,234,1.696,236,1.528,238,1.696,241,1.696,243,1.696,245,1.638,247,1.726,249,1.853,252,1.726,255,1.726,257,1.726,259,1.726,261,1.61,263,1.696,264,1.726,266,1.726,269,1.696,270,1.756,272,1.696,273,1.756,275,1.756,276,1.726,277,1.726,278,1.726,279,1.756,280,1.756,282,1.821,283,1.726,285,1.726,287,1.726,289,1.726,291,1.726,293,1.726,295,1.726,297,1.726,299,1.666,301,1.696,303,1.696,305,1.696,307,1.696,309,1.696,312,1.696,316,0.003,317,0.003,318,0.893,319,4.538,320,1.013,321,2.209,322,2.209,323,2.209,324,2.209,325,1.669,326,0.892,327,0.824,332,0.685,407,1.959,433,0.627,486,2.728,538,3.143,551,3.023,573,3.613,587,2.365,612,6.524,613,2.209,614,2.209,615,2.209,616,2.209,617,2.209,618,5.724,619,2.817,804,1.699,899,2.817,902,1.839,1040,2.916,1047,2.817,1120,6.648,1121,2.209,1122,2.209,1123,2.209,1124,2.209,1125,2.209,1126,6.905,1127,6.521,1128,5.538,1129,3.613,1130,3.023,1131,3.023,1186,1.309,1187,5.099,1189,4.844,1521,2.916,1802,2.209,1803,2.209,1805,2.209,1806,2.209,1841,6.648,1842,2.209,1843,2.209,1844,2.209,1845,2.209,1846,2.209,1847,5.099,1848,5.099,1849,6.303,1850,5.825,1851,5.163,1852,5.471,1853,5.211,1854,3.432,1931,3.278,2055,3.278,2078,2.209,2079,2.209,2080,2.209,2081,2.209,2282,2.209,2283,2.209,2284,2.209,2366,3.051,2542,6.486,2543,2.209,2544,2.209,2545,2.209,2546,2.209,2547,2.209,2548,6.383,2607,2.209,2608,2.209,2609,2.209,2610,2.209,2647,6.468,2648,2.209,2649,2.209,2651,2.209,2652,2.209,2872,4.538,2873,2.209,2874,2.209,2876,2.209,2995,1.788,3222,6.332,3223,2.209,3224,2.209,3226,2.209,3227,2.209,3464,2.209,3465,2.209,3467,2.209,3468,2.209,3724,2.209,3725,2.209,3727,2.209,3728,2.209,3787,2.209,3788,2.209,3874,6.283,3875,2.209,3876,2.209,3879,2.209,3991,2.209,3992,2.209,4184,4.538,4185,2.209,4186,2.209,4187,2.209,4256,2.209,4258,2.209,4372,2.209,4373,2.209,4375,2.209,4777,1.895,4778,2.482,4779,2.482,4780,2.482]],["title/miscellaneous/variables.html",[681,4.23,4699,3.143]],["body/miscellaneous/variables.html",[0,0.056,4,0.691,8,0.269,9,1.317,12,2.996,13,1.564,24,0.007,25,0.701,26,1.209,27,0.287,32,0.158,34,1.269,35,0.523,38,1.101,40,0.76,41,0.342,42,0.629,54,1.433,55,0.585,60,0.067,64,0.634,65,0.303,71,0.806,74,0.601,76,0.55,87,0.99,102,0.78,108,0.85,113,0.821,122,0.905,126,0.629,130,0.876,138,2.275,139,0.936,140,1.16,141,0.603,142,1.296,146,0.143,162,1.706,165,0.802,173,0.407,174,0.297,175,0.567,188,0.628,226,0.865,227,0.514,238,0.386,239,1.469,241,0.386,243,0.386,248,0.366,274,0.319,298,0.633,310,1.105,316,0.002,317,0.002,318,0.622,325,1.162,327,0.535,332,1.014,335,1.71,336,1.87,337,1.279,339,3.041,340,1.535,349,0.452,350,0.616,360,1.125,394,1.425,401,0.971,416,2.516,430,1.01,441,1,449,0.591,460,1.053,490,1.313,517,1.348,567,1.348,577,1.279,578,1.678,580,2.025,581,1.514,586,0.688,590,2.873,602,2.477,654,1.514,655,1.317,678,0.535,681,1.16,682,2.249,686,3.496,703,0.971,735,1.745,755,3.27,779,5.013,783,0.876,788,3.605,803,1.102,832,0.74,838,1.01,844,0.849,862,1.618,868,2.331,875,1.514,886,2.648,901,1.482,912,0.849,930,1.648,977,0.722,980,2.137,1009,2.065,1012,2.861,1013,2.422,1017,3.153,1018,2.065,1021,1.468,1023,0.74,1026,1.745,1027,1.433,1029,1.317,1115,0.971,1136,1.102,1137,1.053,1159,4.129,1161,0.936,1193,1.16,1209,2.275,1219,3.342,1221,3.342,1222,2.393,1226,2.477,1227,1.433,1229,1.064,1361,4.563,1365,1.053,1375,1.433,1383,3.039,1440,1.317,1595,3.39,1598,1.882,1636,0.971,1643,1.564,1648,1.317,1655,0.876,1702,2.806,1715,3.005,1716,1.317,1717,1.317,1718,1.905,1719,1.317,1734,3.153,1735,1.23,1736,1.905,1769,1.23,1780,0.876,1818,2.005,1884,0.825,1893,2.477,1932,1.317,1933,3.56,1962,1.433,2009,4.417,2016,1.16,2049,4.694,2063,2.806,2085,3.005,2090,2.005,2093,3.005,2099,5.16,2156,3.27,2344,1.16,2368,3.342,2497,1.053,2524,1.317,2593,1.16,2603,1.433,2626,3.895,2653,1.317,2655,3.005,2756,1.317,2806,2.806,2813,2.806,2904,1.433,2913,1.433,2926,2.477,3006,6.528,3055,2.275,3057,2.477,3072,1.433,3091,1.23,3122,1.317,3123,3.005,3179,3.005,3180,1.317,3181,1.317,3231,1.317,3233,4.041,3253,4.129,3254,1.433,3305,1.317,3360,1.433,3387,3.896,3389,4.428,3395,2.477,3410,2.477,3416,1.433,3428,2.477,3516,1.433,3536,6.449,3554,1.317,3718,1.433,3887,2.861,3949,1.23,3963,1.317,3964,3.005,3965,1.433,3966,1.433,3967,1.433,3989,3.895,3994,0.971,4022,2.125,4067,1.317,4107,1.16,4157,3.005,4229,2.477,4232,2.477,4392,1.433,4409,6.298,4469,2.477,4493,1.433,4507,2.125,4549,1.433,4550,2.477,4551,1.433,4552,3.27,4597,1.433,4598,2.477,4629,1.433,4630,2.477,4648,1.433,4649,3.895,4650,1.433,4672,1.433,4673,3.895,4674,1.433,4675,2.477,4685,1.16,4699,1.23,4701,1.433,4768,1.433,4781,1.61,4782,2.782,4783,1.61,4784,1.61,4785,1.61,4786,1.61,4787,1.61,4788,1.61,4789,1.61,4790,1.61,4791,1.61,4792,1.61,4793,1.61,4794,1.61,4795,1.61,4796,1.433,4797,2.782,4798,1.61,4799,1.61,4800,1.61,4801,1.61,4802,2.782,4803,1.61,4804,1.61,4805,5.797,4806,3.674,4807,2.782,4808,6.664,4809,1.61,4810,2.782,4811,1.61,4812,1.61,4813,3.674,4814,4.375,4815,5.797,4816,1.61,4817,1.61,4818,4.375,4819,3.674,4820,1.61,4821,1.61,4822,1.61,4823,1.61,4824,1.61,4825,2.782,4826,4.375,4827,3.674,4828,6.415,4829,5.407,4830,4.375,4831,1.61,4832,2.782,4833,3.674,4834,1.61,4835,1.61,4836,1.61,4837,2.782,4838,2.782,4839,3.674,4840,4.941,4841,1.61,4842,4.375,4843,1.61,4844,1.61,4845,2.782,4846,1.61,4847,5.797,4848,5.407,4849,5.797,4850,2.782,4851,2.782,4852,2.782,4853,2.782,4854,2.782,4855,2.782,4856,2.782,4857,1.61,4858,5.407,4859,1.61,4860,1.61,4861,2.782,4862,1.61,4863,1.61,4864,1.61,4865,1.61,4866,1.61,4867,1.61,4868,2.782,4869,4.375,4870,1.61,4871,1.61,4872,2.782,4873,1.61,4874,1.61,4875,1.61,4876,1.61,4877,1.61,4878,2.782,4879,2.782,4880,1.61,4881,1.61,4882,1.61,4883,2.782,4884,2.782,4885,2.782,4886,1.61,4887,1.61,4888,1.61,4889,2.782,4890,1.61,4891,2.782,4892,1.61,4893,1.61,4894,1.61,4895,1.61,4896,2.782,4897,2.782,4898,1.61,4899,1.61,4900,1.61,4901,1.61,4902,1.61,4903,3.674,4904,1.61,4905,1.61,4906,1.61,4907,1.61,4908,1.61,4909,4.941,4910,1.61,4911,1.61,4912,1.61,4913,1.61,4914,1.61,4915,4.375,4916,1.61,4917,1.61,4918,1.61,4919,1.61,4920,3.674,4921,1.61,4922,1.61,4923,1.433,4924,1.61,4925,1.61,4926,1.61,4927,1.61,4928,2.782,4929,1.61,4930,1.61,4931,1.61,4932,1.61,4933,3.674,4934,2.782,4935,1.61,4936,1.61,4937,2.782,4938,1.61,4939,2.782,4940,4.375,4941,2.782,4942,1.61,4943,1.61,4944,4.375,4945,1.61,4946,1.61,4947,1.61,4948,2.782,4949,1.61,4950,2.782,4951,4.941,4952,4.941,4953,1.61,4954,1.61,4955,1.61,4956,1.61,4957,1.61,4958,1.61,4959,1.61,4960,1.61,4961,1.61,4962,1.61,4963,1.61,4964,1.61,4965,1.61,4966,1.61,4967,2.782,4968,4.375,4969,1.61,4970,1.61,4971,1.61,4972,1.61,4973,1.61,4974,1.433,4975,2.782,4976,2.477,4977,2.782,4978,1.61,4979,2.782,4980,1.61,4981,1.61,4982,1.61,4983,1.61,4984,1.61,4985,1.61,4986,1.61,4987,1.61,4988,4.375,4989,1.61,4990,1.61,4991,1.61,4992,1.61,4993,1.61,4994,1.433,4995,1.61,4996,1.61,4997,1.61,4998,2.782,4999,6.882,5000,1.61,5001,3.674,5002,2.782,5003,1.61,5004,1.61,5005,1.61,5006,1.61,5007,2.782,5008,1.61,5009,1.61,5010,1.61,5011,1.61,5012,1.61,5013,1.61,5014,1.61,5015,1.61,5016,1.61,5017,1.61,5018,1.61,5019,1.61,5020,1.61,5021,1.61,5022,2.782,5023,1.61,5024,2.782,5025,1.61,5026,1.61,5027,1.61,5028,1.61,5029,1.61,5030,1.61,5031,1.61,5032,1.61,5033,1.61,5034,1.61,5035,2.782,5036,1.61,5037,1.61,5038,1.61,5039,1.61,5040,1.61,5041,1.61,5042,1.61,5043,1.61,5044,1.61,5045,1.61,5046,1.61,5047,1.61,5048,1.61,5049,1.61,5050,1.61,5051,3.674,5052,1.61,5053,1.61,5054,1.61,5055,1.61,5056,1.61,5057,1.61,5058,1.61,5059,1.61,5060,1.61,5061,2.782,5062,3.674,5063,1.61,5064,1.61,5065,1.61,5066,2.782,5067,5.407,5068,2.782,5069,1.61,5070,2.782,5071,2.782,5072,2.782,5073,1.61,5074,4.375,5075,1.61,5076,1.61,5077,1.433,5078,2.782,5079,1.61,5080,1.61,5081,1.61,5082,2.782,5083,4.375,5084,2.782,5085,2.782,5086,2.782,5087,1.61,5088,1.61,5089,1.61,5090,1.61,5091,1.61,5092,1.61,5093,1.61,5094,1.61,5095,2.782,5096,2.782,5097,2.782,5098,1.61,5099,4.375,5100,1.61,5101,1.61,5102,2.782,5103,1.61,5104,1.61,5105,1.61,5106,1.61,5107,1.61,5108,1.61,5109,1.61,5110,1.61,5111,1.61,5112,1.61,5113,1.61,5114,1.61,5115,1.61,5116,1.61,5117,1.61,5118,1.61,5119,2.782,5120,2.782,5121,1.61,5122,1.61,5123,1.61,5124,1.61,5125,3.674,5126,1.61,5127,1.61,5128,1.61,5129,1.61,5130,1.61,5131,1.61,5132,1.61,5133,1.61,5134,1.61,5135,1.61,5136,1.61,5137,1.61,5138,1.61,5139,1.61,5140,1.61,5141,1.61,5142,1.61,5143,1.61,5144,1.61,5145,1.61,5146,1.61,5147,1.61,5148,1.61,5149,1.61,5150,1.61,5151,1.61,5152,1.61,5153,1.61,5154,1.61,5155,2.782,5156,1.61,5157,1.61,5158,1.61,5159,1.61,5160,1.61,5161,1.61,5162,1.61,5163,1.61]],["title/additional-documentation/project-setup-tutorial.html",[594,0.893,2769,1.078,3994,1.883,4419,2.138,4489,2.042]],["body/additional-documentation/project-setup-tutorial.html",[0,0.271,2,0.281,8,0.244,14,2.695,23,2.101,24,0.007,25,1.114,27,1.535,34,1.818,44,0.98,55,1.019,56,2.149,58,1.818,60,0.393,62,2.863,71,1.404,74,1.501,85,3.603,87,0.516,88,0.528,102,2.549,103,1.931,113,0.611,132,0.45,134,2.102,141,1.971,142,1.666,145,0.259,146,0.118,162,1.818,175,2.449,209,1.261,316,0.005,317,0.005,318,1.177,320,2.149,330,2.057,335,3.654,336,2.971,360,1.353,403,5.684,487,3.667,496,2.102,502,2.62,509,4.042,513,2.958,581,2.863,586,2.971,595,3.061,622,2.304,624,2.42,644,6.268,647,5.009,649,5.684,650,6.322,652,5.608,653,5.684,654,4.234,673,3.174,697,2.958,769,6.927,770,4.694,788,2.958,789,3.061,803,3.603,804,3.603,838,3.3,901,1.782,907,3.782,924,2.776,930,2.36,980,3.061,1013,2.903,1018,2.958,1021,2.776,1069,3.174,1086,6.187,1120,5.668,1163,1.854,1164,4.358,1229,2.013,1622,3.061,1643,2.958,1644,4.814,1668,4.019,1736,3.603,1808,4.019,1809,5.009,1874,4.042,1951,4.304,2016,3.792,2075,4.192,2194,3.3,2364,3.603,2497,3.441,2576,4.759,2578,4.042,2968,5.628,2995,3.792,3056,4.304,3062,3.3,3125,5.308,3149,3.906,3175,3.441,3411,4.684,3579,5.944,3994,3.174,3997,5.684,4022,4.019,4396,5.944,4410,4.304,4416,4.374,4419,6.266,4471,4.019,4489,5.089,4679,6.187,4681,4.684,4685,3.792,4709,6.187,4716,4.358,4717,4.304,4734,6.322,4735,4.019,4736,7.368,4773,4.684,5164,5.263,5165,5.668,5166,4.684,5167,5.263,5168,6.95,5169,6.95,5170,5.263,5171,9.423,5172,5.263,5173,5.263,5174,5.263,5175,5.263,5176,4.684,5177,6.95,5178,5.263,5179,5.263,5180,5.263,5181,5.263,5182,5.263,5183,5.263,5184,5.263,5185,5.263,5186,7.782,5187,5.263,5188,5.263,5189,7.782,5190,6.95,5191,5.263,5192,5.263,5193,5.263,5194,5.263,5195,5.263,5196,5.263,5197,5.263,5198,5.009,5199,5.263,5200,5.263,5201,6.95,5202,4.684,5203,5.263,5204,4.019,5205,5.263,5206,5.263,5207,5.263,5208,5.263,5209,5.263,5210,5.263,5211,5.263,5212,5.263,5213,5.263,5214,5.263]],["title/additional-documentation/project-setup-tutorial/routes.html",[487,2.171,594,1.177,2769,1.421]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.328,4,1.345,24,0.007,60,0.296,70,3.028,71,1.374,142,1.715,162,2.472,316,0.006,317,0.006,335,2.797,338,5.08,449,2.626,487,5.086,513,5.03,788,4.022,789,4.162,798,4.317,890,3.666,1016,4.317,1644,4.162,2075,4.317,2194,4.488,2225,4.68,3062,5.281,3818,6.371,4436,6.371,4489,5.508,4734,5.466,5215,7.157,5216,7.157,5217,7.157,5218,7.157,5219,7.157,5220,7.157,5221,7.497,5222,7.157,5223,7.157]],["title/additional-documentation/project-setup-tutorial/authorization.html",[594,1.177,2769,1.421,5204,3.143]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.254,4,1.599,24,0.006,55,0.862,61,3.841,62,3.962,70,3.058,71,1.188,74,1.573,162,2.515,245,1.685,248,2.051,316,0.006,317,0.006,335,3.325,415,3.187,449,2.671,487,4.901,584,6.131,788,4.092,789,4.235,893,5.564,1013,3.042,1229,2.785,1644,4.235,1874,4.235,2075,4.392,2225,4.762,2720,5.955,3994,4.392,4419,4.986,4489,5.895,5204,6.498,5224,6.482,5225,6.482,5226,6.482,5227,6.482]],["title/additional-documentation/project-setup-tutorial/localization.html",[594,1.177,2428,2.313,2769,1.421]],["body/additional-documentation/project-setup-tutorial/localization.html",[0,0.292,3,0.366,4,1.576,24,0.007,30,1.673,55,0.993,60,0.294,87,0.696,113,0.824,139,4.13,145,0.236,146,0.159,316,0.006,317,0.006,351,3.637,375,4.453,457,4.283,583,3.108,598,2.405,678,2.359,796,4.862,901,3.284,902,3.076,1013,2.966,1161,4.13,1186,3.746,1374,5.117,1694,3.991,1794,4.644,1874,4.13,2015,3.185,2075,4.283,2428,5.014,2578,4.13,2593,5.117,3149,3.991,3351,5.424,3994,4.283,3995,7.296,3996,6.321,3997,5.807,3998,6.321,3999,6.321,4000,6.321,4001,6.321,4002,6.321,4003,6.321,4004,7.463,4005,6.856,4006,5.807]],["title/additional-documentation/project-setup-tutorial/custom-fields-config.html",[41,0.663,349,0.877,594,0.893,905,1.057,2769,1.078]],["body/additional-documentation/project-setup-tutorial/custom-fields-config.html",[0,0.213,7,1.987,24,0.007,25,0.978,27,1.088,33,0.8,38,1.406,41,1.952,42,3.419,43,1.514,55,0.722,56,2.491,64,0.497,71,0.995,74,1.651,76,1.156,87,0.819,103,2.804,112,2.583,113,0.887,145,0.203,146,0.136,188,1.199,204,1.088,316,0.005,317,0.005,340,2.548,344,2.955,349,2.345,350,3.447,360,1.568,394,3.914,431,1.777,441,2.193,496,3.053,500,3.053,506,3.124,569,5.458,598,2.066,836,4.609,861,4.155,890,3.124,905,2.066,930,3.428,977,2.735,1016,3.679,1021,3.218,1023,2.804,1028,4.854,1066,3.824,1130,4.609,1163,2.149,1181,4.176,1191,3.218,1216,4.176,1219,4.658,1229,2.333,1235,4.445,1426,3.547,1514,3.824,1598,4.275,1622,4.854,1644,3.547,1655,3.319,1660,3.989,1663,4.395,1732,3.824,1836,3.547,2274,3.989,2424,5.429,2428,3.428,2906,5.837,3039,3.547,3062,3.824,3093,5.429,3192,4.658,3387,4.395,4923,5.429,5221,5.429,5228,6.099,5229,4.988,5230,6.099,5231,6.099,5232,6.099,5233,6.099,5234,5.429,5235,4.988,5236,6.099,5237,6.099,5238,6.803,5239,6.099,5240,6.099,5241,6.099]],["title/additional-documentation/project-setup-tutorial/custom-entry-list.html",[188,0.448,204,0.557,594,0.893,905,1.057,2769,1.078]],["body/additional-documentation/project-setup-tutorial/custom-entry-list.html",[0,0.291,4,0.905,18,1.804,24,0.007,26,1.005,27,1.168,33,0.963,34,1.663,35,0.905,38,1.288,41,1.97,42,3.264,43,2.188,44,1.178,55,1.063,64,0.65,66,0.791,70,1.731,74,1.607,75,1.04,76,1.128,84,2.505,103,2.403,112,2.091,113,1,118,3.746,121,1.511,123,2.333,145,0.16,146,0.108,162,1.663,176,2.307,188,1.266,204,1.424,263,1.57,314,1.115,316,0.005,317,0.004,327,1.6,336,2.059,344,2.333,349,2.608,350,1.842,360,1.238,394,3.354,401,2.905,424,3.039,431,2.568,449,2.403,490,4.443,494,1.967,496,1.924,500,2.616,513,2.707,516,2.059,524,4.283,544,2.707,555,3.95,569,4.283,579,2.801,580,1.804,582,3.02,583,3.496,586,2.059,682,1.767,791,2.905,804,4.484,832,2.214,836,2.905,870,4.287,898,3.95,905,3.168,912,3.926,920,3.47,924,2.541,929,3.09,930,2.937,1009,2.707,1016,2.905,1022,4.287,1025,3.297,1026,3.02,1028,2.801,1030,3.563,1032,3.681,1035,2.707,1045,2.272,1069,2.905,1106,2.801,1130,2.905,1163,3.204,1191,4.407,1216,5.9,1229,2.847,1235,3.809,1540,3.678,1592,5.002,1595,4.107,1606,5.002,1607,3.02,1622,2.801,1639,2.905,1643,3.681,1649,2.541,1655,4.049,1663,3.47,1669,2.905,1794,3.149,1836,2.801,2015,3.338,2075,2.905,2173,3.938,2194,4.107,2227,6.38,2274,3.149,2316,3.455,2412,4.287,2627,4.287,2985,5.363,3039,2.801,3041,3.678,3062,5.238,3149,2.707,3173,3.938,3175,3.149,3279,3.938,3387,4.72,3389,5.684,3747,3.678,4118,3.47,4796,5.83,4976,4.287,5229,7.047,5234,7.67,5235,7.336,5242,6.549,5243,4.816,5244,4.816,5245,4.816,5246,6.549,5247,4.816,5248,6.549,5249,6.549,5250,4.816,5251,4.816,5252,4.816,5253,4.816,5254,4.816,5255,4.816,5256,7.442,5257,4.816,5258,4.816,5259,4.816,5260,6.549,5261,4.816,5262,4.816,5263,4.816,5264,4.816,5265,4.816,5266,4.816,5267,4.816]],["title/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[112,0.877,204,0.557,594,0.893,905,1.057,2769,1.078]],["body/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[0,0.325,4,1.488,11,3.704,14,2.126,15,1.648,16,4.962,18,2.805,20,1.817,23,2.078,24,0.007,25,0.665,26,1.434,27,1.662,28,3.863,30,1.619,33,0.828,34,2.04,35,1.808,36,4.311,38,1.242,40,3.243,41,1.952,43,1.03,44,0.585,49,2.603,52,3.704,53,2.992,55,1.042,56,1.695,58,1.434,60,0.358,61,4.339,62,4.306,64,0.56,70,3.042,71,0.964,73,2.843,75,0.897,81,2.603,84,2.482,87,0.407,88,0.416,89,2.603,99,2.603,102,2.011,103,2.167,108,1.367,110,2.073,112,2.659,113,0.869,114,2.259,121,1.302,122,3.32,131,3.704,132,0.588,133,3.704,134,2.359,135,3.161,139,2.415,140,4.256,141,1.555,143,2.603,144,2.603,145,0.229,146,0.154,160,3.863,162,1.434,171,3.704,176,1.463,204,1.467,209,1.648,316,0.004,317,0.004,318,0.928,327,1.379,329,3.864,330,1.622,335,3.214,337,1.909,339,2.308,344,2.011,349,2.537,350,3.027,375,2.603,392,2.992,401,2.504,404,4.511,413,2.415,421,2.504,424,1.695,431,2.003,441,1.492,443,2.19,449,2.522,457,3.562,460,2.715,494,2.412,496,1.658,500,2.746,509,3.435,513,4.209,569,3.863,580,2.575,582,3.704,583,2.585,586,2.525,593,3.704,654,3.741,735,2.603,780,2.126,788,2.333,789,2.415,798,2.504,814,3.32,832,1.909,836,2.504,861,2.941,873,2.259,874,2.992,884,3.627,886,2.992,905,3.229,912,3.116,980,4.356,1008,2.992,1009,3.864,1012,2.715,1016,4.147,1017,4.256,1018,3.32,1023,2.716,1028,3.999,1035,4.448,1070,3.696,1085,3.863,1130,2.504,1167,2.259,1193,2.992,1222,3.628,1229,1.588,1361,2.843,1466,3.696,1514,2.603,1534,2.715,1598,2.126,1607,2.603,1628,2.603,1636,3.562,1660,2.715,1663,4.256,1664,4.83,1778,3.171,1836,2.415,1839,5.397,1884,4.053,1896,4.83,1967,3.562,2015,2.649,2049,2.415,2128,2.992,2194,5.306,2227,4.511,2233,3.171,2267,3.696,2274,3.863,2301,3.696,2428,2.333,2497,3.863,2560,3.395,2725,3.395,2784,2.992,2985,5.927,2995,2.992,3010,3.395,3039,2.415,3041,3.171,3062,2.603,3069,3.395,3156,3.696,3157,2.843,3191,4.044,3192,3.171,3233,3.395,3361,3.696,3389,5.251,3887,2.715,4005,3.395,4116,3.395,4118,4.256,4479,3.696,4512,3.395,4734,3.171,4735,3.171,4974,3.696,4994,3.696,5166,3.696,5198,2.992,5229,3.395,5235,4.83,5268,4.152,5269,4.152,5270,4.152,5271,4.152,5272,4.152,5273,5.906,5274,4.152,5275,4.152,5276,4.152,5277,5.906,5278,4.152,5279,4.152,5280,4.152,5281,5.906,5282,4.152,5283,4.152,5284,4.152,5285,4.152,5286,4.152,5287,4.152,5288,8.224,5289,4.152,5290,4.152,5291,4.152,5292,5.906,5293,4.152,5294,4.152,5295,4.152,5296,4.152,5297,4.152,5298,4.152,5299,4.152,5300,4.152,5301,3.696,5302,4.152,5303,4.152,5304,4.152,5305,4.152,5306,4.152,5307,4.152,5308,4.152,5309,4.152,5310,4.152,5311,4.152,5312,4.152]],["title/additional-documentation/ui.html",[594,1.177,907,2.239,2769,1.421]],["body/additional-documentation/ui.html",[0,0.339,14,3.675,24,0.006,34,2.478,41,1.791,112,2.37,123,3.476,126,2.804,146,0.16,188,1.031,227,1.325,248,1.633,316,0.006,317,0.006,397,3.606,494,2.93,496,2.866,502,3.573,586,3.068,770,4.328,905,2.857,907,5.13,929,3.385,930,3.218,1191,3.786,1216,4.913,1349,5.171,1621,4.499,1636,4.328,1794,4.693,2194,4.499,2880,6.388,3149,4.033,4049,5.481,4116,5.869,4416,4.033,4716,4.499,4777,5.481,5077,6.388,5165,4.913,5301,6.388,5313,7.176,5314,7.176,5315,6.388,5316,7.176,5317,7.176,5318,7.176,5319,7.176,5320,7.176]],["title/additional-documentation/ui/icons.html",[594,1.177,1595,2.58,2769,1.421]],["body/additional-documentation/ui/icons.html",[24,0.007,27,1.273,55,1.059,60,0.348,74,1.816,75,1.542,113,0.829,121,2.239,145,0.28,146,0.188,316,0.006,317,0.006,415,3.681,568,4.012,593,4.476,651,5.452,1009,4.012,1163,2.515,1314,4.012,1595,6.192,1621,4.476,2048,6.423,2055,6.037,2061,6.354,2062,5.838,2063,6.423,2064,7.486,2065,7.486,2066,6.354,2067,6.828,2068,6.354]],["title/additional-documentation/ui/notificationscomponent.html",[261,0.936,594,1.177,2769,1.421]],["body/additional-documentation/ui/notificationscomponent.html",[0,0.262,4,1.114,7,1.931,15,1.799,24,0.007,25,0.95,27,1.057,33,0.62,39,1.436,55,1.026,56,2.42,64,0.671,71,0.967,72,1.859,75,1.621,76,0.745,88,0.594,113,0.688,140,4.271,145,0.274,146,0.2,261,1.348,314,1.907,316,0.005,317,0.005,318,1.325,332,1.636,339,3.491,353,1.154,500,2.367,516,2.534,580,3.514,581,4.084,583,3.286,586,4.195,587,4.085,598,2.542,601,6.291,622,2.594,678,1.968,682,2.174,697,4.63,723,3.574,735,3.716,768,3.876,798,3.574,889,4.527,900,3.331,911,2.131,924,3.127,976,4.527,977,4.207,978,5.64,981,3.876,983,4.527,1013,2.476,1020,4.271,1030,3.225,1035,3.331,1085,3.876,1163,2.088,1208,2.951,1314,3.331,1445,3.876,1478,4.271,1594,3.225,1649,4.346,1884,3.036,1967,4.527,2015,3.366,2060,4.847,2233,4.527,2344,5.409,2426,4.527,2578,4.365,2718,4.365,2800,4.527,3062,3.716,3091,5.733,3149,3.331,3173,4.847,3174,5.276,3175,3.876,3176,6.681,3177,5.276,3178,7.333,3179,6.737,3180,6.138,3181,4.847,3182,5.276,3183,5.276,3184,5.276,3185,4.847,3186,5.276,3187,5.276,3188,5.276,3189,5.276,3190,5.276,3191,4.058,3192,4.527,3193,5.276,3194,5.276,3195,6.681,3196,5.276,3197,5.276,3198,6.681,3199,5.276,3200,5.276,3201,5.276,3202,5.276]],["title/additional-documentation/ui/loadercomponent.html",[236,0.889,594,1.177,2769,1.421]],["body/additional-documentation/ui/loadercomponent.html",[4,1.499,24,0.007,55,1.089,59,5.459,60,0.27,74,1.722,75,1.41,113,0.758,116,3.116,118,2.929,130,3.553,135,3.003,145,0.217,146,0.178,174,1.206,236,1.859,316,0.005,317,0.005,327,2.169,333,3.553,341,1.362,424,3.514,449,2.396,475,4.095,494,3.99,500,2.608,508,6.089,577,3.003,579,3.798,594,1.868,598,2.212,622,2.859,673,3.939,899,5.037,917,3.798,1017,4.706,1023,3.003,1030,4.338,1045,3.761,1167,3.553,1365,4.271,1594,3.553,1639,3.939,1649,3.445,1667,4.706,1691,4.988,1884,3.345,1967,4.808,1981,6.573,2015,2.929,2128,4.706,2336,4.706,2428,4.837,2563,5.745,2575,4.271,2576,6.136,2577,5.813,2578,3.798,2579,5.813,2580,5.813,2581,7.097,2582,5.813,2583,7.661,2584,5.813,2585,7.097,2586,7.661,2587,7.661,2588,5.813,2589,5.813,2590,5.813,2591,5.813,2592,5.813,2593,4.706,2594,5.813,2595,5.813,2596,5.813]],["title/additional-documentation/ui/listcomponent.html",[231,0.969,594,1.177,2769,1.421]],["body/additional-documentation/ui/listcomponent.html",[0,0.239,4,1.291,24,0.007,25,1.317,38,1.181,41,1.458,42,2.684,59,4.703,70,2.469,71,1.341,72,2.155,87,0.914,88,0.688,188,1.338,316,0.006,317,0.006,336,2.936,344,3.327,350,3.365,360,1.766,451,2.869,516,2.936,673,4.142,678,2.281,682,2.52,772,3.623,1163,3.099,1208,3.419,1349,4.949,1380,5.154,1622,4.78,1641,4.703,2155,7.118,2357,4.703,2358,6.114,2359,5.617,2360,5.617,2361,5.617,2362,7.621,2363,5.617,2364,4.703,2365,5.617,2366,5.246,2367,6.114,2368,6.278,2369,6.114,2370,6.722,2371,6.114]],["title/additional-documentation/data.html",[336,1.759,594,1.177,2769,1.421]],["body/additional-documentation/data.html",[0,0.265,24,0.006,41,1.615,74,1.643,112,2.137,188,1.093,204,1.636,227,1.405,316,0.006,317,0.006,336,3.252,407,2.973,568,4.275,890,3.896,905,2.576,1013,3.178,1514,4.77,4512,6.221,4777,5.81]],["title/additional-documentation/medium.html",[250,1.021,594,1.177,2769,1.421]],["body/additional-documentation/medium.html",[11,4.653,13,5.253,14,3.801,24,0.007,55,0.879,60,0.356,145,0.247,146,0.166,174,1.371,250,1.842,316,0.006,317,0.006,318,1.659,330,2.9,335,2.9,1021,3.915,2872,6.199,4416,4.835,4683,8.087,4716,4.653,5165,6.22,5198,5.347]],["title/additional-documentation/tinymce.html",[594,1.177,2769,1.421,4107,2.965]],["body/additional-documentation/tinymce.html",[0,0.26,11,4.672,13,4.188,14,3.816,24,0.007,55,0.883,60,0.357,145,0.248,146,0.167,316,0.006,317,0.006,318,1.666,330,2.912,335,2.912,1021,3.931,4107,5.369,4184,6.214,4416,4.846,4684,8.1,4716,4.672,5165,6.231,5198,5.369]],["title/additional-documentation/ace.html",[12,2.818,594,1.177,2769,1.421]],["body/additional-documentation/ace.html",[0,0.253,11,4.541,12,6.159,13,4.071,14,3.71,24,0.007,55,1.005,60,0.396,136,6.447,145,0.241,146,0.162,316,0.006,317,0.006,318,1.619,319,6.112,330,2.831,335,3.515,1021,3.821,1035,4.071,2062,5.923,2090,5.219,2227,5.532,4118,5.219,4416,4.767,4685,5.219,4716,4.541,5165,6.159,5198,5.219,5321,8.994,5322,8.482,5323,7.243,5324,7.243,5325,7.243]],["title/additional-documentation/core-classes.html",[146,0.079,502,1.768,594,1.016,2769,1.226]],["body/additional-documentation/core-classes.html",[0,0.256,14,3.76,24,0.006,55,0.869,146,0.191,316,0.006,317,0.006,345,3.066,445,2.392,502,4.503,534,3.994,568,4.125,583,3.213,591,3.872,654,3.994,770,4.427,838,4.603,874,5.29,883,5.29,930,3.292,1023,3.375,1085,4.8,1636,4.427,1666,5.606,1874,4.269,2497,4.8,3149,5.083,3887,4.8,3962,5.29,4416,4.125,4489,5.59,4693,6.534,4716,4.603,4735,5.606,5165,5.026,5315,6.534,5326,7.34,5327,7.34,5328,7.34,5329,7.34,5330,7.34]],["title/additional-documentation/core-classes/field.html",[41,0.873,594,1.177,2769,1.421]],["body/additional-documentation/core-classes/field.html",[0,0.232,7,2.624,24,0.007,33,0.695,34,2.294,38,1.377,41,1.992,42,3.388,43,1.649,44,1.271,55,1.068,56,2.712,71,1.084,76,0.835,87,0.651,112,1.866,118,4.043,142,1.931,188,1.245,316,0.006,317,0.006,349,1.866,431,1.935,449,2.437,500,2.653,511,3.402,516,2.839,682,3.181,924,4.25,965,5.432,1023,3.054,1030,4.383,1032,3.733,1163,2.838,1191,4.574,1213,4.787,1216,4.548,1229,2.541,1591,3.733,1639,4.006,1640,5.432,1641,4.548,1642,5.913,1643,4.527,1644,3.863,1645,5.432,1646,5.913,1647,5.913,1648,5.432,1649,3.504,1650,5.913,1651,5.432,1652,5.432,1653,6.152,1654,6.588,1655,3.614,1656,5.913,1657,6.152,1658,5.913,1659,5.913,1660,4.344,1661,5.913,1662,5.913,1663,4.787,1664,5.432,1665,5.913,1666,5.073,1667,4.787,1668,5.073,1669,4.006]],["title/additional-documentation/core-classes/item.html",[43,1.021,594,1.177,2769,1.421]],["body/additional-documentation/core-classes/item.html",[24,0.007,38,1.333,41,1.883,42,2.478,43,2.377,55,1.051,71,1.487,74,1.691,85,4.341,87,0.833,118,2.844,142,2.184,146,0.142,165,3.157,316,0.005,317,0.005,339,3.06,340,2.649,349,2.387,350,3.249,351,4.01,449,3.116,457,3.824,500,3.393,682,2.873,788,3.564,1013,3.27,1031,5.185,1045,2.991,1163,2.234,1191,3.345,1316,5.644,1534,4.146,1643,4.986,1651,5.185,1652,5.185,1653,5.98,1654,6.403,1655,3.45,1657,6.775,1660,4.146,1666,4.843,1681,3.824,1836,4.554,2015,2.844,2154,4.843,2295,5.185,2300,5.642,3316,4.843,5331,6.341,5332,6.341,5333,6.341,5334,6.341,5335,6.341,5336,6.341,5337,8.112,5338,6.341,5339,6.341,5340,6.341,5341,6.341,5342,6.341,5343,6.341,5344,6.341,5345,6.341,5346,6.341,5347,6.341,5348,6.341,5349,6.341,5350,7.829,5351,7.829,5352,6.341,5353,6.341,5354,6.341,5355,6.341,5356,6.341,5357,6.341,5358,6.341,5359,6.341,5360,6.341,5361,6.341]],["title/additional-documentation/core-classes/form.html",[112,1.156,594,1.177,2769,1.421]],["body/additional-documentation/core-classes/form.html",[24,0.007,33,0.768,38,1.054,41,1.92,43,1.822,45,4.51,71,1.395,87,0.838,112,2.541,142,2.049,316,0.006,317,0.006,340,3.066,349,2.402,866,6.003,1014,6.534,1023,3.375,1657,6.529,1694,4.125,2191,5.606,2273,6.003,2274,4.8,5337,8.051,5362,6.534,5363,8.548,5364,7.34,5365,7.34]],["title/additional-documentation/core-classes/collection.html",[594,1.177,772,2.171,2769,1.421]],["body/additional-documentation/core-classes/collection.html",[24,0.006,25,1.462,71,1.223,142,1.796,146,0.167,188,1.076,227,1.384,316,0.006,317,0.006,360,1.926,654,4.076,678,2.488,772,4.811,774,6.127,787,6.669,788,4.211,789,4.357,827,6.669,828,6.669,829,6.669,830,6.669,831,6.669,832,3.445,833,6.669,834,6.669,835,6.669,836,4.518]],["title/additional-documentation/core-classes/pagination.html",[594,1.177,2316,2.171,2769,1.421]],["body/additional-documentation/core-classes/pagination.html",[7,2.444,24,0.006,43,2.149,55,0.889,71,1.224,142,1.798,316,0.006,317,0.006,594,2.146,1314,4.216,1622,4.363,1628,4.704,1649,3.958,1780,4.082,2001,5.73,2274,4.906,2316,5.089,2906,5.73,3316,5.73,3317,6.678,3318,6.678,3319,6.678,3320,6.678]],["title/additional-documentation/core-classes/list.html",[188,0.591,594,1.177,2769,1.421]],["body/additional-documentation/core-classes/list.html",[4,1.225,7,2.123,14,3.337,24,0.007,25,1.472,33,0.682,35,1.225,38,1.286,41,1.825,42,3.111,43,1.976,44,0.918,55,0.772,65,1.225,71,1.063,72,2.044,74,1.407,87,0.928,176,2.805,188,1.342,316,0.005,317,0.005,337,2.996,341,1.359,349,1.831,350,3.045,351,4.078,360,1.675,394,4.078,431,1.898,441,2.342,490,3.074,583,2.852,678,2.164,772,3.437,789,3.789,1045,3.756,1222,4.164,1598,3.337,1622,5,1639,3.929,1655,3.545,1718,4.461,1780,3.545,2155,7.014,2316,3.437,2360,5.328,2361,5.328,2362,7.323,2363,5.328,2364,4.461,2365,5.328,2366,4.976,2368,6.08,2370,6.511,2578,3.789,3149,3.662,3153,4.461,3191,5.451,4425,5.799,5238,7.087,5362,7.087,5366,6.515,5367,7.961,5368,6.515,5369,6.515,5370,6.515,5371,6.515,5372,6.515,5373,6.515,5374,6.515,5375,6.515,5376,6.515,5377,6.515]],["title/additional-documentation/core-classes/selection.html",[227,0.76,594,1.177,2769,1.421]],["body/additional-documentation/core-classes/selection.html",[24,0.006,32,0.744,43,1.883,44,1.228,88,0.76,176,2.672,188,1.09,227,1.767,316,0.006,317,0.006,351,3.885,497,5.466,679,5.794,791,4.575,1639,4.575,2067,5.794,3191,5.194,5378,7.586]],["title/additional-documentation/core-classes/sorter.html",[594,1.177,2769,1.421,3948,2.965]],["body/additional-documentation/core-classes/sorter.html",[7,2.492,24,0.006,64,0.623,146,0.171,316,0.006,317,0.006,500,3.055,924,4.036,1153,6.256,1374,5.512,1453,5.843,1649,4.036,1655,4.162,2300,5.512,3948,6.309,3962,5.512]],["title/additional-documentation/adding-new-packages.html",[71,0.509,594,0.893,798,1.883,2769,1.078,4416,1.755]],["body/additional-documentation/adding-new-packages.html",[8,0.305,13,4.497,14,3.365,24,0.006,45,4.221,55,0.778,56,3.268,58,2.98,61,4.552,62,4.695,70,3.228,71,1.408,87,0.846,162,2.269,274,1.585,316,0.005,317,0.005,318,1.469,335,3.788,416,4.499,511,3.365,568,3.693,788,3.693,789,3.821,798,3.962,803,4.499,804,4.499,838,4.12,1013,3.343,1035,3.693,1161,4.654,1167,4.354,1208,3.984,1314,3.693,1607,4.12,1638,5.848,1644,3.821,1660,4.296,1736,4.499,1874,4.654,2075,3.962,2090,5.766,2357,5.479,2364,4.499,2834,6.112,2995,4.735,3290,5.373,3313,5.848,3579,5.018,3887,4.296,4118,5.766,4407,5.848,4416,5.495,4507,6.859,4707,5.848,4711,7.123,4715,5.848,4716,5.631,4717,7.057,4719,7.344,4726,5.848,4727,5.848,5176,5.848,5202,7.123,5379,6.57,5380,6.57,5381,6.57,5382,6.57,5383,6.57,5384,6.57,5385,6.57,5386,6.57,5387,6.57]],["title/additional-documentation/publishing.html",[594,1.177,2769,1.421,4719,3.365]],["body/additional-documentation/publishing.html",[0,0.254,4,1.599,24,0.006,55,0.862,61,3.841,62,3.962,70,3.058,71,1.188,74,1.573,162,2.515,245,1.685,248,2.051,316,0.006,317,0.006,335,3.325,415,3.187,449,2.671,487,4.901,584,6.131,788,4.092,789,4.235,893,5.564,1013,3.042,1229,2.785,1644,4.235,1874,4.235,2075,4.392,2225,4.762,2720,5.955,3994,4.392,4419,4.986,4489,5.895,5204,6.498,5224,6.482,5225,6.482,5226,6.482,5227,6.482]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["0",{"_index":832,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/collection.html":{}}}],["0.0.1",{"_index":4518,"title":{},"body":{"changelog.html":{}}}],["0.0.2",{"_index":4514,"title":{},"body":{"changelog.html":{},"dependencies.html":{}}}],["0.1.0",{"_index":4508,"title":{},"body":{"changelog.html":{}}}],["0.1.1",{"_index":4506,"title":{},"body":{"changelog.html":{}}}],["0.10.0",{"_index":4452,"title":{},"body":{"changelog.html":{}}}],["0.12.0",{"_index":4451,"title":{},"body":{"changelog.html":{}}}],["0.13.0",{"_index":4432,"title":{},"body":{"changelog.html":{}}}],["0.14.0",{"_index":4424,"title":{},"body":{"changelog.html":{}}}],["0.15.0",{"_index":4423,"title":{},"body":{"changelog.html":{}}}],["0.17.0",{"_index":4421,"title":{},"body":{"changelog.html":{}}}],["0.17.6",{"_index":4689,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":4503,"title":{},"body":{"changelog.html":{}}}],["0.22.0",{"_index":4415,"title":{},"body":{"changelog.html":{}}}],["0.23.0",{"_index":4417,"title":{},"body":{"changelog.html":{}}}],["0.25.0",{"_index":4414,"title":{},"body":{"changelog.html":{}}}],["0.29.0",{"_index":4412,"title":{},"body":{"changelog.html":{}}}],["0.3.0",{"_index":4500,"title":{},"body":{"changelog.html":{}}}],["0.3.1",{"_index":4496,"title":{},"body":{"changelog.html":{}}}],["0.32.0",{"_index":4403,"title":{},"body":{"changelog.html":{}}}],["0.34.0",{"_index":4408,"title":{},"body":{"changelog.html":{}}}],["0.35.0",{"_index":4399,"title":{},"body":{"changelog.html":{}}}],["0.4.0",{"_index":4490,"title":{},"body":{"changelog.html":{}}}],["0.4.1",{"_index":4487,"title":{},"body":{"changelog.html":{}}}],["0.40.0",{"_index":4401,"title":{},"body":{"changelog.html":{}}}],["0.41.0",{"_index":4397,"title":{},"body":{"changelog.html":{}}}],["0.5.0",{"_index":4486,"title":{},"body":{"changelog.html":{}}}],["0.5.1",{"_index":4483,"title":{},"body":{"changelog.html":{}}}],["0.5.2",{"_index":4480,"title":{},"body":{"changelog.html":{}}}],["0.5.3",{"_index":4477,"title":{},"body":{"changelog.html":{}}}],["0.6.0",{"_index":4472,"title":{},"body":{"changelog.html":{}}}],["0.7.0",{"_index":4466,"title":{},"body":{"changelog.html":{}}}],["0.7.1",{"_index":4504,"title":{},"body":{"changelog.html":{}}}],["0.8.0",{"_index":4460,"title":{},"body":{"changelog.html":{}}}],["0.8.1",{"_index":4459,"title":{},"body":{"changelog.html":{}}}],["0.8.2",{"_index":4458,"title":{},"body":{"changelog.html":{}}}],["0.8.20",{"_index":4698,"title":{},"body":{"dependencies.html":{}}}],["0.8.5",{"_index":4491,"title":{},"body":{"changelog.html":{}}}],["0.8.6",{"_index":4485,"title":{},"body":{"changelog.html":{}}}],["0.9.0",{"_index":4454,"title":{},"body":{"changelog.html":{}}}],["0/1",{"_index":4599,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4589,"title":{},"body":{"coverage.html":{}}}],["0/25",{"_index":4608,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":4667,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":4666,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4634,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":4655,"title":{},"body":{"coverage.html":{}}}],["00b0ff",{"_index":5056,"title":{},"body":{"miscellaneous/variables.html":{}}}],["00dbf0",{"_index":2900,"title":{},"body":{"components/MenuComponent.html":{}}}],["05",{"_index":4515,"title":{},"body":{"changelog.html":{}}}],["08",{"_index":4510,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":3367,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":3371,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1)[0",{"_index":859,"title":{},"body":{"classes/Collection.html":{}}}],["1.0.0",{"_index":4677,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["1.0.3",{"_index":4692,"title":{},"body":{"dependencies.html":{}}}],["1.0.7",{"_index":4690,"title":{},"body":{"dependencies.html":{}}}],["1.2.9",{"_index":4686,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":5169,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1/1",{"_index":4523,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1622,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["10/10",{"_index":4643,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":4671,"title":{},"body":{"coverage.html":{}}}],["10/12",{"_index":4656,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":4616,"title":{},"body":{"coverage.html":{}}}],["10/14",{"_index":4662,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1781,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1359,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["101",{"_index":4431,"title":{},"body":{"changelog.html":{}}}],["10m",{"_index":2370,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["11",{"_index":4516,"title":{},"body":{"changelog.html":{}}}],["11/11",{"_index":4531,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":4611,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":4548,"title":{},"body":{"coverage.html":{}}}],["11/18",{"_index":4544,"title":{},"body":{"coverage.html":{}}}],["11/28",{"_index":4618,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1679,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["12/12",{"_index":4605,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":4588,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":4583,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":4628,"title":{},"body":{"coverage.html":{}}}],["12/20",{"_index":4564,"title":{},"body":{"coverage.html":{}}}],["12/26",{"_index":4571,"title":{},"body":{"coverage.html":{}}}],["13/16",{"_index":4558,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":4779,"title":{},"body":{"overview.html":{}}}],["14/18",{"_index":4561,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":4613,"title":{},"body":{"coverage.html":{}}}],["15/25",{"_index":4574,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":4524,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":4593,"title":{},"body":{"coverage.html":{}}}],["16/21",{"_index":4652,"title":{},"body":{"coverage.html":{}}}],["17/22",{"_index":4602,"title":{},"body":{"coverage.html":{}}}],["17/27",{"_index":4596,"title":{},"body":{"coverage.html":{}}}],["18/21",{"_index":4631,"title":{},"body":{"coverage.html":{}}}],["19",{"_index":4780,"title":{},"body":{"overview.html":{}}}],["19/21",{"_index":4522,"title":{},"body":{"coverage.html":{}}}],["1].id",{"_index":377,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["1].indexof(tab.rout",{"_index":4092,"title":{},"body":{"components/TabsComponent.html":{}}}],["2",{"_index":788,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["2.0.1",{"_index":4691,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":5173,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.5.7",{"_index":4688,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":5303,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["2/2",{"_index":4603,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":4654,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2366,"title":{},"body":{"components/ListComponent.html":{},"overview.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["20/21",{"_index":4668,"title":{},"body":{"coverage.html":{}}}],["20/23",{"_index":4577,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2097,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":2587,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["2017",{"_index":4509,"title":{},"body":{"changelog.html":{}}}],["21/21",{"_index":4535,"title":{},"body":{"coverage.html":{}}}],["21/22",{"_index":4669,"title":{},"body":{"coverage.html":{}}}],["21/35",{"_index":4614,"title":{},"body":{"coverage.html":{}}}],["22/22",{"_index":4539,"title":{},"body":{"coverage.html":{}}}],["22/24",{"_index":4534,"title":{},"body":{"coverage.html":{}}}],["22/28",{"_index":4658,"title":{},"body":{"coverage.html":{}}}],["23",{"_index":4511,"title":{},"body":{"changelog.html":{}}}],["23/23",{"_index":4559,"title":{},"body":{"coverage.html":{}}}],["23/24",{"_index":4528,"title":{},"body":{"coverage.html":{}}}],["23/32",{"_index":4585,"title":{},"body":{"coverage.html":{}}}],["23/35",{"_index":4642,"title":{},"body":{"coverage.html":{}}}],["24/30",{"_index":4661,"title":{},"body":{"coverage.html":{}}}],["24/37",{"_index":4639,"title":{},"body":{"coverage.html":{}}}],["2460",{"_index":4793,"title":{},"body":{"miscellaneous/variables.html":{}}}],["25",{"_index":3284,"title":{},"body":{"classes/Pagination.html":{}}}],["25/26",{"_index":4670,"title":{},"body":{"coverage.html":{}}}],["27",{"_index":3480,"title":{},"body":{"injectables/PopService.html":{}}}],["27.05.17",{"_index":2978,"title":{},"body":{"components/MockupComponent.html":{}}}],["28/37",{"_index":4621,"title":{},"body":{"coverage.html":{}}}],["28/40",{"_index":4573,"title":{},"body":{"coverage.html":{}}}],["28/43",{"_index":4641,"title":{},"body":{"coverage.html":{}}}],["29/31",{"_index":4530,"title":{},"body":{"coverage.html":{}}}],["29/38",{"_index":4579,"title":{},"body":{"coverage.html":{}}}],["29a9e1",{"_index":2899,"title":{},"body":{"components/MenuComponent.html":{}}}],["3",{"_index":789,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["3.0.0.min.css",{"_index":5047,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":4525,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4546,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":4600,"title":{},"body":{"coverage.html":{}}}],["30/31",{"_index":4646,"title":{},"body":{"coverage.html":{}}}],["300",{"_index":5042,"title":{},"body":{"miscellaneous/variables.html":{}}}],["31/56",{"_index":4633,"title":{},"body":{"coverage.html":{}}}],["32/46",{"_index":4665,"title":{},"body":{"coverage.html":{}}}],["34/44",{"_index":4619,"title":{},"body":{"coverage.html":{}}}],["37474f",{"_index":5054,"title":{},"body":{"miscellaneous/variables.html":{}}}],["38/39",{"_index":4569,"title":{},"body":{"coverage.html":{}}}],["38/41",{"_index":4615,"title":{},"body":{"coverage.html":{}}}],["39",{"_index":4617,"title":{},"body":{"coverage.html":{}}}],["39;muffin",{"_index":3079,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["4",{"_index":2995,"title":{},"body":{"components/ModalComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["4.3.6",{"_index":5171,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.6",{"_index":4695,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4542,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":4651,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2136,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["41/41",{"_index":4527,"title":{},"body":{"coverage.html":{}}}],["41/42",{"_index":4538,"title":{},"body":{"coverage.html":{}}}],["41/45",{"_index":4620,"title":{},"body":{"coverage.html":{}}}],["41/54",{"_index":4636,"title":{},"body":{"coverage.html":{}}}],["42",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{}}}],["45",{"_index":4443,"title":{},"body":{"changelog.html":{}}}],["46",{"_index":4570,"title":{},"body":{"coverage.html":{}}}],["46/48",{"_index":4541,"title":{},"body":{"coverage.html":{}}}],["48.8093253",{"_index":2628,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4[0",{"_index":3519,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["4a5ea9",{"_index":2901,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1660,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/adding-new-packages.html":{}}}],["5.0.0",{"_index":1917,"title":{},"body":{"injectables/FormService.html":{}}}],["5.2.2",{"_index":4680,"title":{},"body":{"dependencies.html":{}}}],["5.5.11",{"_index":4694,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":4644,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4626,"title":{},"body":{"coverage.html":{}}}],["5/7",{"_index":4568,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":4566,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":2906,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["50/76",{"_index":4587,"title":{},"body":{"coverage.html":{}}}],["500",{"_index":2913,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["5000",{"_index":3249,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["52/76",{"_index":4622,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":4623,"title":{},"body":{"coverage.html":{}}}],["55",{"_index":4632,"title":{},"body":{"coverage.html":{}}}],["59/86",{"_index":4581,"title":{},"body":{"coverage.html":{}}}],["5identifi",{"_index":5348,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["5see",{"_index":3319,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["5the",{"_index":1662,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["6",{"_index":803,"title":{},"body":{"classes/Collection.html":{},"components/ImageSelectPopComponent.html":{},"injectables/PopService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["6/11",{"_index":4624,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4595,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4627,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4563,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":4543,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":4565,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":4553,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":4638,"title":{},"body":{"coverage.html":{}}}],["65",{"_index":4586,"title":{},"body":{"coverage.html":{}}}],["66",{"_index":4653,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":4778,"title":{},"body":{"overview.html":{}}}],["68",{"_index":4580,"title":{},"body":{"coverage.html":{}}}],["69",{"_index":4664,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":804,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["7/11",{"_index":4554,"title":{},"body":{"coverage.html":{}}}],["7/23",{"_index":4601,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4594,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4591,"title":{},"body":{"coverage.html":{}}}],["7/9",{"_index":4647,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":4572,"title":{},"body":{"coverage.html":{}}}],["71",{"_index":4567,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4555,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":4612,"title":{},"body":{"coverage.html":{}}}],["75",{"_index":4545,"title":{},"body":{"coverage.html":{}}}],["76",{"_index":4578,"title":{},"body":{"coverage.html":{}}}],["77",{"_index":4560,"title":{},"body":{"coverage.html":{}}}],["78",{"_index":4657,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":2364,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["8/10",{"_index":4610,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":4556,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":4660,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4606,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4609,"title":{},"body":{"coverage.html":{}}}],["800",{"_index":5044,"title":{},"body":{"miscellaneous/variables.html":{}}}],["81",{"_index":4557,"title":{},"body":{"coverage.html":{}}}],["83",{"_index":4625,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":648,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":4547,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4582,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":4576,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4590,"title":{},"body":{"coverage.html":{}}}],["879195",{"_index":5055,"title":{},"body":{"miscellaneous/variables.html":{}}}],["88",{"_index":4592,"title":{},"body":{"coverage.html":{}}}],["89",{"_index":4427,"title":{},"body":{"changelog.html":{}}}],["89ab][0",{"_index":3521,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["9",{"_index":1736,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["9.1.1",{"_index":4696,"title":{},"body":{"dependencies.html":{}}}],["9.159388100000001",{"_index":2629,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":4562,"title":{},"body":{"coverage.html":{}}}],["9/9",{"_index":4604,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":4521,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4533,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":4429,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["93",{"_index":4430,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["95",{"_index":4439,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["96",{"_index":4441,"title":{},"body":{"changelog.html":{},"coverage.html":{}}}],["96a29d70d11b",{"_index":2988,"title":{},"body":{"components/ModalComponent.html":{}}}],["97",{"_index":4537,"title":{},"body":{"coverage.html":{}}}],["9776",{"_index":2512,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["98",{"_index":4437,"title":{},"body":{"changelog.html":{}}}],["9]+))?.+v=)?([a",{"_index":5105,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]+\\.)+[a",{"_index":5127,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}\\.[0",{"_index":5125,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9]{1,3}])|(([a",{"_index":5126,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9_",{"_index":5106,"title":{},"body":{"miscellaneous/variables.html":{}}}],["9a",{"_index":3122,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["_",{"_index":114,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["_]{22",{"_index":3523,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["_]{22}$/.test(id",{"_index":1737,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":3124,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["_api",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{}}}],["_cre",{"_index":3075,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_creat",{"_index":3093,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["_creator",{"_index":3100,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entri",{"_index":1098,"title":{},"body":{"injectables/CrudService.html":{}}}],["_entrytitl",{"_index":3126,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item",{"_index":3976,"title":{},"body":{"classes/Sorter.html":{}}}],["_item.id",{"_index":1486,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items.indexof(item",{"_index":3977,"title":{},"body":{"classes/Sorter.html":{}}}],["_method",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modifi",{"_index":3098,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{}}}],["_resourc",{"_index":3775,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["_toggl",{"_index":3449,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":4323,"title":{},"body":{"components/UploadComponent.html":{}}}],["a'default",{"_index":5336,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["a.then(r",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["abov",{"_index":1663,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{}}}],["absatz",{"_index":5073,"title":{},"body":{"miscellaneous/variables.html":{}}}],["abstract",{"_index":874,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes.html":{}}}],["abstractcontrol",{"_index":1903,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["ac",{"_index":12,"title":{"additional-documentation/ace.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/ace.html":{}}}],["acc:edit",{"_index":3557,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["acc:list",{"_index":3556,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accept",{"_index":3262,"title":{},"body":{"injectables/NotificationsService.html":{},"changelog.html":{}}}],["access",{"_index":1016,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/Symbol.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["access=publ",{"_index":4725,"title":{},"body":{"index.html":{}}}],["access=publicse",{"_index":5386,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["accessor",{"_index":3507,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["accord",{"_index":3313,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/adding-new-packages.html":{}}}],["account",{"_index":399,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["account_not_found",{"_index":4794,"title":{},"body":{"miscellaneous/variables.html":{}}}],["accountid",{"_index":3555,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["accountresourc",{"_index":2738,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["accounts(environment.environ",{"_index":3855,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace'},{'nam",{"_index":180,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ace.compon",{"_index":331,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":31,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":29,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeel",{"_index":153,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mod",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/them",{"_index":98,"title":{},"body":{"components/AceComponent.html":{}}}],["acecompon",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodul",{"_index":319,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/ace.html":{}}}],["act",{"_index":1374,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["action",{"_index":333,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["actionbar",{"_index":346,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionbar'},{'nam",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["actionbar.compon",{"_index":3733,"title":{},"body":{"modules/ResourceModule.html":{}}}],["actionbar.component.t",{"_index":4607,"title":{},"body":{"coverage.html":{}}}],["actionbar/actionbar.compon",{"_index":3882,"title":{},"body":{"modules/SelectModule.html":{}}}],["actionbar/resourc",{"_index":3732,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbarcompon",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionbarconfig",{"_index":347,"title":{"interfaces/ActionbarConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{}}}],["actionsbefor",{"_index":368,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionstack",{"_index":352,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["activ",{"_index":577,"title":{},"body":{"injectables/AuthGuard.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["activatedrout",{"_index":541,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active/vis",{"_index":4438,"title":{},"body":{"changelog.html":{}}}],["activi",{"_index":2595,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["actual",{"_index":2515,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_compon",{"_index":315,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ad",{"_index":798,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["add",{"_index":335,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["add(item",{"_index":795,"title":{},"body":{"classes/Collection.html":{}}}],["addal",{"_index":776,"title":{},"body":{"classes/Collection.html":{}}}],["addall(item",{"_index":800,"title":{},"body":{"classes/Collection.html":{}}}],["addfield",{"_index":1875,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":1882,"title":{},"body":{"injectables/FormService.html":{}}}],["addimagebyurl",{"_index":4111,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addimagebyurl(url",{"_index":4129,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addit",{"_index":2769,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}},"body":{"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"changelog.html":{}}}],["addregist",{"_index":3638,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["address",{"_index":1950,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["addunregist",{"_index":3640,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["adhes",{"_index":5010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["admin",{"_index":403,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["adminentryinputcompon",{"_index":183,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adminservic",{"_index":4462,"title":{},"body":{"changelog.html":{}}}],["adress",{"_index":3402,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["advanc",{"_index":3186,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["advantag",{"_index":2590,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["affect",{"_index":5255,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["aftercontentinit",{"_index":4069,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":2702,"title":{},"body":{"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["afterward",{"_index":3007,"title":{},"body":{"components/ModalComponent.html":{}}}],["agm/cor",{"_index":1957,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodul",{"_index":2656,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":2661,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnost",{"_index":5316,"title":{},"body":{"additional-documentation/ui.html":{}}}],["aizasyadgeue1yxo1f",{"_index":2663,"title":{},"body":{"modules/LocationModule.html":{}}}],["al",{"_index":5238,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/core-classes/list.html":{}}}],["alarm",{"_index":4806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alert",{"_index":4888,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algorithm",{"_index":3959,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolv",{"_index":3983,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(properti",{"_index":3985,"title":{},"body":{"classes/Sorter.html":{}}}],["align",{"_index":4808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aligncent",{"_index":5084,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignjustifi",{"_index":5086,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignleft",{"_index":5082,"title":{},"body":{"miscellaneous/variables.html":{}}}],["alignright",{"_index":5085,"title":{},"body":{"miscellaneous/variables.html":{}}}],["allow",{"_index":679,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"changelog.html":{},"additional-documentation/core-classes/selection.html":{}}}],["along",{"_index":5199,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["alreadi",{"_index":3243,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["alt",{"_index":2156,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"miscellaneous/variables.html":{}}}],["alter",{"_index":3786,"title":{},"body":{"interfaces/SdkField.html":{}}}],["alter(valu",{"_index":1336,"title":{},"body":{"interfaces/Day.html":{}}}],["altern",{"_index":2128,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["alway",{"_index":1008,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["alwaysloadentri",{"_index":991,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowhead",{"_index":2414,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amaz",{"_index":5235,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["amazement_factor",{"_index":5234,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazement_factor>=5",{"_index":5267,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amount",{"_index":3161,"title":{},"body":{"classes/Notification.html":{}}}],["android",{"_index":4982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angezeigt",{"_index":606,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["angl",{"_index":4812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["angular",{"_index":14,"title":{},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["angular+datamanag",{"_index":4703,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":5170,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":5168,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clith",{"_index":5167,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":624,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compil",{"_index":4679,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cor",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/core/src/metadata/lifecycle_hook",{"_index":2537,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/form",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/http",{"_index":4681,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/languag",{"_index":5172,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":1809,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/rout",{"_index":595,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["anim",{"_index":2991,"title":{},"body":{"components/ModalComponent.html":{}}}],["anoth",{"_index":593,"title":{},"body":{"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{}}}],["antwort",{"_index":5080,"title":{},"body":{"miscellaneous/variables.html":{}}}],["anweisungen",{"_index":3419,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anywher",{"_index":1613,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{}}}],["aot",{"_index":4497,"title":{},"body":{"changelog.html":{}}}],["api",{"_index":397,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{}}}],["api(api",{"_index":3844,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":478,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permiss",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(rel",{"_index":3779,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["api.createdmassets(assetgroupid",{"_index":1749,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":3870,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":514,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.signup(email",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{}}}],["apikey",{"_index":2662,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolv",{"_index":3796,"title":{},"body":{"injectables/SdkService.html":{}}}],["app",{"_index":3175,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["app.compon",{"_index":5214,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.component.html",{"_index":3996,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["app.modul",{"_index":5323,"title":{},"body":{"additional-documentation/ace.html":{}}}],["app::delet",{"_index":3582,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["app::edit",{"_index":3583,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appcompon",{"_index":3997,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["appear",{"_index":1611,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{}}}],["append",{"_index":1445,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["appid",{"_index":3581,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["appl",{"_index":4983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appletre",{"_index":2361,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["appli",{"_index":1224,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["applic",{"_index":4116,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{}}}],["application/json",{"_index":5152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/msword",{"_index":5157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/pdf",{"_index":5153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.apple.numb",{"_index":5159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.apple.pag",{"_index":5154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.m",{"_index":5161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.spreadsheet",{"_index":5163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.oasis.opendocument.text",{"_index":5158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["application/vnd.openxmlformat",{"_index":5155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["applicationref",{"_index":4114,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applyconfig",{"_index":2434,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyconfig(list",{"_index":2438,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyfilt",{"_index":2478,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["applyfilter(properti",{"_index":2486,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["appmodul",{"_index":5198,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["appoint",{"_index":5017,"title":{},"body":{"miscellaneous/variables.html":{}}}],["approutingmodul",{"_index":5196,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrari",{"_index":3316,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["area",{"_index":3428,"title":{},"body":{"components/PopComponent.html":{},"miscellaneous/variables.html":{}}}],["argument",{"_index":1380,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["around",{"_index":3361,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["arrang",{"_index":4814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["array",{"_index":678,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["array(42",{"_index":1295,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.tot",{"_index":3335,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":3322,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":1729,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1202,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":2833,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["arrow",{"_index":4409,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["artboard",{"_index":4816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["articl",{"_index":5021,"title":{},"body":{"miscellaneous/variables.html":{}}}],["artifact",{"_index":4740,"title":{},"body":{"index.html":{}}}],["asc",{"_index":4440,"title":{},"body":{"changelog.html":{}}}],["ask",{"_index":3242,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobserv",{"_index":4158,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":185,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["asset.assetid",{"_index":1733,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.file.resolut",{"_index":2179,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getfilevariant(this.s",{"_index":2120,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.s",{"_index":2122,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(200",{"_index":3594,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.getimageurl(s",{"_index":2161,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getimageurl(this.s",{"_index":2123,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getoriginalfil",{"_index":2174,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.id",{"_index":2118,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduc",{"_index":1730,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.thumbnail",{"_index":3614,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails.length",{"_index":3615,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.thumbnails[0].url",{"_index":3616,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["asset.titl",{"_index":2177,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.typ",{"_index":2116,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{}}}],["asset/asset",{"_index":4502,"title":{},"body":{"changelog.html":{}}}],["asset/asset.direct",{"_index":1812,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirect",{"_index":299,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":193,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["assetgroup#definitions/condit",{"_index":3610,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["assetgroupid",{"_index":552,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["assetgrouplist",{"_index":1704,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":1789,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromis",{"_index":1705,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgroupselectcompon",{"_index":192,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":428,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["assetid'",{"_index":4482,"title":{},"body":{"changelog.html":{}}}],["assetinput",{"_index":4501,"title":{},"body":{"changelog.html":{}}}],["assetlist.getallitem",{"_index":1751,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlistcompon",{"_index":184,"title":{"components/AssetListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetlistpopcompon",{"_index":187,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets.map((asset",{"_index":1786,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":1754,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((id",{"_index":1772,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets/asset",{"_index":425,"title":{},"body":{"directives/AssetDirective.html":{}}}],["assets[0",{"_index":1752,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetselectcompon",{"_index":190,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1106,"title":{},"body":{"injectables/CrudService.html":{},"classes/Field.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["associ",{"_index":1615,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["assum",{"_index":5209,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["asterisk",{"_index":4817,"title":{},"body":{"miscellaneous/variables.html":{}}}],["attempt",{"_index":3201,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["attribut",{"_index":4404,"title":{},"body":{"changelog.html":{}}}],["audio",{"_index":1716,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["audio/mp3",{"_index":5149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mpeg",{"_index":5147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["audio/mpeg3",{"_index":5148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["auth",{"_index":621,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"changelog.html":{}}}],["auth.servic",{"_index":632,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["auth/auth.modul",{"_index":1138,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.servic",{"_index":945,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authent",{"_index":656,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":573,"title":{"injectables/AuthGuard.html":{}},"body":{"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{},"overview.html":{}}}],["authmodul",{"_index":612,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":5204,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["authservic",{"_index":619,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2089,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{}}}],["autocomplet",{"_index":1946,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_chang",{"_index":1965,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplac",{"_index":1968,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":1935,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":1944,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocusfirst",{"_index":2315,"title":{},"body":{"components/ListComponent.html":{}}}],["autolink",{"_index":5037,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoload",{"_index":429,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{}}}],["autoload=fals",{"_index":450,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automat",{"_index":1669,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Notification.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/field.html":{}}}],["automatisch",{"_index":5116,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autores",{"_index":5034,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_max_height",{"_index":5043,"title":{},"body":{"miscellaneous/variables.html":{}}}],["autoresize_min_height",{"_index":5041,"title":{},"body":{"miscellaneous/variables.html":{}}}],["avail",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["availab",{"_index":63,"title":{},"body":{"components/AceComponent.html":{}}}],["available.validator.t",{"_index":4550,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["availables",{"_index":2415,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avatar",{"_index":4225,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["avoid",{"_index":4413,"title":{},"body":{"changelog.html":{}}}],["ayq",{"_index":5351,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["b",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["b(r",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolv",{"_index":3984,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(properti",{"_index":3986,"title":{},"body":{"classes/Sorter.html":{}}}],["back",{"_index":1026,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["backdrop",{"_index":1547,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["backend",{"_index":4796,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["backenderrorcod",{"_index":4552,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["background",{"_index":1225,"title":{},"body":{"interfaces/Day.html":{}}}],["bag",{"_index":4941,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bake",{"_index":3195,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["baken",{"_index":3197,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bakery:bakeryservic",{"_index":3194,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ball",{"_index":3187,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["bank",{"_index":4819,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bar",{"_index":5000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["barcod",{"_index":4822,"title":{},"body":{"miscellaneous/variables.html":{}}}],["base",{"_index":1636,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["base64",{"_index":3496,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["base64uuid",{"_index":3488,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["baseurl",{"_index":4763,"title":{},"body":{"index.html":{}}}],["basi",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{}}}],["basic",{"_index":1349,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["basket",{"_index":4942,"title":{},"body":{"miscellaneous/variables.html":{}}}],["be",{"_index":3290,"title":{},"body":{"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["befor",{"_index":511,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/adding-new-packages.html":{}}}],["beforehand",{"_index":5252,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["began",{"_index":4499,"title":{},"body":{"changelog.html":{}}}],["begin",{"_index":1292,"title":{},"body":{"interfaces/Day.html":{}}}],["begin.clone().add(index",{"_index":1298,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":3039,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beim",{"_index":3423,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["belong",{"_index":2208,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":3156,"title":{},"body":{"classes/Notification.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beneath",{"_index":2268,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["berschrift",{"_index":5071,"title":{},"body":{"miscellaneous/variables.html":{}}}],["beschreibung",{"_index":3182,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["beta.3",{"_index":4678,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":2594,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["between",{"_index":1873,"title":{},"body":{"injectables/FormService.html":{}}}],["big",{"_index":4929,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bigger",{"_index":5023,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bild",{"_index":5115,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bilder",{"_index":5230,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["bind",{"_index":4457,"title":{},"body":{"changelog.html":{}}}],["binocular",{"_index":4824,"title":{},"body":{"miscellaneous/variables.html":{}}}],["birch",{"_index":2365,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bitcoin",{"_index":4825,"title":{},"body":{"miscellaneous/variables.html":{}}}],["block",{"_index":5067,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blood",{"_index":4877,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bluetooth",{"_index":4962,"title":{},"body":{"miscellaneous/variables.html":{}}}],["blur",{"_index":1916,"title":{},"body":{"injectables/FormService.html":{}}}],["bobbi",{"_index":1657,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["bobby.display('nam",{"_index":5345,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.group('nam",{"_index":5346,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.resolve('nam",{"_index":5344,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bobby.sort('nam",{"_index":5347,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["bodi",{"_index":1643,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"classes/ResourceForm.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["body+1",{"_index":5359,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["body.amazement_factor",{"_index":5254,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor*body.flavour/body.pric",{"_index":5258,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.value.nam",{"_index":1651,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bold",{"_index":5022,"title":{},"body":{"miscellaneous/variables.html":{}}}],["book",{"_index":4856,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bookmark",{"_index":4827,"title":{},"body":{"miscellaneous/variables.html":{}}}],["boolean",{"_index":341,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["bootstrap",{"_index":320,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["bootstrap/publish",{"_index":5384,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["border",{"_index":4828,"title":{},"body":{"miscellaneous/variables.html":{}}}],["both",{"_index":689,"title":{},"body":{"injectables/AuthService.html":{},"changelog.html":{}}}],["bottl",{"_index":5016,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bottom",{"_index":4469,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["bound",{"_index":1379,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["box",{"_index":886,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["bracket",{"_index":4811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brand",{"_index":5030,"title":{},"body":{"miscellaneous/variables.html":{}}}],["break",{"_index":4122,"title":{},"body":{"components/TinymceComponent.html":{},"changelog.html":{}}}],["breit",{"_index":5117,"title":{},"body":{"miscellaneous/variables.html":{}}}],["briefcas",{"_index":4831,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bright",{"_index":4841,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bring",{"_index":5349,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["broadcast",{"_index":3757,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["broken",{"_index":4894,"title":{},"body":{"miscellaneous/variables.html":{}}}],["brows",{"_index":4341,"title":{},"body":{"components/UploadSelectComponent.html":{},"modules.html":{}}}],["browser",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"dependencies.html":{},"modules.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodul",{"_index":1808,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["brush",{"_index":4910,"title":{},"body":{"miscellaneous/variables.html":{}}}],["btn",{"_index":5062,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bu",{"_index":4832,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bubbl",{"_index":4848,"title":{},"body":{"miscellaneous/variables.html":{}}}],["buchstaben",{"_index":1654,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["bucket",{"_index":4911,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bug",{"_index":4919,"title":{},"body":{"miscellaneous/variables.html":{}}}],["build",{"_index":4685,"title":{},"body":{"dependencies.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ace.html":{}}}],["builds/blob/master/src/ext",{"_index":149,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":136,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/ace.html":{}}}],["bullet",{"_index":4895,"title":{},"body":{"miscellaneous/variables.html":{}}}],["bullist",{"_index":5090,"title":{},"body":{"miscellaneous/variables.html":{}}}],["busi",{"_index":4989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["button",{"_index":1012,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["buttonclass",{"_index":2758,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttonlabel",{"_index":2759,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["c",{"_index":5284,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["c9c8d4",{"_index":2902,"title":{},"body":{"components/MenuComponent.html":{}}}],["cach",{"_index":3809,"title":{},"body":{"injectables/SdkService.html":{}}}],["calcul",{"_index":4837,"title":{},"body":{"miscellaneous/variables.html":{}}}],["calculc",{"_index":3309,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":1159,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["calendar'},{'nam",{"_index":195,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["calendar.compon",{"_index":1183,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["calendarcompon",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1218,"title":{},"body":{"interfaces/Day.html":{}}}],["call",{"_index":449,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/publishing.html":{}}}],["callback",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/item.html":{}}}],["callbackurl",{"_index":3627,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["camera",{"_index":4840,"title":{},"body":{"miscellaneous/variables.html":{}}}],["canactiv",{"_index":585,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["canalter(valu",{"_index":1331,"title":{},"body":{"interfaces/Day.html":{}}}],["cancel",{"_index":2916,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":2885,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":2640,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["cap",{"_index":4810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["capabl",{"_index":4478,"title":{},"body":{"changelog.html":{}}}],["caption",{"_index":3618,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{}}}],["car",{"_index":4843,"title":{},"body":{"miscellaneous/variables.html":{}}}],["card",{"_index":4881,"title":{},"body":{"miscellaneous/variables.html":{}}}],["caret",{"_index":5020,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cart",{"_index":4943,"title":{},"body":{"miscellaneous/variables.html":{}}}],["case",{"_index":2233,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"components/LoaderComponent.html":{}}}],["catch((err",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["catch((error",{"_index":2744,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["catch(err",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1478,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["caution",{"_index":3756,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"index.html":{}}}],["ccc",{"_index":1231,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":5176,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["cdn",{"_index":5322,"title":{},"body":{"additional-documentation/ace.html":{}}}],["cdr",{"_index":354,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["cell",{"_index":1216,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["center",{"_index":2626,"title":{},"body":{"components/LocationMapComponent.html":{},"miscellaneous/variables.html":{}}}],["certain",{"_index":2291,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["chang",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["change(",{"_index":4280,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filt",{"_index":1052,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.valu",{"_index":3378,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":3760,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change.color",{"_index":1287,"title":{},"body":{"interfaces/Day.html":{}}}],["change.d",{"_index":1284,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1288,"title":{},"body":{"interfaces/Day.html":{}}}],["change.select",{"_index":1282,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1286,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":3763,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changedetect",{"_index":2051,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategi",{"_index":935,"title":{},"body":{"components/CrudComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2052,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectorref",{"_index":342,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["changelog",{"_index":4395,"title":{"changelog.html":{}},"body":{"changelog.html":{}}}],["changesenviron",{"_index":3797,"title":{},"body":{"injectables/SdkService.html":{}}}],["changespan",{"_index":1241,"title":{},"body":{"interfaces/Day.html":{}}}],["chat",{"_index":4847,"title":{},"body":{"miscellaneous/variables.html":{}}}],["check",{"_index":590,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["checkbox",{"_index":2425,"title":{},"body":{"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["checklist",{"_index":5078,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkmark",{"_index":5024,"title":{},"body":{"miscellaneous/variables.html":{}}}],["checkpermiss",{"_index":658,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permiss",{"_index":670,"title":{},"body":{"injectables/AuthService.html":{}}}],["chevron",{"_index":4979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["child",{"_index":2929,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["child.data?.titl",{"_index":2965,"title":{},"body":{"components/MenuComponent.html":{}}}],["child.path",{"_index":2966,"title":{},"body":{"components/MenuComponent.html":{}}}],["children",{"_index":4436,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["cinnamon",{"_index":5366,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["circl",{"_index":4805,"title":{},"body":{"miscellaneous/variables.html":{}}}],["class",{"_index":146,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["class.i",{"_index":1367,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3379,"title":{},"body":{"components/PaginationComponent.html":{}}}],["clean",{"_index":1048,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["clean(valu",{"_index":1055,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["clear",{"_index":1115,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["clearer",{"_index":5250,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clearselect",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":2960,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":4709,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["click",{"_index":912,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clickabl",{"_index":4435,"title":{},"body":{"changelog.html":{}}}],["clickedoutside($ev",{"_index":3451,"title":{},"body":{"components/PopComponent.html":{}}}],["clickev",{"_index":1516,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["client",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":650,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clip",{"_index":4971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clock",{"_index":4807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["close",{"_index":2009,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"miscellaneous/variables.html":{}}}],["cloud",{"_index":4849,"title":{},"body":{"miscellaneous/variables.html":{}}}],["clubapp",{"_index":5286,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clunki",{"_index":5265,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cluster_acemodul",{"_index":321,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_provid",{"_index":323,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declar",{"_index":322,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_export",{"_index":324,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodul",{"_index":613,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declar",{"_index":614,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_export",{"_index":616,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_import",{"_index":615,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_provid",{"_index":617,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_datamodul",{"_index":1121,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declar",{"_index":1122,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_export",{"_index":1124,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_import",{"_index":1123,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_provid",{"_index":1125,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodul",{"_index":1802,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declar",{"_index":1803,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_export",{"_index":1805,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_import",{"_index":1804,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_provid",{"_index":1806,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodul",{"_index":1842,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declar",{"_index":1843,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_export",{"_index":1845,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_import",{"_index":1844,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_provid",{"_index":1846,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodul",{"_index":2078,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declar",{"_index":2079,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_export",{"_index":2080,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_provid",{"_index":2081,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodul",{"_index":2282,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declar",{"_index":2283,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_export",{"_index":2284,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodul",{"_index":2543,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declar",{"_index":2544,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_export",{"_index":2546,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_import",{"_index":2545,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_provid",{"_index":2547,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodul",{"_index":2607,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declar",{"_index":2608,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_export",{"_index":2609,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_provid",{"_index":2610,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodul",{"_index":2648,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declar",{"_index":2649,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_export",{"_index":2651,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_import",{"_index":2650,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_provid",{"_index":2652,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediummodul",{"_index":2873,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_declar",{"_index":2874,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_export",{"_index":2876,"title":{},"body":{"modules/MediumModule.html":{},"overview.html":{}}}],["cluster_mediummodule_mediumeditorcomponent_provid",{"_index":2875,"title":{},"body":{"modules/MediumModule.html":{}}}],["cluster_notificationsmodul",{"_index":3223,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declar",{"_index":3224,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_export",{"_index":3226,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_import",{"_index":3225,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_provid",{"_index":3227,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodul",{"_index":3464,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declar",{"_index":3465,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_export",{"_index":3467,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_import",{"_index":3466,"title":{},"body":{"modules/PopModule.html":{}}}],["cluster_popmodule_provid",{"_index":3468,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodul",{"_index":3724,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declar",{"_index":3725,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_export",{"_index":3727,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_import",{"_index":3726,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_provid",{"_index":3728,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodul",{"_index":3787,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_provid",{"_index":3788,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodul",{"_index":3875,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declar",{"_index":3876,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_export",{"_index":3879,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_import",{"_index":3878,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_provid",{"_index":3877,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_symbolmodul",{"_index":3991,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_provid",{"_index":3992,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodul",{"_index":4185,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declar",{"_index":4186,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_export",{"_index":4187,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodul",{"_index":4256,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_export",{"_index":4258,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_import",{"_index":4257,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodul",{"_index":4372,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declar",{"_index":4373,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_export",{"_index":4375,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_import",{"_index":4374,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cmd+click",{"_index":5289,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["code",{"_index":3887,"title":{},"body":{"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/adding-new-packages.html":{}}}],["codesourc",{"_index":3642,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourceid",{"_index":3643,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["codesourcetyp",{"_index":3644,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["coin",{"_index":4826,"title":{},"body":{"miscellaneous/variables.html":{}}}],["col",{"_index":1635,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{}}}],["collat",{"_index":3964,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["collator.compare(a",{"_index":3969,"title":{},"body":{"classes/Sorter.html":{}}}],["collect",{"_index":772,"title":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"coverage.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["collection([1",{"_index":787,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.add(4",{"_index":829,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.addall([10,11,12",{"_index":833,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(1",{"_index":827,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.has(4",{"_index":828,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.hasall([1,10,11",{"_index":834,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.index(1",{"_index":831,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.remove(4",{"_index":830,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["collection.removeall();it",{"_index":835,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/core-classes/collection.html":{}}}],["color",{"_index":1221,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["colorpick",{"_index":5040,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":1032,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/field.html":{}}}],["columnclick",{"_index":898,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick(item",{"_index":2333,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["com",{"_index":4426,"title":{},"body":{"changelog.html":{}}}],["combin",{"_index":3173,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["come",{"_index":401,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["command",{"_index":4946,"title":{},"body":{"miscellaneous/variables.html":{}}}],["comment",{"_index":2592,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["commonmodul",{"_index":623,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["commun",{"_index":2730,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["compani",{"_index":4981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["compat",{"_index":4498,"title":{},"body":{"changelog.html":{}}}],["compil",{"_index":4755,"title":{},"body":{"index.html":{}}}],["compileropt",{"_index":4760,"title":{},"body":{"index.html":{}}}],["complain",{"_index":3254,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["complet",{"_index":4278,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["complex",{"_index":5278,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["compon",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/publishing.html":{}}}],["component_templ",{"_index":179,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["componentfactori",{"_index":1429,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolv",{"_index":1407,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinst",{"_index":2203,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1423,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.inst",{"_index":2247,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control",{"_index":2249,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref.instance.control.valuechang",{"_index":2250,"title":{},"body":{"components/InputComponent.html":{}}}],["components/class",{"_index":4729,"title":{},"body":{"index.html":{}}}],["comput",{"_index":4854,"title":{},"body":{"miscellaneous/variables.html":{}}}],["concat(this.config.availables",{"_index":3324,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.timespan",{"_index":1257,"title":{},"body":{"interfaces/Day.html":{}}}],["concept",{"_index":1666,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["condit",{"_index":3608,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config",{"_index":349,"title":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["config.filt",{"_index":1726,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["config.input",{"_index":4248,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interfac",{"_index":936,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["config.interface.t",{"_index":989,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3385,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:4",{"_index":1683,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3388,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3386,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":4249,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.servic",{"_index":702,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["config.service.t",{"_index":2432,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:10",{"_index":3493,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:105",{"_index":3064,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:14",{"_index":2445,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:173",{"_index":4208,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:174",{"_index":3052,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:177",{"_index":4216,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:18",{"_index":2447,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:193",{"_index":4220,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:20",{"_index":3082,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:202",{"_index":4211,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:203",{"_index":3071,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:210",{"_index":4209,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:216",{"_index":4217,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:23",{"_index":2441,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:24",{"_index":3498,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:26",{"_index":3049,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:35",{"_index":2449,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:36",{"_index":3502,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:42",{"_index":3060,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:44",{"_index":2439,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:53",{"_index":3504,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:57",{"_index":3077,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:62",{"_index":3073,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["config.service.ts:66",{"_index":3506,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:7",{"_index":2450,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:70",{"_index":3494,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:75",{"_index":3509,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["config.service.ts:9",{"_index":2443,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.view",{"_index":4247,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1670,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1148,"title":{},"body":{"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resourc",{"_index":701,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.servic",{"_index":1078,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.t",{"_index":3734,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["config/resource.service.ts:102",{"_index":3739,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:120",{"_index":3741,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:131",{"_index":3743,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:36",{"_index":3735,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:39",{"_index":3753,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:48",{"_index":3746,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:54",{"_index":3736,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:63",{"_index":3749,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:81",{"_index":3752,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:96",{"_index":3744,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/sdk",{"_index":3782,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["config/typ",{"_index":1149,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":987,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["configinput",{"_index":2376,"title":{},"body":{"components/ListComponent.html":{}}}],["configur",{"_index":861,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuration.interface.t",{"_index":3144,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configure(key",{"_index":864,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":878,"title":{},"body":{"classes/Config.html":{}}}],["confirm",{"_index":1036,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["connect",{"_index":2258,"title":{},"body":{"components/InputComponent.html":{}}}],["connectcontrol",{"_index":2204,"title":{},"body":{"components/InputComponent.html":{}}}],["connector",{"_index":498,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["consist",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/core-classes/item.html":{}}}],["console.error('cannot",{"_index":4250,"title":{},"body":{"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('miss",{"_index":4245,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error(`${relationnam",{"_index":3513,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["console.error(err",{"_index":4324,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.log('cannot",{"_index":2460,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.log('could",{"_index":2747,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('entry',item.getbody(),item.id",{"_index":5245,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["console.log('error",{"_index":979,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('fil",{"_index":5121,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('imag",{"_index":5114,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.log('item",{"_index":357,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["console.log('raw",{"_index":1199,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('receiv",{"_index":5312,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["console.log('rout",{"_index":2946,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log('should",{"_index":2192,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["console.warn('addfield",{"_index":1920,"title":{},"body":{"injectables/FormService.html":{}}}],["console.warn('cannot",{"_index":1471,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":2257,"title":{},"body":{"components/InputComponent.html":{}}}],["console.warn('field",{"_index":2474,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.warn('fileservice#resolveasset",{"_index":1766,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn('ha",{"_index":845,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":1798,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LocationMapComponent.html":{},"interfaces/Upload.html":{}}}],["console.warn('notification.tim",{"_index":3220,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('thi",{"_index":3266,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('to",{"_index":3462,"title":{},"body":{"components/PopComponent.html":{}}}],["console.warn('tri",{"_index":2384,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":1777,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn(`crudservice.chang",{"_index":1082,"title":{},"body":{"injectables/CrudService.html":{}}}],["console.warn(`ec",{"_index":3028,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.warn(`icon",{"_index":2073,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`rel",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["construct",{"_index":786,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"components/ModalComponent.html":{},"classes/ResourceForm.html":{}}}],["constructor",{"_index":353,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["constructor(@inject('environ",{"_index":3848,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('usedesktopnotif",{"_index":3255,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":4113,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":2721,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(bodi",{"_index":3695,"title":{},"body":{"classes/ResourceForm.html":{}}}],["constructor(cdr",{"_index":2520,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["constructor(componentfactoryresolv",{"_index":1406,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":3282,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(crud",{"_index":3048,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(el",{"_index":1371,"title":{},"body":{"directives/DropzoneDirective.html":{},"directives/FocusDirective.html":{},"components/TabComponent.html":{}}}],["constructor(environ",{"_index":3803,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":2765,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservic",{"_index":557,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(geocodeservic",{"_index":2672,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2565,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservic",{"_index":2054,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(item",{"_index":784,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(listconfig",{"_index":2318,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["constructor(mapload",{"_index":1939,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1520,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notif",{"_index":3147,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservic",{"_index":2005,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservic",{"_index":2133,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["constructor(priv",{"_index":598,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["constructor(properti",{"_index":1601,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protect",{"_index":2808,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{}}}],["constructor(publ",{"_index":415,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/publishing.html":{}}}],["constructor(resourceconfig",{"_index":667,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceListPopComponent.html":{}}}],["constructor(rout",{"_index":2896,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":406,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1573,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/InputErrorsComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(usedesktopnotif",{"_index":3238,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":3944,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["consum",{"_index":5243,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["contact",{"_index":4392,"title":{},"body":{"interfaces/WithLoader.html":{},"miscellaneous/variables.html":{}}}],["contain",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{}}}],["content",{"_index":2049,"title":{},"body":{"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["content_css",{"_index":5045,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contentchildren",{"_index":3016,"title":{},"body":{"components/ModalComponent.html":{},"components/TabsComponent.html":{}}}],["contentchildren(tabcompon",{"_index":4085,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(templateref",{"_index":3023,"title":{},"body":{"components/ModalComponent.html":{}}}],["context",{"_index":2301,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["contextmenu",{"_index":5038,"title":{},"body":{"miscellaneous/variables.html":{}}}],["contrast",{"_index":4852,"title":{},"body":{"miscellaneous/variables.html":{}}}],["control",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["control'",{"_index":2267,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["control.reset",{"_index":2507,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["controls[field.properti",{"_index":1913,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":16,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["cooki",{"_index":630,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactori",{"_index":637,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["cookiemodul",{"_index":628,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":640,"title":{},"body":{"modules/AuthModule.html":{}}}],["cool",{"_index":5381,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["coolstringcompon",{"_index":5367,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["coord",{"_index":1971,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":2644,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":2643,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["copi",{"_index":4871,"title":{},"body":{"miscellaneous/variables.html":{}}}],["core",{"_index":502,"title":{"additional-documentation/core-classes.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["core/ui/data",{"_index":4721,"title":{},"body":{"index.html":{}}}],["correct",{"_index":4407,"title":{},"body":{"changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["correctli",{"_index":5281,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["count",{"_index":3310,"title":{},"body":{"classes/Pagination.html":{}}}],["counter",{"_index":5306,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["counter.component.html",{"_index":5307,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["countercompon",{"_index":5308,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["cours",{"_index":1664,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{}}}],["coverag",{"_index":4519,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":70,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["create(model",{"_index":1058,"title":{},"body":{"injectables/CrudService.html":{}}}],["create(rel",{"_index":3740,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["create/edit/delet",{"_index":885,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delet",{"_index":3754,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["createclick",{"_index":3656,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created(label",{"_index":3497,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["created.otherwis",{"_index":3750,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createfield",{"_index":3690,"title":{},"body":{"classes/ResourceForm.html":{}}}],["createfield(properti",{"_index":3706,"title":{},"body":{"classes/ResourceForm.html":{}}}],["createlabel",{"_index":992,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":489,"title":{},"body":{"components/AssetListComponent.html":{}}}],["creates/upd",{"_index":532,"title":{},"body":{"components/AssetListComponent.html":{}}}],["creator",{"_index":3081,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credenti",{"_index":2752,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["crop",{"_index":4857,"title":{},"body":{"miscellaneous/variables.html":{}}}],["cross",{"_index":5025,"title":{},"body":{"miscellaneous/variables.html":{}}}],["crud",{"_index":890,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/data.html":{}}}],["crud'",{"_index":906,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'nam",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["crud.compon",{"_index":3730,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":891,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.t",{"_index":3654,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:31",{"_index":3658,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:33",{"_index":3660,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":3659,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":3661,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":3670,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":3672,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":3671,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":3662,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":3664,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:49",{"_index":3657,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:55",{"_index":3674,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:56",{"_index":3673,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:59",{"_index":3668,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:63",{"_index":3667,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:74",{"_index":3666,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:79",{"_index":3669,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:92",{"_index":3665,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":3086,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["crud/crud.compon",{"_index":1139,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/crud.servic",{"_index":1140,"title":{},"body":{"modules/DataModule.html":{},"injectables/ModelConfigService.html":{}}}],["crud/resourc",{"_index":3653,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcompon",{"_index":196,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentri",{"_index":3682,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":904,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["crudservic",{"_index":1040,"title":{"injectables/CrudService.html":{}},"body":{"injectables/CrudService.html":{},"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["crudservice#chang",{"_index":1090,"title":{},"body":{"injectables/CrudService.html":{}}}],["current",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"classes/ResourceForm.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{}}}],["currentid",{"_index":372,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["cursor",{"_index":4858,"title":{},"body":{"miscellaneous/variables.html":{}}}],["custom",{"_index":905,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["customfieldcompon",{"_index":1412,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["customfieldconfig",{"_index":3051,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldscompon",{"_index":5304,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["custominputcompon",{"_index":5288,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customupload",{"_index":993,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["cycl",{"_index":5385,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["da",{"_index":3178,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["darf",{"_index":5240,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["dark",{"_index":2997,"title":{},"body":{"components/ModalComponent.html":{}}}],["dashboard",{"_index":4844,"title":{},"body":{"miscellaneous/variables.html":{}}}],["data",{"_index":336,"title":{"additional-documentation/data.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{}}}],["data.entryid",{"_index":2044,"title":{},"body":{"injectables/HistoryService.html":{}}}],["databas",{"_index":4932,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanag",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["datamanager(environment.environ",{"_index":3861,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.api().emailavailable(control.value).then((avail",{"_index":5122,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datamanager.enablehistoryevents(eventsourc",{"_index":2041,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamanagerid",{"_index":647,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerlistcompon",{"_index":4449,"title":{},"body":{"changelog.html":{}}}],["datamanagerresourc",{"_index":396,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamodul",{"_index":1120,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"changelog.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamodule.forenvironment(environ",{"_index":5197,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["dataroutingmodul",{"_index":4481,"title":{},"body":{"changelog.html":{}}}],["datasourc",{"_index":3646,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["datasourceid",{"_index":3647,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["date",{"_index":1161,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/ResourceConfig.html":{},"modules/SymbolModule.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/adding-new-packages.html":{}}}],["date()).format",{"_index":4236,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":4237,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clon",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1301,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":2603,"title":{},"body":{"components/LoaderComponent.html":{},"miscellaneous/variables.html":{}}}],["datenschutz",{"_index":4775,"title":{},"body":{"index.html":{}}}],["datepick",{"_index":4001,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["daterange'},{'nam",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["daterangecompon",{"_index":198,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetim",{"_index":1156,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["datetime'},{'nam",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["datetime.component.html",{"_index":1158,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime/calendar.compon",{"_index":1864,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/daterange.compon",{"_index":1871,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.compon",{"_index":1860,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/datetime.pip",{"_index":1862,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/heatmap.compon",{"_index":1870,"title":{},"body":{"modules/FormModule.html":{}}}],["datetime/month.compon",{"_index":1861,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecompon",{"_index":200,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepip",{"_index":1187,"title":{"pipes/DatetimePipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"modules/FormModule.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":4233,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1179,"title":{"interfaces/Day.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"coverage.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1293,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clon",{"_index":1259,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1252,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1254,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclick",{"_index":1239,"title":{},"body":{"interfaces/Day.html":{},"changelog.html":{}}}],["de",{"_index":4006,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["deactiv",{"_index":4051,"title":{},"body":{"components/TabComponent.html":{}}}],["debit",{"_index":4820,"title":{},"body":{"miscellaneous/variables.html":{}}}],["debounc",{"_index":2205,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime(this.debounc",{"_index":2251,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["decid",{"_index":1896,"title":{},"body":{"injectables/FormService.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decim",{"_index":4223,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["deck",{"_index":3019,"title":{},"body":{"components/ModalComponent.html":{}}}],["declar",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/GeocodeService.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decor",{"_index":105,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["decreas",{"_index":4884,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decrement",{"_index":5311,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dedupl",{"_index":1685,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["deeper",{"_index":4442,"title":{},"body":{"changelog.html":{}}}],["default",{"_index":113,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["defaultcolumn",{"_index":3475,"title":{},"body":{"injectables/PopService.html":{}}}],["defaultentryinputcompon",{"_index":202,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryoutputcompon",{"_index":203,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcompon",{"_index":19,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcomponent:12",{"_index":125,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:14",{"_index":129,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:16",{"_index":128,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:18",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultlocal",{"_index":3532,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["defaultopt",{"_index":1707,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["defaultoutputcompon",{"_index":206,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaults",{"_index":2132,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["defaulttim",{"_index":3235,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["defin",{"_index":66,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["definit",{"_index":5343,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["del",{"_index":1049,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1060,"title":{},"body":{"injectables/CrudService.html":{}}}],["del(rel",{"_index":3742,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["delay",{"_index":2904,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["delet",{"_index":274,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/adding-new-packages.html":{}}}],["deletenullproperti",{"_index":3738,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deleteonremov",{"_index":994,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["deliv",{"_index":3068,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["demo",{"_index":568,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/adding-new-packages.html":{}}}],["demonstr",{"_index":5215,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["deni",{"_index":3265,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["depend",{"_index":58,"title":{"dependencies.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["deprec",{"_index":1083,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["der",{"_index":3180,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["desc",{"_index":2416,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{}}}],["descend",{"_index":2423,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describ",{"_index":1640,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["descript",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselect",{"_index":4061,"title":{},"body":{"components/TabComponent.html":{}}}],["desir",{"_index":2627,"title":{},"body":{"components/LocationMapComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["desktop",{"_index":3234,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotif",{"_index":3236,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notif",{"_index":3240,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["destroy",{"_index":2851,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["determin",{"_index":1214,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":4736,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["develop",{"_index":995,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{}}}],["diagon",{"_index":4945,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dial",{"_index":4862,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dialog",{"_index":1533,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["diamond",{"_index":4864,"title":{},"body":{"miscellaneous/variables.html":{}}}],["didact",{"_index":5328,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["die",{"_index":3181,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["dies",{"_index":602,"title":{},"body":{"injectables/AuthGuard.html":{},"miscellaneous/variables.html":{}}}],["differ",{"_index":924,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["direct",{"_index":174,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{}}}],["directive/pipe/service/class/modul",{"_index":4739,"title":{},"body":{"index.html":{}}}],["directli",{"_index":457,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"modules/SymbolModule.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/item.html":{}}}],["directori",{"_index":4742,"title":{},"body":{"index.html":{}}}],["disabl",{"_index":1365,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/LoaderComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["disablecolumnfilt",{"_index":2417,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disablecreatepop",{"_index":996,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabledragend",{"_index":1234,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1232,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledrop",{"_index":4340,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["disabledtyp",{"_index":3602,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disablehead",{"_index":1568,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["disablelegaci",{"_index":553,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":997,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablesearchbar",{"_index":998,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["disableselect",{"_index":4446,"title":{},"body":{"changelog.html":{}}}],["disableselectswitch",{"_index":999,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disablestrategi",{"_index":3631,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["disabletim",{"_index":1162,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupd",{"_index":2003,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":2007,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableurlupload",{"_index":1000,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["discuss",{"_index":5313,"title":{},"body":{"additional-documentation/ui.html":{}}}],["display",{"_index":1163,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["displayaccount",{"_index":4205,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayd",{"_index":4206,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(tim",{"_index":4210,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dist",{"_index":4741,"title":{},"body":{"index.html":{}}}],["div",{"_index":3356,"title":{},"body":{"components/PaginationComponent.html":{}}}],["divid",{"_index":4865,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dm",{"_index":3525,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::delet",{"_index":3527,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dm::edit",{"_index":3526,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dma",{"_index":3113,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["dmaccount",{"_index":3571,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmasset",{"_index":1758,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["dmassetconfig",{"_index":1708,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1696,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitem",{"_index":1783,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetresourc",{"_index":1698,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["dmclient",{"_index":3625,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dmuser",{"_index":3607,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["dndmodul",{"_index":1135,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":569,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Field.html":{},"components/ModalComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["document",{"_index":1718,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["document:click",{"_index":1519,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["document:click($ev",{"_index":1536,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["dom",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["dont",{"_index":5277,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dosomethingriski",{"_index":3183,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["doubt",{"_index":1767,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["down",{"_index":4815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["download",{"_index":4850,"title":{},"body":{"miscellaneous/variables.html":{}}}],["drag",{"_index":1136,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["dragend",{"_index":2637,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggabl",{"_index":1207,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleav",{"_index":1369,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(",{"_index":1381,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragov",{"_index":1370,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(",{"_index":1384,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1269,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3430,"title":{},"body":{"components/PopComponent.html":{}}}],["drop",{"_index":1137,"title":{},"body":{"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["drop(",{"_index":1386,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1250,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1015,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"changelog.html":{}}}],["dropzone/dropzone.direct",{"_index":1813,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirect",{"_index":301,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dublic",{"_index":2974,"title":{},"body":{"components/MockupComponent.html":{}}}],["due",{"_index":4444,"title":{},"body":{"changelog.html":{}}}],["dumbbel",{"_index":5013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["duplic",{"_index":1693,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["dure",{"_index":2778,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["dynam",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dynamicrackcompon",{"_index":207,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcompon",{"_index":208,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2235,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2234,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":2223,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/item.html":{}}}],["e).then",{"_index":4364,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["e.data.yt",{"_index":5101,"title":{},"body":{"miscellaneous/variables.html":{}}}],["e.datatransfer.fil",{"_index":1396,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1397,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.display",{"_index":5354,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.g",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/adding-new-packages.html":{}}}],["e.id",{"_index":5353,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["e.preventdefault",{"_index":1272,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropag",{"_index":2541,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["e.stoppropag",{"_index":1392,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":4303,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.fil",{"_index":4304,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":4305,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localnam",{"_index":4177,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toel",{"_index":4179,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2",{"_index":4771,"title":{},"body":{"index.html":{}}}],["each",{"_index":1045,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["easi",{"_index":4425,"title":{},"body":{"changelog.html":{},"additional-documentation/core-classes/list.html":{}}}],["ec",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["ec.api",{"_index":402,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.asset",{"_index":3591,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ec.compon",{"_index":1874,"title":{},"body":{"injectables/FormService.html":{},"modules/SymbolModule.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["ec.components//src/_",{"_index":4494,"title":{},"body":{"changelog.html":{}}}],["ec.components/_",{"_index":4492,"title":{},"body":{"changelog.html":{}}}],["ec.components/ac",{"_index":5321,"title":{},"body":{"additional-documentation/ace.html":{}}}],["ec.components/cor",{"_index":345,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"pipes/GroupPipe.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"additional-documentation/core-classes.html":{}}}],["ec.components/core/src/collection/collect",{"_index":2597,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{}}}],["ec.components/core/src/config/config",{"_index":3084,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["ec.components/core/src/config/field",{"_index":3085,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/core/src/field/field",{"_index":1346,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"injectables/FormService.html":{},"components/OutputComponent.html":{}}}],["ec.components/core/src/form/form",{"_index":1902,"title":{},"body":{"injectables/FormService.html":{}}}],["ec.components/core/src/item/item",{"_index":1353,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"interfaces/Upload.html":{}}}],["ec.components/core/src/list/list",{"_index":1037,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{}}}],["ec.components/core/src/selection/select",{"_index":940,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/data",{"_index":4396,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/data/src/entri",{"_index":2147,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["ec.components/data/src/sdk/sdk.servic",{"_index":2146,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["ec.components/loc",{"_index":4682,"title":{},"body":{"dependencies.html":{}}}],["ec.components/medium",{"_index":4683,"title":{},"body":{"dependencies.html":{},"additional-documentation/medium.html":{}}}],["ec.components/styl",{"_index":4471,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/components.scss\";5",{"_index":5184,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/tinymc",{"_index":4684,"title":{},"body":{"dependencies.html":{},"additional-documentation/tinymce.html":{}}}],["ec.components/ui",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["ec.components/ui/src/form/default",{"_index":411,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["ec.components/ui/src/form/form.compon",{"_index":1904,"title":{},"body":{"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":2064,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["ec.components/ui/src/list/searchbar/searchbar.compon",{"_index":1561,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ec.components/ui/src/loader/loader.compon",{"_index":941,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/loader/loader.servic",{"_index":942,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/notif",{"_index":951,"title":{},"body":{"components/CrudComponent.html":{}}}],["ec.components/ui/src/notifications/notifications.compon",{"_index":1038,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["ec.components/ui/src/notifications/notifications.servic",{"_index":596,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["ec.components/ui/src/notifications/with",{"_index":949,"title":{},"body":{"components/CrudComponent.html":{}}}],["ec.components/ui/src/pop/pop.compon",{"_index":2145,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["ec.components/ui/src/pop/pop.servic",{"_index":1560,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ec.components/ui/src/symbol/symbol.servic",{"_index":948,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["ec.components/ui/src/ui.modul",{"_index":627,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["ec.components/uidemo",{"_index":5319,"title":{},"body":{"additional-documentation/ui.html":{}}}],["ec.list",{"_index":2972,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.card",{"_index":2980,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.list.simpl",{"_index":2981,"title":{},"body":{"components/MockupComponent.html":{}}}],["ec.sdk",{"_index":643,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"changelog.html":{},"dependencies.html":{}}}],["ec.sdk/lib/account",{"_index":3836,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/cor",{"_index":700,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/datamanag",{"_index":2028,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":467,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresourc",{"_index":2739,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresourc",{"_index":414,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresourc",{"_index":2027,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresourc",{"_index":1467,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1697,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresourc",{"_index":1699,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1076,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresourc",{"_index":1075,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1701,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresourc",{"_index":466,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/resourc",{"_index":3510,"title":{},"body":{"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/sess",{"_index":3837,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":427,"title":{},"body":{"directives/AssetDirective.html":{},"changelog.html":{}}}],["ecasset]'},{'nam",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecdropzon",{"_index":1364,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'nam",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentri",{"_index":1437,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"changelog.html":{}}}],["ecentries]'},{'nam",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentry]'},{'nam",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecfocu",{"_index":1824,"title":{},"body":{"directives/FocusDirective.html":{}}}],["ecfocus]'},{'nam",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecicon",{"_index":2085,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["ecimag",{"_index":2091,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'nam",{"_index":311,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecpublicasset",{"_index":4456,"title":{},"body":{"changelog.html":{}}}],["edg",{"_index":1266,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":980,"title":{},"body":{"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/ResourceForm.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["edit/cr",{"_index":5268,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["editfilt",{"_index":2479,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editfilter(pop",{"_index":2488,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["editor",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/adding-new-packages.html":{}}}],["editor#mediumeditor",{"_index":2863,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'nam",{"_index":251,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["editor.addbutton('imag",{"_index":5113,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.addbutton('youtub",{"_index":5093,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.compon",{"_index":2878,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor.component.html",{"_index":2842,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":2841,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.t",{"_index":2836,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":2845,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":2847,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":2848,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":2849,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":2856,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":2860,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":2857,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":2859,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":2852,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":2850,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":2855,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":2858,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":2853,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":2854,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.getcont",{"_index":4160,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.insertcont",{"_index":5112,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor.on('chang",{"_index":164,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.setcontent(this.valu",{"_index":2871,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setvalue(this.valu",{"_index":170,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.windowmanager.open",{"_index":5096,"title":{},"body":{"miscellaneous/variables.html":{}}}],["editor/dist/js/medium",{"_index":2861,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/medium",{"_index":2835,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor/src/medium.module.t",{"_index":2877,"title":{},"body":{"modules/MediumModule.html":{}}}],["editor?e=1",{"_index":2839,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor[0",{"_index":4174,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorset",{"_index":4157,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["editorsettings.setup(editor",{"_index":4169,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ein",{"_index":3416,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["einfach",{"_index":5061,"title":{},"body":{"miscellaneous/variables.html":{}}}],["einfügen",{"_index":5097,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingab",{"_index":4802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eingeloggt",{"_index":610,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["einleitung",{"_index":5075,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eject",{"_index":4972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["el",{"_index":1373,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["element",{"_index":108,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["elementref",{"_index":104,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elimin",{"_index":5317,"title":{},"body":{"additional-documentation/ui.html":{}}}],["email",{"_index":686,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["emailavail",{"_index":2813,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["emaillabel",{"_index":2760,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailplacehold",{"_index":2761,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailunavail",{"_index":4797,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emailvalid",{"_index":4673,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["embed",{"_index":1411,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["embedd",{"_index":2061,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["emit",{"_index":911,"title":{},"body":{"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(host",{"_index":3188,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["emit(notif",{"_index":3245,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emitt",{"_index":2330,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{}}}],["emoji",{"_index":5138,"title":{},"body":{"miscellaneous/variables.html":{}}}],["emojiicon",{"_index":2063,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/icons.html":{}}}],["empti",{"_index":814,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["empty=tru",{"_index":5274,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["en",{"_index":3995,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["enabl",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["enableupd",{"_index":2004,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resourc",{"_index":2012,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsul",{"_index":2306,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1233,"title":{},"body":{"interfaces/Day.html":{},"index.html":{}}}],["endless",{"_index":1442,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["enforc",{"_index":5206,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhanc",{"_index":4027,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":5187,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enrich",{"_index":3515,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ensur",{"_index":3409,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/PopComponent.html":{}}}],["enter",{"_index":4994,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entiti",{"_index":1031,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/item.html":{}}}],["entri",{"_index":204,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/data.html":{}}}],["entries/entries.direct",{"_index":1141,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirect",{"_index":303,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry.del().then((r",{"_index":1119,"title":{},"body":{"injectables/CrudService.html":{}}}],["entry.getimagethumburl(properti",{"_index":4226,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(properti",{"_index":4238,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.sav",{"_index":1094,"title":{},"body":{"injectables/CrudService.html":{},"injectables/SymbolPipe.html":{}}}],["entry.save(safeput).then((_entri",{"_index":1107,"title":{},"body":{"injectables/CrudService.html":{}}}],["entry/entry.direct",{"_index":1146,"title":{},"body":{"modules/DataModule.html":{}}}],["entry[key",{"_index":1103,"title":{},"body":{"injectables/CrudService.html":{}}}],["entrycompon",{"_index":329,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/TinymceModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrydirect",{"_index":305,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcompon",{"_index":211,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryformcomponent.deleteentri",{"_index":4473,"title":{},"body":{"changelog.html":{}}}],["entryid",{"_index":1492,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["entrylist",{"_index":537,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"coverage.html":{}}}],["entrylistcompon",{"_index":213,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistpopcompon",{"_index":214,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistselectcompon",{"_index":215,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":892,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcompon",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresourc",{"_index":1061,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["entryselectcompon",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["env",{"_index":3823,"title":{},"body":{"injectables/SdkService.html":{}}}],["env=prod",{"_index":4743,"title":{},"body":{"index.html":{}}}],["env=stag",{"_index":4744,"title":{},"body":{"index.html":{}}}],["envelop",{"_index":4866,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environ",{"_index":644,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":3853,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":3856,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environ",{"_index":3863,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.init",{"_index":3849,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments/environ",{"_index":5195,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":965,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["equalis",{"_index":4867,"title":{},"body":{"miscellaneous/variables.html":{}}}],["eras",{"_index":4868,"title":{},"body":{"miscellaneous/variables.html":{}}}],["erhalten",{"_index":3420,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":981,"title":{},"body":{"components/CrudComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["err.messag",{"_index":2815,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":580,"title":{},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["error'},{'nam",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["error('cannot",{"_index":476,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":3843,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":3838,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('th",{"_index":4038,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":3336,"title":{},"body":{"classes/Pagination.html":{}}}],["error.cod",{"_index":1584,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail}}{{error.verbos",{"_index":1589,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1572,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1585,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail}}{{error.verbos",{"_index":1587,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.messag",{"_index":2281,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error.verbos",{"_index":1588,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.compon",{"_index":3229,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.messag",{"_index":1586,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcompon",{"_index":218,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessag",{"_index":2755,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["errors'},{'nam",{"_index":230,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["errors.compon",{"_index":2288,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2269,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.t",{"_index":2266,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":2271,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2275,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:18",{"_index":2272,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2265,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs.push",{"_index":2280,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellt",{"_index":5232,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["es2015",{"_index":4745,"title":{},"body":{"index.html":{}}}],["es6",{"_index":1182,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["escap",{"_index":3472,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1607,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"interfaces/SdkField.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["euro",{"_index":4947,"title":{},"body":{"miscellaneous/variables.html":{}}}],["even",{"_index":1010,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["event",{"_index":444,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["event.key",{"_index":3481,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycod",{"_index":3479,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitt",{"_index":445,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/core-classes.html":{}}}],["eventemitter.t",{"_index":877,"title":{},"body":{"classes/Config.html":{}}}],["eventsourc",{"_index":2002,"title":{},"body":{"injectables/HistoryService.html":{},"dependencies.html":{}}}],["eventsource/lib/eventsourc",{"_index":2029,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventu",{"_index":4308,"title":{},"body":{"components/UploadComponent.html":{},"index.html":{}}}],["everyth",{"_index":3040,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["everytim",{"_index":1706,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1190,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["exactli",{"_index":5266,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["exampl",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["excel",{"_index":5162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["exclud",{"_index":4759,"title":{},"body":{"index.html":{}}}],["execut",{"_index":4769,"title":{},"body":{"index.html":{}}}],["exist",{"_index":1069,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["existing.hid",{"_index":2469,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["existing.hide.foreach(properti",{"_index":2472,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["expand",{"_index":4869,"title":{},"body":{"miscellaneous/variables.html":{}}}],["expect",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["experiment",{"_index":1921,"title":{},"body":{"injectables/FormService.html":{},"interfaces/ListConfig.html":{}}}],["explicitli",{"_index":4758,"title":{},"body":{"index.html":{}}}],["export",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["exporta",{"_index":468,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["expos",{"_index":642,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["exposur",{"_index":4870,"title":{},"body":{"miscellaneous/variables.html":{}}}],["extend",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["extens",{"_index":1835,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ModalComponent.html":{},"classes/ResourceForm.html":{}}}],["extensions/modes/them",{"_index":5325,"title":{},"body":{"additional-documentation/ace.html":{}}}],["extern",{"_index":1024,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":1014,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/core-classes/form.html":{}}}],["extract",{"_index":1892,"title":{},"body":{"injectables/FormService.html":{}}}],["ey",{"_index":4878,"title":{},"body":{"miscellaneous/variables.html":{}}}],["f.hideinlist).map(f",{"_index":2466,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.name",{"_index":4333,"title":{},"body":{"components/UploadComponent.html":{}}}],["f.properti",{"_index":2467,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.url",{"_index":1747,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["f]{12}$/i",{"_index":3522,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{3",{"_index":3520,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{4",{"_index":3518,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["f]{8",{"_index":3517,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["facebook",{"_index":4984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["factor",{"_index":5273,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["factori",{"_index":4991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fadein",{"_index":2994,"title":{},"body":{"components/ModalComponent.html":{}}}],["fail",{"_index":592,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"index.html":{}}}],["failiur",{"_index":3200,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["faktor",{"_index":5236,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fall",{"_index":1025,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["fallback",{"_index":2338,"title":{},"body":{"components/ListComponent.html":{},"components/ModalComponent.html":{}}}],["fals",{"_index":360,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["fancier",{"_index":4191,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fax",{"_index":4992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fb",{"_index":2768,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["featur",{"_index":3191,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["feature=oembed&rel=0",{"_index":5111,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fehler",{"_index":3185,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["feld",{"_index":4800,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ff5353",{"_index":5057,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffff8d",{"_index":5058,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ffffff",{"_index":3516,"title":{},"body":{"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["ffnungszeiten",{"_index":5293,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field",{"_index":41,"title":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/core-classes/field.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["field'",{"_index":1626,"title":{},"body":{"classes/Field.html":{}}}],["field('nam",{"_index":1650,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field(this.properti",{"_index":2239,"title":{},"body":{"components/InputComponent.html":{}}}],["field.compon",{"_index":1413,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.creat",{"_index":1905,"title":{},"body":{"injectables/FormService.html":{}}}],["field.display(nam",{"_index":1658,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.edit",{"_index":1907,"title":{},"body":{"injectables/FormService.html":{}}}],["field.form",{"_index":1908,"title":{},"body":{"injectables/FormService.html":{}}}],["field.group(nam",{"_index":1659,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.hideinform",{"_index":4389,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["field.hideinlist",{"_index":2471,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["field.label",{"_index":2508,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.maxitems||10",{"_index":1357,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.placehold",{"_index":1354,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.properti",{"_index":2509,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.readonli",{"_index":5276,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field.requir",{"_index":1923,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobbi",{"_index":1656,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.sort(nam",{"_index":1661,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["field.t",{"_index":3783,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["field.title).filter(field",{"_index":3543,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["field.typ",{"_index":420,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.valid",{"_index":1899,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.valu",{"_index":1926,"title":{},"body":{"injectables/FormService.html":{}}}],["field[0",{"_index":3544,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["field_nam",{"_index":5119,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fieldconfig",{"_index":1681,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/item.html":{}}}],["fieldconfig[key",{"_index":3138,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[properti",{"_index":3106,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperti",{"_index":1591,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/ResourceForm.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"additional-documentation/core-classes/field.html":{}}}],["fieldfilt",{"_index":528,"title":{},"body":{"components/AssetListComponent.html":{}}}],["fieldhost",{"_index":1418,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirect",{"_index":1425,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldlabel",{"_index":2480,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldlabel(field",{"_index":2491,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["fieldnam",{"_index":1686,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fields.filter((field",{"_index":4387,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pip",{"_index":1858,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.t",{"_index":4381,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":4386,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:12",{"_index":4384,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields[titl",{"_index":3116,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldvalid",{"_index":2806,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["fieldvalidators.email",{"_index":2812,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.uuid",{"_index":3939,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["file.servic",{"_index":566,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["file_browser_callback",{"_index":5118,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fileinput",{"_index":4264,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":1740,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filenam",{"_index":1687,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fileopt",{"_index":1001,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["files.length",{"_index":1744,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.map(f",{"_index":1746,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.split('\\n').map(url",{"_index":4309,"title":{},"body":{"components/UploadComponent.html":{}}}],["files/file.servic",{"_index":1039,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["files/files.modul",{"_index":1147,"title":{},"body":{"modules/DataModule.html":{}}}],["files[0].url",{"_index":1745,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["fileservic",{"_index":551,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filesmodul",{"_index":1126,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":4265,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill",{"_index":5007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fill(0",{"_index":1296,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":490,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/list.html":{}}}],["filter((item",{"_index":3975,"title":{},"body":{"classes/Sorter.html":{}}}],["filter(properti",{"_index":522,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["filter(rout",{"_index":2941,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter.model",{"_index":1079,"title":{},"body":{"injectables/CrudService.html":{}}}],["filter.rel",{"_index":1080,"title":{},"body":{"injectables/CrudService.html":{}}}],["filter[key",{"_index":3764,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filteroper",{"_index":1592,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filteropt",{"_index":1450,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpopclass",{"_index":1593,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["find",{"_index":4022,"title":{},"body":{"injectables/SymbolService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["fingerprint",{"_index":5027,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finish",{"_index":669,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":443,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["first",{"_index":1208,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["fit",{"_index":3697,"title":{},"body":{"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":2193,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"changelog.html":{},"index.html":{}}}],["flag",{"_index":509,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["flash",{"_index":4872,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flat",{"_index":4730,"title":{},"body":{"index.html":{}}}],["flexibl",{"_index":2359,"title":{},"body":{"components/ListComponent.html":{},"changelog.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["flip",{"_index":1383,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"miscellaneous/variables.html":{}}}],["flow",{"_index":5224,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["fn",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["focu",{"_index":1818,"title":{"interfaces/Focus.html":{}},"body":{"interfaces/Focus.html":{},"components/ListComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["focus",{"_index":2320,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/UploadSelectComponent.html":{}}}],["focus/focus.direct",{"_index":4377,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirect",{"_index":307,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focusev",{"_index":1820,"title":{},"body":{"interfaces/Focus.html":{},"components/UploadSelectComponent.html":{}}}],["focusfirst",{"_index":2310,"title":{},"body":{"components/ListComponent.html":{}}}],["focusitem",{"_index":2308,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focusnext",{"_index":2311,"title":{},"body":{"components/ListComponent.html":{}}}],["focusprev",{"_index":2312,"title":{},"body":{"components/ListComponent.html":{}}}],["focuss",{"_index":2533,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["folder",{"_index":4507,"title":{},"body":{"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/adding-new-packages.html":{}}}],["follow",{"_index":2075,"title":{},"body":{"components/IconComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["font",{"_index":3989,"title":{},"body":{"interfaces/Symbol.html":{},"miscellaneous/variables.html":{}}}],["footer",{"_index":2992,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["forcegroup",{"_index":1712,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["forcereload",{"_index":1790,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["foreach",{"_index":3107,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["foreach((field",{"_index":1911,"title":{},"body":{"injectables/FormService.html":{}}}],["forecolor",{"_index":5089,"title":{},"body":{"miscellaneous/variables.html":{}}}],["forenviron",{"_index":5200,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environ",{"_index":1154,"title":{},"body":{"modules/DataModule.html":{}}}],["forev",{"_index":3159,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":112,"title":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/form.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["form'",{"_index":2229,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'nam",{"_index":212,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["form(nul",{"_index":5364,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["form.compon",{"_index":938,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"changelog.html":{}}}],["form.component.html",{"_index":2754,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.t",{"_index":2751,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":3911,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:18",{"_index":2798,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":3914,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:20",{"_index":2801,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":3912,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":2797,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":3927,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:24",{"_index":2788,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":2786,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":2779,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:30",{"_index":2785,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":2775,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":2777,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":2781,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":3925,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:38",{"_index":2783,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":2772,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":2770,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":2767,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":2802,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":2793,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":2796,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:67",{"_index":2790,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":2794,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.display('amazement_factor",{"_index":5280,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["form.fields.filter((field",{"_index":1909,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form",{"_index":1927,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.display",{"_index":1930,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.isedit",{"_index":1929,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getbodi",{"_index":1906,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getvalue('keepratio",{"_index":2197,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue('ratio",{"_index":2196,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.alt.setvalue(titl",{"_index":2184,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.height.setvalue(math.round(valu",{"_index":2198,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.ratio.setvalue(ratio",{"_index":2185,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(math.round(valu",{"_index":2200,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(width",{"_index":2183,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.servic",{"_index":1857,"title":{},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["form.t",{"_index":3689,"title":{},"body":{"classes/ResourceForm.html":{},"coverage.html":{}}}],["form.ts:11",{"_index":3698,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:12",{"_index":3699,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:13",{"_index":3700,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:17",{"_index":3704,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form.ts:8",{"_index":3696,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form/admin",{"_index":391,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1142,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entri",{"_index":937,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["form/form.compon",{"_index":2503,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["form/form.modul",{"_index":2550,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":2750,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resourc",{"_index":3688,"title":{},"body":{"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":3908,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form:11",{"_index":3702,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:13",{"_index":3701,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:31",{"_index":3707,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:49",{"_index":3709,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:54",{"_index":3711,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:70",{"_index":3713,"title":{},"body":{"classes/ResourceForm.html":{}}}],["form:75",{"_index":3712,"title":{},"body":{"classes/ResourceForm.html":{}}}],["format",{"_index":1209,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["formattedtext",{"_index":4221,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuild",{"_index":2766,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcompon",{"_index":220,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#input",{"_index":2230,"title":{},"body":{"components/InputComponent.html":{}}}],["formcomponent.submit",{"_index":4476,"title":{},"body":{"changelog.html":{}}}],["formconfig",{"_index":1833,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{},"classes/ResourceForm.html":{},"coverage.html":{}}}],["formcontrol",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["formcontrol(form.getvalue(field.properti",{"_index":1914,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":1738,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formdata.append(key",{"_index":1741,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["former",{"_index":4464,"title":{},"body":{"changelog.html":{}}}],["formgroup",{"_index":127,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup(control",{"_index":1919,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodul",{"_index":1841,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formservic",{"_index":1854,"title":{"injectables/FormService.html":{}},"body":{"modules/FormModule.html":{},"injectables/FormService.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["formsmodul",{"_index":1133,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["formview",{"_index":3108,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["forwardref",{"_index":131,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["found",{"_index":579,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["foundat",{"_index":5331,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["fourth",{"_index":4705,"title":{},"body":{"index.html":{}}}],["fox",{"_index":2976,"title":{},"body":{"components/MockupComponent.html":{}}}],["frage",{"_index":5079,"title":{},"body":{"miscellaneous/variables.html":{}}}],["frame",{"_index":4873,"title":{},"body":{"miscellaneous/variables.html":{}}}],["freedom",{"_index":5272,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["frompromis",{"_index":1958,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["frompromise(this.maploader.load",{"_index":1978,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":2679,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["front",{"_index":4903,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fruit",{"_index":2362,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["früchte",{"_index":5374,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["full",{"_index":2926,"title":{},"body":{"components/MenuComponent.html":{},"miscellaneous/variables.html":{}}}],["fullscreen",{"_index":5035,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fun",{"_index":5210,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":340,"title":{"miscellaneous/functions.html":{}},"body":{"interfaces/Action.html":{},"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["fundament",{"_index":775,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":3157,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["futur",{"_index":1091,"title":{},"body":{"injectables/CrudService.html":{}}}],["g",{"_index":5166,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["g.name",{"_index":3652,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["gener",{"_index":513,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/InputErrorsComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generateconfig",{"_index":3044,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":3050,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["geo",{"_index":2682,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocod",{"_index":1934,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.servic",{"_index":2657,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":1936,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocod",{"_index":1947,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocod",{"_index":1983,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservic",{"_index":1931,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get",{"_index":3153,"title":{"changelog.html":{},"index.html":{}},"body":{"classes/Notification.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes/list.html":{}}}],["get(nam",{"_index":4020,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(properti",{"_index":3059,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(relationnam",{"_index":3500,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["get(typ",{"_index":4215,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":659,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":674,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":3952,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(item",{"_index":3957,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethod",{"_index":660,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":676,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethod",{"_index":661,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(rel",{"_index":680,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":662,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":684,"title":{},"body":{"injectables/AuthService.html":{}}}],["getassetconfig(assetgroupid",{"_index":1722,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getcolor",{"_index":2886,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":2917,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolumn",{"_index":1599,"title":{},"body":{"classes/Field.html":{}}}],["getconfig",{"_index":3508,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["getdaycolor(_mo",{"_index":1276,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_mo",{"_index":1279,"title":{},"body":{"interfaces/Day.html":{}}}],["geterror",{"_index":2270,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfield",{"_index":3691,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getfield(properti",{"_index":3708,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getfieldconfig",{"_index":3045,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getfieldconfig(model",{"_index":3063,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getformdata(fil",{"_index":1739,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getformlabel",{"_index":1876,"title":{},"body":{"injectables/FormService.html":{}}}],["getformlabel(form",{"_index":1885,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup",{"_index":1877,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":1888,"title":{},"body":{"injectables/FormService.html":{}}}],["getitemcolor",{"_index":2887,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":2919,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel",{"_index":2888,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":2921,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlightmodel",{"_index":3046,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":3070,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getmonth(day",{"_index":1291,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":1937,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(loc",{"_index":1952,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpag",{"_index":3278,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":388,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{}}}],["getpath(item",{"_index":2924,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermiss",{"_index":3237,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplacehold",{"_index":1600,"title":{},"body":{"classes/Field.html":{}}}],["getroot",{"_index":3831,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema",{"_index":3800,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":3807,"title":{},"body":{"injectables/SdkService.html":{}}}],["getstoragekey",{"_index":2435,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getstoragekey(list",{"_index":2440,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getsystemfield",{"_index":3047,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getter",{"_index":866,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{},"additional-documentation/core-classes/form.html":{}}}],["getvalid",{"_index":1878,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":1890,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalu",{"_index":3692,"title":{},"body":{"classes/ResourceForm.html":{}}}],["getvalue(properti",{"_index":3710,"title":{},"body":{"classes/ResourceForm.html":{}}}],["ghost",{"_index":5279,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["github",{"_index":5008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["give",{"_index":3747,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["given",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["glass",{"_index":4978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["global",{"_index":2576,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globalload",{"_index":2581,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["globe",{"_index":4896,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glue",{"_index":5009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["glyph",{"_index":3990,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":4773,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["googl",{"_index":1933,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["google.maps.geocod",{"_index":1990,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":1964,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemap",{"_index":2710,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["gp",{"_index":4897,"title":{},"body":{"miscellaneous/variables.html":{}}}],["gradient",{"_index":4874,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grant",{"_index":3244,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["graph",{"_index":4833,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":5051,"title":{},"body":{"miscellaneous/variables.html":{}}}],["group",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["group.addcontrol(field.properti",{"_index":1922,"title":{},"body":{"injectables/FormService.html":{}}}],["group.map(g",{"_index":3651,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["group.nam",{"_index":3569,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["group.pip",{"_index":2552,"title":{},"body":{"modules/ListModule.html":{}}}],["group.valu",{"_index":545,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["groupchang",{"_index":556,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["groupdat",{"_index":4207,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["groupid",{"_index":3650,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["groupnam",{"_index":2973,"title":{},"body":{"components/MockupComponent.html":{}}}],["grouppip",{"_index":1189,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1446,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":5237,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["guard",{"_index":576,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.servic",{"_index":631,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.t",{"_index":575,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":588,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":589,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["guid",{"_index":4707,"title":{},"body":{"index.html":{},"additional-documentation/adding-new-packages.html":{}}}],["h",{"_index":2368,"title":{},"body":{"components/ListComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["h2",{"_index":5066,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h3",{"_index":5068,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h4",{"_index":5070,"title":{},"body":{"miscellaneous/variables.html":{}}}],["h5",{"_index":5072,"title":{},"body":{"miscellaneous/variables.html":{}}}],["haben",{"_index":3414,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hamburg",{"_index":4907,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hand",{"_index":4859,"title":{},"body":{"miscellaneous/variables.html":{}}}],["handi",{"_index":5259,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["handl",{"_index":1884,"title":{},"body":{"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["handler",{"_index":2335,"title":{},"body":{"components/ListComponent.html":{}}}],["happen",{"_index":1528,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["hard",{"_index":5282,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["harri",{"_index":4899,"title":{},"body":{"miscellaneous/variables.html":{}}}],["has(item",{"_index":805,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":2889,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":2927,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasal",{"_index":777,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(item",{"_index":808,"title":{},"body":{"classes/Collection.html":{}}}],["hasentri",{"_index":3546,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hasfocu",{"_index":2518,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasfocus(item",{"_index":2531,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hash",{"_index":4875,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hasmethod",{"_index":894,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hasmethod(method",{"_index":915,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["haspassword",{"_index":3560,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["haspendingemail",{"_index":3562,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["have",{"_index":395,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1235,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header'},{'nam",{"_index":233,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["header.compon",{"_index":2553,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2477,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.t",{"_index":2476,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:17",{"_index":2484,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:19",{"_index":2485,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:21",{"_index":2501,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":2483,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2498,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:29",{"_index":2489,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":2487,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":2494,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:44",{"_index":2492,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:52",{"_index":2496,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/items/pagin",{"_index":5247,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header/list",{"_index":2475,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headlin",{"_index":3163,"title":{},"body":{"classes/Notification.html":{}}}],["health",{"_index":4876,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heart",{"_index":4975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["heat",{"_index":1210,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1223,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'nam",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["heatmapcompon",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":2155,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["hellip",{"_index":1358,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["help",{"_index":2226,"title":{},"body":{"components/InputComponent.html":{},"index.html":{}}}],["helper",{"_index":1453,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["here",{"_index":2578,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["hexcolor",{"_index":3489,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hidden",{"_index":1594,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["hide",{"_index":977,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["hideassetgroupselect",{"_index":1002,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["hidefirstlast",{"_index":3382,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hideinform",{"_index":2188,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{}}}],["hideinlist",{"_index":3074,"title":{},"body":{"injectables/ModelConfigService.html":{},"changelog.html":{}}}],["hideonclickoutsid",{"_index":1518,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hideoncr",{"_index":3114,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonedit",{"_index":3115,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hidepag",{"_index":3383,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagin",{"_index":1567,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["hidesubmitbutton",{"_index":1837,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["high",{"_index":4953,"title":{},"body":{"miscellaneous/variables.html":{}}}],["higher",{"_index":2369,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["highlight",{"_index":4879,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hint",{"_index":5330,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["histori",{"_index":2024,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservic",{"_index":1129,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["hold",{"_index":393,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MockupComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["home",{"_index":4924,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hook",{"_index":3547,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["hook.method",{"_index":3549,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["horizont",{"_index":4830,"title":{},"body":{"miscellaneous/variables.html":{}}}],["host",{"_index":314,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["host.direct",{"_index":1427,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.t",{"_index":3942,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":3947,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":3945,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbind",{"_index":1366,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class",{"_index":1563,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class.i",{"_index":1388,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostlisten",{"_index":1368,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostlistener('document:click",{"_index":3450,"title":{},"body":{"components/PopComponent.html":{}}}],["hostlistener('dragleav",{"_index":1399,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragov",{"_index":1389,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1394,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hour",{"_index":5297,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hourglass",{"_index":4880,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hours.component.html",{"_index":5298,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.scss",{"_index":5299,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hover",{"_index":2883,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":2894,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":2890,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":2930,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":2891,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["http",{"_index":5207,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["http://localhost:4200",{"_index":4737,"title":{},"body":{"index.html":{}}}],["https://angular.io/guide/dynam",{"_index":3943,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":5302,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["https://components.entrecode.d",{"_index":4708,"title":{},"body":{"index.html":{}}}],["https://components.entrecode.de/assets/asset?e=1",{"_index":426,"title":{},"body":{"directives/AssetDirective.html":{}}}],["https://components.entrecode.de/auth/auth?e=1",{"_index":2719,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/auth/password",{"_index":3396,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["https://components.entrecode.de/auth/signup?e=1",{"_index":3884,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://components.entrecode.de/entries/crud?e=1",{"_index":887,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/entries/entries?e=1",{"_index":1436,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["https://components.entrecode.de/misc/ace?e=1",{"_index":17,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":2838,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymce?e=1",{"_index":4108,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetime?e=1",{"_index":1157,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["https://components.entrecode.de/ui/icons?e=1",{"_index":2050,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["https://components.entrecode.de/ui/list/basic?e=1",{"_index":2304,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transforms?e=1",{"_index":2305,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/loader?e=1",{"_index":2561,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login?e=1",{"_index":2753,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["https://components.entrecode.de/ui/modal?e=1",{"_index":2986,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://components.entrecode.de/ui/notifications?e=1",{"_index":3169,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop?e=1",{"_index":3431,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/symbols?e=1",{"_index":4017,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://components.entrecode.de/ui/tabs?e=1",{"_index":4068,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/data_manager/#field",{"_index":3784,"title":{},"body":{"interfaces/SdkField.html":{}}}],["https://doc.entrecode.de/en/develop/resources/dm",{"_index":3598,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://docs.npmjs.com/cli/access#detail",{"_index":5387,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["https://entrecode.de/schema/dm",{"_index":3609,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["https://entrecode.github.io/ec.compon",{"_index":4706,"title":{},"body":{"index.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":501,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environ",{"_index":653,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ac",{"_index":148,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":1918,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":638,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/mishoo/uglifyjs2/issues/659",{"_index":4749,"title":{},"body":{"index.html":{}}}],["https://icons.entrecode.de/ec",{"_index":5046,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https://localhost:4200",{"_index":5213,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffin",{"_index":5223,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://medium.com/claritydesignsystem/ng",{"_index":2987,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://www.youtube.com/emb",{"_index":5109,"title":{},"body":{"miscellaneous/variables.html":{}}}],["https?:\\/\\/(?:[a",{"_index":5103,"title":{},"body":{"miscellaneous/variables.html":{}}}],["human",{"_index":1645,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/core-classes/field.html":{}}}],["höhe",{"_index":5368,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["höher",{"_index":5369,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["i+1",{"_index":3370,"title":{},"body":{"components/PaginationComponent.html":{}}}],["icon",{"_index":1595,"title":{"additional-documentation/ui/icons.html":{}},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/icons.html":{}}}],["icon'},{'nam",{"_index":224,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["icon.compon",{"_index":2083,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":2053,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.cont",{"_index":2077,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.servic",{"_index":2069,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.modul",{"_index":1866,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{}}}],["iconcompon",{"_index":223,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodul",{"_index":1851,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons.t",{"_index":4649,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["iconservic",{"_index":2055,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/icons.html":{}}}],["id",{"_index":337,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/list.html":{}}}],["idea",{"_index":2358,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["identifi",{"_index":351,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["identifierpattern",{"_index":2292,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["ids.push(asset",{"_index":1773,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["if(body.amazement_factor",{"_index":5253,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(valu",{"_index":5249,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value===10",{"_index":5248,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ifram",{"_index":177,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignor",{"_index":1692,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["ignoredupl",{"_index":1688,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["imag",{"_index":226,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["image/gif",{"_index":5141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/image.direct",{"_index":1814,"title":{},"body":{"modules/FilesModule.html":{}}}],["image/jpeg",{"_index":5140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/png",{"_index":5139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/svg+xml",{"_index":5143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/vnd.microsoft.icon",{"_index":5144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/webp",{"_index":5142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/x",{"_index":5145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["imagedirect",{"_index":309,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageform",{"_index":2130,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageload",{"_index":2131,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["images",{"_index":3603,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["imageselectpopcompon",{"_index":225,"title":{"components/ImageSelectPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":310,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/variables.html":{}}}],["img'",{"_index":2088,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immedi",{"_index":438,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/PopComponent.html":{}}}],["immut",{"_index":1065,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["immuta",{"_index":3499,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["implement",{"_index":15,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["impli",{"_index":4728,"title":{},"body":{"index.html":{}}}],["import",{"_index":60,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["impressum",{"_index":4774,"title":{},"body":{"index.html":{}}}],["improv",{"_index":4517,"title":{},"body":{"changelog.html":{}}}],["inbox",{"_index":4882,"title":{},"body":{"miscellaneous/variables.html":{}}}],["includ",{"_index":1694,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/core-classes/form.html":{}}}],["includeassetidinpath",{"_index":1689,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["incom",{"_index":4199,"title":{},"body":{"components/ToggleComponent.html":{}}}],["incompat",{"_index":4445,"title":{},"body":{"changelog.html":{}}}],["increas",{"_index":4885,"title":{},"body":{"miscellaneous/variables.html":{}}}],["increment",{"_index":5309,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["indent",{"_index":4883,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":32,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/selection.html":{}}}],["index(item",{"_index":811,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":2062,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ace.html":{}}}],["index.t",{"_index":4732,"title":{},"body":{"index.html":{}}}],["indic",{"_index":1691,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["infin",{"_index":4886,"title":{},"body":{"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["inform",{"_index":2497,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes.html":{}}}],["inhabit",{"_index":2296,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{}}}],["init",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/adding-new-packages.html":{}}}],["init(environ",{"_index":3811,"title":{},"body":{"injectables/SdkService.html":{}}}],["init(list",{"_index":2345,"title":{},"body":{"components/ListComponent.html":{}}}],["initfilterqueri",{"_index":491,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initfilterquery(fieldfilt",{"_index":525,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initi",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["initmethod",{"_index":3655,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initmod",{"_index":2990,"title":{},"body":{"components/ModalComponent.html":{}}}],["inittab",{"_index":4071,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":433,"title":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["inlin",{"_index":5077,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/ui.html":{}}}],["input",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/list.html":{}}}],["input#id",{"_index":4434,"title":{},"body":{"changelog.html":{}}}],["input'",{"_index":1170,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'nam",{"_index":228,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["input('config",{"_index":2375,"title":{},"body":{"components/ListComponent.html":{}}}],["input.compon",{"_index":413,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"modules/FormModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.html",{"_index":404,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.scss",{"_index":5287,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.t",{"_index":392,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts:10",{"_index":1341,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:12",{"_index":1351,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:13",{"_index":408,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:14",{"_index":409,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:16",{"_index":1352,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:18",{"_index":1350,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1340,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input/default",{"_index":412,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["input/ec",{"_index":5270,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input/input.compon",{"_index":2287,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":4512,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/data.html":{}}}],["input[type=fil",{"_index":4292,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcompon",{"_index":110,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputerrorscompon",{"_index":229,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputs/output",{"_index":4484,"title":{},"body":{"changelog.html":{}}}],["inputthi",{"_index":5285,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputview",{"_index":4224,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["inputview:'entri",{"_index":4398,"title":{},"body":{"changelog.html":{}}}],["insid",{"_index":930,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["inspir",{"_index":3683,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["instagram",{"_index":5014,"title":{},"body":{"miscellaneous/variables.html":{}}}],["instal",{"_index":5165,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{}}}],["instanc",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"pipes/DatetimePipe.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["instanceof",{"_index":2119,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instanti",{"_index":5362,"title":{},"body":{"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["instead",{"_index":1085,"title":{},"body":{"injectables/CrudService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{}}}],["integr",{"_index":5383,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["intend",{"_index":4127,"title":{},"body":{"components/TinymceComponent.html":{}}}],["interact",{"_index":3232,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interfac",{"_index":332,"title":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["interfer",{"_index":2596,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["intern",{"_index":1027,"title":{},"body":{"interfaces/CrudConfig.html":{},"miscellaneous/variables.html":{}}}],["interpret",{"_index":1713,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["intersect",{"_index":4890,"title":{},"body":{"miscellaneous/variables.html":{}}}],["intial",{"_index":2228,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefin",{"_index":3965,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["introduc",{"_index":4411,"title":{},"body":{"changelog.html":{}}}],["introduct",{"_index":5326,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["invalid",{"_index":2979,"title":{},"body":{"components/MockupComponent.html":{},"injectables/TypeConfigService.html":{}}}],["invert",{"_index":4447,"title":{},"body":{"changelog.html":{}}}],["invit",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ResourceConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["inviteplacehold",{"_index":3909,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["invok",{"_index":2295,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["io/io.modul",{"_index":1859,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodul",{"_index":1849,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isact",{"_index":2892,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(pag",{"_index":3294,"title":{},"body":{"classes/Pagination.html":{}}}],["isactive(path",{"_index":2933,"title":{},"body":{"components/MenuComponent.html":{}}}],["isclick",{"_index":2519,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["iscreat",{"_index":3693,"title":{},"body":{"classes/ResourceForm.html":{}}}],["isedit",{"_index":3694,"title":{},"body":{"classes/ResourceForm.html":{}}}],["isempti",{"_index":778,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1302,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1438,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperti",{"_index":1050,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1063,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1439,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isload",{"_index":2309,"title":{},"body":{"components/ListComponent.html":{}}}],["isnewasset(asset",{"_index":1728,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isnewassetgroupid(assetgroupid",{"_index":1795,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["iso",{"_index":4505,"title":{},"body":{"changelog.html":{}}}],["isoldassetgroupid",{"_index":2149,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["isoldassetgroupid(assetgroupid",{"_index":1793,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoutsid",{"_index":1517,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isoutside(el",{"_index":1544,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isselect",{"_index":2893,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_mo",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":2935,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1300,"title":{},"body":{"interfaces/Day.html":{}}}],["ist",{"_index":3179,"title":{},"body":{"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["isvis",{"_index":3345,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(pag",{"_index":3348,"title":{},"body":{"components/PaginationComponent.html":{}}}],["ital",{"_index":4891,"title":{},"body":{"miscellaneous/variables.html":{}}}],["item",{"_index":43,"title":{"additional-documentation/core-classes/item.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["item'",{"_index":2523,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item(",{"_index":1796,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item('a",{"_index":5334,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(1",{"_index":5358,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item(asset",{"_index":1755,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":1753,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(resourc",{"_index":3717,"title":{},"body":{"classes/ResourceForm.html":{}}}],["item.config.fields[property].form",{"_index":967,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":966,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsav",{"_index":3768,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.data?.titl",{"_index":2964,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(valu",{"_index":3770,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbodi",{"_index":546,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody().act",{"_index":362,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().action(item",{"_index":363,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().add",{"_index":359,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().children",{"_index":364,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.group(properti",{"_index":1999,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":973,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":2962,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.resolve(field.properti",{"_index":5263,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["item.sav",{"_index":5356,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["item.sort(properti",{"_index":3973,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":1840,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.properti",{"_index":1347,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.resolve(field.property)?.length",{"_index":1360,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemconfig",{"_index":1836,"title":{"interfaces/ItemConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/item.html":{}}}],["items'},{'nam",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["items.compon",{"_index":2554,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2517,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.t",{"_index":2514,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:15",{"_index":2527,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:17",{"_index":2528,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:19",{"_index":2526,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:21",{"_index":2529,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:23",{"_index":2522,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:25",{"_index":2521,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:28",{"_index":2536,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:30",{"_index":2535,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:46",{"_index":2532,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:50",{"_index":2534,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:55",{"_index":2530,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":1998,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":840,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":855,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pip",{"_index":1868,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.t",{"_index":2828,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:8",{"_index":2832,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((ha",{"_index":846,"title":{},"body":{"classes/Collection.html":{}}}],["items.revers",{"_index":3987,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.pag",{"_index":3338,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":3982,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2513,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["iter",{"_index":2273,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/form.html":{}}}],["itself",{"_index":1546,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"changelog.html":{}}}],["ja",{"_index":5371,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["javascript",{"_index":57,"title":{},"body":{"components/AceComponent.html":{}}}],["join",{"_index":3550,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["js",{"_index":4687,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":703,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["json.parse(config",{"_index":2452,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.parse(e.data",{"_index":2043,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(json",{"_index":3600,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["json.stringify(object.assign(exist",{"_index":2456,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.stringify(valu",{"_index":2454,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["justifi",{"_index":4809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["jwt/issues/305",{"_index":639,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":604,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["karma",{"_index":4770,"title":{},"body":{"index.html":{}}}],["keep",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/adding-new-packages.html":{}}}],["keeppopopen",{"_index":1003,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["keepratio",{"_index":2189,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["key",{"_index":868,"title":{},"body":{"classes/Config.html":{},"injectables/CrudService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["key[0",{"_index":1111,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keyboard",{"_index":4400,"title":{},"body":{"changelog.html":{}}}],["keydown",{"_index":3473,"title":{},"body":{"injectables/PopService.html":{}}}],["keyup",{"_index":4181,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":2575,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["kleiner",{"_index":5239,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["know",{"_index":1778,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["known",{"_index":453,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["kununu",{"_index":5004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kurz",{"_index":4804,"title":{},"body":{"miscellaneous/variables.html":{}}}],["label",{"_index":350,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{}}}],["label#for",{"_index":4433,"title":{},"body":{"changelog.html":{}}}],["landscap",{"_index":4921,"title":{},"body":{"miscellaneous/variables.html":{}}}],["languag",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"injectables/ResourceConfig.html":{}}}],["laptop",{"_index":4892,"title":{},"body":{"miscellaneous/variables.html":{}}}],["last",{"_index":1211,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["lat",{"_index":1991,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1410,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3474,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":3483,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hid",{"_index":3485,"title":{},"body":{"injectables/PopService.html":{}}}],["latitud",{"_index":1972,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["lay",{"_index":5315,"title":{},"body":{"additional-documentation/ui.html":{},"additional-documentation/core-classes.html":{}}}],["layer",{"_index":3233,"title":{},"body":{"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["layout",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{}}}],["lazi",{"_index":4112,"title":{},"body":{"components/TinymceComponent.html":{}}}],["lead",{"_index":4493,"title":{},"body":{"changelog.html":{},"miscellaneous/variables.html":{}}}],["leav",{"_index":4898,"title":{},"body":{"miscellaneous/variables.html":{}}}],["left",{"_index":3006,"title":{},"body":{"components/ModalComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["legaci",{"_index":572,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legacyasset",{"_index":1720,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{}}}],["legacyassetconfig",{"_index":1710,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":172,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["lemontre",{"_index":2363,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["length",{"_index":849,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":4711,"title":{},"body":{"index.html":{},"additional-documentation/adding-new-packages.html":{}}}],["lerna.json",{"_index":5382,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["let",{"_index":5314,"title":{},"body":{"additional-documentation/ui.html":{}}}],["let'",{"_index":3263,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letter",{"_index":1043,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":430,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"directives/EntryDirective.html":{},"components/MenuComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["li",{"_index":3358,"title":{},"body":{"components/PaginationComponent.html":{}}}],["lib",{"_index":4747,"title":{},"body":{"index.html":{}}}],["librari",{"_index":2665,"title":{},"body":{"modules/LocationModule.html":{}}}],["light",{"_index":3072,"title":{},"body":{"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{}}}],["lightbulb",{"_index":4893,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lightmodel",{"_index":1513,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["line",{"_index":2593,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["line:direct",{"_index":1828,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2374,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3387,"title":{},"body":{"classes/PaginationConfig.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["link_class_list",{"_index":5060,"title":{},"body":{"miscellaneous/variables.html":{}}}],["linkedin",{"_index":4985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["list",{"_index":188,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/list.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["list#toggleselectmod",{"_index":4448,"title":{},"body":{"changelog.html":{}}}],["list'},{'nam",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["list(act",{"_index":382,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["list(this.collection.item",{"_index":2383,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.item",{"_index":2380,"title":{},"body":{"components/ListComponent.html":{}}}],["list.compon",{"_index":544,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.component.html",{"_index":485,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.t",{"_index":484,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":519,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.config",{"_index":2458,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.config.storagekey",{"_index":2459,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.empti",{"_index":2411,"title":{},"body":{"components/ListComponent.html":{}}}],["list.field",{"_index":2457,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.filter(f",{"_index":2465,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.find(f",{"_index":2473,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.foreach(field",{"_index":2470,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.filter.noresult",{"_index":2409,"title":{},"body":{"components/ListComponent.html":{}}}],["list.filter.reset",{"_index":2410,"title":{},"body":{"components/ListComponent.html":{}}}],["list.load",{"_index":2412,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.t",{"_index":4575,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.compon",{"_index":3320,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["list/asset",{"_index":483,"title":{},"body":{"components/AssetListComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["list/entri",{"_index":939,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["list/list",{"_index":3321,"title":{},"body":{"classes/Pagination.html":{}}}],["list/list.modul",{"_index":3881,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resourc",{"_index":543,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["list/upload",{"_index":4422,"title":{},"body":{"changelog.html":{}}}],["listcompon",{"_index":231,"title":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":344,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["listconfigservic",{"_index":538,"title":{"injectables/ListConfigService.html":{}},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["listen",{"_index":1538,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["listheadercompon",{"_index":232,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscompon",{"_index":234,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["listmodul",{"_index":2542,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listresourc",{"_index":493,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["lists/form",{"_index":3058,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["liter",{"_index":862,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"miscellaneous/variables.html":{}}}],["live",{"_index":652,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":1993,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":424,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"interfaces/WithLoader.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["load(config",{"_index":3299,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":447,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadactions(act",{"_index":380,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadcompon",{"_index":1419,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(compon",{"_index":1421,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadentri",{"_index":895,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":918,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":494,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loader'",{"_index":2574,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'nam",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["loader.compon",{"_index":2612,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2562,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interfac",{"_index":2805,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loader.interface.t",{"_index":4391,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.servic",{"_index":2613,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promis",{"_index":2619,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.compon",{"_index":2803,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.modul",{"_index":1865,"title":{},"body":{"modules/FormModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":2804,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loadercompon",{"_index":236,"title":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loadermodul",{"_index":1852,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaderservic",{"_index":899,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loaderth",{"_index":2577,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["loadimag",{"_index":2166,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadimg",{"_index":2171,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadwhen",{"_index":495,"title":{},"body":{"components/AssetListComponent.html":{}}}],["local",{"_index":2428,"title":{"additional-documentation/project-setup-tutorial/localization.html":{}},"body":{"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["localiz",{"_index":3110,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["localload",{"_index":2583,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["localstorage.getitem(key",{"_index":2451,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["localstorage.setitem(key",{"_index":2453,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["locat",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["location.latitud",{"_index":1992,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitud",{"_index":1994,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":2654,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_compon",{"_index":2655,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["locationmapcompon",{"_index":238,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationmodul",{"_index":2647,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{}}}],["locationpickercompon",{"_index":241,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["locationsearchcompon",{"_index":243,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["lock",{"_index":3410,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["lockform",{"_index":3399,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":2060,"title":{},"body":{"components/IconComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["logic",{"_index":5301,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{}}}],["login",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/ui.html":{},"additional-documentation/publishing.html":{}}}],["login'",{"_index":2799,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login'},{'nam",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["login(undefin",{"_index":687,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["login(valu",{"_index":2789,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login.component.html",{"_index":2720,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login.component.t",{"_index":5226,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login/login.compon",{"_index":633,"title":{},"body":{"modules/AuthModule.html":{},"components/SignupComponent.html":{}}}],["login/signup",{"_index":4463,"title":{},"body":{"changelog.html":{}}}],["logincompon",{"_index":245,"title":{"components/LoginComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["logincomponent:20",{"_index":3889,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:22",{"_index":3892,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:24",{"_index":3891,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:26",{"_index":3898,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:28",{"_index":3899,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:30",{"_index":3897,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:31",{"_index":3900,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:32",{"_index":3901,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:35",{"_index":3894,"title":{},"body":{"components/SignupComponent.html":{}}}],["loginformcompon",{"_index":247,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["loginformcomponent:18",{"_index":3933,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:20",{"_index":3935,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:22",{"_index":3932,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:24",{"_index":3924,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:26",{"_index":3923,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:28",{"_index":3919,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:30",{"_index":3922,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:32",{"_index":3917,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:34",{"_index":3918,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:36",{"_index":3920,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:38",{"_index":3921,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:40",{"_index":3916,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:42",{"_index":3915,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:44",{"_index":3934,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:47",{"_index":3936,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:51",{"_index":3929,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:59",{"_index":3931,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:67",{"_index":3928,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:72",{"_index":3930,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["logout",{"_index":663,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":690,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2426,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["longitud",{"_index":1974,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":3149,"title":{},"body":{"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["lookup",{"_index":1951,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["loop",{"_index":4887,"title":{},"body":{"miscellaneous/variables.html":{}}}],["low",{"_index":4954,"title":{},"body":{"miscellaneous/variables.html":{}}}],["lower",{"_index":2371,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["lvl1",{"_index":1011,"title":{},"body":{"interfaces/CrudConfig.html":{},"changelog.html":{}}}],["machin",{"_index":4821,"title":{},"body":{"miscellaneous/variables.html":{}}}],["made",{"_index":4126,"title":{},"body":{"components/TinymceComponent.html":{}}}],["mail",{"_index":2773,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["main",{"_index":2357,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["mainli",{"_index":5332,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["major",{"_index":5327,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["make",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["man",{"_index":4990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["manag",{"_index":4714,"title":{},"body":{"index.html":{}}}],["mandatori",{"_index":3005,"title":{},"body":{"components/ModalComponent.html":{}}}],["mani",{"_index":1022,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["manual",{"_index":4118,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ace.html":{},"additional-documentation/adding-new-packages.html":{}}}],["map",{"_index":875,"title":{},"body":{"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/MenuComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["map'},{'nam",{"_index":240,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["map((d",{"_index":1297,"title":{},"body":{"interfaces/Day.html":{}}}],["map((dat",{"_index":1299,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["map(field",{"_index":3542,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(hook",{"_index":3548,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(item",{"_index":3974,"title":{},"body":{"classes/Sorter.html":{}}}],["map(p",{"_index":3605,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map(polici",{"_index":3552,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["map.compon",{"_index":2658,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":2623,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":2622,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.t",{"_index":2621,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:12",{"_index":2630,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":2632,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":2634,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":2633,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":2639,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":2636,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.valu",{"_index":2700,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["mapload",{"_index":1943,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapsapiload",{"_index":1940,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mark",{"_index":1227,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["marker",{"_index":2631,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":2624,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coord",{"_index":2635,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markup",{"_index":2985,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["match",{"_index":317,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["matches(chang",{"_index":3745,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["math.abs(curr",{"_index":3366,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(value.width",{"_index":2157,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.defaults",{"_index":2182,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.getpag",{"_index":3340,"title":{},"body":{"classes/Pagination.html":{}}}],["matter",{"_index":5193,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":1867,"title":{},"body":{"modules/FormModule.html":{}}}],["maxcolumn",{"_index":2418,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["maxim",{"_index":2424,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["maximum",{"_index":1620,"title":{},"body":{"classes/Field.html":{},"changelog.html":{}}}],["maxitem",{"_index":1596,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{},"changelog.html":{}}}],["maxitemspip",{"_index":1847,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["mean",{"_index":1794,"title":{},"body":{"interfaces/FileOptions.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{}}}],["meant",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{}}}],["meantion",{"_index":5275,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["measur",{"_index":4901,"title":{},"body":{"miscellaneous/variables.html":{}}}],["media",{"_index":5094,"title":{},"body":{"miscellaneous/variables.html":{}}}],["medium",{"_index":250,"title":{"additional-documentation/medium.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/medium.html":{}}}],["mediumeditor",{"_index":2846,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeel",{"_index":2866,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcompon",{"_index":249,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediummodul",{"_index":2872,"title":{"modules/MediumModule.html":{}},"body":{"modules/MediumModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/medium.html":{}}}],["megaphon",{"_index":4935,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menu",{"_index":2880,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/ui.html":{}}}],["menu,[ec",{"_index":253,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menu.component.html",{"_index":2882,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":2881,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.compon",{"_index":4378,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'nam",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menubar",{"_index":5029,"title":{},"body":{"miscellaneous/variables.html":{}}}],["menucompon",{"_index":252,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merg",{"_index":872,"title":{},"body":{"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{}}}],["merge(route.data",{"_index":955,"title":{},"body":{"components/CrudComponent.html":{}}}],["mergedfield",{"_index":3134,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields[key",{"_index":3137,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["messag",{"_index":581,"title":{},"body":{"injectables/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["message.clos",{"_index":3269,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["met",{"_index":5294,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["metadata",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["middl",{"_index":4998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["migrat",{"_index":4420,"title":{},"body":{"changelog.html":{}}}],["mime",{"_index":1703,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["mimetyp",{"_index":1702,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["minimum",{"_index":3392,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["minlength",{"_index":4803,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minor",{"_index":5064,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minu",{"_index":4902,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellan",{"_index":4699,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["miss",{"_index":4754,"title":{},"body":{"index.html":{}}}],["mit",{"_index":3417,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mkdir",{"_index":5379,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["mmmm",{"_index":1237,"title":{},"body":{"interfaces/Day.html":{}}}],["mobil",{"_index":4904,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mockup",{"_index":2970,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup'},{'nam",{"_index":256,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["mockup.component.html",{"_index":2971,"title":{},"body":{"components/MockupComponent.html":{}}}],["mockup/mockup.compon",{"_index":4379,"title":{},"body":{"modules/UtilityModule.html":{}}}],["mockupcompon",{"_index":255,"title":{"components/MockupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["modal",{"_index":2983,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"changelog.html":{}}}],["modal'},{'nam",{"_index":258,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["modal.component.html",{"_index":2989,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.compon",{"_index":3470,"title":{},"body":{"modules/PopModule.html":{}}}],["modalcompon",{"_index":257,"title":{"components/ModalComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"classes/ResourceForm.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model",{"_index":103,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model'",{"_index":3038,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.${filter.model",{"_index":1081,"title":{},"body":{"injectables/CrudService.html":{}}}],["model.${model",{"_index":1109,"title":{},"body":{"injectables/CrudService.html":{}}}],["model.field",{"_index":871,"title":{},"body":{"classes/Config.html":{}}}],["model/schema",{"_index":5244,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["modelchang",{"_index":2844,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1514,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/data.html":{}}}],["modelconfig.field",{"_index":3131,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":3061,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":3088,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":3078,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":3090,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfield",{"_index":3130,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields[key",{"_index":3139,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservic",{"_index":1130,"title":{"injectables/ModelConfigService.html":{}},"body":{"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["modelconfigur",{"_index":3143,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelid",{"_index":3540,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["modelist.j",{"_index":150,"title":{},"body":{"components/AceComponent.html":{}}}],["modellistcompon",{"_index":4450,"title":{},"body":{"changelog.html":{}}}],["modelresourc",{"_index":2013,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models[model",{"_index":3142,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modern",{"_index":5028,"title":{},"body":{"miscellaneous/variables.html":{}}}],["modifi",{"_index":1042,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["modified'].indexof(key",{"_index":1112,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modul",{"_index":318,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/adding-new-packages.html":{}}}],["module'",{"_index":645,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["modules.sh",{"_index":4727,"title":{},"body":{"index.html":{},"additional-documentation/adding-new-packages.html":{}}}],["modulewithprovid",{"_index":625,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{}}}],["moment",{"_index":1181,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment'",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(d",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":4235,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(valu",{"_index":1200,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyi",{"_index":5233,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment(value).format(format",{"_index":4253,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1204,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":4255,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":4231,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.d",{"_index":4213,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":4218,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.tim",{"_index":4214,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.locale('d",{"_index":5228,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment.locale(this.symbols.resolve('moment.locale'));us",{"_index":4002,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["moment.mo",{"_index":1165,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["money",{"_index":4905,"title":{},"body":{"miscellaneous/variables.html":{}}}],["monorepo",{"_index":4713,"title":{},"body":{"index.html":{}}}],["month",{"_index":1206,"title":{},"body":{"interfaces/Day.html":{}}}],["month'},{'nam",{"_index":260,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["month.compon",{"_index":4453,"title":{},"body":{"changelog.html":{}}}],["month.component.html",{"_index":1220,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcompon",{"_index":259,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1236,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":654,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/collection.html":{}}}],["mouseout",{"_index":2912,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseov",{"_index":2905,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1274,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1273,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":779,"title":{},"body":{"classes/Collection.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["move(item",{"_index":815,"title":{},"body":{"classes/Collection.html":{}}}],["ms",{"_index":2210,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["much",{"_index":4513,"title":{},"body":{"changelog.html":{}}}],["muffin",{"_index":3062,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffin.entry?.nam",{"_index":1505,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.nam",{"_index":1466,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffincompon",{"_index":3193,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["muffinconfigur",{"_index":5269,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffins/muffins.compon",{"_index":5222,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":5217,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscompon",{"_index":5221,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["multi",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["multipl",{"_index":1030,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["music",{"_index":4906,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mustreload",{"_index":896,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":921,"title":{},"body":{"components/CrudComponent.html":{}}}],["mutabl",{"_index":3109,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["myapp",{"_index":2579,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["myasset.asset?.assetid",{"_index":458,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.cr",{"_index":462,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":464,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tag",{"_index":461,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.titl",{"_index":459,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.typ",{"_index":463,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycompon",{"_index":3176,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["myimage.asset?.assetid",{"_index":2110,"title":{},"body":{"directives/ImageDirective.html":{}}}],["n",{"_index":5357,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.resolv",{"_index":5361,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["n.save",{"_index":5360,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nach",{"_index":5376,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["name",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["name[0].touppercas",{"_index":5231,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["namespac",{"_index":1962,"title":{},"body":{"injectables/GeocodeService.html":{},"miscellaneous/variables.html":{}}}],["nativ",{"_index":2103,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natur",{"_index":3963,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["navig",{"_index":4410,"title":{},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["navigationend",{"_index":4083,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":1954,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1035,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ace.html":{},"additional-documentation/adding-new-packages.html":{}}}],["nein",{"_index":5372,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["nest",{"_index":1426,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["nestedcrudconfig",{"_index":4204,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["new",{"_index":71,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["newdat",{"_index":1332,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1334,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistori",{"_index":2040,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newli",{"_index":3785,"title":{},"body":{"interfaces/SdkField.html":{}}}],["newtimespan",{"_index":1256,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.revers",{"_index":1261,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1260,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1258,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":517,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["ng",{"_index":4734,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ng_value_accessor",{"_index":133,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngaftercontentinit",{"_index":4072,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":1821,"title":{},"body":{"interfaces/Focus.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":1526,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabsComponent.html":{}}}],["ngmodel",{"_index":4479,"title":{},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngmodul",{"_index":330,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["ngonchang",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ngonchanges(chang",{"_index":529,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{}}}],["ngondestroy",{"_index":2843,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ngx",{"_index":629,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"changelog.html":{},"dependencies.html":{}}}],["ngzone",{"_index":1941,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":605,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["niedrig",{"_index":5370,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["noapi",{"_index":3801,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":3814,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":664,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace.j",{"_index":137,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":5324,"title":{},"body":{"additional-documentation/ace.html":{}}}],["node_modul",{"_index":4718,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.spec.t",{"_index":4766,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/**/*.t",{"_index":4767,"title":{},"body":{"index.html":{}}}],["node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4752,"title":{},"body":{"index.html":{}}}],["non",{"_index":3004,"title":{},"body":{"components/ModalComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2524,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{}}}],["normal",{"_index":1375,"title":{},"body":{"directives/DropzoneDirective.html":{},"miscellaneous/variables.html":{}}}],["note",{"_index":3389,"title":{},"body":{"classes/PaginationConfig.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["noth",{"_index":3069,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notif",{"_index":586,"title":{"classes/Notification.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification(notif",{"_index":3256,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":3211,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notif",{"_index":3212,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.t",{"_index":3202,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notification.error",{"_index":3166,"title":{},"body":{"classes/Notification.html":{}}}],["notification.hid",{"_index":3207,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":3216,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.messag",{"_index":3210,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replac",{"_index":3213,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":3214,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notif",{"_index":3215,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticki",{"_index":3218,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.tim",{"_index":3219,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.titl",{"_index":3209,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcompon",{"_index":3146,"title":{},"body":{"classes/Notification.html":{}}}],["notifications'},{'nam",{"_index":262,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["notifications.compon",{"_index":3165,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":3170,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interfac",{"_index":950,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["notifications.interface.t",{"_index":4394,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.servic",{"_index":3203,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.modul",{"_index":4260,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscompon",{"_index":261,"title":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservic",{"_index":900,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["notificationservice.$emitt",{"_index":3168,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodul",{"_index":3222,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservic",{"_index":587,"title":{"injectables/NotificationsService.html":{}},"body":{"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["now",{"_index":2194,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/SdkService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{}}}],["npm",{"_index":4716,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/adding-new-packages.html":{}}}],["nr",{"_index":5350,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["nth",{"_index":2830,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":844,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":441,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/list.html":{}}}],["numbers.add(4",{"_index":799,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":802,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":807,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":810,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":819,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeal",{"_index":822,"title":{},"body":{"classes/Collection.html":{}}}],["numer",{"_index":3966,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["numlist",{"_index":5091,"title":{},"body":{"miscellaneous/variables.html":{}}}],["oauth",{"_index":3575,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object",{"_index":682,"title":{},"body":{"injectables/AuthService.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["object.assign",{"_index":873,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["object.assign(componentref.inst",{"_index":1434,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":4246,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assign(entri",{"_index":1104,"title":{},"body":{"injectables/CrudService.html":{}}}],["object.assign(field",{"_index":3103,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(resourc",{"_index":3777,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.assign(thi",{"_index":1672,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":2377,"title":{},"body":{"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][properti",{"_index":881,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.get(model",{"_index":3121,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(this.stringfield('model",{"_index":3541,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.stringfield('nam",{"_index":3529,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.tagsfield('right",{"_index":3537,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.assign(this.types[typ",{"_index":4251,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.keys(customfieldconfig",{"_index":3133,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig).map(properti",{"_index":3105,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filt",{"_index":3761,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equ",{"_index":964,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permiss",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(this.config[relationnam",{"_index":3514,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["object.keys(this.control.errors).reduce((err",{"_index":2276,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":4035,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1101,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["observ",{"_index":534,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["observable(observ",{"_index":1963,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observable.throw(err",{"_index":2818,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["observeel",{"_index":1938,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":1955,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complet",{"_index":1977,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coord",{"_index":1976,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolet",{"_index":3199,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["obtain",{"_index":3054,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["occur",{"_index":2725,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["officedocument.spreadsheetml.sheet",{"_index":5160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["officedocument.wordprocessingml.docu",{"_index":5156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1985,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1088,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["oldassetgroupid",{"_index":1714,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["oldvalu",{"_index":1100,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1102,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":3083,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{}}}],["omittedfield",{"_index":3043,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["on",{"_index":516,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["onchang",{"_index":21,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["onclick",{"_index":5095,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ondestroy",{"_index":2840,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(",{"_index":1400,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(",{"_index":1390,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(",{"_index":1395,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["onsav",{"_index":2154,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/core-classes/item.html":{}}}],["onsubmit",{"_index":2756,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"miscellaneous/variables.html":{}}}],["open",{"_index":1009,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{}}}],["openid",{"_index":3565,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["openinghour",{"_index":5292,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghourscompon",{"_index":5300,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["oper",{"_index":524,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"classes/Sorter.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["optim",{"_index":4428,"title":{},"body":{"changelog.html":{}}}],["option",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["option.label?option.label:opt",{"_index":1355,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["options[key",{"_index":1742,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":2862,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["order",{"_index":5329,"title":{},"body":{"additional-documentation/core-classes.html":{}}}],["origin",{"_index":2173,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"classes/ResourceForm.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["original.resolut",{"_index":2176,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["other",{"_index":2490,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{}}}],["otherwis",{"_index":1070,"title":{},"body":{"injectables/CrudService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ouput",{"_index":2137,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{}}}],["out",{"_index":327,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["outbox",{"_index":4908,"title":{},"body":{"miscellaneous/variables.html":{}}}],["outdir",{"_index":4761,"title":{},"body":{"index.html":{}}}],["outlin",{"_index":4976,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["output",{"_index":431,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{}}}],["output'},{'nam",{"_index":205,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["output('toggl",{"_index":3448,"title":{},"body":{"components/PopComponent.html":{}}}],["output.compon",{"_index":1143,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1343,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.t",{"_index":1342,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:12",{"_index":1344,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:14",{"_index":1345,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1356,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["output/output.compon",{"_index":2286,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcompon",{"_index":263,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["outsid",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["over",{"_index":2274,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["overlay",{"_index":3018,"title":{},"body":{"components/ModalComponent.html":{}}}],["overrid",{"_index":2067,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/core-classes/selection.html":{}}}],["overridden",{"_index":2819,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["overriden",{"_index":3042,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overview",{"_index":4777,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{}}}],["overwrit",{"_index":4004,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwritten",{"_index":2791,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["p",{"_index":5074,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img",{"_index":5083,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p.method",{"_index":3606,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["packag",{"_index":4416,"title":{"dependencies.html":{},"additional-documentation/adding-new-packages.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/adding-new-packages.html":{}}}],["package.json",{"_index":5202,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/.../ace.component.t",{"_index":4781,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../auth.module.t",{"_index":4700,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../ec",{"_index":4783,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email",{"_index":4785,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../email.validator.t",{"_index":4786,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../emoji",{"_index":4787,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../errors.t",{"_index":4782,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../field",{"_index":4788,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../geocode.service.t",{"_index":4789,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../location.module.t",{"_index":4790,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../mim",{"_index":4791,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../notifications.service.t",{"_index":4792,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/.../sorter.t",{"_index":4701,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/.../tinymc",{"_index":4784,"title":{},"body":{"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.t",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ace/src/ace.component.ts:109",{"_index":115,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:113",{"_index":82,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:117",{"_index":90,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:26",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:30",{"_index":120,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:34",{"_index":117,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:36",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:40",{"_index":107,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:44",{"_index":67,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:48",{"_index":68,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:51",{"_index":69,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:72",{"_index":92,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:81",{"_index":97,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:90",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:94",{"_index":78,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.component.ts:99",{"_index":100,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/ace.module.t",{"_index":328,"title":{},"body":{"modules/AceModule.html":{}}}],["packages/cor",{"_index":4733,"title":{},"body":{"index.html":{}}}],["packages/core/src/collection/collection.t",{"_index":773,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/collection/collection.ts:107",{"_index":818,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:11",{"_index":790,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:124",{"_index":821,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:13",{"_index":793,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:139",{"_index":826,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:148",{"_index":824,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:15",{"_index":785,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:161",{"_index":813,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:166",{"_index":816,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:32",{"_index":812,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:43",{"_index":806,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:54",{"_index":809,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:72",{"_index":797,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/collection/collection.ts:90",{"_index":801,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/config/config.t",{"_index":860,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/config/config.ts:13",{"_index":865,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/config.ts:5",{"_index":863,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/config/field",{"_index":1682,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/field/field.t",{"_index":1590,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/field/field.ts:11",{"_index":1612,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:13",{"_index":1630,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:15",{"_index":1633,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:17",{"_index":1631,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:19",{"_index":1617,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:21",{"_index":1623,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:23",{"_index":1624,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:25",{"_index":1618,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:27",{"_index":1605,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:29",{"_index":1608,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:31",{"_index":1609,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:33",{"_index":1632,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:35",{"_index":1603,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:37",{"_index":1616,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:39",{"_index":1629,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:41",{"_index":1604,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:43",{"_index":1619,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:45",{"_index":1614,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:47",{"_index":1602,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:59",{"_index":1637,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:63",{"_index":1634,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:7",{"_index":1627,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/field/field.ts:9",{"_index":1625,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/form/form",{"_index":1834,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/form/form.t",{"_index":4529,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/item/item",{"_index":2290,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/item/item.t",{"_index":4532,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/list/list",{"_index":2413,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/list/list.t",{"_index":4536,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/pagination/pagination.t",{"_index":3276,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/pagination/pagination.ts:10",{"_index":3287,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:108",{"_index":3295,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:113",{"_index":3296,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:118",{"_index":3297,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:12",{"_index":3288,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:126",{"_index":3312,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:131",{"_index":3302,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:14",{"_index":3285,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:143",{"_index":3315,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:16",{"_index":3283,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:34",{"_index":3292,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:39",{"_index":3293,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:44",{"_index":3301,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:53",{"_index":3303,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:64",{"_index":3308,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:77",{"_index":3300,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:8",{"_index":3289,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:85",{"_index":3306,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:94",{"_index":3291,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/pagination/pagination.ts:99",{"_index":3298,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/selection/selection.t",{"_index":4540,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/sorter/sorter.t",{"_index":3949,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["packages/core/src/sorter/sorter.ts:25",{"_index":3956,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:32",{"_index":3958,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/sorter/sorter.ts:62",{"_index":3961,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/data/src/asset",{"_index":482,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth",{"_index":574,"title":{},"body":{"injectables/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.module.t",{"_index":620,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/auth/auth.service.t",{"_index":641,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/auth/auth.service.ts:113",{"_index":677,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:135",{"_index":694,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:147",{"_index":691,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:157",{"_index":685,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:171",{"_index":692,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:24",{"_index":668,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:31",{"_index":688,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:45",{"_index":699,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:58",{"_index":675,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:67",{"_index":671,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:74",{"_index":696,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/auth.service.ts:82",{"_index":683,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/auth/email",{"_index":4549,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/errors.t",{"_index":4551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/auth/login/login.component.t",{"_index":2716,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/login/login.component.ts:20",{"_index":2724,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:22",{"_index":2728,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:24",{"_index":2727,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:26",{"_index":2732,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:28",{"_index":2722,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:30",{"_index":2731,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:31",{"_index":2733,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:32",{"_index":2734,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/login/login.component.ts:35",{"_index":2729,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/auth/password",{"_index":3393,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/signup/signup.component.t",{"_index":3883,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["packages/data/src/auth/signup/signup.component.ts:19",{"_index":3886,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/auth/signup/signup.component.ts:21",{"_index":3888,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/auth/signup/signup.component.ts:23",{"_index":3890,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/auth/signup/signup.component.ts:25",{"_index":3895,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/auth/signup/signup.component.ts:27",{"_index":3896,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/auth/signup/signup.component.ts:30",{"_index":3893,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/crud/crud",{"_index":988,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.t",{"_index":882,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.component.ts:114",{"_index":927,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:35",{"_index":909,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:37",{"_index":908,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:39",{"_index":910,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:41",{"_index":931,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:43",{"_index":928,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:45",{"_index":932,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:47",{"_index":913,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:49",{"_index":914,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:51",{"_index":903,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:59",{"_index":934,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:60",{"_index":933,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:71",{"_index":925,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:80",{"_index":916,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:85",{"_index":922,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.component.ts:92",{"_index":919,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/crud/crud.service.t",{"_index":1041,"title":{},"body":{"injectables/CrudService.html":{},"coverage.html":{}}}],["packages/data/src/crud/crud.service.ts:101",{"_index":1062,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:16",{"_index":1051,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:19",{"_index":1074,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:23",{"_index":1053,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:41",{"_index":1068,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:54",{"_index":1073,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:68",{"_index":1064,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:74",{"_index":1056,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/crud/crud.service.ts:89",{"_index":1059,"title":{},"body":{"injectables/CrudService.html":{}}}],["packages/data/src/data.module.t",{"_index":1132,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/entri",{"_index":390,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.t",{"_index":1435,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/entries/entries.directive.ts:100",{"_index":1454,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:108",{"_index":1452,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:22",{"_index":1464,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:24",{"_index":1449,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:26",{"_index":1451,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:28",{"_index":1447,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:30",{"_index":1444,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:32",{"_index":1448,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:34",{"_index":1462,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:35",{"_index":1443,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:40",{"_index":1465,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:41",{"_index":1463,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:45",{"_index":1458,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:58",{"_index":1456,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:71",{"_index":1461,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:82",{"_index":1457,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:89",{"_index":1459,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entries/entries.directive.ts:96",{"_index":1455,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/entry/entry.directive.t",{"_index":1491,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/entry/entry.directive.ts:19",{"_index":1503,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:21",{"_index":1495,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:23",{"_index":1498,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:25",{"_index":1494,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:27",{"_index":1496,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:29",{"_index":1499,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:31",{"_index":1497,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:33",{"_index":1493,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:37",{"_index":1504,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:38",{"_index":1502,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:42",{"_index":1501,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/entry/entry.directive.ts:50",{"_index":1500,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/files/asset",{"_index":4584,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.t",{"_index":423,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:16",{"_index":454,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:18",{"_index":437,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:20",{"_index":440,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:22",{"_index":439,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:24",{"_index":442,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:26",{"_index":436,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:28",{"_index":446,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:30",{"_index":432,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:33",{"_index":455,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:37",{"_index":452,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/asset/asset.directive.ts:48",{"_index":448,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/files/assetgroup",{"_index":547,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.t",{"_index":1362,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:11",{"_index":1376,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:13",{"_index":1385,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:24",{"_index":1387,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:37",{"_index":1382,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:46",{"_index":1372,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:7",{"_index":1378,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/dropzone/dropzone.directive.ts:9",{"_index":1377,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/files/file.service.t",{"_index":1684,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/files/files.module.t",{"_index":1807,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/files/imag",{"_index":2127,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/image/image.directive.t",{"_index":2087,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/files/image/image.directive.ts:15",{"_index":2100,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:17",{"_index":2098,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:19",{"_index":2095,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:21",{"_index":2094,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:23",{"_index":2109,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:28",{"_index":2104,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:40",{"_index":2101,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:44",{"_index":2108,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/image/image.directive.ts:61",{"_index":2106,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/files/mim",{"_index":4597,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/data/src/files/upload",{"_index":4334,"title":{},"body":{"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/upload/upload.component.t",{"_index":4262,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/files/upload/upload.component.ts:101",{"_index":4288,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:18",{"_index":4290,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:19",{"_index":4295,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:20",{"_index":4293,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:22",{"_index":4276,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:24",{"_index":4273,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:26",{"_index":4271,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:28",{"_index":4272,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:30",{"_index":4275,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:32",{"_index":4270,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:34",{"_index":4279,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:36",{"_index":4277,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:38",{"_index":4291,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:40",{"_index":4294,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:42",{"_index":4269,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:51",{"_index":4286,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:61",{"_index":4284,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:67",{"_index":4281,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:75",{"_index":4282,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/files/upload/upload.component.ts:82",{"_index":4289,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/model",{"_index":3037,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/resourc",{"_index":3487,"title":{},"body":{"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/resource/resource.module.t",{"_index":3729,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/sdk/history.service.t",{"_index":2000,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/history.service.ts:15",{"_index":2023,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:17",{"_index":2006,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:20",{"_index":2022,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:21",{"_index":2021,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:22",{"_index":2026,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:23",{"_index":2025,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:25",{"_index":2018,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:41",{"_index":2008,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/history.service.ts:51",{"_index":2014,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/sdk/sdk.module.t",{"_index":3789,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/sdk/sdk.service.t",{"_index":3791,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/sdk/sdk.service.ts:111",{"_index":3817,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:121",{"_index":3808,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:132",{"_index":3805,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:144",{"_index":3815,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:34",{"_index":3821,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:36",{"_index":3827,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:37",{"_index":3832,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:47",{"_index":3829,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:49",{"_index":3820,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:51",{"_index":3819,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:53",{"_index":3822,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:55",{"_index":3833,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:62",{"_index":3835,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:67",{"_index":3824,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:69",{"_index":3830,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:71",{"_index":3828,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:78",{"_index":3804,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:81",{"_index":3825,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/sdk/sdk.service.ts:88",{"_index":3812,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/location/src/geocode.service.t",{"_index":1932,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/location/src/geocode.service.ts:12",{"_index":1942,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:18",{"_index":1956,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:43",{"_index":1945,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:49",{"_index":1948,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/geocode.service.ts:62",{"_index":1953,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/loc",{"_index":2620,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/location.module.t",{"_index":2653,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/medium",{"_index":2834,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"coverage.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/tinymce/src/tinymce.module.t",{"_index":4188,"title":{},"body":{"modules/TinymceModule.html":{}}}],["packages/tinymce/src/tinymce/tinymc",{"_index":4629,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.t",{"_index":4106,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:129",{"_index":4130,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:134",{"_index":4137,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:141",{"_index":4140,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:143",{"_index":4135,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:147",{"_index":4136,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:41",{"_index":4141,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:43",{"_index":4139,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:45",{"_index":4138,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:47",{"_index":4142,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:49",{"_index":4120,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:51",{"_index":4124,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:53",{"_index":4123,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:55",{"_index":4125,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:58",{"_index":4128,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:60",{"_index":4115,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:78",{"_index":4133,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:84",{"_index":4131,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:91",{"_index":4134,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/tinymce/tinymce.component.ts:96",{"_index":4132,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/ui",{"_index":5305,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["packages/ui/src/actionbar/actionbar.component.t",{"_index":334,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/calendar.component.t",{"_index":4635,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/daterange.component.t",{"_index":4637,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.t",{"_index":1155,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:24",{"_index":1166,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:26",{"_index":1169,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:28",{"_index":1175,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:30",{"_index":1178,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:32",{"_index":1168,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:34",{"_index":1171,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:37",{"_index":1174,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:42",{"_index":1176,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:46",{"_index":1172,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.component.ts:51",{"_index":1173,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.t",{"_index":1188,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/datetime/datetime.pipe.ts:12",{"_index":1195,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/ui/src/form/datetime/heatmap.component.t",{"_index":4640,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/datetime/month.component.t",{"_index":1205,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/ui/src/form/default",{"_index":1348,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.component.t",{"_index":4645,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/form/form.module.t",{"_index":1855,"title":{},"body":{"modules/FormModule.html":{}}}],["packages/ui/src/form/form.service.t",{"_index":1872,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/form/form.service.ts:17",{"_index":1881,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:20",{"_index":1901,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:25",{"_index":1895,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:36",{"_index":1889,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:49",{"_index":1883,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:57",{"_index":1891,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:69",{"_index":1898,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/form.service.ts:84",{"_index":1886,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/form/max",{"_index":2827,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.t",{"_index":4190,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:19",{"_index":4201,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:21",{"_index":4193,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:24",{"_index":4197,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:29",{"_index":4198,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:33",{"_index":4200,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:36",{"_index":4194,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/toggle/toggle.component.ts:40",{"_index":4195,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/form/vis",{"_index":4380,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/icon/ec",{"_index":4648,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/emoji",{"_index":4650,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/icon/icon.component.t",{"_index":2047,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.component.ts:16",{"_index":2057,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:18",{"_index":2056,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.component.ts:22",{"_index":2058,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/icon/icon.module.t",{"_index":2082,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/icon/icon.service.t",{"_index":2084,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/icon/icon.service.ts:11",{"_index":2086,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/io/dynam",{"_index":1401,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input",{"_index":2264,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.t",{"_index":2202,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/input/input.component.ts:100",{"_index":2222,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:107",{"_index":2231,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:111",{"_index":2220,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:116",{"_index":2221,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:22",{"_index":2213,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:24",{"_index":2209,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:26",{"_index":2217,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:28",{"_index":2211,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:30",{"_index":2212,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:32",{"_index":2215,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:34",{"_index":2214,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:36",{"_index":2207,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:38",{"_index":2206,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:41",{"_index":2224,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:43",{"_index":2232,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:45",{"_index":2219,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/input/input.component.ts:86",{"_index":2218,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/io/io.module.t",{"_index":2285,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/io/output/output.component.t",{"_index":3271,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/io/output/output.component.ts:15",{"_index":3272,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:17",{"_index":3273,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/output/output.component.ts:21",{"_index":3274,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/io/slot",{"_index":3941,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.t",{"_index":1995,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/list/group.pipe.ts:10",{"_index":1997,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/list/list",{"_index":2431,"title":{},"body":{"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.t",{"_index":2303,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/list.component.ts:104",{"_index":2351,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:110",{"_index":2350,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:117",{"_index":2341,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:123",{"_index":2342,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:136",{"_index":2343,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:149",{"_index":2340,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:21",{"_index":2353,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:24",{"_index":2355,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:26",{"_index":2323,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:28",{"_index":2324,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:30",{"_index":2322,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:32",{"_index":2328,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:34",{"_index":2329,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:36",{"_index":2331,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:38",{"_index":2332,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:40",{"_index":2325,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:42",{"_index":2326,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:44",{"_index":2327,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:46",{"_index":2321,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:48",{"_index":2354,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:50",{"_index":2319,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:53",{"_index":2356,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:54",{"_index":2352,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:60",{"_index":2347,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:69",{"_index":2346,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.component.ts:96",{"_index":2334,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/list/list.module.t",{"_index":2549,"title":{},"body":{"modules/ListModule.html":{}}}],["packages/ui/src/list/pagination/pagin",{"_index":3381,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.t",{"_index":3342,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:15",{"_index":3347,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:17",{"_index":3355,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:19",{"_index":3359,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:21",{"_index":3357,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:23",{"_index":3346,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:26",{"_index":3352,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:31",{"_index":3350,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:39",{"_index":3349,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/pagination/pagination.component.ts:44",{"_index":3354,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/list/searchbar/searchbar.component.t",{"_index":4659,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/loader/loader.component.t",{"_index":2557,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.component.ts:14",{"_index":2572,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:16",{"_index":2573,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:18",{"_index":2566,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:25",{"_index":2568,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:31",{"_index":2567,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.component.ts:38",{"_index":2570,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/loader/loader.module.t",{"_index":2611,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/loader/loader.service.t",{"_index":2614,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/loader/loader.service.ts:11",{"_index":2616,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:16",{"_index":2617,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/loader.service.ts:8",{"_index":2618,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/loader/with",{"_index":4390,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/modal/modal.component.t",{"_index":2982,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["packages/ui/src/modal/modal.component.ts:18",{"_index":3022,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:27",{"_index":3008,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:29",{"_index":2998,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:31",{"_index":2996,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:33",{"_index":3003,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:35",{"_index":3000,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:37",{"_index":3002,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:39",{"_index":3017,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:41",{"_index":3001,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:43",{"_index":2993,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:46",{"_index":3015,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:47",{"_index":3014,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:48",{"_index":3013,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:52",{"_index":3009,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:72",{"_index":3012,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/modal/modal.component.ts:76",{"_index":3011,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.t",{"_index":1571,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:12",{"_index":1574,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:18",{"_index":1576,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:22",{"_index":1575,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/error/error.component.ts:26",{"_index":1577,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/notifications/notification.t",{"_index":3145,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notification.ts:10",{"_index":3154,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:12",{"_index":3160,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:14",{"_index":3158,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:16",{"_index":3164,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:18",{"_index":3151,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:20",{"_index":3152,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:22",{"_index":3150,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:24",{"_index":3148,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:6",{"_index":3162,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notification.ts:8",{"_index":3155,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/notifications/notifications.component.t",{"_index":3167,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:19",{"_index":3172,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.component.ts:21",{"_index":3171,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/notifications/notifications.module.t",{"_index":3228,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/notifications/notifications.service.t",{"_index":3231,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:22",{"_index":3250,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:24",{"_index":3252,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:26",{"_index":3239,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:34",{"_index":3246,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:45",{"_index":3248,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/notifications.service.ts:58",{"_index":3241,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/notifications/with",{"_index":4393,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.t",{"_index":3427,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.component.ts:29",{"_index":3433,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:31",{"_index":3442,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:33",{"_index":3435,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:35",{"_index":3434,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:37",{"_index":3436,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:39",{"_index":3443,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:42",{"_index":3437,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:52",{"_index":3432,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:55",{"_index":3444,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:61",{"_index":3439,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:67",{"_index":3441,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:77",{"_index":3440,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.component.ts:90",{"_index":3438,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/pop/pop.module.t",{"_index":3469,"title":{},"body":{"modules/PopModule.html":{}}}],["packages/ui/src/pop/pop.service.t",{"_index":3471,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/pop/pop.service.ts:11",{"_index":3476,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/pop/pop.service.ts:9",{"_index":3477,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/select/select.component.t",{"_index":4663,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/select/select.module.t",{"_index":3880,"title":{},"body":{"modules/SelectModule.html":{}}}],["packages/ui/src/symbol/symbol.interface.t",{"_index":3988,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.module.t",{"_index":3993,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/symbol/symbol.pipe.t",{"_index":4010,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.pipe.ts:21",{"_index":4012,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/symbol/symbol.service.t",{"_index":4016,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:11",{"_index":4032,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:12",{"_index":4033,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:14",{"_index":4019,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:20",{"_index":4029,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:25",{"_index":4031,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:33",{"_index":4021,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:38",{"_index":4024,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/symbol/symbol.service.ts:48",{"_index":4026,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/ui.module.t",{"_index":4259,"title":{},"body":{"modules/UiModule.html":{}}}],["packages/ui/src/utility/focus/focus.directive.t",{"_index":1823,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/utility/focus/focus.directive.ts:13",{"_index":1826,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/utility/focus/focus.directive.ts:8",{"_index":1825,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/utility/focus/focus.interface.t",{"_index":1819,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/utility/focus/focus.interface.ts:6",{"_index":1822,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/utility/login",{"_index":2749,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.t",{"_index":2879,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:106",{"_index":2934,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:15",{"_index":2910,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:17",{"_index":2909,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:19",{"_index":2911,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:21",{"_index":2908,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:23",{"_index":2903,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:25",{"_index":2914,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:27",{"_index":2907,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:29",{"_index":2938,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:31",{"_index":2897,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:38",{"_index":2937,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:48",{"_index":2928,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:53",{"_index":2936,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:59",{"_index":2922,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:64",{"_index":2918,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:69",{"_index":2920,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:74",{"_index":2931,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:84",{"_index":2915,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:91",{"_index":2932,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/menu/menu.component.ts:98",{"_index":2925,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/utility/mockup/mockup.component.t",{"_index":2967,"title":{},"body":{"components/MockupComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/signup",{"_index":3907,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.t",{"_index":4048,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:11",{"_index":4054,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:13",{"_index":4056,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:15",{"_index":4055,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:17",{"_index":4057,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:19",{"_index":4058,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:21",{"_index":4052,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:24",{"_index":4062,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:27",{"_index":4059,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tab/tab.component.ts:32",{"_index":4060,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.t",{"_index":4066,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:14",{"_index":4082,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:16",{"_index":4074,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:27",{"_index":4081,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:38",{"_index":4075,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:48",{"_index":4076,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/tabs/tabs.component.ts:53",{"_index":4079,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/utility/utility.module.t",{"_index":4376,"title":{},"body":{"modules/UtilityModule.html":{}}}],["packages/ui/src/utility/validators/email.validator.t",{"_index":4672,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["packages/ui/src/utility/validators/field",{"_index":4674,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pad",{"_index":4863,"title":{},"body":{"miscellaneous/variables.html":{}}}],["page",{"_index":594,"title":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}},"body":{"injectables/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["page!==1",{"_index":1472,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontain",{"_index":3344,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagin",{"_index":2316,"title":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["pagination'},{'nam",{"_index":265,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pagination.component.html",{"_index":3343,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3368,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpag",{"_index":3318,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination.last",{"_index":3373,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3372,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3376,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3369,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.s",{"_index":3380,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":3317,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["pagination/pagin",{"_index":2373,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.compon",{"_index":2555,"title":{},"body":{"modules/ListModule.html":{}}}],["pagination?.params()?.from",{"_index":3374,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.to",{"_index":3375,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.tot",{"_index":3377,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcompon",{"_index":264,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2317,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"changelog.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":3364,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paint",{"_index":4909,"title":{},"body":{"miscellaneous/variables.html":{}}}],["palett",{"_index":4853,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperclip",{"_index":4913,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paperplan",{"_index":4914,"title":{},"body":{"miscellaneous/variables.html":{}}}],["paragraph",{"_index":4915,"title":{},"body":{"miscellaneous/variables.html":{}}}],["param",{"_index":3279,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["paramet",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["parent",{"_index":836,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/collection.html":{}}}],["parent.getpath(item",{"_index":2948,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":2923,"title":{},"body":{"components/MenuComponent.html":{}}}],["pars",{"_index":3010,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["part",{"_index":917,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["pass",{"_index":2015,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["password",{"_index":267,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["passwordlabel",{"_index":2762,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordplacehold",{"_index":2763,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordreset.button",{"_index":3426,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordresetcompon",{"_index":266,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":2826,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["past",{"_index":3718,"title":{},"body":{"components/ResourceListPopComponent.html":{},"miscellaneous/variables.html":{}}}],["paste_as_text",{"_index":5048,"title":{},"body":{"miscellaneous/variables.html":{}}}],["path",{"_index":338,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["paths[paths.length",{"_index":4091,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1193,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pattern[0",{"_index":1203,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["paus",{"_index":4973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pen",{"_index":4917,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pencil",{"_index":4838,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pend",{"_index":3573,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{}}}],["per",{"_index":2427,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["percent",{"_index":4918,"title":{},"body":{"miscellaneous/variables.html":{}}}],["peripher",{"_index":2516,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permiss",{"_index":672,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"changelog.html":{}}}],["permissions[method",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{}}}],["pflichtfeld",{"_index":4801,"title":{},"body":{"miscellaneous/variables.html":{}}}],["phone",{"_index":4229,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["photo",{"_index":4920,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pick",{"_index":2135,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":2667,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker'},{'nam",{"_index":242,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["picker.compon",{"_index":2659,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":2669,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":2668,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.t",{"_index":2666,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:24",{"_index":2674,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":2676,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":2675,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":2685,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":2687,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:34",{"_index":2673,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:37",{"_index":2684,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:43",{"_index":2680,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:55",{"_index":2683,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:61",{"_index":2681,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:77",{"_index":2686,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:79",{"_index":2677,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:83",{"_index":2678,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pictur",{"_index":4923,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["pie",{"_index":4834,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pin",{"_index":4842,"title":{},"body":{"miscellaneous/variables.html":{}}}],["pipe",{"_index":1186,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["pipe(switchmap",{"_index":1979,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipetransform",{"_index":1197,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":1967,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["place.geometri",{"_index":1970,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":1973,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":1975,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placehold",{"_index":554,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["plain",{"_index":1717,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["plan",{"_index":655,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":3586,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformid",{"_index":3587,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["platformtyp",{"_index":3589,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["play",{"_index":4974,"title":{},"body":{"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pleas",{"_index":1770,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"changelog.html":{},"index.html":{}}}],["plot",{"_index":4836,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plug",{"_index":2558,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plugin",{"_index":5033,"title":{},"body":{"miscellaneous/variables.html":{}}}],["plurallabel",{"_index":1004,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["point",{"_index":4846,"title":{},"body":{"miscellaneous/variables.html":{}}}],["polici",{"_index":3551,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["policy.method",{"_index":3553,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["polyfil",{"_index":2030,"title":{},"body":{"injectables/HistoryService.html":{}}}],["pop",{"_index":929,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{}}}],["pop'},{'nam",{"_index":189,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pop.alt",{"_index":2187,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.compon",{"_index":947,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":1512,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.t",{"_index":1511,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:16",{"_index":1524,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:17",{"_index":1523,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:18",{"_index":1525,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:19",{"_index":1531,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:20",{"_index":1555,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:21",{"_index":3719,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:22",{"_index":1535,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:23",{"_index":1522,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:24",{"_index":2138,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:25",{"_index":3720,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":1554,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":1553,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:29",{"_index":1552,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":2134,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:31",{"_index":3722,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:32",{"_index":2143,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:33",{"_index":2144,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:34",{"_index":1539,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:35",{"_index":2142,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:36",{"_index":2141,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:37",{"_index":2140,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:41",{"_index":2139,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:42",{"_index":1541,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:47",{"_index":3721,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.head",{"_index":2201,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.height",{"_index":2199,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.keepratio",{"_index":2190,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.servic",{"_index":3447,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.submitbuttonlabel",{"_index":2153,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.toggl",{"_index":2506,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop.width",{"_index":2195,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop/asset",{"_index":1810,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entri",{"_index":946,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["pop/imag",{"_index":1817,"title":{},"body":{"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["pop/pop.compon",{"_index":2502,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["pop/pop.modul",{"_index":1856,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/resourc",{"_index":3675,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_",{"_index":4406,"title":{},"body":{"changelog.html":{}}}],["pop_dialog",{"_index":4234,"title":{},"body":{"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["pop_draw",{"_index":4468,"title":{},"body":{"changelog.html":{}}}],["pop_fullscreen",{"_index":4467,"title":{},"body":{"changelog.html":{}}}],["pop_toast",{"_index":4470,"title":{},"body":{"changelog.html":{}}}],["popcolumn",{"_index":1005,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popcompon",{"_index":269,"title":{"components/PopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:29",{"_index":1527,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:31",{"_index":1556,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:33",{"_index":1530,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:35",{"_index":1529,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:37",{"_index":1532,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:39",{"_index":1558,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:42",{"_index":1537,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:55",{"_index":1559,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:61",{"_index":1545,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:67",{"_index":1551,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:77",{"_index":1549,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:90",{"_index":1542,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popmodul",{"_index":1850,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popservic",{"_index":1521,"title":{"injectables/PopService.html":{}},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popservice.defaultcolumn",{"_index":1034,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popservice.stack",{"_index":1543,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popth",{"_index":3446,"title":{},"body":{"components/PopComponent.html":{}}}],["popul",{"_index":2430,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/ResourceForm.html":{}}}],["portrait",{"_index":4922,"title":{},"body":{"miscellaneous/variables.html":{}}}],["posit",{"_index":2642,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possess",{"_index":499,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possibl",{"_index":1028,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["post",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{}}}],["potter",{"_index":4900,"title":{},"body":{"miscellaneous/variables.html":{}}}],["power",{"_index":4925,"title":{},"body":{"miscellaneous/variables.html":{}}}],["preced",{"_index":3198,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["preexist",{"_index":4005,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["prefer",{"_index":4495,"title":{},"body":{"changelog.html":{}}}],["prefil",{"_index":2191,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/core-classes/form.html":{}}}],["prefill:'bobbi",{"_index":5365,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["prefix",{"_index":1086,"title":{},"body":{"injectables/CrudService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["prepublish",{"_index":4722,"title":{},"body":{"index.html":{}}}],["prequisit",{"_index":5164,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":73,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["preserv",{"_index":1695,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["preservefilenam",{"_index":1690,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["press",{"_index":3663,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretti",{"_index":5264,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["prev",{"_index":1440,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{}}}],["prevent",{"_index":3792,"title":{},"body":{"injectables/SdkService.html":{}}}],["preview",{"_index":3593,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["previou",{"_index":2344,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["price",{"_index":4965,"title":{},"body":{"miscellaneous/variables.html":{}}}],["primit",{"_index":2300,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["primitive.resolv",{"_index":5335,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["primitv",{"_index":5296,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["printer",{"_index":4926,"title":{},"body":{"miscellaneous/variables.html":{}}}],["privat",{"_index":599,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["process",{"_index":4119,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":5186,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["product",{"_index":5189,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["profil",{"_index":5006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["programmat",{"_index":2297,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":4419,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["promis",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise((resolv",{"_index":1981,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["promise.all(this.stack.item",{"_index":2605,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":473,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":3264,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehl",{"_index":3184,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["promise.reject('getaccount",{"_index":3872,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":3867,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimag",{"_index":2117,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1099,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolv",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["promise.resolve().then",{"_index":968,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>asset",{"_index":1775,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":3769,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.resolve(method",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(result",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(valu",{"_index":2820,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["propag",{"_index":1177,"title":{},"body":{"components/DatetimeComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["propagatechang",{"_index":36,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["properli",{"_index":5225,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["properti",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["property.can",{"_index":4757,"title":{},"body":{"index.html":{}}}],["property.interfac",{"_index":1671,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["property.interface.t",{"_index":4526,"title":{},"body":{"coverage.html":{}}}],["protect",{"_index":488,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupFormComponent.html":{}}}],["prototyp",{"_index":2969,"title":{},"body":{"components/MockupComponent.html":{}}}],["protractor",{"_index":4772,"title":{},"body":{"index.html":{}}}],["provd",{"_index":2525,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provid",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pseudo",{"_index":5256,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["public",{"_index":39,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["publicapi",{"_index":435,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["publicapi#getfieldconfig",{"_index":3066,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["publicapi(shortid",{"_index":3862,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1700,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publicassetresourc",{"_index":465,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["publicassetright",{"_index":3534,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["publicservic",{"_index":4461,"title":{},"body":{"changelog.html":{}}}],["publish",{"_index":4719,"title":{"additional-documentation/publishing.html":{}},"body":{"index.html":{},"additional-documentation/adding-new-packages.html":{}}}],["push",{"_index":3247,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":2664,"title":{},"body":{"modules/LocationModule.html":{}}}],["qr",{"_index":4927,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quellenangab",{"_index":5076,"title":{},"body":{"miscellaneous/variables.html":{}}}],["queri",{"_index":2419,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["queryfilt",{"_index":4227,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":2499,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["question",{"_index":4889,"title":{},"body":{"miscellaneous/variables.html":{}}}],["quick",{"_index":990,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickli",{"_index":5216,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["quot",{"_index":4928,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rack",{"_index":1414,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.compon",{"_index":2289,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1405,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.t",{"_index":1403,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1408,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynam",{"_index":1402,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["ramp",{"_index":4948,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rang",{"_index":3384,"title":{},"body":{"classes/PaginationConfig.html":{},"changelog.html":{}}}],["rank",{"_index":5257,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ratio",{"_index":2129,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["raw",{"_index":1194,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{}}}],["rawfilt",{"_index":3097,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["rc.0",{"_index":4710,"title":{},"body":{"index.html":{}}}],["re",{"_index":79,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reach",{"_index":3755,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["react",{"_index":582,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reaction",{"_index":2726,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactiv",{"_index":2837,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodul",{"_index":626,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1029,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["readabl",{"_index":1646,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["readi",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"changelog.html":{}}}],["readm",{"_index":422,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{}}}],["readonli",{"_index":555,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/ItemConfig.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/SdkField.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["recent",{"_index":2800,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["recogn",{"_index":5378,"title":{},"body":{"additional-documentation/core-classes/selection.html":{}}}],["recommend",{"_index":3192,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["reconstruct",{"_index":2348,"title":{},"body":{"components/ListComponent.html":{}}}],["recycl",{"_index":5012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["redirect",{"_index":584,"title":{},"body":{"injectables/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["redo",{"_index":5002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reduce((a",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((ha",{"_index":3972,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":3762,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["redund",{"_index":5318,"title":{},"body":{"additional-documentation/ui.html":{}}}],["refactor",{"_index":4402,"title":{},"body":{"changelog.html":{}}}],["refer",{"_index":2225,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["referenc",{"_index":5290,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reflect",{"_index":1226,"title":{},"body":{"interfaces/Day.html":{},"miscellaneous/variables.html":{}}}],["refresh",{"_index":4839,"title":{},"body":{"miscellaneous/variables.html":{}}}],["regex",{"_index":3495,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["regexp",{"_index":2294,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ResourceConfig.html":{}}}],["regist",{"_index":83,"title":{},"body":{"components/AceComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registeronchang",{"_index":48,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":81,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registerontouch",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registr",{"_index":3902,"title":{},"body":{"components/SignupComponent.html":{}}}],["registri",{"_index":2048,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/icons.html":{}}}],["regular",{"_index":4385,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reject",{"_index":1982,"title":{},"body":{"injectables/GeocodeService.html":{},"components/TinymceComponent.html":{}}}],["reject(statu",{"_index":1987,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rel",{"_index":1335,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"index.html":{}}}],["relat",{"_index":496,"title":{},"body":{"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"modules/LocationModule.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{}}}],["relationnam",{"_index":3501,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["relativeto",{"_index":4104,"title":{},"body":{"components/TabsComponent.html":{}}}],["releas",{"_index":1092,"title":{},"body":{"injectables/CrudService.html":{},"changelog.html":{}}}],["relev",{"_index":398,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relevantkey",{"_index":3132,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.foreach(key",{"_index":3136,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.length",{"_index":3135,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["reli",{"_index":5295,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reload",{"_index":920,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["remain",{"_index":1019,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["remov",{"_index":780,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["remove(item",{"_index":817,"title":{},"body":{"classes/Collection.html":{}}}],["removeal",{"_index":781,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(item",{"_index":820,"title":{},"body":{"classes/Collection.html":{}}}],["removefilt",{"_index":2481,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removefilter(properti",{"_index":2493,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["removeformat",{"_index":5092,"title":{},"body":{"miscellaneous/variables.html":{}}}],["renam",{"_index":2302,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["renamend",{"_index":4465,"title":{},"body":{"changelog.html":{}}}],["render",{"_index":884,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["renew",{"_index":4475,"title":{},"body":{"changelog.html":{}}}],["repeat",{"_index":4963,"title":{},"body":{"miscellaneous/variables.html":{}}}],["replac",{"_index":697,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"injectables/SymbolService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["replacewith",{"_index":782,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(item",{"_index":823,"title":{},"body":{"classes/Collection.html":{}}}],["repli",{"_index":5081,"title":{},"body":{"miscellaneous/variables.html":{}}}],["repositori",{"_index":4712,"title":{},"body":{"index.html":{}}}],["repres",{"_index":1213,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["request",{"_index":2096,"title":{},"body":{"directives/ImageDirective.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requir",{"_index":394,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"classes/Field.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceConfig.html":{},"interfaces/SdkField.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/list.html":{}}}],["reset",{"_index":326,"title":{},"body":{"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LoginFormComponent.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"changelog.html":{},"overview.html":{}}}],["reset'},{'nam",{"_index":268,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["reset.compon",{"_index":635,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3398,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.t",{"_index":3394,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:17",{"_index":3408,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:19",{"_index":3407,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:21",{"_index":3401,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:23",{"_index":3403,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:25",{"_index":3404,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:27",{"_index":3400,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3406,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:32",{"_index":3405,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":634,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset?e=1",{"_index":3397,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resetpassword",{"_index":665,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":693,"title":{},"body":{"injectables/AuthService.html":{}}}],["resiz",{"_index":5031,"title":{},"body":{"miscellaneous/variables.html":{}}}],["resolut",{"_index":2175,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.height",{"_index":2181,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.width",{"_index":2180,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolv",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["resolve(nam",{"_index":4023,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(result",{"_index":1986,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolve(tinymce.init",{"_index":4166,"title":{},"body":{"components/TinymceComponent.html":{}}}],["resolveassets(asset",{"_index":1765,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resourc",{"_index":1787,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvefn",{"_index":2461,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvefn(list",{"_index":2463,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvevari",{"_index":666,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(str",{"_index":695,"title":{},"body":{"injectables/AuthService.html":{}}}],["resourc",{"_index":271,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["resource.assetid",{"_index":1788,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((r",{"_index":3781,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.newhistori",{"_index":2039,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.sav",{"_index":3771,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.save().then((_resourc",{"_index":3778,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource/resource.modul",{"_index":1150,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[key",{"_index":3776,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resourceactionbarcompon",{"_index":270,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceconfig",{"_index":486,"title":{"injectables/ResourceConfig.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourcecrudcompon",{"_index":272,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcompon",{"_index":273,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":3511,"title":{"classes/ResourceForm.html":{}},"body":{"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"coverage.html":{}}}],["resourceformcompon",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":521,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{}}}],["resourcelistcompon",{"_index":276,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:121",{"_index":530,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:130",{"_index":523,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:134",{"_index":527,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:27",{"_index":540,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:29",{"_index":505,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:31",{"_index":518,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:33",{"_index":512,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:35",{"_index":536,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:37",{"_index":503,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:39",{"_index":515,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:41",{"_index":507,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:50",{"_index":539,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:51",{"_index":535,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:52",{"_index":542,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:64",{"_index":520,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:85",{"_index":531,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistpopcompon",{"_index":277,"title":{"components/ResourceListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcemodul",{"_index":1127,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcompon",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["resourceselectcompon",{"_index":279,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservic",{"_index":1047,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"classes/ResourceForm.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice.chang",{"_index":1084,"title":{},"body":{"injectables/CrudService.html":{}}}],["respons",{"_index":1764,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["response['getallitem",{"_index":1763,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":651,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/ui/icons.html":{}}}],["result",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{},"additional-documentation/core-classes/sorter.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["results.length",{"_index":2698,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":2699,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retriev",{"_index":2436,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["retrieve(key",{"_index":2442,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["return",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["revers",{"_index":1949,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["right",{"_index":3536,"title":{},"body":{"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["role",{"_index":400,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["roleid",{"_index":3633,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["roll",{"_index":4912,"title":{},"body":{"miscellaneous/variables.html":{}}}],["root",{"_index":375,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rotat",{"_index":4967,"title":{},"body":{"miscellaneous/variables.html":{}}}],["rout",{"_index":487,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["route.data",{"_index":2944,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":2945,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.param",{"_index":956,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.path",{"_index":2942,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":2943,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparam",{"_index":957,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":893,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routermodul",{"_index":1134,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routing.module.t",{"_index":5220,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["row",{"_index":2293,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["rss",{"_index":4936,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ruler",{"_index":4930,"title":{},"body":{"miscellaneous/variables.html":{}}}],["run",{"_index":1644,"title":{},"body":{"classes/Field.html":{},"classes/ResourceForm.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["runtim",{"_index":3795,"title":{},"body":{"injectables/SdkService.html":{}}}],["rxj",{"_index":4693,"title":{},"body":{"dependencies.html":{},"additional-documentation/core-classes.html":{}}}],["rxjs/add/operator/debouncetim",{"_index":1217,"title":{},"body":{"interfaces/Day.html":{},"components/TinymceComponent.html":{}}}],["rxjs/add/operator/filt",{"_index":1077,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/add/operator/switchmap",{"_index":943,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/observ",{"_index":837,"title":{},"body":{"classes/Collection.html":{},"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs/observable/frompromis",{"_index":1959,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/observable/merg",{"_index":944,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["rxjs/oper",{"_index":1961,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["rxjs/subject",{"_index":597,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["safedelet",{"_index":1006,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safeput",{"_index":1072,"title":{},"body":{"injectables/CrudService.html":{}}}],["samantha",{"_index":2975,"title":{},"body":{"components/MockupComponent.html":{}}}],["same",{"_index":791,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sandbox.scss",{"_index":5183,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["save",{"_index":1021,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["save(item",{"_index":3748,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["save(model",{"_index":1067,"title":{},"body":{"injectables/CrudService.html":{}}}],["save(valu",{"_index":3703,"title":{},"body":{"classes/ResourceForm.html":{}}}],["savethi",{"_index":5178,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["scaffold",{"_index":4738,"title":{},"body":{"index.html":{}}}],["scale",{"_index":3057,"title":{},"body":{"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{}}}],["schema",{"_index":3041,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["schemarequest",{"_index":3798,"title":{},"body":{"injectables/SdkService.html":{}}}],["schon",{"_index":4798,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scissor",{"_index":4931,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scope",{"_index":5380,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["screen",{"_index":4855,"title":{},"body":{"miscellaneous/variables.html":{}}}],["script",{"_index":4717,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["scripts:npm",{"_index":4723,"title":{},"body":{"index.html":{}}}],["scssmake",{"_index":5174,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":405,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{}}}],["sdk.api",{"_index":434,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.init",{"_index":3793,"title":{},"body":{"injectables/SdkService.html":{}}}],["sdk.servic",{"_index":3790,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.servic",{"_index":1151,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.modul",{"_index":1152,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.servic",{"_index":410,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkfield",{"_index":3087,"title":{"interfaces/SdkField.html":{}},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"coverage.html":{}}}],["sdkmodul",{"_index":1128,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservic",{"_index":407,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/data.html":{}}}],["sdkservice#api",{"_index":2723,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["sdkservice.readi",{"_index":4474,"title":{},"body":{"changelog.html":{}}}],["search",{"_index":1606,"title":{},"body":{"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["search'},{'nam",{"_index":244,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["search.compon",{"_index":2660,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":2703,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.t",{"_index":2701,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:13",{"_index":2706,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:15",{"_index":2709,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:17",{"_index":2705,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:25",{"_index":2707,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:31",{"_index":2708,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1515,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/ResourceListPopComponent.html":{},"changelog.html":{}}}],["searchbar'},{'nam",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["searchbar/searchbar.compon",{"_index":2556,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcompon",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":2704,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2367,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["section",{"_index":3445,"title":{},"body":{"components/PopComponent.html":{}}}],["see",{"_index":500,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sein",{"_index":5241,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["seit",{"_index":603,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["sekundär",{"_index":5063,"title":{},"body":{"miscellaneous/variables.html":{}}}],["select",{"_index":227,"title":{"additional-documentation/core-classes/selection.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/selection.html":{}}}],["select'},{'nam",{"_index":191,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select(item",{"_index":1540,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["select(pag",{"_index":3304,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":4077,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.compon",{"_index":1145,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":550,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.t",{"_index":549,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:12",{"_index":562,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":559,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":560,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":561,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:16",{"_index":563,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:17",{"_index":558,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:18",{"_index":4345,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:19",{"_index":4343,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:20",{"_index":565,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:21",{"_index":4346,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:23",{"_index":564,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:25",{"_index":4348,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:26",{"_index":4347,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:27",{"_index":4344,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:29",{"_index":4358,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:31",{"_index":4359,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:33",{"_index":4357,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:35",{"_index":4342,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:37",{"_index":4356,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:39",{"_index":4349,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:42",{"_index":4350,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:47",{"_index":4351,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:54",{"_index":4355,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:60",{"_index":4353,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.emit(item",{"_index":2337,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":1811,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":548,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entri",{"_index":1144,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resourc",{"_index":3731,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.compon",{"_index":343,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.component.html",{"_index":348,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.modul",{"_index":4261,"title":{},"body":{"modules/UiModule.html":{}}}],["select/upload",{"_index":1816,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["selectbyurl",{"_index":4073,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":4080,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcompon",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_mo",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{}}}],["selectentri",{"_index":897,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":926,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2313,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2349,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.compon",{"_index":4455,"title":{},"body":{"changelog.html":{}}}],["selection.config.solo",{"_index":1799,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.select(upload.item",{"_index":1800,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.toggl",{"_index":2339,"title":{},"body":{"components/ListComponent.html":{}}}],["selection.toggleall(upload.item",{"_index":1801,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selectmod",{"_index":2420,"title":{},"body":{"interfaces/ListConfig.html":{},"changelog.html":{}}}],["selectmodul",{"_index":3874,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selector",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["selectupload(upload",{"_index":1797,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["send",{"_index":3395,"title":{},"body":{"components/PasswordResetComponent.html":{},"miscellaneous/variables.html":{}}}],["sensit",{"_index":3967,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/variables.html":{}}}],["sent",{"_index":3411,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["seper",{"_index":5246,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["serial",{"_index":3705,"title":{},"body":{"classes/ResourceForm.html":{}}}],["serv",{"_index":4735,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes.html":{}}}],["server",{"_index":4067,"title":{},"body":{"components/TabsComponent.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["servic",{"_index":622,"title":{},"body":{"modules/AuthModule.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"modules/LocationModule.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["session",{"_index":3799,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environ",{"_index":3852,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":74,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/publishing.html":{}}}],["set([this.config.s",{"_index":3323,"title":{},"body":{"classes/Pagination.html":{}}}],["set(key",{"_index":2444,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["set(properti",{"_index":3076,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbol",{"_index":4025,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(typ",{"_index":4219,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":3834,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":657,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(d",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonul",{"_index":3737,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["setgroup",{"_index":4267,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setgroup(group",{"_index":4283,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setmod",{"_index":50,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mod",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["setter",{"_index":867,"title":{},"body":{"classes/Config.html":{}}}],["setthem",{"_index":51,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(them",{"_index":96,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":385,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"components/UploadSelectComponent.html":{}}}],["settimeout(resolv",{"_index":2586,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["settings.t",{"_index":4630,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["settot",{"_index":3280,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":3337,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(tot",{"_index":3307,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":3994,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/publishing.html":{}}}],["seturl",{"_index":2092,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2105,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalu",{"_index":2625,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(valu",{"_index":2638,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["share",{"_index":4934,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shear",{"_index":4939,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shift",{"_index":4995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shoot",{"_index":4751,"title":{},"body":{"index.html":{}}}],["shop",{"_index":4940,"title":{},"body":{"miscellaneous/variables.html":{}}}],["short",{"_index":3818,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":5175,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":3125,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["shouldbepartofform",{"_index":1879,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldbepartofform(field",{"_index":1894,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldn't",{"_index":5283,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["show",{"_index":1229,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/publishing.html":{}}}],["show(",{"_index":1548,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["showerror",{"_index":2757,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showerror(err",{"_index":2795,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showhead",{"_index":2314,"title":{},"body":{"components/ListComponent.html":{}}}],["showlabel",{"_index":2764,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["shown",{"_index":506,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/SignupFormComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["shownotif",{"_index":3177,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["showrawvalu",{"_index":2671,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["showurlinput",{"_index":4335,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["shrink",{"_index":4944,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sie",{"_index":608,"title":{},"body":{"injectables/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["sign",{"_index":4818,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signal",{"_index":4937,"title":{},"body":{"miscellaneous/variables.html":{}}}],["signup",{"_index":286,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{}}}],["signup'},{'nam",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["signup(undefin",{"_index":698,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup(valu",{"_index":3926,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signup.component.html",{"_index":3885,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.compon",{"_index":636,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupcompon",{"_index":283,"title":{"components/SignupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupformcompon",{"_index":285,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["silent",{"_index":3305,"title":{},"body":{"classes/Pagination.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/variables.html":{}}}],["simi",{"_index":876,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1468,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1621,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui.html":{},"additional-documentation/ui/icons.html":{}}}],["simpl",{"_index":3174,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["simplifi",{"_index":4405,"title":{},"body":{"changelog.html":{}}}],["sind",{"_index":609,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["singl",{"_index":456,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"classes/ResourceForm.html":{}}}],["singleton",{"_index":3950,"title":{},"body":{"classes/Sorter.html":{}}}],["singularlabel",{"_index":1007,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["site",{"_index":2591,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["situat",{"_index":4203,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":1780,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{}}}],["skin",{"_index":5032,"title":{},"body":{"miscellaneous/variables.html":{}}}],["skip",{"_index":504,"title":{},"body":{"components/AssetListComponent.html":{}}}],["skiprout",{"_index":4078,"title":{},"body":{"components/TabsComponent.html":{}}}],["skull",{"_index":4949,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slice",{"_index":2829,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slice(item",{"_index":3311,"title":{},"body":{"classes/Pagination.html":{}}}],["slider",{"_index":4933,"title":{},"body":{"miscellaneous/variables.html":{}}}],["slot",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot'},{'nam",{"_index":210,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot.compon",{"_index":2236,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1417,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.t",{"_index":1416,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1420,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1424,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1422,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynam",{"_index":1415,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirect",{"_index":312,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sm",{"_index":1680,"title":{},"body":{"classes/Field.html":{}}}],["small",{"_index":4950,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smaller",{"_index":5026,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smiley",{"_index":4996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["smoother",{"_index":3390,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["snackbar",{"_index":3021,"title":{},"body":{"components/ModalComponent.html":{}}}],["snippet",{"_index":5242,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["soeben",{"_index":3415,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":497,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"additional-documentation/core-classes/selection.html":{}}}],["somebodi",{"_index":1768,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["somemodul",{"_index":2065,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["somewher",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["soon",{"_index":421,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sophist",{"_index":774,"title":{},"body":{"classes/Collection.html":{},"index.html":{},"additional-documentation/core-classes/collection.html":{}}}],["sort",{"_index":1655,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"changelog.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sort(((a",{"_index":3326,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(item",{"_index":3960,"title":{},"body":{"classes/Sorter.html":{}}}],["sortabl",{"_index":1597,"title":{},"body":{"classes/Field.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["sortbi",{"_index":2421,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sortboolean",{"_index":3955,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":3971,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorter",{"_index":3948,"title":{"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["sortierenfor",{"_index":5377,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["sortnumb",{"_index":3954,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":3970,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortstr",{"_index":3953,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":3968,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttyp",{"_index":3951,"title":{},"body":{"classes/Sorter.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["source.addeventlistener('entrycr",{"_index":2045,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupd",{"_index":2042,"title":{},"body":{"injectables/HistoryService.html":{}}}],["space",{"_index":4916,"title":{},"body":{"miscellaneous/variables.html":{}}}],["span",{"_index":1228,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchang",{"_index":1240,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1230,"title":{},"body":{"interfaces/Day.html":{}}}],["speaker",{"_index":4951,"title":{},"body":{"miscellaneous/variables.html":{}}}],["speakingurl",{"_index":5291,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["spec.t",{"_index":4765,"title":{},"body":{"index.html":{}}}],["specif",{"_index":1639,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["specifi",{"_index":93,"title":{},"body":{"components/AceComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/SignupComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["spell",{"_index":4955,"title":{},"body":{"miscellaneous/variables.html":{}}}],["splice(1).join",{"_index":3031,"title":{},"body":{"components/ModalComponent.html":{}}}],["spray",{"_index":4956,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spreadsheet",{"_index":1719,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["squar",{"_index":2099,"title":{},"body":{"directives/ImageDirective.html":{},"miscellaneous/variables.html":{}}}],["src",{"_index":2090,"title":{},"body":{"directives/ImageDirective.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/ace.html":{},"additional-documentation/adding-new-packages.html":{}}}],["src/app/app",{"_index":5219,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":5208,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.modul",{"_index":5194,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":5218,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environ",{"_index":5185,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.t",{"_index":5191,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.t",{"_index":5188,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/packag",{"_index":4704,"title":{},"body":{"index.html":{}}}],["ssl",{"_index":5201,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":5203,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2563,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"index.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["stackoverflow",{"_index":5003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["stage",{"_index":649,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["stand",{"_index":869,"title":{},"body":{"classes/Config.html":{}}}],["star",{"_index":4977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["start",{"_index":1164,"title":{"changelog.html":{},"index.html":{}},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["startnow",{"_index":5212,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["state",{"_index":1044,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":4520,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1153,"title":{},"body":{"modules/DataModule.html":{},"classes/Sorter.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["statu",{"_index":1984,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":1557,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SymbolService.html":{},"changelog.html":{}}}],["step",{"_index":3120,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["sticki",{"_index":983,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["still",{"_index":4243,"title":{},"body":{"injectables/TypeConfigService.html":{},"changelog.html":{}}}],["stop",{"_index":1769,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["storag",{"_index":2429,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["storagekey",{"_index":2422,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["storagekeyresolv",{"_index":2433,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["store",{"_index":2019,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"interfaces/WithNotifications.html":{},"index.html":{}}}],["store(key",{"_index":2446,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig",{"_index":2437,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig(list",{"_index":2448,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["strategy=endless",{"_index":1473,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":2010,"title":{},"body":{"injectables/HistoryService.html":{},"dependencies.html":{}}}],["strike",{"_index":4957,"title":{},"body":{"miscellaneous/variables.html":{}}}],["string",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/list.html":{}}}],["string,valu",{"_index":526,"title":{},"body":{"components/AssetListComponent.html":{}}}],["string.replac",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringfield",{"_index":3490,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["stringfield(label",{"_index":3503,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["strong",{"_index":5262,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strong.component.t",{"_index":5261,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strongcompon",{"_index":5260,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["structur",{"_index":1641,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["stuff",{"_index":2560,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["style",{"_index":2968,"title":{},"body":{"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["style_format",{"_index":5065,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styles.scss",{"_index":5179,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleselect",{"_index":5088,"title":{},"body":{"miscellaneous/variables.html":{}}}],["styleurl",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sub",{"_index":870,"title":{},"body":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["subbranch",{"_index":2299,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":2792,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["subfold",{"_index":4731,"title":{},"body":{"index.html":{}}}],["subject",{"_index":591,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Collection.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/core-classes.html":{}}}],["submenu",{"_index":2898,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":1839,"title":{},"body":{"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["submitbuttonlabel",{"_index":1838,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["subscrib",{"_index":533,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/LocationSearchComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribe((chang",{"_index":2252,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1245,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((ev",{"_index":1830,"title":{},"body":{"directives/FocusDirective.html":{}}}],["subscribe(editor",{"_index":4159,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1248,"title":{},"body":{"interfaces/Day.html":{}}}],["subscript",{"_index":4958,"title":{},"body":{"miscellaneous/variables.html":{}}}],["substract",{"_index":4959,"title":{},"body":{"miscellaneous/variables.html":{}}}],["subtract(weeksbefor",{"_index":1294,"title":{},"body":{"interfaces/Day.html":{}}}],["succes",{"_index":2787,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["success",{"_index":2718,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MockupComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["success/error",{"_index":3190,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["successfulli",{"_index":1020,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["such",{"_index":1642,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["suitabl",{"_index":1647,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["sunni",{"_index":4960,"title":{},"body":{"miscellaneous/variables.html":{}}}],["super",{"_index":416,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/adding-new-packages.html":{}}}],["super(bodi",{"_index":3714,"title":{},"body":{"classes/ResourceForm.html":{}}}],["super(elementref",{"_index":355,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["super(popservic",{"_index":1564,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["super(sdk",{"_index":2111,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load",{"_index":2102,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(thi",{"_index":2115,"title":{},"body":{"directives/ImageDirective.html":{}}}],["superscript",{"_index":4961,"title":{},"body":{"miscellaneous/variables.html":{}}}],["support",{"_index":176,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/core-classes/selection.html":{}}}],["sure",{"_index":62,"title":{},"body":{"components/AceComponent.html":{},"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["svg",{"_index":4776,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1017,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["switchmap",{"_index":1960,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":901,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol'",{"_index":3999,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.cont",{"_index":4043,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interfac",{"_index":4014,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.languag",{"_index":4003,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.nam",{"_index":4041,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.pip",{"_index":4009,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.servic",{"_index":4007,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"changelog.html":{}}}],["symbol/symbol.interfac",{"_index":2070,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.modul",{"_index":1869,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.servic",{"_index":1198,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{}}}],["symbolmodul",{"_index":1853,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpip",{"_index":4008,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["symbols.map(symbol",{"_index":4044,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservic",{"_index":902,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"injectables/ResourceConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice#set",{"_index":4000,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice.resolv",{"_index":4013,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symlink",{"_index":4715,"title":{},"body":{"index.html":{},"additional-documentation/adding-new-packages.html":{}}}],["symlinks.sh",{"_index":4726,"title":{},"body":{"index.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sync",{"_index":3554,"title":{},"body":{"injectables/ResourceConfig.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["synchron",{"_index":4964,"title":{},"body":{"miscellaneous/variables.html":{}}}],["syntax",{"_index":5251,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["system",{"_index":1066,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["t",{"_index":792,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["t\\=(?:[0",{"_index":5107,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tab",{"_index":4049,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/ui.html":{}}}],["tab'",{"_index":4053,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'nam",{"_index":288,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tab.activ",{"_index":4101,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":4050,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('select",{"_index":4096,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":4105,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.par",{"_index":4095,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.rout",{"_index":4102,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.compon",{"_index":4084,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcompon",{"_index":287,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tabl",{"_index":1219,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["table_class_list",{"_index":5052,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_default_attribut",{"_index":5050,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table_toolbar",{"_index":5049,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":4676,"title":{},"body":{"coverage.html":{}}}],["tablet",{"_index":4980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tabs'},{'nam",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tabs.component.html",{"_index":4070,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.compon",{"_index":4063,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscompon",{"_index":289,"title":{"components/TabsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":460,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["tagsfield",{"_index":3491,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tagsfield(label",{"_index":3505,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["take",{"_index":883,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/core-classes.html":{}}}],["tank",{"_index":4966,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tap",{"_index":4860,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tape",{"_index":4845,"title":{},"body":{"miscellaneous/variables.html":{}}}],["target",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["targetid",{"_index":3648,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["targettyp",{"_index":3649,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["task",{"_index":4720,"title":{},"body":{"index.html":{}}}],["tbd",{"_index":5320,"title":{},"body":{"additional-documentation/ui.html":{}}}],["tell",{"_index":1628,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["templat",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/publishing.html":{}}}],["template::view",{"_index":3577,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateid",{"_index":3576,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["templateref",{"_index":2999,"title":{},"body":{"components/ModalComponent.html":{}}}],["templateurl",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["test",{"_index":3962,"title":{},"body":{"classes/Sorter.html":{},"changelog.html":{},"index.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["test.t",{"_index":4764,"title":{},"body":{"index.html":{}}}],["test@test.d",{"_index":2977,"title":{},"body":{"components/MockupComponent.html":{}}}],["text",{"_index":1361,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["text/markdown",{"_index":5151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["text/plain",{"_index":5150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textarea",{"_index":4222,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["textbox",{"_index":5098,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor",{"_index":5039,"title":{},"body":{"miscellaneous/variables.html":{}}}],["textcolor_map",{"_index":5053,"title":{},"body":{"miscellaneous/variables.html":{}}}],["that",{"_index":5211,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"miscellaneous/variables.html":{}}}],["themelist.j",{"_index":151,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entri",{"_index":1097,"title":{},"body":{"injectables/CrudService.html":{}}}],["then((_resourc",{"_index":3774,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((_upload",{"_index":4319,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":479,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((assetlist",{"_index":1750,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((avail",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((entri",{"_index":1118,"title":{},"body":{"injectables/CrudService.html":{},"directives/EntryDirective.html":{}}}],["then((fieldconfig",{"_index":3129,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((loadedentri",{"_index":974,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((method",{"_index":961,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((r",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["then((resolvedapi",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resourc",{"_index":3780,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((respons",{"_index":1762,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((upload",{"_index":1756,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((us",{"_index":2741,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["then(_method",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(asset",{"_index":2160,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then(dmassetlist",{"_index":1782,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then(list",{"_index":1476,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["then(r",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then(resourc",{"_index":3716,"title":{},"body":{"classes/ResourceForm.html":{}}}],["then(result",{"_index":2697,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(sourc",{"_index":2035,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(thi",{"_index":2124,"title":{},"body":{"directives/ImageDirective.html":{}}}],["then(url",{"_index":2162,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["therefor",{"_index":2298,"title":{},"body":{"interfaces/ItemConfig.html":{},"index.html":{}}}],["this._api",{"_index":3810,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.m",{"_index":3873,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":3845,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":3864,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":3865,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(this.act",{"_index":3459,"title":{},"body":{"components/PopComponent.html":{}}}],["this.account",{"_index":3806,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.act",{"_index":1393,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.actionstack[this.currentid",{"_index":369,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.activ",{"_index":3460,"title":{},"body":{"components/PopComponent.html":{}}}],["this.activated.next",{"_index":4064,"title":{},"body":{"components/TabComponent.html":{}}}],["this.add(item",{"_index":851,"title":{},"body":{"classes/Collection.html":{}}}],["this.add.subscribe((item",{"_index":358,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.addall(item",{"_index":856,"title":{},"body":{"classes/Collection.html":{}}}],["this.api",{"_index":418,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"classes/ResourceForm.html":{},"components/SignupComponent.html":{}}}],["this.apiresolv",{"_index":3846,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":4162,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":480,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroup",{"_index":571,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.assetgroupid",{"_index":2170,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.assetgrouplistpromis",{"_index":1791,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.assetid",{"_index":470,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":959,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.rel",{"_index":3680,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":2740,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3412,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.auth.signup",{"_index":3903,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.autofocusfirst",{"_index":2387,"title":{},"body":{"components/ListComponent.html":{}}}],["this.autoload",{"_index":471,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.backdrop",{"_index":3034,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bakery.bake().then",{"_index":3196,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.base64uuid",{"_index":3611,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.calendar.writevalue(valu",{"_index":1185,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(valu",{"_index":1337,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cdr.markforcheck",{"_index":962,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{}}}],["this.cel",{"_index":1289,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1264,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1265,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cent",{"_index":2641,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobserv",{"_index":3286,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.next(this.config",{"_index":3334,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit",{"_index":2164,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.changed.emit(chang",{"_index":2253,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changed.emit(coord",{"_index":2715,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.changed.emit(posit",{"_index":2646,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.changed.emit(this.list",{"_index":2391,"title":{},"body":{"components/ListComponent.html":{}}}],["this.changed.emit(this.valu",{"_index":4161,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.changes.asobserv",{"_index":3765,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().filter((chang",{"_index":3766,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":3759,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environ",{"_index":3850,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan.asobservable().debouncetime(800",{"_index":1247,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1263,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.class",{"_index":3030,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.clean(oldvalu",{"_index":1110,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(valu",{"_index":1105,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":4300,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clickev",{"_index":3453,"title":{},"body":{"components/PopComponent.html":{}}}],["this.collect",{"_index":2382,"title":{},"body":{"components/ListComponent.html":{}}}],["this.color",{"_index":1277,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":2954,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostr",{"_index":1278,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":2953,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.column",{"_index":1678,"title":{},"body":{"classes/Field.html":{}}}],["this.columnclicked.emit(item",{"_index":985,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":984,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(compon",{"_index":1430,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinst",{"_index":2246,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchang",{"_index":2259,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange(this.propagatechang",{"_index":2260,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalu",{"_index":2262,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue(valu",{"_index":2263,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":383,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{}}}],["this.config.alwaysloadentri",{"_index":969,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availables",{"_index":3341,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.level",{"_index":971,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.method",{"_index":960,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":963,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.pag",{"_index":3328,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.s",{"_index":3325,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config[key",{"_index":879,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][properti",{"_index":880,"title":{},"body":{"classes/Config.html":{}}}],["this.config[relationnam",{"_index":3512,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.configinput",{"_index":2378,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":3089,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.connectcontrol",{"_index":2248,"title":{},"body":{"components/InputComponent.html":{}}}],["this.container.nativeel",{"_index":4168,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":2864,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.control",{"_index":2240,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2277,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1096,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.create(rel",{"_index":3773,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.createclicked.next",{"_index":3685,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":3684,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.created(this.symbol.resolve('field.label.cr",{"_index":3538,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.crud.change({model:'muffin",{"_index":1087,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.crud.save(model",{"_index":3127,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.custom",{"_index":4311,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.dat",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{}}}],["this.datamanag",{"_index":3860,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":3841,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date.clone().add(valu",{"_index":1333,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dayclicked.emit(_mo",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":4065,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaulttim",{"_index":3270,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.desktopnotification(inst",{"_index":3258,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.destroy",{"_index":4165,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.dis",{"_index":1391,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1271,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1270,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":2033,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(tru",{"_index":4230,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.dmassetconfig",{"_index":1727,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.drag",{"_index":1251,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.asobservable().debouncetime(100",{"_index":1244,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1275,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1253,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1255,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1246,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropdownlist",{"_index":386,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.dropdownlist.focusfirst",{"_index":387,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.ecasset",{"_index":469,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(",{"_index":1398,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocu",{"_index":1829,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimag",{"_index":2112,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2113,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(tru",{"_index":4178,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":2870,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.execcommand('mceinsertcont",{"_index":4183,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.getcont",{"_index":2868,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('chang",{"_index":4180,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":4176,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.remov",{"_index":4164,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mod",{"_index":167,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.valu",{"_index":4175,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/them",{"_index":168,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.valu",{"_index":161,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":2867,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":1832,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focu",{"_index":1831,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref",{"_index":3454,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeel",{"_index":3457,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.classlist.add(`${this.typ",{"_index":3035,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.remove(`${typ",{"_index":3033,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.contains(el",{"_index":3456,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":2126,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobserv",{"_index":3251,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(inst",{"_index":3259,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resourc",{"_index":2034,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1469,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entri",{"_index":1508,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1506,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1481,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1487,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1488,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitem",{"_index":1482,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1490,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1489,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentri",{"_index":975,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.environ",{"_index":3813,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1580,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.cod",{"_index":1582,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":2817,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.messag",{"_index":1583,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.next(error",{"_index":2746,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errormessag",{"_index":2814,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.ev",{"_index":4312,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":2036,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].clos",{"_index":2038,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[rel",{"_index":2032,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":2810,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.field",{"_index":2237,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.init",{"_index":2255,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinst",{"_index":2256,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2245,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.properti",{"_index":2243,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1431,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":4299,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":4301,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.valu",{"_index":4307,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then(assetgroup",{"_index":570,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.defaultopt",{"_index":4274,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.fileservice.isnewassetgroupid(this.assetgroupid",{"_index":4316,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.isoldassetgroupid(this.assetgroupid",{"_index":2150,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(fil",{"_index":4317,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(fil",{"_index":4318,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":4310,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.focusevent.emit(tru",{"_index":4362,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.focusfirst",{"_index":2389,"title":{},"body":{"components/ListComponent.html":{}}}],["this.focusitem",{"_index":2390,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.focusnext",{"_index":2404,"title":{},"body":{"components/ListComponent.html":{}}}],["this.form",{"_index":2809,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.get('password').setvalu",{"_index":2816,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":2824,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.valid",{"_index":2822,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.format",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{}}}],["this.formservice.shouldbepartofform(field",{"_index":4388,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["this.geocodelatlng",{"_index":1989,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeel",{"_index":2714,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(valu",{"_index":2696,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.get(nam",{"_index":4042,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.getaccount",{"_index":3858,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(item",{"_index":3981,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":2956,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(d",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(d",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getfieldconfig(model",{"_index":3128,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getformdata(fil",{"_index":1748,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.getmonth(date.clon",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clon",{"_index":1290,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpag",{"_index":3339,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":2950,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":3267,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getstoragekey(list",{"_index":2464,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.getsystemfield",{"_index":3104,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getvalidators(field",{"_index":1912,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2241,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.properti",{"_index":2242,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":4302,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.has(item",{"_index":847,"title":{},"body":{"classes/Collection.html":{}}}],["this.heatmap",{"_index":1280,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostr",{"_index":1281,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hexcolor",{"_index":3528,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.hid",{"_index":2163,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.hideonclickoutsid",{"_index":3452,"title":{},"body":{"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('i",{"_index":2599,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('i",{"_index":2600,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hov",{"_index":2957,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":2959,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":2071,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.nam",{"_index":2072,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registri",{"_index":2076,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicon",{"_index":2068,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.iconservice.use(emojiicon",{"_index":2066,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/ui/icons.html":{}}}],["this.id",{"_index":1673,"title":{},"body":{"classes/Field.html":{}}}],["this.imageform",{"_index":2151,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimag",{"_index":2169,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimg",{"_index":2186,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.index(item",{"_index":843,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":169,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.init(new",{"_index":2379,"title":{},"body":{"components/ListComponent.html":{}}}],["this.initmethod",{"_index":3678,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initmod",{"_index":3036,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.initselect",{"_index":384,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.inittab",{"_index":4099,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.invit",{"_index":3938,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.isactive(item",{"_index":2955,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":3332,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1116,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":3331,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":1731,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolv",{"_index":1776,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoldassetgroupid(assetgroupid",{"_index":1723,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoutside($event.target",{"_index":3455,"title":{},"body":{"components/PopComponent.html":{}}}],["this.item",{"_index":839,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.properti",{"_index":2238,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items.concat(item",{"_index":1483,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1484,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1485,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":842,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":850,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":841,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(index",{"_index":857,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":852,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.items.indexof(item",{"_index":858,"title":{},"body":{"classes/Collection.html":{}}}],["this.label",{"_index":1676,"title":{},"body":{"classes/Field.html":{}}}],["this.lazi",{"_index":4163,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.legacyassetconfig",{"_index":1724,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.level",{"_index":1507,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1566,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":381,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.change$.subscrib",{"_index":2386,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.change$.subscribe(newlist",{"_index":2539,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.config",{"_index":2392,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.alwaysshowhead",{"_index":2400,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.disablehead",{"_index":2397,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.selectmod",{"_index":2395,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.titl",{"_index":2399,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2398,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(properti",{"_index":2408,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.isempti",{"_index":2401,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfilt",{"_index":2388,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.items[index",{"_index":2402,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.pag",{"_index":2538,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.page.indexof(this.focusitem",{"_index":2405,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page.length",{"_index":2407,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page[index",{"_index":2406,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.togglevisibility(field",{"_index":2510,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.listconfig.applyconfig(this.list",{"_index":2385,"title":{},"body":{"components/ListComponent.html":{}}}],["this.listconfig.storeconfig(this.list",{"_index":2511,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.load",{"_index":472,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["this.loadactions(actionsbefor",{"_index":370,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(item.getbody().children",{"_index":365,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.act",{"_index":371,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actionstack[this.currentid",{"_index":379,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadcomponent(this.compon",{"_index":2244,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":3275,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":481,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entri",{"_index":1509,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader.wait(login",{"_index":2748,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.loader.wait(registr",{"_index":3906,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loader.wait(reset",{"_index":3425,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promis",{"_index":1480,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalload",{"_index":2584,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(load",{"_index":2046,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":2585,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":986,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":2037,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromis",{"_index":4326,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.localload",{"_index":2588,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.localloader.wait(new",{"_index":2589,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["this.lockform",{"_index":3421,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.valu",{"_index":2823,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(valu",{"_index":2691,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.valu",{"_index":2694,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":1988,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(chang",{"_index":3767,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mod",{"_index":156,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{}}}],["this.mode.replace(this.typ",{"_index":3027,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.mode.split",{"_index":3025,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.model",{"_index":958,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then(model",{"_index":1565,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":5229,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.monthformat",{"_index":1242,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":970,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.nam",{"_index":2074,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":4239,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":1966,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":3842,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":3866,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":704,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notif",{"_index":978,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.add(notif",{"_index":3217,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":601,"title":{},"body":{"injectables/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notifications.remove(notif",{"_index":3221,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hid",{"_index":3208,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttim",{"_index":3205,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":976,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notif",{"_index":3206,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":1980,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.oldassetgroupids.includes(assetgroupid",{"_index":1725,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.opt",{"_index":1475,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.pag",{"_index":1470,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placehold",{"_index":2865,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pag",{"_index":3329,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pages.length",{"_index":3330,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagin",{"_index":2381,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["this.pagination.getpag",{"_index":3365,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.par",{"_index":2947,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":2952,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.rout",{"_index":2963,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.placehold",{"_index":1675,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":3686,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.cr",{"_index":3687,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbodi",{"_index":3681,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hid",{"_index":4322,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":4313,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.popservice.stack.add(thi",{"_index":3461,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(thi",{"_index":3463,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promis",{"_index":477,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":2031,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechang",{"_index":171,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(++this.valu",{"_index":5310,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(chang",{"_index":2254,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalu",{"_index":166,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.valu",{"_index":2869,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.propagatechange(valu",{"_index":2693,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.properti",{"_index":1677,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1674,"title":{},"body":{"classes/Field.html":{}}}],["this.readi",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.then",{"_index":3840,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":4173,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":611,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.registri",{"_index":4034,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.find(symbol",{"_index":4040,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.indexof(this.get(symbol.nam",{"_index":4045,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry.push(symbol",{"_index":4046,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.registry[index",{"_index":4047,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.rel",{"_index":3679,"title":{},"body":{"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{}}}],["this.remove(item",{"_index":853,"title":{},"body":{"classes/Collection.html":{}}}],["this.remove.subscribe((item",{"_index":366,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.removeall(undefin",{"_index":854,"title":{},"body":{"classes/Collection.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":1709,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1711,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(rel",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(relation).permiss",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(this.rel",{"_index":3723,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["this.resourceservice.change(filt",{"_index":1093,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.resourceservice.change({relation:'model.muffin",{"_index":1089,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.resourceservice.changes.next",{"_index":1108,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.resourceservice.save(thi",{"_index":3715,"title":{},"body":{"classes/ResourceForm.html":{}}}],["this.retrieve(key",{"_index":2455,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":3839,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.rout",{"_index":2939,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":2940,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((ev",{"_index":4086,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navig",{"_index":4103,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profil",{"_index":5227,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["this.router.url",{"_index":2949,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":2951,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":2011,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.schemarequests[model",{"_index":3868,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].api",{"_index":3869,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].request",{"_index":3871,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.account",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.emailavail",{"_index":5123,"title":{},"body":{"miscellaneous/variables.html":{}}}],["this.sdk.accounts.m",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":474,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.asset(unresolved[0]).then(asset",{"_index":1784,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.asset(value).then(asset",{"_index":2172,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.asset(value.img",{"_index":2159,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":1792,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":1785,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":1760,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":1761,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1117,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.sdk.api.dmasset(this.assetgroupid",{"_index":2167,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.dmassetlist(assetgroupid",{"_index":1779,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":972,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1474,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.getfieldconfig(model).then((fieldconfig",{"_index":3102,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.logout",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.m",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((model",{"_index":3141,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.signup(email",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":3758,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.sdk.environ",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.init",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":3140,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.ready.then((us",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":3826,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(us",{"_index":600,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":417,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.sess",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.us",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":2690,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.valu",{"_index":2695,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar.focusevent.emit(tru",{"_index":1570,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.searchinput",{"_index":2712,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.valu",{"_index":2713,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select",{"_index":373,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.select(match",{"_index":4093,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":4097,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":4087,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":4098,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.deactiv",{"_index":4100,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(select",{"_index":2394,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_mo",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selection.add(item",{"_index":361,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.getvalu",{"_index":389,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.isempti",{"_index":374,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.items[this.selection.items.length",{"_index":376,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.remove(item",{"_index":367,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.removeal",{"_index":378,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2403,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle(item",{"_index":1569,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.update$.subscribe((select",{"_index":2393,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.update$.subscribe(newlist",{"_index":2540,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.sess",{"_index":3851,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":3854,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.set",{"_index":4167,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setd",{"_index":1268,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_mo",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1267,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(mo",{"_index":1339,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.d",{"_index":1285,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(valu",{"_index":1338,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.select",{"_index":1283,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mod",{"_index":157,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":4037,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":4036,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.them",{"_index":159,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settings.setup",{"_index":4170,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup(editor",{"_index":4171,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settotal(tot",{"_index":3327,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setup.emit(editor",{"_index":4172,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setvalue(posit",{"_index":2645,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.shouldbepartofform(field",{"_index":1910,"title":{},"body":{"injectables/FormService.html":{}}}],["this.show",{"_index":2602,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.show(",{"_index":3458,"title":{},"body":{"components/PopComponent.html":{}}}],["this.showurlinput",{"_index":4361,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.signup(this.form.valu",{"_index":3940,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.solo",{"_index":2396,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":3979,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1249,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promis",{"_index":2601,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3482,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3484,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3486,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeal",{"_index":2606,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.storagekeyresolv",{"_index":2462,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.store(key",{"_index":2468,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.stringfield(this.symbol.resolve('field.label.nam",{"_index":3558,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.submit",{"_index":2821,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit",{"_index":3422,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":4320,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(r",{"_index":2825,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit(us",{"_index":2743,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.symbol",{"_index":3539,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.group",{"_index":3567,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.haspendingemail",{"_index":3563,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.languag",{"_index":3564,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('account.field.label.st",{"_index":3570,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('app.field.label.app",{"_index":3585,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.assetgroupid",{"_index":3599,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.fil",{"_index":3596,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('asset.field.label.thumb",{"_index":3592,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.callbackurl",{"_index":3628,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('client.field.label.clientid",{"_index":3626,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('datetime.loc",{"_index":3117,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('dmaccount.field.label.haspassword",{"_index":3572,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmaccount.field.label.pend",{"_index":3574,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.assetid",{"_index":3617,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.capt",{"_index":3619,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.dupl",{"_index":3620,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.fil",{"_index":3612,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.thumbnail",{"_index":3622,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('dmasset.field.label.typ",{"_index":3624,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('entries.load.error",{"_index":1479,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.symbol.resolve('entry.load.error",{"_index":1510,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.symbol.resolve('error",{"_index":1581,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2278,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2279,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":982,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":4325,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecus",{"_index":4254,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.config",{"_index":3531,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.cr",{"_index":3094,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.descript",{"_index":3530,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.email",{"_index":3559,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":3092,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.label",{"_index":3635,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.modifi",{"_index":3099,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.nam",{"_index":3634,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.password",{"_index":3561,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.shortid",{"_index":3584,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.titl",{"_index":3595,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('field.label.typ",{"_index":3645,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('imag",{"_index":2152,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.symbol.resolve('login.button.label",{"_index":2771,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.label",{"_index":2774,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.placehold",{"_index":2776,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.error",{"_index":2745,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.password.label",{"_index":2780,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.password.placehold",{"_index":2782,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":2742,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.d",{"_index":1196,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1243,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.tim",{"_index":4252,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('platform.field.label.platform",{"_index":3588,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('platform.field.label.platformtyp",{"_index":3590,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('resourc",{"_index":1928,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('resource.gener",{"_index":1887,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('role.field.label.account",{"_index":3636,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addregist",{"_index":3639,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('role.field.label.addunregist",{"_index":3641,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('signup.button.label",{"_index":3910,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.error",{"_index":3905,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('signup.invite.placehold",{"_index":3913,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.success",{"_index":3904,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":4321,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('template.field.label.templ",{"_index":3578,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve('template.field.label.vers",{"_index":3580,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.symbol.resolve(nam",{"_index":4015,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.symbols.set(en",{"_index":3998,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["this.tab",{"_index":4088,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":4090,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":4094,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tagsfield(this.symbol.resolve('account.field.label.permiss",{"_index":3566,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('asset.field.label.tag",{"_index":3597,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.disablestrategi",{"_index":3632,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('client.field.label.tokenmethod",{"_index":3630,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('datamanager.field.label.publicassetright",{"_index":3535,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.tagsfield(this.symbol.resolve('field.label.local",{"_index":3533,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.them",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2121,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.tim",{"_index":3204,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":2958,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1262,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":2604,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.toggleitem.asobservable().subscribe((item",{"_index":356,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.tot",{"_index":3333,"title":{},"body":{"classes/Pagination.html":{}}}],["this.tre",{"_index":2360,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/list.html":{}}}],["this.typ",{"_index":3024,"title":{},"body":{"components/ModalComponent.html":{},"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":3101,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displayd",{"_index":3095,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.typeconfig.get(typ",{"_index":3118,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(type).placehold",{"_index":3119,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupd",{"_index":3096,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{}}}],["this.types.foreach(typ",{"_index":3032,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.includes(this.typ",{"_index":3026,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.join",{"_index":3029,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types[typ",{"_index":4244,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.upd",{"_index":1579,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1095,"title":{},"body":{"injectables/CrudService.html":{}}}],["this.update(rel",{"_index":3772,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.update.asobserv",{"_index":794,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(thi",{"_index":848,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":4182,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":2692,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(fil",{"_index":4314,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.trigger(",{"_index":4366,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploader.uploadfiles(url",{"_index":4363,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploadfiles(e.target.fil",{"_index":4306,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromis",{"_index":4315,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":4327,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":1757,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2125,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.urlstoupload",{"_index":4365,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.us",{"_index":3859,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.use(this.ecimag",{"_index":2114,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":4039,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":3857,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotif",{"_index":3257,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1477,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.uuid",{"_index":3524,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["this.valu",{"_index":160,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.vanishdelay",{"_index":2961,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.vis",{"_index":2598,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.writevalue(this.valu",{"_index":2261,"title":{},"body":{"components/InputComponent.html":{}}}],["those",{"_index":1668,"title":{},"body":{"classes/Field.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes/field.html":{}}}],["thought",{"_index":5333,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["three",{"_index":3053,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{}}}],["through",{"_index":2016,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":475,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["thrown",{"_index":1578,"title":{},"body":{"components/ErrorComponent.html":{}}}],["thumb",{"_index":2093,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["thumbnail",{"_index":3621,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["thumbsiz",{"_index":3604,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tick",{"_index":4117,"title":{},"body":{"components/TinymceComponent.html":{}}}],["ticket",{"_index":4993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["time",{"_index":1167,"title":{},"body":{"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["timeout",{"_index":2884,"title":{},"body":{"components/MenuComponent.html":{}}}],["timespan",{"_index":1215,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2564,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tini",{"_index":4121,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymc",{"_index":4107,"title":{"additional-documentation/tinymce.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{},"additional-documentation/tinymce.html":{}}}],["tinymce'},{'nam",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tinymce.component.html",{"_index":4110,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":4109,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":4143,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autores",{"_index":4144,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/cod",{"_index":4145,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpick",{"_index":4146,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":4147,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":4148,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":4149,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/list",{"_index":4150,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/past",{"_index":4151,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/t",{"_index":4152,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/templ",{"_index":4153,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":4154,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblock",{"_index":4155,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":4156,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.compon",{"_index":4189,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecompon",{"_index":291,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodul",{"_index":4184,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/tinymce.html":{}}}],["titel",{"_index":3091,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["titel&#39",{"_index":3080,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["titl",{"_index":339,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/item.html":{}}}],["titlefield",{"_index":3545,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["toast",{"_index":3020,"title":{},"body":{"components/ModalComponent.html":{}}}],["today",{"_index":1212,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":567,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"miscellaneous/variables.html":{}}}],["togeth",{"_index":1648,"title":{},"body":{"classes/Field.html":{},"miscellaneous/variables.html":{},"additional-documentation/core-classes/field.html":{}}}],["toggl",{"_index":783,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["toggle'},{'nam",{"_index":294,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["toggle(",{"_index":1550,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["toggle(item",{"_index":825,"title":{},"body":{"classes/Collection.html":{}}}],["toggle(resourc",{"_index":2017,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle.component.html",{"_index":4192,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.compon",{"_index":1863,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecompon",{"_index":293,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggleurlinput",{"_index":4337,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["togglevis",{"_index":2482,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["togglevisibility(field",{"_index":2495,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["token",{"_index":5192,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["tokenmethod",{"_index":3629,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["tommi",{"_index":5337,"title":{},"body":{"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{}}}],["tommy'item",{"_index":5342,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.display('nam",{"_index":5339,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.getvalue('nam",{"_index":5363,"title":{},"body":{"additional-documentation/core-classes/form.html":{}}}],["tommy.group('nam",{"_index":5340,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.resolve('nam",{"_index":5338,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tommy.sort('nam",{"_index":5341,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["tool",{"_index":4813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbar",{"_index":5087,"title":{},"body":{"miscellaneous/variables.html":{}}}],["toolbox",{"_index":4969,"title":{},"body":{"miscellaneous/variables.html":{}}}],["top",{"_index":3055,"title":{},"body":{"injectables/ModelConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{}}}],["total",{"_index":3277,"title":{},"body":{"classes/Pagination.html":{}}}],["totop",{"_index":5005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["touch",{"_index":4196,"title":{},"body":{"components/ToggleComponent.html":{}}}],["tower",{"_index":4938,"title":{},"body":{"miscellaneous/variables.html":{}}}],["track",{"_index":2001,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/core-classes/pagination.html":{}}}],["transfer",{"_index":4861,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transform",{"_index":1191,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"interfaces/ListConfig.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["transform(array",{"_index":2831,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(field",{"_index":4383,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(item",{"_index":1996,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(nam",{"_index":4011,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(valu",{"_index":1192,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["translat",{"_index":3351,"title":{},"body":{"components/PaginationComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["transpar",{"_index":5011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["trash",{"_index":4823,"title":{},"body":{"miscellaneous/variables.html":{}}}],["tree",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tree.display('fruit",{"_index":5375,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tree.display('nam",{"_index":5373,"title":{},"body":{"additional-documentation/core-classes/list.html":{}}}],["tri",{"_index":2717,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":2336,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["trigger(",{"_index":4285,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggerupload",{"_index":4338,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["triggerupload(",{"_index":4352,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["troubl",{"_index":4750,"title":{},"body":{"index.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/collection.html":{},"additional-documentation/core-classes/list.html":{}}}],["ts",{"_index":3847,"title":{},"body":{"injectables/SdkService.html":{},"index.html":{}}}],["tsc/app",{"_index":4762,"title":{},"body":{"index.html":{}}}],["tsconfig",{"_index":4756,"title":{},"body":{"index.html":{}}}],["tsconfig.json",{"_index":4746,"title":{},"body":{"index.html":{}}}],["tslint:dis",{"_index":1827,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":510,"title":{},"body":{"components/AssetListComponent.html":{},"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"interfaces/ListConfig.html":{}}}],["tutori",{"_index":4489,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/publishing.html":{}}}],["twitter",{"_index":4986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["two",{"_index":3056,"title":{},"body":{"injectables/ModelConfigService.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["type'",{"_index":4202,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.includes('asset",{"_index":3111,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.replace('a",{"_index":3112,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig",{"_index":1721,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["typeconfigservic",{"_index":1131,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["typeconfigservice#get",{"_index":3067,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typed.isvalid",{"_index":1201,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":1732,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["types.length",{"_index":3978,"title":{},"body":{"classes/Sorter.html":{}}}],["types.t",{"_index":4598,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["types[0",{"_index":3980,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":838,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/adding-new-packages.html":{}}}],["typic",{"_index":3189,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["uglifyj",{"_index":4748,"title":{},"body":{"index.html":{}}}],["ui",{"_index":907,"title":{"additional-documentation/ui.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui.html":{}}}],["ui/src/notifications/notif",{"_index":2735,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ui/src/notifications/with",{"_index":2736,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ui/src/pop/pop.compon",{"_index":4296,"title":{},"body":{"components/UploadComponent.html":{}}}],["ui/src/symbol/symbol.servic",{"_index":2737,"title":{},"body":{"components/LoginComponent.html":{},"components/UploadComponent.html":{}}}],["uimodul",{"_index":618,"title":{"modules/UiModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["ul",{"_index":3360,"title":{},"body":{"components/PaginationComponent.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":1057,"title":{},"body":{"injectables/CrudService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"classes/ResourceForm.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{}}}],["under",{"_index":2020,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{}}}],["underlin",{"_index":4970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["undo",{"_index":5001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ungültig",{"_index":4232,"title":{},"body":{"injectables/TypeConfigService.html":{},"miscellaneous/variables.html":{}}}],["uniqu",{"_index":796,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["unit",{"_index":4768,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["unresolv",{"_index":1771,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":1774,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["untertitel",{"_index":5069,"title":{},"body":{"miscellaneous/variables.html":{}}}],["until",{"_index":2571,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":1013,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/data.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["updat",{"_index":492,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"coverage.html":{},"index.html":{}}}],["update(model",{"_index":1071,"title":{},"body":{"injectables/CrudService.html":{}}}],["update(rel",{"_index":3751,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updateaddress",{"_index":2670,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updateon",{"_index":1915,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":3281,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(s",{"_index":3314,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(valu",{"_index":3353,"title":{},"body":{"components/PaginationComponent.html":{}}}],["upload",{"_index":298,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["upload'},{'nam",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["upload(fil",{"_index":4287,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":4328,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.brows",{"_index":4370,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.component.html",{"_index":4263,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.dedupl",{"_index":4332,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoredupl",{"_index":4331,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4330,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.link",{"_index":4367,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.or",{"_index":4368,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.preservefilenam",{"_index":4329,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.url",{"_index":4369,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.url.start",{"_index":4371,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload/upload.compon",{"_index":1815,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["uploadassets(fil",{"_index":1743,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["uploadcompon",{"_index":295,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploadfil",{"_index":4268,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadfiles(fil",{"_index":1759,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadfromurl",{"_index":4339,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfromurls(url",{"_index":4354,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadpromis",{"_index":4266,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadselectcompon",{"_index":297,"title":{"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":1046,"title":{},"body":{"injectables/CrudService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1018,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["url.split",{"_index":4089,"title":{},"body":{"components/TabsComponent.html":{}}}],["url/id",{"_index":5100,"title":{},"body":{"miscellaneous/variables.html":{}}}],["urlexpir",{"_index":3601,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["urlstoupload",{"_index":4336,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["us",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"index.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/icons.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/list.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["usag",{"_index":1649,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/pagination.html":{},"additional-documentation/core-classes/sorter.html":{}}}],["use(asset",{"_index":2107,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(load",{"_index":2615,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbol",{"_index":4028,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usedatamanag",{"_index":3802,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":3816,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotif",{"_index":3230,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexist",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["uselegacyasset",{"_index":4418,"title":{},"body":{"changelog.html":{}}}],["uselist",{"_index":1441,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1460,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":578,"title":{},"body":{"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceConfig.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"miscellaneous/variables.html":{}}}],["users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.t",{"_index":4753,"title":{},"body":{"index.html":{}}}],["uses",{"_index":4212,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":4018,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":4030,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalu",{"_index":646,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["util",{"_index":3065,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["utility/utility.modul",{"_index":2551,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utility/validators/field",{"_index":3937,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["utilitymodul",{"_index":2548,"title":{"modules/UtilityModule.html":{}},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["uuid",{"_index":3492,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["ux",{"_index":3391,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["valid",{"_index":1598,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/list.html":{}}}],["validatefactori",{"_index":1880,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":1897,"title":{},"body":{"injectables/FormService.html":{}}}],["validationerror",{"_index":1900,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":1893,"title":{},"body":{"injectables/FormService.html":{},"miscellaneous/variables.html":{}}}],["validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0",{"_index":5124,"title":{},"body":{"miscellaneous/variables.html":{}}}],["validators.push(this.validatefactory(field",{"_index":1925,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.requir",{"_index":1924,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.requir",{"_index":2811,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.t",{"_index":4675,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["validators/field",{"_index":2807,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["valu",{"_index":38,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/CrudService.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"injectables/ResourceConfig.html":{},"components/ResourceCrudComponent.html":{},"classes/ResourceForm.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/listcomponent.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{},"additional-documentation/core-classes/form.html":{},"additional-documentation/core-classes/list.html":{}}}],["value).then(asset",{"_index":2178,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.alt",{"_index":2165,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.hasownproperty(key",{"_index":1113,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.height",{"_index":2158,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.img",{"_index":2168,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.latitud",{"_index":4241,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1653,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.longitud",{"_index":4240,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.map(group",{"_index":3568,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value.nam",{"_index":4242,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":4228,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.titl",{"_index":3637,"title":{},"body":{"injectables/ResourceConfig.html":{},"injectables/TypeConfigService.html":{}}}],["value.touppercas",{"_index":1652,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/item.html":{}}}],["value.url",{"_index":3613,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["value[key",{"_index":1114,"title":{},"body":{"injectables/CrudService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values.map(valu",{"_index":3623,"title":{},"body":{"injectables/ResourceConfig.html":{}}}],["vanishdelay",{"_index":2895,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":178,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/MockupComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["variabl",{"_index":681,"title":{"miscellaneous/variables.html":{}},"body":{"injectables/AuthService.html":{},"components/TabsComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["variables[key",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{}}}],["variou",{"_index":2559,"title":{},"body":{"components/LoaderComponent.html":{}}}],["vector",{"_index":4968,"title":{},"body":{"miscellaneous/variables.html":{}}}],["vergeben",{"_index":4799,"title":{},"body":{"miscellaneous/variables.html":{}}}],["verifi",{"_index":1969,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3413,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":3579,"title":{},"body":{"injectables/ResourceConfig.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["versions:npm",{"_index":4724,"title":{},"body":{"index.html":{}}}],["vertic",{"_index":4829,"title":{},"body":{"miscellaneous/variables.html":{}}}],["via",{"_index":583,"title":{},"body":{"injectables/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/notificationscomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/list.html":{}}}],["viabl",{"_index":1665,"title":{},"body":{"classes/Field.html":{},"additional-documentation/core-classes/field.html":{}}}],["video",{"_index":1715,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["video/mp4",{"_index":5146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["view",{"_index":1222,"title":{},"body":{"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceConfig.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/list.html":{}}}],["viewchild",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["viewchild('contain",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":4297,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterform",{"_index":2505,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalload",{"_index":2580,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('imageload",{"_index":2148,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["viewchild('localload",{"_index":2582,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["viewchild('pagecontain",{"_index":3362,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":2711,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcompon",{"_index":1184,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcompon",{"_index":952,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcompon",{"_index":953,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercompon",{"_index":954,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(locationmapcompon",{"_index":2688,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcompon",{"_index":2689,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcompon",{"_index":4298,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild(resourcelistcompon",{"_index":3676,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcompon",{"_index":3677,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcompon",{"_index":1562,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["viewchild(slothostdirect",{"_index":1428,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewchild(uploadcompon",{"_index":4360,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["viewchildren",{"_index":2500,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/PaginationComponent.html":{}}}],["viewchildren('filterpop",{"_index":2504,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchildren('pag",{"_index":3363,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontain",{"_index":3946,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1409,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1432,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactori",{"_index":1433,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewencapsul",{"_index":2372,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.non",{"_index":2307,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["visibl",{"_index":923,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{}}}],["visiblefield",{"_index":4382,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspip",{"_index":1848,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["visualblock",{"_index":5036,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["volum",{"_index":4952,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wait",{"_index":508,"title":{},"body":{"components/AssetListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"additional-documentation/ui/loadercomponent.html":{}}}],["wait(promis",{"_index":2569,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wand",{"_index":4997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["want",{"_index":2227,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ace.html":{}}}],["war",{"_index":4795,"title":{},"body":{"miscellaneous/variables.html":{}}}],["warn",{"_index":2059,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{}}}],["water",{"_index":5015,"title":{},"body":{"miscellaneous/variables.html":{}}}],["way",{"_index":59,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"changelog.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["week",{"_index":1180,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekday",{"_index":1160,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["wei",{"_index":5059,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weight",{"_index":5019,"title":{},"body":{"miscellaneous/variables.html":{}}}],["weiteren",{"_index":3418,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1404,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{}}}],["werden",{"_index":607,"title":{},"body":{"injectables/AuthGuard.html":{}}}],["wether",{"_index":1610,"title":{},"body":{"classes/Field.html":{},"components/UploadSelectComponent.html":{}}}],["whenev",{"_index":2216,"title":{},"body":{"components/InputComponent.html":{}}}],["whistl",{"_index":5018,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whiteboard",{"_index":4835,"title":{},"body":{"miscellaneous/variables.html":{}}}],["whole",{"_index":1667,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ResourceConfig.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes/field.html":{}}}],["whose",{"_index":3429,"title":{},"body":{"components/PopComponent.html":{}}}],["width",{"_index":1033,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["wifi",{"_index":4851,"title":{},"body":{"miscellaneous/variables.html":{}}}],["wildcard",{"_index":1638,"title":{},"body":{"classes/Field.html":{},"additional-documentation/adding-new-packages.html":{}}}],["win",{"_index":5120,"title":{},"body":{"miscellaneous/variables.html":{}}}],["window",{"_index":3253,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["window.addeventlistener('keydown",{"_index":3478,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.titl",{"_index":3268,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permiss",{"_index":3260,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permiss",{"_index":3261,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withload",{"_index":888,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotif",{"_index":889,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/ui/notificationscomponent.html":{}}}],["without",{"_index":1023,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"changelog.html":{},"miscellaneous/variables.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/core-classes.html":{},"additional-documentation/core-classes/field.html":{},"additional-documentation/core-classes/form.html":{}}}],["won't",{"_index":5205,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":2784,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["work",{"_index":673,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/ui/loadercomponent.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["workaround",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{},"miscellaneous/variables.html":{}}}],["wrap",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/medium.html":{},"additional-documentation/tinymce.html":{},"additional-documentation/ace.html":{}}}],["wrapper",{"_index":1534,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/core-classes/item.html":{}}}],["write",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"changelog.html":{}}}],["writevalu",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["writevalue(valu",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["written",{"_index":4702,"title":{},"body":{"index.html":{}}}],["wrote",{"_index":4488,"title":{},"body":{"changelog.html":{}}}],["wurst",{"_index":5352,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["wurst'sav",{"_index":5355,"title":{},"body":{"additional-documentation/core-classes/item.html":{}}}],["x",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"miscellaneous/variables.html":{}}}],["x.ui",{"_index":2984,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{},"index.html":{}}}],["x.ui/src/_config",{"_index":5181,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":5182,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x1f3b5",{"_index":5135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4b0",{"_index":5129,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4c5",{"_index":5132,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4e7",{"_index":5136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f4f7",{"_index":5133,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f50d",{"_index":5137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f516",{"_index":5130,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f5a5",{"_index":5134,"title":{},"body":{"miscellaneous/variables.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":419,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["x1f68c",{"_index":5131,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xing",{"_index":4987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":5180,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":5190,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":5177,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ye",{"_index":451,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"injectables/CrudService.html":{},"pipes/DatetimePipe.html":{},"components/EntryListPopComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"additional-documentation/ui/listcomponent.html":{}}}],["yield",{"_index":1054,"title":{},"body":{"injectables/CrudService.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["you'll",{"_index":5271,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["yourself",{"_index":3794,"title":{},"body":{"injectables/SdkService.html":{}}}],["youtub",{"_index":4988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yt",{"_index":5099,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl",{"_index":5102,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yturl[1",{"_index":5110,"title":{},"body":{"miscellaneous/variables.html":{}}}],["yyyi",{"_index":1238,"title":{},"body":{"interfaces/Day.html":{}}}],["z",{"_index":3123,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"miscellaneous/variables.html":{}}}],["z0",{"_index":1735,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["z]+))?)/g.exec(yt",{"_index":5108,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0",{"_index":5104,"title":{},"body":{"miscellaneous/variables.html":{}}}],["z]{2",{"_index":5128,"title":{},"body":{"miscellaneous/variables.html":{}}}],["za",{"_index":1734,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceConfig.html":{},"interfaces/Upload.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":1363,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.j",{"_index":4697,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":325,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["zurücksetzen",{"_index":3424,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace?e=1\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:48\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:94\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:113\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:81\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:40\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:26\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:36\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:109\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:34\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/ace.component.ts:30\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n// import 'ace-builds/src-noconflict/ace.js';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace?e=1\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n  Modules\n  AceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/ace.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AceComponent } from './ace.component';\n\n@NgModule({\n    imports: [],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n})\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/actionbar/actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        add\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        add\n                                    \n                                \n                                \n                                    \n                                        add:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport interface Action {\n    title: string;\n    id: string;\n    path?: string;\n    data?: any,\n    add?: boolean,\n    action?: (item?: Item, actionbar?: ActionbarComponent) => any\n}\n\nexport interface ActionbarConfig extends ListConfig {\n\n}\n\n@Component({\n    selector: 'ec-actionbar',\n    templateUrl: '../select/select.component.html'\n})\n\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n    @Input() config: ActionbarConfig = {\n        label: 'title',\n        identifier: 'id',\n        fields: {\n            title: {}\n        }\n    }\n    @Input() actions: Action[];\n    actionStack: { [id: string]: Action[] } = {}\n\n    constructor(\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n        /* this.toggleItem.asObservable().subscribe((item) => {\n            console.log('item', item);\n        }); */\n        this.add.subscribe((item) => {\n            if (item.getBody().add !== false) {\n                this.selection.add(item);\n            }\n            if (item.getBody().action) {\n                item.getBody().action(item, this);\n            }\n            if (item.getBody().children) {\n                this.loadActions(item.getBody().children);\n            }\n        });\n        this.remove.subscribe((item) => {\n            this.selection.remove(item);\n            const actionsBefore = this.actionStack[this.currentID()];\n            if (actionsBefore) {\n                this.loadActions(actionsBefore);\n            }\n        })\n    }\n\n    ngOnInit() {\n        this.loadActions(this.actions);\n    }\n\n    currentID() {\n        if (!this.selection || this.selection.isEmpty()) {\n            return 'ROOT';\n        }\n        return this.selection.items[this.selection.items.length - 1].id();\n    }\n\n    reset() {\n        this.selection.removeAll();\n        this.loadActions(this.actionStack[this.currentID()])\n    }\n\n    loadActions(actions) {\n        this.actionStack[this.currentID()] = actions;\n        this.list = new List(actions, this.config);\n        if (!this.selection) {\n            this.initSelection();\n        }\n        setTimeout(() => {\n            if (this.dropdownList) {\n                this.dropdownList.focusFirst();\n            }\n        })\n    }\n\n    getPath() {\n        return this.selection.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionbarConfig.html":{"url":"interfaces/ActionbarConfig.html","title":"interface - ActionbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/actionbar/actionbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport interface Action {\n    title: string;\n    id: string;\n    path?: string;\n    data?: any,\n    add?: boolean,\n    action?: (item?: Item, actionbar?: ActionbarComponent) => any\n}\n\nexport interface ActionbarConfig extends ListConfig {\n\n}\n\n@Component({\n    selector: 'ec-actionbar',\n    templateUrl: '../select/select.component.html'\n})\n\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n    @Input() config: ActionbarConfig = {\n        label: 'title',\n        identifier: 'id',\n        fields: {\n            title: {}\n        }\n    }\n    @Input() actions: Action[];\n    actionStack: { [id: string]: Action[] } = {}\n\n    constructor(\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n        /* this.toggleItem.asObservable().subscribe((item) => {\n            console.log('item', item);\n        }); */\n        this.add.subscribe((item) => {\n            if (item.getBody().add !== false) {\n                this.selection.add(item);\n            }\n            if (item.getBody().action) {\n                item.getBody().action(item, this);\n            }\n            if (item.getBody().children) {\n                this.loadActions(item.getBody().children);\n            }\n        });\n        this.remove.subscribe((item) => {\n            this.selection.remove(item);\n            const actionsBefore = this.actionStack[this.currentID()];\n            if (actionsBefore) {\n                this.loadActions(actionsBefore);\n            }\n        })\n    }\n\n    ngOnInit() {\n        this.loadActions(this.actions);\n    }\n\n    currentID() {\n        if (!this.selection || this.selection.isEmpty()) {\n            return 'ROOT';\n        }\n        return this.selection.items[this.selection.items.length - 1].id();\n    }\n\n    reset() {\n        this.selection.removeAll();\n        this.loadActions(this.actionStack[this.currentID()])\n    }\n\n    loadActions(actions) {\n        this.actionStack[this.currentID()] = actions;\n        this.list = new List(actions, this.config);\n        if (!this.selection) {\n            this.initSelection();\n        }\n        setTimeout(() => {\n            if (this.dropdownList) {\n                this.dropdownList.focusFirst();\n            }\n        })\n    }\n\n    getPath() {\n        return this.selection.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     DataManagerResource\n\n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '../sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n    templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n    api: DataManagerResource;\n    constructor(public sdk: SdkService) {\n        super();\n        this.sdk.root.then((root) => this.api = root);\n    }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                        🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template.\nassets/asset\nhttps://components.entrecode.de/assets/asset?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                    \n                        The asset id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:24\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the asset has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:28\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        asset:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:16\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/asset/asset.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template.\n * assets/asset\n * https://components.entrecode.de/assets/asset?e=1\n */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListComponent.html":{"url":"components/AssetListComponent.html","title":"component - AssetListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/asset-list/asset-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                list\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                loadWhen\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                            \n                            Type:    ListResource\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown while the list is loaded. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loadWhen\n                    \n                    \n                        If set to false, the list will wait for the flag to turn true before loading. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:39\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:31\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/asset-list/asset-list.component.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:64\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:130\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:134\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:121\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:85\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:51\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceList\n\n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:35\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listConfig:     ListConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:50\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:52\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\n\n@Component({\n    selector: 'ec-asset-list',\n    templateUrl: './asset-list.component.html'\n})\n\nexport class AssetListComponent extends ResourceListComponent implements OnInit {\n    ngOnInit() {\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                    \n                \n                \n                    {{group.value}}\n                \n            \n             -->\n            \n                \n                    \n                \n                {{item.getBody()}}\n                \n            \n\n        \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                    {{group.value}}                                         -->                                                                                {{item.getBody()}}                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                    \n                            \n                            Type:    string[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        \n                            Default value: 'select assetgroup..'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/assetgroup-select/assetgroup-select.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '../file.service';\n\n// TODO: add demo + doc\n\n@Component({\n    selector: 'ec-assetgroup-select',\n    templateUrl: './assetgroup-select.component.html',\n})\n\nexport class AssetgroupSelectComponent implements OnInit {\n    @Input() placeholder = 'select assetgroup..';\n    @Input() assetGroupID: string;\n    @Input() assetGroups: string[];\n    @Input() disableLegacy: boolean;\n    @Input() readOnly: boolean;\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n\n    constructor(\n        public fileService: FileService\n    ) { }\n\n    ngOnInit() {\n        this.fileService.assetGroupList().then(assetGroups => this.assetGroups = assetGroups);\n    }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets -->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthGuard.html":{"url":"injectables/AuthGuard.html","title":"injectable - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth-guard.service.ts\n        \n\n            \n                Description\n            \n            \n                This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            redirect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        redirect:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport { Subject } from 'rxjs/Subject';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n  Modules\n  AuthModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/auth/auth.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Module for all auth related components and services. \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoginComponent\n                            \n                            \n                                PasswordResetComponent\n                            \n                            \n                                SignupComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     AuthGuard\n                            \n                            \n                                     AuthService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ()\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoginComponent\n                            \n                            \n                                    PasswordResetComponent\n                            \n                            \n                                    SignupComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { CookieModule } from 'ngx-cookie';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { SignupComponent } from './signup/signup.component';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: \"environment\",\nuseValue: {\ndatamanagerID: \"83cc6374\",\nenvironment: \"stage\",\nclientID: \"rest\"\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined: , api?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/auth.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup(email, password, invite) :\n      this.sdk.api.signup(email, password, invite)\n        .catch(() => this.sdk.accounts.signup(email, password, invite))\n        .then((res) => {\n          return this.sdk.init();\n        })\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    })\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              })\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                move\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                            const numbers = new Collection([1, 2, 3]);\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:11\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject>\n\n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:13\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update$:     Observable>\n\n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:15\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:72\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.add(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:90\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.addAll([5, 6, 7]);\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:43\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has(2); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:54\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.has([1,2]); //true\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:161\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            move\n                            \n                            \n                        \n                    \n                \n                \n                    \nmove(item: T, index: number, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:166\n                            \n                        \n\n\n                \n                    \n                            Moves the given item to the given array index. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:107\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.remove(4);\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:124\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            numbers.removeAll();\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:148\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/collection/collection.ts:139\n                            \n                        \n\n\n                \n                    \n                            Toggles the item in and out of collection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  };\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\nhttps://components.entrecode.de/entries/crud?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Private\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.component.ts:51\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model that should be crud'ed. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:47\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:49\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:80\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:114\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryPop:     EntryPopComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     EntryListComponent\n\n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:45\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:51\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryFormComponent } from '../entry-form/entry-form.component';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { WithNotifications } from '@ec.components/ui/src/notifications/with-notifications.interface';\nimport { Notification } from '@ec.components/ui/src/notifications/notification';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/entries/crud?e=1\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = []\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    private cdr: ChangeDetectorRef,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    }\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.cdr.markForCheck();\n        this.config.methods = methods;\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return Promise.resolve().then(() => {\n      if (!this.config.alwaysLoadEntry && !this.mustReload(item) && (!this.config.levels || this.config.levels === 1)) {\n        return item.getBody();\n      }\n      return this.sdk.api.entry(this.model, item.id(), this.config.levels || 1)\n    }).then((loadedEntry) => {\n      this.entryPop.edit(loadedEntry);\n      this.notificationService.emit({ hide: this.notifications });\n    }).catch((err) => {\n      console.log('error while loading entry to edit', err);\n      this.notificationService.emit({\n        title: this.symbol.resolve('error.load'),\n        error: err,\n        sticky: true,\n        hide: this.notifications,\n        replace: this.notifications\n      })\n    });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  private selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        customUpload\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        disableUrlUpload\n                                \n                                \n                                            Optional\n                                        fileOptions\n                                \n                                \n                                            Optional\n                                        hideAssetGroupSelect\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        pluralLabel\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                                \n                                            Optional\n                                        singularLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customUpload\n                                    \n                                \n                                \n                                    \n                                        customUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a pop will open before upload to set up custom options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableUrlUpload\n                                    \n                                \n                                \n                                    \n                                        disableUrlUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, assets cannot be upload via url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileOptions\n                                    \n                                \n                                \n                                    \n                                        fileOptions:     FileOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default options for file uploads \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideAssetGroupSelect\n                                    \n                                \n                                \n                                    \n                                        hideAssetGroupSelect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hides the assetGroup select in asset-list-pop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluralLabel\n                                    \n                                \n                                \n                                    \n                                        pluralLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for multiple entities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the column width of the pops used. Defaults to popService.defaultColumns \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singularLabel\n                                    \n                                \n                                \n                                    \n                                        singularLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for one entity \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig } from '@ec.components/core/src/list/list-config.interface';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { NotificationsComponent } from '@ec.components/ui/src/notifications/notifications.component';\nimport { FileOptions } from '../files/file.service';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The label for one entity */\n  singularLabel?: string;\n  /** The label for multiple entities */\n  pluralLabel?: string;\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean }\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, assets cannot be upload via url */\n  disableUrlUpload?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSearchbar?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n  /** Hides the assetGroup select in asset-list-pop */\n  hideAssetGroupSelect?: boolean;\n  /** Default options for file uploads */\n  fileOptions?: FileOptions;\n  /** If true, a pop will open before upload to set up custom options */\n  customUpload?: boolean;\n  /** Defines the column width of the pops used. Defaults to popService.defaultColumns */\n  popColumns?: number;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CrudService.html":{"url":"injectables/CrudService.html","title":"injectable - CrudService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  CrudService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/crud/crud.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/crud/crud.service.ts:16\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:89\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:68\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entry: EntryResource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(model: , entry: EntryResource, value: Object, safePut: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        safePut\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/crud/crud.service.ts:19\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/filter';\nimport { Subject } from 'rxjs/Subject';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class CrudService {\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public resourceService: ResourceService) {\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: any): Observable {\n    if (filter.model) {\n      filter.relation = `model.${filter.model}`;\n      delete filter.model;\n    }\n    console.warn(`CrudService.change is deprecated! Use ResourceService.change instead!\n    Make sure to change the \"model\" property to \"relation\" with prefix \"model.\":\n\n    this.crud.change({model:'muffin'}) // OLD\n    // CHANGE TO\n    this.resourceService.change({relation:'model.muffin'}) // NEW\n\n    The CrudService#change method will be removed in a future release!\n    `)\n    return this.resourceService.change(filter)\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entry: EntryResource, value: Object) {\n    if (entry && entry.save) {\n      return this.update(model, entry, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  update(model, entry: EntryResource, value: Object, safePut = true): Promise {\n    const oldValues = {}; // save old values\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    Object.assign(entry, this.clean(value)); // assign new form values\n    return entry.save(safePut).then((_entry) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: _entry, type: 'put' });\n      return _entry;\n    }).catch((err) => {\n      Object.assign(entry, this.clean(oldValues)); // fall back to old values\n      return Promise.reject(err);\n    });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // TODO: make sure leveled entries are returned leveled\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n  Modules\n  DataModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/data.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                CrudComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntriesDirective\n                            \n                            \n                                EntryDirective\n                            \n                            \n                                EntryFormComponent\n                            \n                            \n                                EntryListComponent\n                            \n                            \n                                EntryListPopComponent\n                            \n                            \n                                EntryListSelectComponent\n                            \n                            \n                                EntryPopComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AdminEntryInputComponent\n                            \n                            \n                                DefaultEntryInputComponent\n                            \n                            \n                                DefaultEntryOutputComponent\n                            \n                            \n                                EntryListPopComponent\n                            \n                            \n                                EntryListSelectComponent\n                            \n                            \n                                EntrySelectComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     CrudService\n                            \n                            \n                                     HistoryService\n                            \n                            \n                                     ModelConfigService\n                            \n                            \n                                     TypeConfigService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AuthModule\n                            \n                            \n                                    CrudComponent\n                            \n                            \n                                    EntriesDirective\n                            \n                            \n                                    EntryDirective\n                            \n                            \n                                    EntryFormComponent\n                            \n                            \n                                    EntryListComponent\n                            \n                            \n                                    EntryListPopComponent\n                            \n                            \n                                    EntryListSelectComponent\n                            \n                            \n                                    EntryPopComponent\n                            \n                            \n                                    EntrySelectComponent\n                            \n                            \n                                    FilesModule\n                            \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { CrudService } from './crud/crud.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\nimport { EntryListSelectComponent } from './entry-list-select/entry-list-select.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntryListSelectComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n    DndModule\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    CrudService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live'\n      }\n    }\n  ]\n})\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                    \n                        The date that should be displayed at start. \n\n                            \n                            Type:    moment.Moment\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the date \n\n                            \n                            Type:    FormControl\n\n                            \n                        \n                            Default value: new FormControl()\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input's placeholder \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:34\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        calendar:     CalendarComponent\n\n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:42\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        weekdays:     string[]\n\n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from './calendar.component';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime?e=1\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  };\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n  \n    \n    \n      \n        \n      \n    \n  \n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/datetime/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/datetime/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('moment.format.date')\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport moment from 'moment-es6';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(private symbol: SymbolService) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.symbol.resolve('moment.format.date'),\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/datetime/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month. \nhttps://components.entrecode.de/ui/datetime?e=1\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport moment from 'moment-es6';\nimport 'rxjs/add/operator/debounceTime';\nimport { Subject } from 'rxjs/Subject';\n\n/** Interface for a day inside the a month. \n * https://components.entrecode.de/ui/datetime?e=1\n * */\nexport interface Day {\n  /** The cell index */\n  index: number,\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc'\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(public symbol: SymbolService) {\n    this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat;\n    this.drag.asObservable().debounceTime(100)\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().debounceTime(800)\n      .subscribe(timespan => this.spanChanged.emit(this.timespan))\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        }\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    this.dayClicked.emit(_moment);\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService) {\n    super();\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                              🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-form/default-entry-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-input/default-input.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    {{field.placeholder}}\n  \n\n  \n\n  \n\n  \n\n  \n\n  \n    \n    \n      {{option.label?option.label:option}}\n    \n  \n\n  \n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{field.placeholder}}                          {{option.label?option.label:option}}                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:12\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/default-output/default-output.component.ts:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n    \n    (field.maxItems||10)\">\n      &hellip;\n    \n  \n\n  {{item?.display(field.property)}}\n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    {{item?.display(field.property)}}\n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}        (field.maxItems||10)\">      …        {{item?.display(field.property)}}      ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                    {{item?.resolve(field.property)?.length}}                    {{item?.resolve(field.property)?.length}}                                {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}            {{item?.display(field.property)}}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. TODO: demo \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                    \n                        If true the element acts normal \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                    \n                        Emits when files are dropped \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class.is-active:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. TODO: demo */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') private active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, Type, ViewChild } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, data: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, data);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entries/entries.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        The filterOptions for loading. \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:26\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:108\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:58\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entryList:     EntryList\n\n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        items:     EntryResource[]\n\n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:22\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entries/entries.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader, NotificationsService } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/entries/entries?e=1\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list))\n      .catch(error => this.notificationService.emit({\n        title: this.symbol.resolve('entries.load.error'),\n        error\n      }));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                    \n                        The entry id that should be loaded\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                    \n                        The levels to use. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used. \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        The model to load from \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:23\n                            \n                        \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                    \n                        Fires as soon as the entry has been loaded. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:29\n                            \n                        \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        entry:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promise:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:19\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry/entry.directive.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/entries/entries?e=1\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      })\n      .catch(error =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entry.load.error'),\n          error\n        }));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/entry-list-pop/entry-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop that contains an entry list. TODO: add demo \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value: false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:22\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lightModel:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        modelConfig:     ModelConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/entry-list-pop/entry-list-pop.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewChild, HostBinding, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent } from '@ec.components/ui';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SearchbarComponent } from '@ec.components/ui/src/list/searchbar/searchbar.component';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n/** A Pop that contains an entry list. TODO: add demo */\n@Component({\n    selector: 'ec-entry-list-pop',\n    templateUrl: './entry-list-pop.component.html',\n\n})\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n    @Input() model: string;\n    @Input() config: ListConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'dialog-wrapper';\n    lightModel: any;\n\n    constructor(\n        public modelConfig: ModelConfigService,\n        protected popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef\n    ) {\n        super(popService, elementRef, cdr);\n    }\n\n    ngOnChanges() {\n        if (this.model) {\n            this.modelConfig.getLightModel(this.model).then(model => this.lightModel = model);\n        }\n        this.config = Object.assign({}, this.config || {}, { hidePagination: true, disableHeader: true });\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n        this.searchbar.focusEvent.emit(true);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n        \n    \n    \n        \n        \n    \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        The error that should be displayed \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}{{error.verbose?': '+error.verbose:''}}\n\n  \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}{{error.verbose?\\': \\'+error.verbose:\\'\\'}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumns\n                            \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:47\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterOperator:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filterPopClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidden:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        id:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        label:     string | boolean\n\n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        maxItems:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        output:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        placeholder:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        property:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        required:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortable:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        validate:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        values:     any[]\n\n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        view:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumns()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:63\n                            \n                        \n\n\n                \n                    \n                            Returns the column class for data-col, based on configured columns \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/field/field.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/field/field.ts:45\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the column class for data-col, based on configured columns */\n  getColumns() {\n    return (this.columns || 12) + '-sm';\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/config/field-config.interface.ts:4\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        export interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deduplicate\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fileName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deduplicate\n                                    \n                                \n                                \n                                    \n                                        deduplicate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deduplicate upload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { mimeTypes } from './mime-types'\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string,\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: []\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, (config.filter || {}), {\n          type: assetGroupID\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n          if (key in options) {\n            formData.append(key, `${options[key]}`);\n          }\n        });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map(f => f.url) : this.getFormData(files, options);\n    return api.createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    console.warn('FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.');\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n  Modules\n  FilesModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/files/files.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AssetDirective\n                            \n                            \n                                AssetListComponent\n                            \n                            \n                                AssetListPopComponent\n                            \n                            \n                                AssetSelectComponent\n                            \n                            \n                                AssetgroupSelectComponent\n                            \n                            \n                                DropzoneDirective\n                            \n                            \n                                ImageDirective\n                            \n                            \n                                ImageSelectPopComponent\n                            \n                            \n                                UploadComponent\n                            \n                            \n                                UploadSelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                AssetSelectComponent\n                            \n                            \n                                AssetgroupSelectComponent\n                            \n                            \n                                UploadComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FileService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ResourceModule\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    AssetDirective\n                            \n                            \n                                    AssetListComponent\n                            \n                            \n                                    AssetListPopComponent\n                            \n                            \n                                    AssetSelectComponent\n                            \n                            \n                                    AssetgroupSelectComponent\n                            \n                            \n                                    DropzoneDirective\n                            \n                            \n                                    ImageDirective\n                            \n                            \n                                    ImageSelectPopComponent\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UploadComponent\n                            \n                            \n                                    UploadSelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui/src/ui.module';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\nimport { UploadSelectComponent } from './upload-select/upload-select.component';\nimport { ImageSelectPopComponent } from './image-select-pop/image-select-pop.component';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    UploadComponent,\n  ],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    ImageSelectPopComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    SdkModule,\n    ImageSelectPopComponent,\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/focus/focus.directive.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                    \n                            \n                            Type:    EventEmitter\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/focus/focus.directive.ts:13\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit {\n  @Input() ecFocus: EventEmitter;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngOnInit() {\n    this.ecFocus\n      .subscribe((event: boolean) => {\n        if (event) {\n          this.element.nativeElement.focus();\n        } else {\n          this.element.nativeElement.blur();\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        hideSubmitButton\n                                \n                                \n                                            Optional\n                                        submitButtonLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmitButton\n                                    \n                                \n                                \n                                    \n                                        hideSubmitButton:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no submit button will be rendered. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonLabel\n                                    \n                                \n                                \n                                    \n                                        submitButtonLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the submit button \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n    /** If true, no submit button will be rendered. */\n    hideSubmitButton?: boolean;\n    /** The label of the submit button */\n    submitButtonLabel?: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n  Modules\n  FormModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/form.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                CalendarComponent\n                            \n                            \n                                DaterangeComponent\n                            \n                            \n                                DatetimeComponent\n                            \n                            \n                                DatetimePipe\n                            \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                FormComponent\n                            \n                            \n                                HeatmapComponent\n                            \n                            \n                                MaxItemsPipe\n                            \n                            \n                                MonthComponent\n                            \n                            \n                                ToggleComponent\n                            \n                            \n                                VisibleFieldsPipe\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     FormService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SymbolModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    CalendarComponent\n                            \n                            \n                                    DaterangeComponent\n                            \n                            \n                                    DatetimeComponent\n                            \n                            \n                                    DatetimePipe\n                            \n                            \n                                    FormComponent\n                            \n                            \n                                    HeatmapComponent\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    MaxItemsPipe\n                            \n                            \n                                    MonthComponent\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    ToggleComponent\n                            \n                            \n                                    VisibleFieldsPipe\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { MonthComponent } from './datetime/month.component';\nimport { DatetimePipe } from './datetime/datetime.pipe';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { CalendarComponent } from './datetime/calendar.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { HeatmapComponent } from './datetime/heatmap.component';\nimport { DaterangeComponent } from './datetime/daterange.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    DatetimeComponent,\n    DatetimePipe,\n    MonthComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    CalendarComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    FormComponent,\n    ReactiveFormsModule,\n    DatetimeComponent,\n    DatetimePipe,\n    CalendarComponent,\n    HeatmapComponent,\n    DaterangeComponent,\n    MonthComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    IoModule,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService\n  ]\n})\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                getFormLabel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                    Public\n                                shouldBePartOfForm\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/form/form.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormLabel(form: FormComponent, label: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns label for given form (e.g. Edit label) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('resource.generic')\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldBePartOfForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldBePartOfForm(field: , form: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be included in the form.\nDecides based on field config values form, edit and create \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/form.service.ts:20\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form } from '@ec.components/core/src/form/form';\nimport {\n  AbstractControl,\n  FormControl,\n  FormGroup,\n  ValidationErrors,\n  ValidatorFn,\n  Validators\n} from '@angular/forms';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { FormComponent } from '@ec.components/ui/src/form/form.component';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n\n  constructor(\n    public symbol: SymbolService\n  ) { }\n\n  /** Returns true if the field should be included in the form.\n   * Decides based on field config values form, edit and create */\n  public shouldBePartOfForm(field, form) {\n    if (field.create === false && !form.getBody()) {\n      return false;\n    }\n    if (field.edit === false && !!form.getBody()) {\n      return false;\n    }\n    return field.form !== false;\n  }\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const controls = {};\n    form.fields.filter((field) => this.shouldBePartOfForm(field, form))\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        controls[field.property] = new FormControl(form.getValue(field.property), validators)\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(controls);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    console.warn('addField is experimental!');\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error\n        }\n      }\n    }\n  }\n\n  /** Returns label for given form (e.g. Edit label) */\n  getFormLabel(form: FormComponent, label = this.symbol.resolve('resource.generic')) {\n    if (!form || !form.form) {\n      return '';\n    }\n    return `${this.symbol.resolve('resource.' + (form.form.isEditing() ? 'edit' : 'create'))}\n    ${label} ${form.form.display() ? `\"${form.form.display()}\"` : ''}`;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder: , location: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { fromPromise } from 'rxjs/observable/fromPromise';\nimport { switchMap } from 'rxjs/operators';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    }\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return fromPromise(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        })\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:41\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:51\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        eventSources:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loaderService:     LoaderService\n\n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        promises:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport * as EventSource from 'eventsource/lib/eventsource-polyfill';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key. The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        DataManager.enableHistoryEvents(EventSource);\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon.\nhttps://components.entrecode.de/ui/icons?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/icon/icon.component.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     Symbol\n\n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.component.ts:18\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nOpen Demo\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown. If not, is is expected to be a ec-icon.\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class IconComponent implements OnInit {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    ngOnInit() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n  Modules\n  IconModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/icon/icon.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                IconComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     IconService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    IconComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) \nhttps://components.entrecode.de/ui/icons?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons) \n * https://components.entrecode.de/ui/icons?e=1\n*/\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                    \n                        The assetID that should be loaded \n\n                            \n                            Type:    string | DMAssetResource\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                    \n                        The size that should be requested. \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                    \n                        If true, the image will be requested as thumb (square) \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:15\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:40\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:28\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        url:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image/image.directive.ts:21\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageSelectPopComponent.html":{"url":"components/ImageSelectPopComponent.html","title":"component - ImageSelectPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageSelectPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/image-select-pop/image-select-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a pop with a form to add images. You can set an the alternative Text and the size.\nThe size inputs will keep the image ratio by default.  \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-image-select-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./image-select-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                imageForm\n                            \n                            \n                                imageLoader\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                defaultSize\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, sdk: SdkService, symbol: SymbolService, fileService: FileService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The assetGroupID to pick from \n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSize\n                    \n                    \n                        The default size used \n\n                        \n                            Default value: 400\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value: false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        Ouput that emits when image changes  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Inits the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageForm:     FormConfig\n\n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n\n                \n                    \n                        The instance of the imageForm  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        imageLoader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:28\n                            \n                        \n\n                \n                    \n                        The loader that is shown after an image has been selected  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popService:     PopService\n\n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sdk:     SdkService\n\n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/image-select-pop/image-select-pop.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, ViewChild, Output, EventEmitter, HostBinding, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { FormComponent } from '@ec.components/ui/src/form/form.component';\nimport { FormConfig } from '@ec.components/core';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport { SdkService } from '@ec.components/data/src/sdk/sdk.service';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { DefaultEntryInputComponent } from '@ec.components/data/src/entry-form/default-entry-input.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { FileService } from '../file.service';\n\n/** This component is a pop with a form to add images. You can set an the alternative Text and the size.\n * The size inputs will keep the image ratio by default.  */\n@Component({\n    selector: 'ec-image-select-pop',\n    templateUrl: './image-select-pop.component.html'\n})\nexport class ImageSelectPopComponent extends PopComponent implements OnInit {\n    /** The assetGroupID to pick from */\n    @Input() assetGroupID;\n    /** The default size used */\n    @Input() defaultSize = 400;\n    /** Ouput that emits when image changes  */\n    @Output() changed: EventEmitter = new EventEmitter();\n    /** The instance of the imageForm  */\n    imageForm: FormConfig;\n    /** The loader that is shown after an image has been selected  */\n    @ViewChild('imageLoader') imageLoader: LoaderComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'dialog-wrapper';\n\n    constructor(public popService: PopService,\n        public sdk: SdkService,\n        public symbol: SymbolService,\n        public fileService: FileService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef) {\n        super(popService, elementRef, cdr);\n    }\n    /** Inits the form */\n    ngOnInit() {\n        const isOldAssetGroupID = this.fileService.isOldAssetGroupID(this.assetGroupID);\n        this.imageForm = {\n            submitButtonLabel: this.symbol.resolve('image-select-pop.submitButtonLabel'),\n            onSave: (form, value: { img, height, width, alt }) => {\n                const size = Math.max(value.width, value.height);\n                if (isOldAssetGroupID) {\n                    this.sdk.api.asset(value.img)\n                        .then(asset =>\n                            asset.getImageUrl(size, '')\n                        ).then(url => {\n                            this.hide();\n                            this.changed.emit({ url, alt: value.alt, size });\n                        });\n                } else {\n                    const loadImage = this.sdk.api.dmAsset(this.assetGroupID, value.img)\n                        .then(asset =>\n                            asset.getImageUrl(size)\n                        ).then(url => {\n                            this.hide();\n                            this.changed.emit({ url, alt: value.alt, size });\n                        });\n                    this.imageLoader.wait(loadImage);\n                }\n            },\n            fields: {\n                img: {\n                    label: ' ',\n                    input: DefaultEntryInputComponent,\n                    type: isOldAssetGroupID ? 'asset' : 'dmAsset',\n                    relation: !isOldAssetGroupID ? this.assetGroupID : 'legacyAsset',\n                    required: true,\n                    changed: (value, form) => {\n                        const loadImg = Promise.resolve().then(() => {\n                            if (isOldAssetGroupID) {\n                                return this.sdk.api.asset(value).then(asset => {\n                                    const original = asset.getOriginalFile();\n                                    const resolution = original.resolution;\n                                    return { resolution, title: asset.title };\n                                });\n                            } else {\n                                return this.sdk.api.dmAsset(this.assetGroupID, value).then(asset => {\n                                    const resolution = asset.file.resolution;\n                                    return { resolution, title: asset.title };\n                                });\n                            }\n                        }).then(({ resolution, title }) => {\n                            const ratio = resolution.width / resolution.height;\n                            const width = Math.min(this.defaultSize, resolution.width);\n                            form.group.controls.width.setValue(width);\n                            form.group.controls.alt.setValue(title);\n                            form.group.controls.ratio.setValue(ratio);\n                        });\n                        this.imageLoader.wait(loadImg);\n                    }\n                },\n                alt: {\n                    label: this.symbol.resolve('image-select-pop.alt'),\n                    view: 'string'\n                },\n                ratio: {\n                    hideInForm: true,\n                    view: 'number'\n                },\n                keepRatio: {\n                    label: this.symbol.resolve('image-select-pop.keepRatio'),\n                    view: 'boolean',\n                    prefill: true,\n                    changed: (value) => {\n                        if (value === true) {\n                            console.log('should fix ratio now...');\n                        }\n                    }\n                },\n                width: {\n                    label: this.symbol.resolve('image-select-pop.width'),\n                    view: 'number',\n                    columns: 6,\n                    changed: (value, form: FormComponent) => {\n                        const ratio = form.getValue('ratio');\n                        if (ratio && form.getValue('keepRatio')) {\n                            form.group.controls.height.setValue(Math.round(value / ratio));\n                        }\n                    }\n                },\n                height: {\n                    label: this.symbol.resolve('image-select-pop.height'),\n                    view: 'number',\n                    columns: 6,\n                    changed: (value, form) => {\n                        const ratio = form.getValue('ratio');\n                        if (ratio && form.getValue('keepRatio')) {\n                            form.group.controls.width.setValue(Math.round(value * ratio));\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{'image-select-pop.header' | symbol}}\n    \n    \n        \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'image-select-pop.header\\' | symbol}}                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageSelectPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectControl\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                config\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                    \n                        Overrides the default component \n\n                            \n                            Type:    Type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        Config that should be used, only needed when not using field input \n\n                            \n                            Type:    FieldConfigProperty\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                            \n                            Type:    AbstractControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time in ms before the changed event emits. \n\n                        \n                            Default value: 0\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                    \n                        The belonging form group \n\n                            \n                            Type:    FormGroup\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                    \n                        The property name that is edited. Expects a form as item input \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:32\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:26\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:86\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:111\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:100\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentInstance:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:41\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:107\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input/input.component.ts:43\n                            \n                        \n\n                \n                    \n                        The current value of the input. Needs to be saved for the case the component is not yet loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnChanges, Output, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\nimport { FieldConfigProperty, Field, Form, Item } from '@ec.components/core';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: AbstractControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Config that should be used, only needed when not using field input */\n  @Input() config: FieldConfigProperty;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: InputComponent\n  /** The current value of the input. Needs to be saved for the case the component is not yet loaded */\n  value: any;\n\n  ngOnChanges() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    } else if (!this.field && this.config) {\n      this.field = new Field(this.property || 'input', this.config);\n    }\n    if (!this.field) {\n      return;\n    }\n    if (!this.control) {\n      this.control = this.group ? this.group.get(this.field.property) : new FormControl();\n    }\n    if (!this.group) {\n      this.group = new FormGroup({\n        [this.property || this.field.property || 'input']: this.control\n      });\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this\n    };\n\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    this.connectControl();\n    if (componentRef.instance.control) {\n      componentRef.instance.control.valueChanges\n        .debounceTime(this.debounce)\n        .subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  connectControl() {\n    if (!this.componentInstance) {\n      // console.warn('could not connect control: no instance loaded');\n      return;\n    }\n    if (this.componentInstance.registerOnChange && this.propagateChange) {\n      this.componentInstance.registerOnChange(this.propagateChange);\n    }\n    if (this.value !== undefined) {\n      this.writeValue(this.value);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance.writeValue) {\n      this.componentInstance.writeValue(value);\n    }\n    this.value = value;\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n    this.connectControl();\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                    \n                        The form control that should be tracked \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:12\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  private getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n  Modules\n  IoModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/io/io.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                DynamicRackComponent\n                            \n                            \n                                DynamicSlotComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                            \n                                SlotHostDirective\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                DefaultInputComponent\n                            \n                            \n                                DefaultOutputComponent\n                            \n                            \n                                InputComponent\n                            \n                            \n                                InputErrorsComponent\n                            \n                            \n                                OutputComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    DynamicRackComponent\n                            \n                            \n                                    DynamicSlotComponent\n                            \n                            \n                                    InputComponent\n                            \n                            \n                                    InputErrorsComponent\n                            \n                            \n                                    OutputComponent\n                            \n                            \n                                    SlotHostDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { DefaultInputComponent } from '../form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '../form/default-output/default-output.component';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfigProperty } from '../config/field-config-property.interface';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n  /** This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class */\n  classes?: (item?: Item) => string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nhttps://components.entrecode.de/ui/list/basic?e=1\nhttps://components.entrecode.de/ui/list/transforms?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n\n            \n                templateUrl\n                ./list.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                config\n                            \n                            \n                                focusItem\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                filter\n                            \n                            \n                                focusFirst\n                            \n                            \n                                focusNext\n                            \n                            \n                                focusPrev\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFocusFirst\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/list.component.ts:50\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFocusFirst\n                    \n                    \n                        If true, the first item in the list will always be focused after changed \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:46\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                    \n                        The used collection \n\n                            \n                            Type:    Collection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        The visible items \n\n                            \n                            Type:    Array\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The Instance of the List \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        Pagination that should be used \n\n                            \n                            Type:    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                    \n                        Custom PaginationConfig \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:44\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The used selection \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:34\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        emits after the list changed \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:50\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item selection \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Event emitter on selection change \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:38\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:149\n                            \n                        \n\n\n                \n                    \n                            Filters the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:117\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:123\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:136\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:69\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:60\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:104\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:21\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusItem\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        focusItem:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:48\n                            \n                        \n\n                \n                    \n                        Current focus \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isLoading:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:24\n                            \n                        \n\n                \n                    \n                        Config input for List \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listConfig:     ListConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list.component.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Collection, List, ListConfig, Selection, Pagination } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\nimport { ListConfigService } from './list-config.service';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * https://components.entrecode.de/ui/list/basic?e=1\n * https://components.entrecode.de/ui/list/transforms?e=1\n * */\n@Component({\n  selector: 'ec-list',\n  templateUrl: './list.component.html',\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  /** Flag that flips true when loading. */\n  isLoading = false;\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Pagination that should be used */\n  @Input() pagination: Pagination;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n  /** If true, the first item in the list will always be focused after changed */\n  @Input() autoFocusFirst = false;\n  /** Current focus */\n  focusItem: Item;\n  /** emits after the list changed */\n  @Output() changed: EventEmitter> = new EventEmitter();\n\n  constructor(\n    public listConfig: ListConfigService,\n    public cdr: ChangeDetectorRef\n  ) {\n  }\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.init(new List(this.items, this.config, this.pagination));\n    } else if (this.collection) {\n      this.init(new List(this.collection.items, this.config, this.pagination));\n    }\n  }\n\n  init(list: List) {\n    if (!list) {\n      console.warn('tried to init list.component with undefined list');\n      return;\n    }\n    this.list = list;\n    this.listConfig.applyConfig(this.list);\n    this.list.change$.subscribe(() => {\n      if (this.autoFocusFirst || this.list.isFiltered()) {\n        this.focusFirst();\n      } else {\n        delete this.focusItem;\n      }\n      this.cdr.markForCheck();\n      this.changed.emit(this.list)\n    });\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      });\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title)\n    /* && (this.list.config.alwaysShowHeader || !this.list.isEmpty()); */\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  focusFirst() {\n    delete this.focusItem;\n    this.focusNext();\n  }\n\n  /** Selects the next item */\n  focusNext() {\n    if (!this.list) {\n      return;\n    }\n    let index = 0;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Selects the previous item */\n  focusPrev() {\n    if (!this.list) {\n      return;\n    }\n    let index = this.list.page.length - 1;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + this.list.page.length - 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Filters the list */\n  filter(property, value) {\n    this.list.filter(property, value);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n      \n        \n          \n        \n        \n          {{group.value}}\n        \n      \n      \n    \n\n    \n      \n        \n          \n        \n        \n          {{'list.filter.noResults' | symbol}}\n          {{'list.filter.reset' | symbol}}\n        \n      \n      \n        \n          \n        \n        \n          {{'list.empty' | symbol}}\n        \n      \n    \n    \n      \n        \n      \n      \n        {{'list.loading' | symbol}}\n      \n    \n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                          {{group.value}}                                                                              {{\\'list.filter.noResults\\' | symbol}}          {{\\'list.filter.reset\\' | symbol}}                                                                {{\\'list.empty\\' | symbol}}                                                        {{\\'list.loading\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        autoload\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        storageKey\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoload\n                                    \n                                \n                                \n                                    \n                                        autoload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will automatically load on change \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no column filter will be shown in the list header \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select dropdown will be shown on ec-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Transforms the Items before they are displayed, e.g. to apply a filter for the view *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageKey\n                                    \n                                \n                                \n                                    \n                                        storageKey:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that should store the lists config in the local storage.\nIf set, the key will be populated on config changes. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\nimport { List, Item } from '../..';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean\n  /** If true, no select dropdown will be shown on ec-select */\n  disableSearchbar?: boolean\n  /** If true, the list will have no header. */\n  disableHeader?: boolean\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean\n  /** If true, no column filter will be shown in the list header */\n  disableColumnFilter?: boolean;\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number,\n  /** The number of items per page */\n  size?: number,\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[],\n  /** Should the selection be solo? */\n  solo?: boolean,\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any },\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any },\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number,\n  /** If true, the list will automatically load on change */\n  autoload?: boolean;\n  /** The key that should store the lists config in the local storage.\n   * If set, the key will be populated on config changes. */\n  storageKey?: string | ((list: List) => string);\n  /** Transforms the Items before they are displayed, e.g. to apply a filter for the view **/\n  display?: (items: Item[]) => Item[];\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListConfigService.html":{"url":"injectables/ListConfigService.html","title":"injectable - ListConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ListConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/list/list-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storageKeyResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyConfig\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                retrieve\n                            \n                            \n                                set\n                            \n                            \n                                store\n                            \n                            \n                                storeConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStorageKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStorageKey(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieve(key: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(key: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \nstore(key: , config: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageKeyResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        storageKeyResolver:     function\n\n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-config.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { List } from '@ec.components/core';\n\n@Injectable()\nexport class ListConfigService {\n\n    public storageKeyResolver: (list: List) => string;\n\n    retrieve(key) {\n        const config = localStorage.getItem(key);\n        return config ? JSON.parse(config) : null;\n    }\n\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    store(key, config) {\n        const existing = this.retrieve(key) || {};\n        localStorage.setItem(key, JSON.stringify(Object.assign(existing, config)));\n    }\n\n    getStorageKey(list: List) {\n        if (!list || !list.fields || !list.config || !list.config.storageKey) {\n            // console.log('cannot apply config: no storage key or list set');\n            return;\n        }\n        const resolveFn = list.config.storageKey || this.storageKeyResolver;\n        if (typeof resolveFn === 'function') {\n            return resolveFn(list);\n        }\n        return list.config.storageKey;\n    }\n\n    storeConfig(list: List) {\n        const key = this.getStorageKey(list);\n        if (!key) {\n            return;\n        }\n        const config = { hide: list.fields.filter(f => f.hideInList).map(f => f.property) };\n        this.store(key, config);\n    }\n\n    applyConfig(list: List) {\n        const key = this.getStorageKey(list);\n        if (!key) {\n            return;\n        }\n        const existing = this.retrieve(key);\n        if (existing && existing.hide) {\n            list.fields.forEach(field => field.hideInList = false);\n            existing.hide.forEach(property => {\n                const field = list.fields.find(f => f.property === property);\n                if (!field) {\n                    console.warn('field ', property, ' not found');\n                    return;\n                }\n                field.hideInList = true;\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                filter\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                pops\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                applyFilter\n                            \n                            \n                                    Public\n                                editFilter\n                            \n                            \n                                    Public\n                                fieldLabel\n                            \n                            \n                                    Public\n                                removeFilter\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/list-header/list-header.component.ts:23\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:19\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            applyFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        applyFilter(property: , value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            Applies the given filter to the list. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        editFilter(pop: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        pop\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fieldLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        fieldLabel(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Returns the fields label \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            removeFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        removeFilter(property: , control: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Resets the fields filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        control\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Toggles the fields visibility in the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filter:     FormComponent\n\n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:23\n                            \n                        \n\n                \n                    \n                        The form that holds the current filter information \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        listConfig:     ListConfigService\n\n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pops\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pops:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-header/list-header.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, QueryList, ViewChild, ViewChildren, ChangeDetectionStrategy } from '@angular/core';\nimport { PopComponent } from '../../pop/pop.component';\nimport { FormComponent } from '../../form/form.component';\nimport { List } from '@ec.components/core/src/list/list';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { Field } from '@ec.components/core';\nimport { ListConfigService } from '../list-config.service';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListHeaderComponent {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChildren('filterPop') pops: QueryList;\n  /** The form that holds the current filter information */\n  @ViewChild('filterForm') filter: FormComponent;\n\n  constructor(public listConfig: ListConfigService) {\n  }\n\n  /** opens the given filter pop and closes all others */\n  public editFilter(pop) {\n    pop.toggle();\n  }\n\n  /** Applies the given filter to the list. */\n  public applyFilter(property, value) {\n    this.list.filter(property, value);\n  }\n\n  /** Resets the fields filter */\n  public removeFilter(property, control) {\n    control.reset();\n  }\n\n  /** Returns the fields label */\n  public fieldLabel(field: Field) {\n    if (field.label === false) {\n      return '';\n    }\n    return field.label || field.property;\n  }\n\n  /** Toggles the fields visibility in the list */\n  public toggleVisibility(field: Field) {\n    this.list.toggleVisibility(field);\n    this.listConfig.storeConfig(this.list);\n  }\n}\n\n    \n\n    \n        \n  \n    \n  \n  \n\n    \n      \n    \n\n    \n      {{fieldLabel(field)}}\n    \n    \n\n    \n       \n      \n      &times;\n    \n  \n\n  \n    &#9776;\n    \n      \n        \n          \n            {{fieldLabel(field)}}\n             \n          \n        \n      \n    \n  \n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{fieldLabel(field)}}                               ×            ☰                                        {{fieldLabel(field)}}                                           '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                hasFocus\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusItem\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/list-items/list-items.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        focusItem\n                    \n                    \n                        The current focused item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                            \n                            Type:    Item[]\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                    \n                        The list instance \n\n                            \n                            Type:    List\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                    \n                        If true, only one item is selectable next \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:21\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Event emitter on item clicked \n\n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFocus(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            yields true if the item is focussed \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClickable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisClickable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/list-items/list-items.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { ListComponent } from '../list.component';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** The current focused item */\n  @Input() focusItem: Item;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n\n  constructor(public cdr: ChangeDetectorRef) { }\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n    if (this.list) {\n      this.list.change$.subscribe(newList => {\n        this.cdr.markForCheck();\n      });\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe(newList => {\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  /** yields true if the item is focussed */\n  hasFocus(item) {\n    return this.focusItem === item;\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n  Modules\n  ListModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/list/list.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                GroupPipe\n                            \n                            \n                                ListComponent\n                            \n                            \n                                ListHeaderComponent\n                            \n                            \n                                ListItemsComponent\n                            \n                            \n                                PaginationComponent\n                            \n                            \n                                SearchbarComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ListConfigService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    GroupPipe\n                            \n                            \n                                    ListComponent\n                            \n                            \n                                    ListHeaderComponent\n                            \n                            \n                                    ListItemsComponent\n                            \n                            \n                                    PaginationComponent\n                            \n                            \n                                    SearchbarComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { ListConfigService } from './list-config.service';\n\n@NgModule({\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormModule,\n    IconModule,\n    SymbolModule,\n    UtilityModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: [\n    ListConfigService\n  ]\n})\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection>\n\n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timestamp:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        visible:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader?e=1\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n  Modules\n  LoaderModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/loader/loader.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LoaderComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     LoaderService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LoaderComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                    \n                        The desired map center \n\n                            \n                            Type:    literal type\n\n                            \n                        \n                            Default value: { latitude: 48.8093253, longitude: 9.159388100000001 }\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                        If true, no markers can be changed or set \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                    \n                        Form input component \n\n                            \n                            Type:    literal type\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:18\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        Emits when the marker has been changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:16\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() changed: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.changed.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n  Modules\n  LocationModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/location.module.ts\n        \n\n\n            \n                Description\n            \n            \n                This module holds all location/map related components and services \n\n            \n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                LocationMapComponent\n                            \n                            \n                                LocationPickerComponent\n                            \n                            \n                                LocationSearchComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                LOCATION_COMPONENTS\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     GeocodeService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    LocationMapComponent\n                            \n                            \n                                    LocationPickerComponent\n                            \n                            \n                                    LocationSearchComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n/** This module holds all location/map related components and services */\n@NgModule({\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n})\nexport class LocationModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-picker.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                    \n                        The form control that holds the location \n\n                            \n                            Type:    FormControl\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for search input \n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                    \n                        If true, the raw location value will be visible\n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:79\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:83\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value: , fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:55\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        geocodeService:     GeocodeService\n\n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     InputComponent\n\n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:34\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        map:     LocationMapComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:77\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        search:     LocationSearchComponent\n\n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     FormControl\n\n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:18\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        field:     Field\n\n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:12\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        group:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:16\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        item:     Item\n\n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:14\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n    selector: 'ec-location-picker',\n    templateUrl: './location-picker.component.html',\n    styleUrls: ['./location-picker.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => LocationPickerComponent),\n            multi: true\n        }\n    ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n    /** The form control that holds the location */\n    @Input() formControl: FormControl;\n    /** If true, the raw location value will be visible*/\n    @Input() showRawValue = true;\n    /** Placeholder for search input */\n    @Input() placeholder;\n    /** The nested LocationMapComponent */\n    @ViewChild(LocationMapComponent) map: LocationMapComponent;\n    /** The nested LocationSearchComponent */\n    @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n    /** Form input component */\n    input: InputComponent;\n\n    constructor(\n        public geocodeService: GeocodeService,\n    ) {\n        super();\n    }\n\n    /** Sets value of map and propagates change */\n    setValue(value, fromSearch?: boolean) {\n        if (!value) {\n            this.search.clear();\n        }\n        this.map.setValue(value);\n        if (!fromSearch) {\n            this.updateAddress();\n        }\n        this.propagateChange(value);\n    }\n\n    /** Writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.map.setValue(value);\n        this.updateAddress();\n    }\n\n    /** updates the address string by reverse geo lookup  */\n    updateAddress() {\n        const value = this.map.value;\n        if (!value) {\n            this.search.searchInput.nativeElement.value = '';\n            return;\n        }\n        this.geocodeService.getNearestAddress(value)\n            .then(results => {\n                if (results.length) {\n                    this.search.searchInput.nativeElement.value = results[0].formatted_address;\n                } else {\n                    this.search.searchInput.nativeElement.value = '';\n                }\n            });\n    }\n\n    propagateChange = (_: any) => { };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Placeholder for input \n\n                        \n                            Default value: 'Search Location...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/location-search.component.ts:15\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, Component, ElementRef, EventEmitter, Input, NgZone, Output, ViewChild } from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location...';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() changed: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.changed.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:26\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:28\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/login/login.component.ts:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent, NotificationsService, WithLoader } from '../../../../ui';\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\nimport { SymbolService } from '../../../../ui/src/symbol/symbol.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { AuthService } from '../auth.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth?e=1\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when an error occurs. For custom error reactions */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        this.error.next(error);\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: this.symbol.resolve('login.button.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value: this.symbol.resolve('login.email.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: this.symbol.resolve('login.email.placeholder')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value: this.symbol.resolve('login.password.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value: this.symbol.resolve('login.password.placeholder')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value: true\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/login-form/login-form.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport { FieldValidators } from '../validators/field-validators';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  protected submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = this.symbol.resolve('login.email.label');\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = this.symbol.resolve('login.email.placeholder');\n  /** The Label of the password field. */\n  @Input() passwordLabel = this.symbol.resolve('login.password.label');\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = this.symbol.resolve('login.password.placeholder');\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('login.button.label');\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(protected fb: FormBuilder, public symbol: SymbolService) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    Observable.throw(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                    \n                        data model \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        MediumEditor options \n\n                            \n                            Type:    any\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        empty placeholder \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:39\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                    \n                        change emitter \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:41\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     MediumEditor\n\n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor?e=1\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any;\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumModule.html":{"url":"modules/MediumModule.html","title":"module - MediumModule","body":"\n                   \n\n\n\n\n  Modules\n  MediumModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/medium.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                MediumEditorComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    MediumEditorComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\n@NgModule({\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n})\nexport class MediumModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                    \n                        Color map of submenus. \n\n                            \n                            Type:    string[]\n\n                            \n                        \n                            Default value: ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                    \n                        Delay before menu is shown on mouseover. \n\n                        \n                            Default value: 50\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                    \n                        Parent Menu (when nested) \n\n                            \n                            Type:    MenuComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        The currently active route \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                    \n                        The title of the menu \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                    \n                        Delay before menu is hidden after mouseout. \n\n                        \n                            Default value: 500\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:25\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item: , path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item: , parent: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(path: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hover:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        timeout:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n        .filter(route => route.path && route.path.indexOf(':') === -1)\n        .filter(route => !route.data || !route.data.hidden);\n      console.log('routes', this.routes);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay)\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n\n  isActive(path) {\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{item.data?.title || item.path}}\n      \n      \n        \n          {{child.data?.title || child.path}}\n        \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item.data?.title || item.path}}                              {{child.data?.title || child.path}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MockupComponent.html":{"url":"components/MockupComponent.html","title":"component - MockupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MockupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/mockup/mockup.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the style prototypes \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-mockup\n            \n\n\n\n\n            \n                templateUrl\n                ./mockup.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n/** This component holds the style prototypes */\n@Component({\n  selector: 'ec-mockup',\n  templateUrl: './mockup.component.html',\n})\nexport class MockupComponent {\n}\n\n    \n\n    \n        \n  \n    ec.list\n\n    ec.list\n    \n      \n        \n          \n            \n          \n          \n            Groupname\n          \n          \n            \n              \n              \n                \n                  delete\n                \n                \n                  dublicate\n                \n              \n            \n          \n        \n        \n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .selected\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .error\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .disabled\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .success\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .info\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .invalid\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n\n          .custom-item-class\n\n          \n            \n              \n                \n              \n              \n                \n              \n              \n                Samantha Fox\n              \n              \n                test@test.de\n              \n              \n                27.05.17\n              \n              \n                \n                  \n                    label 1\n                  \n                  \n                    label 1\n                  \n                \n              \n              \n                \n                  \n                  \n                    \n                      delete\n                    \n                    \n                      dublicate\n                    \n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.card\n    \n      \n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n\n        \n          \n            \n              \n            \n            \n              \n            \n            \n              Samantha Fox\n            \n            \n              test@test.de\n            \n            \n              27.05.17\n            \n            \n              \n                \n                  label 1\n                \n                \n                  label 1\n                \n              \n            \n            \n              \n                \n                \n                  \n                    delete\n                  \n                  \n                    dublicate\n                  \n                \n              \n            \n          \n        \n      \n    \n    ec.list.simple\n    \n      \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n        \n          \n            \n              Samantha Fox\n            \n          \n        \n      \n    \n  \n\n-->\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      ec.list    ec.list                                                                        Groupname                                                                                              delete                                                  dublicate                                                                                                                                                                                                                Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .selected                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .error                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .disabled                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .success                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .info                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .invalid                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                    .custom-item-class                                                                                                                                            Samantha Fox                                            test@test.de                                            27.05.17                                                                                  label 1                                                        label 1                                                                                                                                                            delete                                                              dublicate                                                                                                                ec.list.card                                                                                                                                  Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                                                                                                                                      Samantha Fox                                      test@test.de                                      27.05.17                                                                        label 1                                                  label 1                                                                                                                                          delete                                                        dublicate                                                                                            ec.list.simple                                                      Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                                                          Samantha Fox                                          -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'MockupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        A modal is an extension of a pop. It adds different style options that apply x.ui markup.\nhttps://components.entrecode.de/ui/modal?e=1\nhttps://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Private\n                                classes\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                templates\n                            \n                            \n                                types\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initMode\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animation\n                            \n                            \n                                backdrop\n                            \n                            \n                                body\n                            \n                            \n                                columns\n                            \n                            \n                                footer\n                            \n                            \n                                header\n                            \n                            \n                                mode\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                            Constructs the modal, injects pop service \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animation\n                    \n                    \n                        Sets data-animate. \n\n                        \n                            Default value: 'fadeIn 4'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                    \n                        If true, the modal will have a dark backdrop that disables clicking outside. \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                    \n                        Body Template \n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                    \n                        Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). \n\n                            \n                            Type:    number | string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:41\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        footer\n                    \n                    \n                        Footer Template \n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:37\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                    \n                        Header Template \n\n                            \n                            Type:    TemplateRef\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                    \n                        This property sets the mode + additional options.\nIt expects the type at first and non mandatory options like opens-left afterwards. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value: false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMode\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Is called on init and change. Parses mode input and throws warning if type is not supported. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            classes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        classes:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                        Will contain the classes (mode - type) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        popService:     PopService\n\n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        templates:     TemplateRef[]\n\n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:39\n                            \n                        \n\n                \n                    \n                        Templates for header body and footer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'dialog',\n        'overlay',\n        'deck',\n        'toast',\n        'snackbar'\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/modal/modal.component.ts:18\n                            \n                        \n\n                \n                    \n                        all possible modes that can be set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ElementRef, OnChanges, TemplateRef, ContentChildren, ChangeDetectorRef } from '@angular/core';\nimport { PopComponent } from '@ec.components/ui/src/pop/pop.component';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\n\n/**\n * A modal is an extension of a pop. It adds different style options that apply x.ui markup.\n * https://components.entrecode.de/ui/modal?e=1\n *\n * https://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n */\n@Component({\n    selector: 'ec-modal',\n    templateUrl: './modal.component.html'\n})\n\nexport class ModalComponent extends PopComponent implements OnInit, OnChanges {\n    /** all possible modes that can be set */\n    types = [\n        'dialog',\n        'overlay',\n        'deck',\n        'toast',\n        'snackbar'\n    ];\n    /** This property sets the mode + additional options.\n     * It expects the type at first and non mandatory options like opens-left afterwards. */\n    @Input() mode: string;\n    /** If true, the modal will have a dark backdrop that disables clicking outside. */\n    @Input() backdrop = false;\n    /** Sets data-animate. */\n    @Input() animation = 'fadeIn 4';\n    /** Header Template */\n    @Input() header: TemplateRef;\n    /** Body Template */\n    @Input() body: TemplateRef;\n    /** Footer Template */\n    @Input() footer: TemplateRef;\n    /** Templates for header body and footer */\n    @ContentChildren(TemplateRef) templates: TemplateRef[];\n    /** Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). */\n    @Input() columns: number | string;\n    /** Will contain the classes (mode - type) */\n    private classes: string;\n    /** Constructs the modal, injects pop service */\n    constructor(\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef) {\n        super(popService, elementRef, cdr);\n    }\n    /** Is called on init and change. Parses mode input and throws warning if type is not supported. */\n    initMode() {\n        this.mode = this.mode || 'dialog';\n        this.type = this.mode.split(' ')[0];\n        if (!this.types.includes(this.type)) {\n            const fallback = this.mode.replace(this.type, 'dialog');\n            console.warn(`ec-modal does not support the mode \"${this.type}\".\n            Use one of ${this.types.join(', ')}.\n            Falling back to ${fallback}.`);\n            this.type = fallback;\n        }\n        this.classes = this.mode.split(' ').splice(1).join(' ');\n        this.types.forEach(type => {\n            this.elementRef.nativeElement.classList.remove(`${type}-wrapper`);\n        })\n        if (this.backdrop) {\n            this.elementRef.nativeElement.classList.add(`${this.type}-wrapper`);\n        }\n    }\n\n    /** calls initMode */\n    ngOnInit() {\n        this.initMode();\n    }\n    /** calls initMode */\n    ngOnChanges() {\n        this.initMode();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                generateConfig\n                            \n                            \n                                get\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getLightModel\n                            \n                            \n                                getSystemFields\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(crud: CrudService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/model-config.service.ts:26\n                            \n                        \n\n                \n                    \n                            Injects CrudService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        crud\n                                                  \n                                                        \n                                                                    CrudService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngenerateConfig(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:174\n                            \n                        \n\n\n                \n                    \n                            Generates a CrudConfig for the given model.\nMerges three configurations into one:\n\ndefault field config, obtained by getFieldConfig\nglobal model config (if any) configured via with set\ncustomFieldConfig: any custom field config that is merged on top of the other two.\nThis enables the developer to either customize at a global scale to target all lists/forms,\nor just specific components. \n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldConfig(model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:105\n                            \n                        \n\n\n                \n                    \n                            Returns the default field config for the given model.\nUtilizes PublicAPI#getFieldConfig + TypeConfigService#get.\nThis config is meant to deliver the default behaviour when nothing else is configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLightModel(model: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:203\n                            \n                        \n\n\n                \n                    \n                            Returns light model information \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSystemFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSystemFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the field config for all system fields \n\n\n                            \n                                Returns :     { id: { label: any; view: string; form: boolean; immutable: boolean; hideInList: boolean; }; _cre...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:57\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                            ModelConfig.set(&#39;muffin&#39;, {\nfields: {\ntitle: {\nlabel: &#39;Muffin Titel&#39;\n}\n});\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        omittedFields:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/model-config.service.ts:20\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config } from '@ec.components/core/src/config/config';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { Item } from '@ec.components/core/src/item/item';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { CrudService } from '../crud/crud.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\nimport { SdkField } from './sdk-field';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n  /** Injects CrudService and SdkService. */\n  constructor(private crud: CrudService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Returns the field config for all system fields */\n  getSystemFields() {\n    return {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hideInList: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hideInList: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hideInList: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hideInList: true\n      }\n    };\n  }\n\n  /** Returns the default field config for the given model.\n   * Utilizes PublicAPI#getFieldConfig + TypeConfigService#get.\n   * This config is meant to deliver the default behaviour when nothing else is configured. */\n  getFieldConfig(model: string): Promise> {\n    return this.sdk.api.getFieldConfig(model).then((fieldConfig: SdkField) => {\n      const fields = {};\n      Object.assign(fields, this.getSystemFields());\n      Object.keys(fieldConfig).map(property => fieldConfig[property])\n        .forEach(({\n          config,\n          type,\n          formView,\n          title,\n          unique,\n          mutable,\n          readOnly,\n          required,\n          validation,\n          description,\n          localizable,\n          legacyAssets,\n        }) => {\n          config = config || {};\n          if (type.includes('asset') && !legacyAssets) {\n            type = type.replace('a', 'dmA');\n          }\n          // parse field config\n          const { hideInList,\n            hideInForm,\n            hideOnCreate,\n            hideOnEdit,\n            placeholder,\n            label,\n            classes,\n            columns = 12\n          } = config;\n          // assign default values + merge customFieldConfig if given\n          fields[title] = Object.assign({\n            property: title,\n            label: label || title + (type === 'datetime' ? ` ${this.symbol.resolve('datetime.local')}` : ''),\n            placeholder,\n            description,\n            formView: formView || type,\n            validation,\n            relation: validation,\n            immutable: !mutable,\n            readOnly,\n            hideInList,\n            hideInForm,\n            create: !hideOnCreate,\n            edit: !hideOnEdit,\n            classes,\n            unique,\n            required,\n            columns,\n            /* display: ((value) => value), */\n            localizable,\n          }, this.typeConfig.get(type), {\n              placeholder: placeholder || this.typeConfig.get(type).placeholder\n            });\n        });\n      return fields;\n    });\n  }\n\n  /** Generates a CrudConfig for the given model.\n   * Merges three configurations into one:\n   * - default field config, obtained by getFieldConfig\n   * - global model config (if any) configured via with set\n   * - customFieldConfig: any custom field config that is merged on top of the other two.\n   * This enables the developer to either customize at a global scale to target all lists/forms,\n   * or just specific components. */\n  generateConfig(model: string, customFieldConfig?: FieldConfig): Promise> {\n    // first step: merge global model config with default entry config\n    const modelConfig = Object.assign(this.get(model) || {}, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      onSave: (item: Item, value) => this.crud.save(model, item.getBody(), value)\n    });\n    return this.getFieldConfig(model)\n      .then((fieldConfig: FieldConfig) => {\n        const modelConfigFields = modelConfig.fields || {};\n        const relevantKeys = Object.keys(customFieldConfig || modelConfigFields);\n        const mergedFields = {};\n        if (!relevantKeys.length) {\n          modelConfig.fields = fieldConfig;\n        } else {\n          relevantKeys.forEach(key => {\n            mergedFields[key] = Object.assign(\n              {},\n              fieldConfig[key] || {},\n              modelConfigFields[key] || {},\n              (customFieldConfig || {})[key]);\n          });\n          modelConfig.fields = mergedFields;\n        }\n        return modelConfig;\n      });\n  }\n  /** Returns light model information */\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig, FieldConfigProperty } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        append:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        error:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hide:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        host:     NotificationsComponent\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        message:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        replace:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sticky:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        time:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        title:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        type:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                            \n                            Type:    number\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core/src/collection/collection';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications?e=1\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time)\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n  Modules\n  NotificationsModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ErrorComponent\n                            \n                            \n                                NotificationsComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     NotificationsService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                            \n                                    PopModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ErrorComponent\n                            \n                            \n                                    NotificationsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n{\nprovide: \"useDesktopNotifications\",\nuseValue: true\n}in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications: )\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultTime:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emitter$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime)\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                    \n                        The instance of field that should be used in the template \n\n                            \n                            Type:    Field\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                    \n                        The belonging item \n\n                            \n                            Type:    Item\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:17\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/io/output/output.component.ts:21\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, data: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        data\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        componentFactoryResolver:     ComponentFactoryResolver\n\n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fieldHost:     SlotHostDirective\n\n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field } from '@ec.components/core/src/field/field';\nimport { Item } from '@ec.components/core/src/item/item';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change:     \n\n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:14\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        change$:     Observable\n\n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:16\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ListConfig\n\n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:10\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pages:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:12\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        total:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:8\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:94\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:34\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:39\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:108\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:113\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:118\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:99\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:77\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:44\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:131\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:53\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number, silent: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:85\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        silent\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:64\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:126\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/pagination/pagination.ts:143\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    }\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        The config that is used \n\n                            \n                            Type:    PaginationConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                    \n                        A Pagination Instance \n\n                            \n                            Type:    Pagination\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:15\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        page:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pageContainer:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ 'pagination.of' | symbol}} {{pagination?.params()?.total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ \\'pagination.of\\' | symbol}} {{pagination?.params()?.total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hideFirstLast:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        hidePages:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        range:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '../../symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request.\nhttps://components.entrecode.de/auth/password-reset?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/auth/password-reset/password-reset.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        Custom placeholder for email field \n\n                        \n                            Default value: 'E-Mail Adresse...'\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event after request was successful \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        email:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:19\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:27\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockForm:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:17\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '../../../../ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request.\n * https://components.entrecode.de/auth/password-reset?e=1\n *\n*/\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    {{'passwordReset.button' | symbol}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'passwordReset.button\\' | symbol}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:37\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  HostBinding,\n  OnInit,\n  HostListener,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop?e=1\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() @HostBinding('class.is-active') active: boolean;\n  /** Flip and stays true after first show */\n  activated = false\n  /** The used type on the host element */\n  @Input() type: string;\n  /** If set to true, the pop will hide when a click happens outside the pop. */\n  @Input() hideOnClickOutside = false;\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n\n  clickEvent;\n\n  /** Listens for document:click and hides */\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (\n      this.hideOnClickOutside &&\n      this.active &&\n      this.clickEvent &&\n      $event !== this.clickEvent && // to ensure the show event wont hide immediately\n      this.elementRef &&\n      this.isOutside($event.target)) {\n      this.hide();\n    }\n  }\n\n  constructor(protected popService: PopService,\n    public elementRef: ElementRef,\n    protected cdr: ChangeDetectorRef\n  ) {\n  }\n\n  /** yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) */\n  isOutside(element) {\n    return !this.elementRef.nativeElement.contains(element)/*  ||\n      element === this.elementRef.nativeElement */;\n  }\n\n  /** Shows if not active, hides if active. */ // active: boolean = !this.active, emit: boolean = false\n  public toggle(e?) {\n    if (this.active) {\n      this.hide();\n    } else {\n      this.show(e);\n    }\n    this._toggle.emit(this.active);\n  }\n\n  /** Shows the pop. Sets active true and adds pop to popService.stack */\n  public show(e?) {\n    this.active = true;\n    this.activated = true;\n    this.popService.stack.add(this);\n    if (e) {\n      this.clickEvent = e;\n    } else if (this.hideOnClickOutside) {\n      // console.warn('To use hideOnClickOutside, you need to pass the click event to the show method of ec-pop!');\n    }\n    this.cdr.markForCheck();\n  }\n\n  /** Hides the pop. Sets active false and removes pop from popService.stack */\n  public hide() {\n    this.popService.stack.remove(this);\n    this.active = false;\n    this.cdr.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n  Modules\n  PopModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_imports\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/pop/pop.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ModalComponent\n                            \n                            \n                                PopComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     PopService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IconModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ModalComponent\n                            \n                            \n                                    PopComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    PopComponent,\n    ModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    IconModule\n  ],\n  exports: [\n    PopComponent,\n    ModalComponent,\n  ],\n  providers: [PopService]\n})\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumns\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        defaultColumns:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 6\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        default value for columns of any pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        stack:     Collection\n\n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** default value for columns of any pop */\n    defaultColumns = 6;\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceConfig.html":{"url":"injectables/ResourceConfig.html","title":"injectable - ResourceConfig","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                base64uuid\n                            \n                            \n                                created\n                            \n                            \n                                get\n                            \n                            \n                                hexColor\n                            \n                            \n                                shortID\n                            \n                            \n                                stringField\n                            \n                            \n                                tagsField\n                            \n                            \n                                uuid\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, typeConfig: TypeConfigService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource-config.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            base64uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nbase64uuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:70\n                            \n                        \n\n\n                \n                    \n                            regex for base64 uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            created\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreated(label: string, symbol: SymbolService)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:24\n                            \n                        \n\n\n                \n                    \n                            returns the config for a created field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                'Date'\n                                                        \n\n                                                \n                                                \n                                                        symbol\n                                                        \n                                                                    SymbolService\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: string; sortable: boolean; view: string; display: any; group: any; form: boolean; immuta...\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(relationName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:14\n                            \n                        \n\n\n                \n                    \n                            Returns the CrudConfig for the given relation name. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relationName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hexColor\n                            \n                            \n                        \n                    \n                \n                \n                    \nhexColor()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:36\n                            \n                        \n\n\n                \n                    \n                            returns the config for a hexColor field \n\n\n                            \n                                Returns :     { label: string; view: string; prefill: string; }\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            shortID\n                            \n                            \n                        \n                    \n                \n                \n                    \nshortID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            returns regex for a shortID \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stringField\n                            \n                            \n                        \n                    \n                \n                \n                    \nstringField(label: , filterable: , sortable: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            returns the config for a string field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        filterable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        sortable\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; filterable: boolean; sortable: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tagsField\n                            \n                            \n                        \n                    \n                \n                \n                    \ntagsField(label: , list: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:44\n                            \n                        \n\n\n                \n                    \n                            returns the config for a tags field \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        label\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        list\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     { label: any; view: string; display: (value: any) => any; list: boolean; }\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uuid\n                            \n                            \n                        \n                    \n                \n                \n                    \nuuid()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            returns regex for a uuid \n\n\n                            \n                                Returns :     RegExp\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n\n                \n                    \n                        getconfig()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/resource-config/resource-config.service.ts:75\n                                \n                            \n                    \n                        \n                                Returns the whole resource-config, which maps a resource relation name to a CrudConfig. \n\n\n                                \n                                    Returns :     literal type\n\n                                \n                        \n                    \n\n            \n        \n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { TypeConfigService } from '../model-config/type-config.service';\n\n@Injectable()\n/** Contains default configurations for all kinds of resources. Used by ResourceList and ResourceForm.  */\nexport class ResourceConfig {\n\n  constructor(private symbol: SymbolService, private typeConfig: TypeConfigService) { }\n  /** Returns the CrudConfig for the given relation name. */\n  get(relationName: string): CrudConfig {\n    if (!this.config[relationName]) {\n      console.error(`${relationName} could not be found in the resource-config.\n      Use one of ${Object.keys(this.config[relationName])}`);\n      return;\n    } // TODO enrich fields with type with type-config?\n    return this.config[relationName];\n  }\n\n  /** returns the config for a created field */\n  created(label = 'Date', symbol: SymbolService) {\n    return {\n      label,\n      sortable: true,\n      view: 'date',\n      display: this.typeConfig.displayDate(),\n      group: this.typeConfig.groupDate(),\n      form: false,\n      immutable: true\n    }\n  };\n  /** returns the config for a hexColor field */\n  hexColor() {\n    return {\n      label: '#',\n      view: 'color',\n      prefill: '#ffffff'\n    }\n  };\n  /** returns the config for a tags field */\n  tagsField(label, list = true) {\n    return {\n      label,\n      view: 'tags',\n      display: (value) => value || [],\n      list\n    };\n  }\n  /** returns the config for a string field */\n  stringField(label, filterable = true, sortable = true) {\n    return {\n      label,\n      view: 'string',\n      filterable,\n      sortable\n    };\n  }\n  /** returns regex for a shortID */\n  shortID(): RegExp {\n    return /^[0-9A-Za-z-_]{7,14}$/;\n  }\n  /** returns regex for a uuid */\n  uuid(): RegExp {\n    return /^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i;\n  }\n  /** regex for base64 uuid */\n  base64uuid(): RegExp {\n    return /^[a-zA-Z0-9\\\\-_]{22}$/;\n  }\n\n  /** Returns the whole resource-config, which maps a resource relation name to a CrudConfig. */\n  get config(): { [key: string]: CrudConfig } {\n    return {\n      dataManager: {\n        identifier: 'dataManagerID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        permissions: {\n          post: 'dm-create',\n          put: 'dm::edit',\n          delete: 'dm::delete',\n          get: true\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            immutable: true,\n            list: false\n          },\n          title: Object.assign(this.stringField('Name'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false,\n            immutable: true\n          },\n          defaultLocale: {\n            list: false,\n            immutable: true\n          },\n          locales: this.tagsField(this.symbol.resolve('field.label.locales'), false),\n          publicAssetRights: Object.assign(\n            this.tagsField(this.symbol.resolve('datamanager.field.label.publicAssetRights'), false),\n            { immutable: true }),\n          rights: Object.assign(this.tagsField('rights', false), { immutable: true }),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      model: {\n        identifier: 'modelID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          hexColor: this.hexColor(),\n          title: Object.assign(this.stringField('Model'), { required: true }),\n          description: {\n            label: this.symbol.resolve('field.label.description'),\n            view: 'string',\n            filterable: true,\n          },\n          locales: {\n            list: false,\n            prefill: []\n          },\n          fields: {\n            view: 'tags',\n            display: (value) => {\n              return (value || []).map(field => field.title).filter(field => field[0] !== '_')\n            },\n            prefill: []\n          },\n          titleField: {\n            view: 'string',\n            list: false\n          },\n          config: {\n            list: false,\n            view: 'json'\n          },\n          hasEntries: {\n            immutable: true,\n            view: 'boolean'\n          },\n          hooks: {\n            display: (value) => {\n              return (value || []).map(hook => (hook.methods || []).join(', '))\n            },\n            view: 'tags'\n          },\n          policies: {\n            display: (value) => {\n              return (value || []).map(policy => policy.method)\n            },\n            view: 'tags'\n          },\n          sync: {\n            list: false,\n            view: 'json',\n            immutable: true\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // ec accounts\n      account: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'email',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        fields: {\n          name: this.stringField(this.symbol.resolve('field.label.name')),\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('field.label.password'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          hasPendingEmail: {\n            label: this.symbol.resolve('account.field.label.hasPendingEmail'),\n            view: 'boolean',\n            filterable: true,\n            sortable: true,\n            readOnly: true\n          },\n          language: {\n            label: this.symbol.resolve('account.field.label.language'),\n            view: 'string',\n            list: false\n          },\n          openID: {\n            list: false\n          },\n          permissions: this.tagsField(this.symbol.resolve('account.field.label.permissions'), false),\n          groups: {\n            label: this.symbol.resolve('account.field.label.groups'),\n            type: 'groups',\n            input: AdminEntryInputComponent,\n            list: false,\n            display: (value) => value ? value.map(group => group.name) : []\n          },\n          state: {\n            label: this.symbol.resolve('account.field.label.state')\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAccount: {\n        identifier: 'accountID',\n        identifierPattern: this.uuid(),\n        label: 'email',\n        permissions: {\n          get: 'acc:list',\n          put: 'acc:edit:'\n        },\n        methods: ['get', 'put', 'delete'],\n        fields: {\n          accountID: {\n            label: this.symbol.resolve('field.label.id'),\n            view: 'string'\n          },\n          title: {\n            label: 'Title',\n            filterable: true,\n          },\n          email: {\n            label: this.symbol.resolve('field.label.email'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          hasPassword: {\n            label: this.symbol.resolve('dmAccount.field.label.hasPassword'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          pending: {\n            label: this.symbol.resolve('dmAccount.field.label.pending'),\n            view: 'boolean',\n            filterable: true,\n            readOnly: true\n          },\n          oauth: {\n            list: false\n          }\n        }\n      },\n      template: {\n        identifier: 'templateID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        permissions: {\n          post: 'dm-template-create',\n          get: 'dm-template::view'\n        },\n        fields: {\n          name: {\n            label: this.symbol.resolve('template.field.label.template'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          version: {\n            label: this.symbol.resolve('template.field.label.version'),\n            display: this.typeConfig.displayDate(),\n            group: this.typeConfig.groupDate(),\n            form: false\n          }\n        }\n      },\n      app: {\n        identifier: 'appID',\n        identifierPattern: this.uuid(),\n        permissions: {\n          post: 'app-create',\n          delete: 'app::delete',\n          put: 'app::edit'\n        },\n        fields: {\n          hexColor: this.hexColor(),\n          shortID: {\n            label: this.symbol.resolve('field.label.shortID'),\n            list: false\n          },\n          title: {\n            label: this.symbol.resolve('app.field.label.app'),\n            view: 'string',\n            filterable: true,\n            sortable: true,\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      platform: {\n        identifier: 'platformID',\n        identifierPattern: this.uuid(),\n        fields: {\n          title: {\n            label: this.symbol.resolve('platform.field.label.platform'),\n            view: 'string'\n          },\n          platformType: {\n            label: this.symbol.resolve('platform.field.label.platformType'),\n            view: 'string'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            view: 'json',\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      asset: { // old ec.asset\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          type: {\n            filterOperator: 'exact',\n            form: false,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      legacyAsset: { // old public assets\n        identifier: 'assetID',\n        identifierPattern: this.uuid(),\n        label: 'title',\n        fields: {\n          thumb: {\n            form: false,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image') {\n                return '';\n              }\n              return asset.getImageUrl(200);\n            },\n            immutable: true\n          },\n          assetID: {\n            label: 'assetID',\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          files: {\n            label: this.symbol.resolve('asset.field.label.files'),\n            view: 'tag',\n            form: false,\n            display: value => value.length,\n            immutable: true\n          },\n          type: {\n            filterOperator: 'exact',\n            form: false,\n            immutable: true\n          },\n          tags: this.tagsField(this.symbol.resolve('asset.field.label.tags')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      // https://doc.entrecode.de/en/develop/resources/dm-assetgroup/\n      assetGroup: {\n        identifier: 'assetGroupID',\n        label: 'assetGroupID',\n        fields: {\n          assetGroupID: {\n            label: this.symbol.resolve('asset.field.label.assetGroupID'),\n            view: 'string',\n            filterable: true\n          },\n          public: {\n            view: 'boolean',\n            prefill: false\n          },\n          settings: {\n            view: 'json',\n            display: (json) => JSON.stringify(json),\n            prefill: {}\n            /*\n            urlExpiration: string\n            disabledTypes: Array\n            imageSizes: Array\n            thumbSizes: Array\n            */\n          },\n          policies: {\n            view: 'tags',\n            display: (policies) => (policies || []).map(p => p.method),\n            prefill: []\n            /*\n            method: get, put, post, delete\n            user: public, dmUser\n            conditions: JSON or null (https://entrecode.de/schema/dm-assetgroup#definitions/conditions)\n            */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmAsset: { // new assets\n        identifier: 'assetID',\n        identifierPattern: this.base64uuid(),\n        label: 'title',\n        fields: {\n          file: {\n            label: this.symbol.resolve('dmAsset.field.label.file'),\n            display: value => value.url,\n            view: 'preview',\n            immutable: true,\n            form: false,\n            list: false\n          },\n          thumb: {\n            form: false,\n            list: true,\n            label: this.symbol.resolve('asset.field.label.thumb'),\n            view: 'preview',\n            resolve: (asset) => {\n              if (asset.type !== 'image' || !asset.thumbnails || !asset.thumbnails.length) {\n                return '';\n              }\n              return asset.thumbnails[0].url;\n            },\n            immutable: true\n          },\n          assetID: {\n            label: this.symbol.resolve('dmAsset.field.label.assetID'),\n            list: false,\n            form: false,\n            immutable: true\n          },\n          title: {\n            label: this.symbol.resolve('field.label.title'),\n            view: 'string',\n            sortable: true,\n            filterable: true\n          },\n          caption: {\n            label: this.symbol.resolve('dmAsset.field.label.caption'),\n            view: 'string'\n          },\n          duplicates: {\n            label: this.symbol.resolve('dmAsset.field.label.duplicates'),\n            view: 'number',\n            list: false,\n            form: false\n          },\n          thumbnails: {\n            label: this.symbol.resolve('dmAsset.field.label.thumbnails'),\n            display: values => values.map(value => value.url),\n            list: false,\n            form: false\n          },\n          type: {\n            label: this.symbol.resolve('dmAsset.field.label.type'),\n            view: 'string',\n            immutable: true,\n            form: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dmClient: {\n        identifier: 'clientID',\n        fields: {\n          clientID: {\n            label: this.symbol.resolve('client.field.label.clientID'),\n            view: 'string'\n          },\n          callbackURL: {\n            label: this.symbol.resolve('client.field.label.callbackURL'),\n            view: 'string',\n          },\n          tokenMethod: this.tagsField(this.symbol.resolve('client.field.label.tokenMethod')),\n          disableStrategies: this.tagsField(this.symbol.resolve('client.field.label.disableStrategies')),\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      role: {\n        identifier: 'roleID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n            view: 'string',\n            filterable: true,\n            sortable: true\n          },\n          label: {\n            label: this.symbol.resolve('field.label.label'),\n            view: 'string'\n          },\n          accounts: {\n            label: this.symbol.resolve('role.field.label.accounts'),\n            type: 'accounts',\n            prefill: [],\n            list: false,\n            display: (value) => value ? value.title : '',\n            input: AdminEntryInputComponent,\n            filterPopClass: 'dialog'\n          },\n          addRegistered: {\n            label: this.symbol.resolve('role.field.label.addRegistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          addUnregistered: {\n            label: this.symbol.resolve('role.field.label.addUnregistered'),\n            view: 'boolean'/* ,\n        prefill: false */\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      codeSource: {\n        identifier: 'codeSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          codeSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          codeSourceType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      dataSource: {\n        identifier: 'dataSourceID',\n        identifierPattern: this.uuid(),\n        fields: {\n          dataSourceID: {\n            label: this.symbol.resolve('field.label.id'),\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      target: {\n        identifier: 'targetID',\n        identifierPattern: this.uuid(),\n        fields: {\n          targetType: {\n            label: this.symbol.resolve('field.label.type'),\n            view: 'tag'\n          },\n          config: {\n            label: this.symbol.resolve('field.label.config'),\n            list: false\n          },\n          created: this.created(this.symbol.resolve('field.label.created'), this.symbol),\n        }\n      },\n      group: {\n        identifier: 'groupID',\n        identifierPattern: this.uuid(),\n        label: 'name',\n        fields: {\n          name: {\n            label: this.symbol.resolve('field.label.name'),\n            view: 'string'\n          },\n          permissions: {\n            view: 'tags',\n            display: (value) => value || [],\n            list: false\n          },\n          /* created: this.created(this.symbol.resolve('field.label.created'), this.symbol), */\n        }\n      },\n      invite: {\n        identifier: 'invite',\n        identifierPattern: this.uuid(),\n        label: 'invite',\n        fields: {\n          invite: {\n            view: 'string'\n          },\n          permissions: {\n            view: 'tags'\n          },\n          groups: {\n            view: 'tags',\n            display: (group => group ? group.map(g => g.name) : [])\n          }\n        }\n      }\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-crud/resource-crud.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                            \n                            Type:    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:31\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                            \n                            Type:    CrudConfig\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:33\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                        The selection that should be used \n\n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:37\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        Emits when a list element is clicked \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:45\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                    \n                        Output that is nexted when pressing the create button \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        Emits when the selection has changed \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:47\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:63\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:59\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        list:     ResourceListComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     LoaderComponent\n\n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     ResourcePopComponent\n\n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        route:     ActivatedRoute\n\n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:56\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        router:     Router\n\n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : Optional\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-crud/resource-crud.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core/src/selection/selection';\nimport { LoaderComponent } from '@ec.components/ui/src/loader/loader.component';\nimport { LoaderService } from '@ec.components/ui/src/loader/loader.service';\nimport { NotificationsService } from '@ec.components/ui/src/notifications/notifications.service';\nimport 'rxjs/add/operator/switchMap';\nimport { merge } from 'rxjs/observable/merge';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create()\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ResourceForm.html":{"url":"classes/ResourceForm.html","title":"class - ResourceForm","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  ResourceForm\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-form/resource-form.ts\n        \n\n            \n                Description\n            \n            \n                Form for any kind of SDK Resource. \n\n            \n\n            \n                Extends\n            \n            \n                    Form\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                api\n                            \n                            \n                                    Public\n                                relation\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                config\n                            \n                            \n                                    Public\n                                fields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                save\n                            \n                            \n                                createField\n                            \n                            \n                                getField\n                            \n                            \n                                getValue\n                            \n                            \n                                isCreating\n                            \n                            \n                                isEditing\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(body: Resource, config: FormConfig, api: Core, relation: string, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-form/resource-form.ts:8\n                            \n                        \n\n                \n                    \n                            Constructs the form. Can be given an api (Core) and a fitting relation name. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        body\n                                                  \n                                                        \n                                                                    Resource\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FormConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        api\n                                                  \n                                                        \n                                                                    Core\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        relation\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        api:     Core\n\n                    \n                \n                    \n                        \n                            Type :     Core\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            relation\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        relation:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceService:     ResourceService\n\n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     FormConfig\n\n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:13\n                            \n                        \n\n                \n                    \n                        The configuration of the form. It is an extension of ItemConfig. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fields\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fields:     Field[]\n\n                    \n                \n                    \n                        \n                            Type :     Field[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:11\n                            \n                        \n\n                \n                    \n                        Array of fields. It will be populated automatically when the form is constructed. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-form/resource-form.ts:17\n                            \n                        \n\n\n                \n                    \n                            Saves the given value. Run serializers before assigning the new value. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            createField\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreateField(property: string, config: FieldConfigProperty)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:31\n                            \n                        \n\n\n                \n                    \n                            creates and adds a single field to the form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Field | undefined\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getField\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetField(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:49\n                            \n                        \n\n\n                \n                    \n                            returns the field instance of the given property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValue\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValue(property: string)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:54\n                            \n                        \n\n\n                \n                    \n                            Returns the original value of the property, if any. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCreating\n                            \n                            \n                        \n                    \n                \n                \n                    \nisCreating()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:75\n                            \n                        \n\n\n                \n                    \n                            Returns true if the form is currently in create mode (has not a body set) \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEditing\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEditing()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     Form\n\n                                \n                            \n                        \n                            \n                                    Defined in Form:70\n                            \n                        \n\n\n                \n                    \n                            Returns true if the form is currently in edit mode (has a body set) \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import Resource from 'ec.sdk/lib/resources/Resource';\nimport { Form, FormConfig } from '@ec.components/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceService } from '../resource-config/resource.service';\n\n/** Form for any kind of SDK Resource. */\nexport class ResourceForm extends Form {\n    /** Constructs the form. Can be given an api (Core) and a fitting relation name. */\n    constructor(body: Resource, config: FormConfig = {},\n        public api: Core,\n        public relation: string,\n        public resourceService: ResourceService) {\n        super(body, config);\n    }\n    /** Saves the given value. Run serializers before assigning the new value. */\n    save(value: Object): Promise> {\n        return this.resourceService.save(this, value, this.relation, this.api)\n            .then(resource => new Item(resource, this.config));\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceListPopComponent.html":{"url":"components/ResourceListPopComponent.html","title":"component - ResourceListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/resource-list-pop/resource-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-list-pop.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                resourceConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                pasted\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                            \n                            Type:    Core\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type:    ListConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                    \n                            \n                            Type:    Selection\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:29\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                        \n                            Default value: false\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:35\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                    \n                        The used type on the host element \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:33\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                    \n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pasted\n                    \n                    \n                        $event type:    EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:37\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        class:     \n\n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:25\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:42\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:47\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:90\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:77\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cdr:     ChangeDetectorRef\n\n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lightModel:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        resourceConfig:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        searchbar:     SearchbarComponent\n\n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-list-pop/resource-list-pop.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        activated:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:31\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        clickEvent:     \n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        elementRef:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, Output, ViewChild, HostBinding, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent } from '@ec.components/ui';\nimport { PopService } from '@ec.components/ui/src/pop/pop.service';\nimport { SearchbarComponent } from '@ec.components/ui/src/list/searchbar/searchbar.component';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport Core from 'ec.sdk/lib/Core';\n\n@Component({\n    selector: 'ec-resource-list-pop',\n    templateUrl: './resource-list-pop.component.html',\n\n})\n\nexport class ResourceListPopComponent extends PopComponent implements OnChanges {\n    @Input() relation: string;\n    @Input() api: Core;\n    @Input() config: ListConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @Output() pasted: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'dialog-wrapper';\n    lightModel: any;\n\n    constructor(\n        public resourceConfig: ResourceConfig,\n        protected popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef\n    ) {\n        super(popService, elementRef, cdr);\n    }\n\n    ngOnChanges() {\n        if (this.relation) {\n            this.config = Object.assign({}, this.config || {}, this.resourceConfig.get(this.relation));\n        }\n        if (this.config) {\n            this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n        }\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n        this.searchbar.focusEvent.emit(true);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n        \n        \n    \n    \n        \n        \n    \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n  Modules\n  ResourceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/resource/resource.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ResourceActionbarComponent\n                            \n                            \n                                ResourceCrudComponent\n                            \n                            \n                                ResourceDeletePopComponent\n                            \n                            \n                                ResourceFormComponent\n                            \n                            \n                                ResourceListComponent\n                            \n                            \n                                ResourceListPopComponent\n                            \n                            \n                                ResourcePopComponent\n                            \n                            \n                                ResourceSelectComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                ResourceListComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     ResourceConfig\n                            \n                            \n                                     ResourceService\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ResourceActionbarComponent\n                            \n                            \n                                    ResourceCrudComponent\n                            \n                            \n                                    ResourceDeletePopComponent\n                            \n                            \n                                    ResourceFormComponent\n                            \n                            \n                                    ResourceListComponent\n                            \n                            \n                                    ResourceListPopComponent\n                            \n                            \n                                    ResourcePopComponent\n                            \n                            \n                                    ResourceSelectComponent\n                            \n                            \n                                    SdkModule\n                            \n                            \n                                    UiModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceListPopComponent } from '../resource-list-pop/resource-list-pop.component';\nimport { ResourceActionbarComponent } from '../resource-actionbar/resource-actionbar.component';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/resource-config/resource.service.ts:36\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:54\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull: , deleteNullProperties: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:102\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:120\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:131\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:96\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:63\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation: , resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:81\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changes:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:36\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        config:     ResourceConfig\n\n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/resource-config/resource.service.ts:39\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/filter';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[],\n    /** The relevant resource. */\n    resource?: Resource,\n    /** The list where it happened. */\n    list?: ResourceList,\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete',\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string,\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value))\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SdkField.html":{"url":"interfaces/SdkField.html","title":"interface - SdkField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SdkField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/sdk-field.ts\n        \n\n            \n                Description\n            \n            \n                Field Config as obtained by PublicAPI#getFieldConfig.\nSee https://doc.entrecode.de/data_manager/#field-data-types for more info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        localizable\n                                \n                                \n                                        mutable\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                                \n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    further field config options (like columns etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default value that is returned for a newly created required field on old entries \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Description. Used for placeholders \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizable\n                                    \n                                \n                                \n                                    \n                                        localizable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not implemented yet. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutable\n                                    \n                                \n                                \n                                    \n                                        mutable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tells if the field value can be changed. If true, the field is a system field  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field can only be altered when creating. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field must have a value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    System Title \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Type \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique: each entry has a unique value for that field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Validation info, depends on field type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SdkField {\n    /** further field config options (like columns etc.) */\n    config: Object;\n    /** Field Type */\n    type: string;\n    /** System Title */\n    title: string;\n    /** Unique: each entry has a unique value for that field */\n    unique: boolean;\n    /** Default value that is returned for a newly created required field on old entries */\n    default: string;\n    /** Tells if the field value can be changed. If true, the field is a system field  */\n    mutable: boolean;\n    /** If true, the field can only be altered when creating. */\n    readOnly: boolean;\n    /** If true, the field must have a value */\n    required: boolean;\n    /** Validation info, depends on field type. */\n    validation: string;\n    /** Field Description. Used for placeholders */\n    description: string;\n    /** Not implemented yet. */\n    localizable: boolean;\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n  Modules\n  SdkModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SdkService\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n{\nprovide: 'environment',\nuseValue: {\ndatamanagerID: '83cc6374',\nenvironment: 'stage',\nclientID: 'rest',\n// init: false\n// the init option will prevent automatically initing the sdk.\n// you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n}\n}The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment: )\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/sdk/sdk.service.ts:78\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. Omits init if environment has set init: false \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:144\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:111\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api.\nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        _api:     PublicAPI\n\n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:51\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        accounts:     Accounts\n\n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:49\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        apiResolved:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:34\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        changesEnvironment:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:53\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        datamanager:     DataManager\n\n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:67\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     \n\n                    \n                \n                    \n                        \n                            Decorators : Inject\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:78\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\nthis.sdk.ready.then(account => {});\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        roots:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:36\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        schemaRequests:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:71\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        session:     Session\n\n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:47\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        user:     AccountResource\n\n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/sdk/sdk.service.ts:69\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:55\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api: )\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/sdk/sdk.service.ts:62\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs/Subject';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  };\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. Omits init if environment has set init: false */\n  constructor(@Inject('environment') public environment) {\n    if (!environment || environment.init !== false) {\n      this.init();\n    }\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api.\n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    this._api.resolve().then(api => this.apiResolved = true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model] || this.schemaRequests[model].api !== api) {\n      this.schemaRequests[model] = { request: api.getSchema(model), api };\n    }\n    return this.schemaRequests[model].request;\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n  Modules\n  SelectModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/select/select.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                ActionbarComponent\n                            \n                            \n                                SelectComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    ActionbarComponent\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    SelectComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\nimport { ActionbarComponent } from '../actionbar/actionbar.component';\nimport { LoaderModule } from '../loader/loader.module';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ListModule,\n    DndModule,\n    LoaderModule\n  ],\n  declarations: [\n    SelectComponent,\n    ActionbarComponent\n  ],\n  exports: [\n    ListModule,\n    SelectComponent,\n    ActionbarComponent,\n    DndModule\n  ],\n  providers: [],\n})\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/auth/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/signup?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginComponent\n    \n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup\n            \n\n\n\n\n            \n                templateUrl\n                signup.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                invite\n                            \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/signup/signup.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                    \n                        Invite code to use. If set, the invite form field will be hidden. \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/signup/signup.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:20\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/auth/signup/signup.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:22\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/auth/signup/signup.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:35\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/signup/signup.component.ts:25\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/auth/signup/signup.component.ts:27\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        auth:     AuthService\n\n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        loader:     \n\n                    \n                \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:26\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:28\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notificationService:     NotificationsService\n\n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:32\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { LoaderComponent, WithLoader } from '../../../../ui';\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/signup?e=1\n*/\n@Component({\n  selector: 'ec-signup',\n  templateUrl: 'signup.component.html'\n})\n\nexport class SignupComponent extends LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Invite code to use. If set, the invite form field will be hidden. */\n  @Input() invite = '';\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  signup({ email, password, invite }) {\n    const registration = this.auth.signup({ email, password, invite }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('signup.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('signup.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        this.error.next(error);\n        console.log('could not signup', error);\n      });\n    this.loader.wait(registration);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/signup-form/signup-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginFormComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup-form\n            \n\n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonLabel\n                            \n                            \n                                invite\n                            \n                            \n                                invitePlaceholder\n                            \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: this.symbol.resolve('signup.button.label')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/signup-form/signup-form.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                    \n                        If set, the invite field will be hidden and the given code will be used for signup \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/signup-form/signup-form.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        invitePlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: this.symbol.resolve('signup.invite.placeholder')\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/signup-form/signup-form.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                    \n                        Additional Button classes \n\n                        \n                            Default value: ''\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:42\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                    \n                        The Label of the submit button. Defaults to Login \n\n                        \n                            Default value: this.symbol.resolve('login.button.label')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:40\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                    \n                        The Label of the Mail field \n\n                        \n                            Default value: this.symbol.resolve('login.email.label')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                    \n                        The Placeholder of the mail Field \n\n                        \n                            Default value: this.symbol.resolve('login.email.placeholder')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:34\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be shown during login \n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                    \n                        The Label of the password field. \n\n                        \n                            Default value: this.symbol.resolve('login.password.label')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                    \n                        The Placeholder of the password field \n\n                        \n                            Default value: this.symbol.resolve('login.password.placeholder')\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:38\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                    \n                        If true, email and password wont have labels \n\n                        \n                            Default value: true\n                        \n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:30\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                    \n                        Event that emits when calling showError. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/signup-form/signup-form.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/signup-form/signup-form.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(value: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/signup-form/signup-form.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err: )\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errorMessage:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        form:     FormGroup\n\n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        submitted:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FieldValidators } from '../../utility/validators/field-validators';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { LoginFormComponent } from '../login-form/login-form.component';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n*/\n@Component({\n  selector: 'ec-signup-form',\n  templateUrl: './signup-form.component.html',\n})\nexport class SignupFormComponent extends LoginFormComponent implements OnInit, WithLoader {\n\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('signup.button.label');\n  /** The Placeholder of the mail Field */\n  @Input() invitePlaceholder = this.symbol.resolve('signup.invite.placeholder');\n  /** If set, the invite field will be hidden and the given code will be used for signup */\n  @Input() invite = '';\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  signup(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n      invite: [this.invite, [Validators.required]] // FieldValidators.uuid\n    });\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.signup(this.form.value)\n      .then((res) => {\n        // this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    Invite\n    \n    \n  \n\n  \n    {{buttonLabel}}\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                Invite                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [ec-slot-host]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        viewContainerRef:     ViewContainerRef\n\n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ec-slot-host]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sortType:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string\n};\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n  Modules\n  SymbolModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolService\n\nSymbolService\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.module.ts\n        \n\n\n            \n                Description\n            \n            \n                Collects all localization related components and services.\n\n            \n        \n\n        \n            \n                \n                    Providers\n                    \n                            \n                                     SymbolService\n                            \n                    \n                \n            \n        \n    \n\n    \n        Localization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n/**\n * Collects all localization related components and services.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n{{ 'entry.saved' | symbol }}See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n};\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de.\nhttps://components.entrecode.de/ui/symbols?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                            \n                                resolve\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/symbol/symbol.service.ts:14\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:33\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:38\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:20\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        registry:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        sets:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/symbol/symbol.service.ts:12\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport de from './de';\nimport en from './en';\n/** Service to register symbols for localization. The default set is de.\n * https://components.entrecode.de/ui/symbols?e=1\n*/\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    }\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return this.registry.find(symbol => symbol.name === name);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        const symbol = this.get(name);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        symbols.map(symbol => {\n            const index = this.registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                this.registry.push(symbol);\n            } else {\n                this.registry[index] = symbol;\n            }\n        })\n    }\n}\n\n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                    \n                        The tab's label \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:11\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        If set to true, the tab will be selected at start. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:13\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                    \n                        Output that emits when the tab is activated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                    \n                        Output that emits when the tab is deactivated \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:19\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        el:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        parent:     TabsComponent\n\n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                            \n                            Type:    TabComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:16\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent, skipRoute: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        skipRoute\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        tabs:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ContentChildren\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { AfterContentInit, Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs?e=1\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => paths[paths.length - 1].indexOf(tab.route) !== -1);\n    if (match) {\n      this.select(match, true);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent, skipRoute = false) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route && !skipRoute) {\n      this.router.navigate(['../' + tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImageByUrl\n                            \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                lazy\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/tinymce/tinymce.component.ts:60\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                    \n                        Debounce time for value change processing \n\n                        \n                            Default value: 200\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:49\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                    \n                        If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks \n\n                        \n                            Default value: false\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:53\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                            \n                            Type:    any\n\n                            \n                        \n                            Default value: {}\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:51\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                    \n                        Output that emits when the value has been changed by the user \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:55\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        setup\n                    \n                    \n                        Output that is emitted when the setup is being made.\nPasses the editor instance. Intended to be used for custom controls  \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:58\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addImageByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \naddImageByUrl(url: string, caption: string, size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            adds an image by url to the editor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        caption\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                200\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:96\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:78\n                            \n                        \n\n\n                \n                    \n                            calls init \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            calls destroy \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:143\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:134\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        container:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:45\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editor:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:43\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => { }\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:141\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ready:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:41\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        update:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:47\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/tinymce/tinymce.component.ts:60\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { AfterViewInit, ApplicationRef, Component, ElementRef, EventEmitter, forwardRef, Input, OnDestroy, Output, ViewChild, ViewEncapsulation } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport 'rxjs/add/operator/debounceTime';\nimport { Subject } from 'rxjs/Subject';\nimport * as tinymce from 'tinymce';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/themes/modern';\nimport { editorSettings } from './tinymce-settings';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce?e=1\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor, OnDestroy {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks */\n  @Input() lazy = false;\n  /** Output that emits when the value has been changed by the user */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Output that is emitted when the setup is being made.\n   * Passes the editor instance. Intended to be used for custom controls  */\n  @Output() setup: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .debounceTime(this.debounce)\n      .subscribe(editor => {\n        if (!this.editor) {\n          return;\n        }\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.changed.emit(this.value);\n        this.app.tick();\n      });\n  }\n  /** calls init */\n  ngAfterViewInit() {\n    if (!this.lazy) {\n      this.init();\n    }\n  }\n  /** Destroys the editor. */\n  destroy() {\n    if (this.editor) {\n      this.editor.remove();\n      delete this.editor;\n    }\n  }\n  /** calls destroy */\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /** Initializes the editor */\n  init() {\n    this.ready = new Promise((resolve, reject) =>\n      setTimeout(() => resolve(tinymce.init(\n        Object.assign({},\n          editorSettings,\n          this.settings,\n          {\n            target: this.container.nativeElement,\n            setup: (editor) => {\n              editorSettings.setup(editor);\n              if (this.settings && this.settings.setup) {\n                this.settings.setup(editor);\n              }\n              this.setup.emit(editor);\n            }\n          }\n        )\n      )))\n    );\n    this.ready.then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** adds an image by url to the editor */\n  addImageByUrl(url: string, caption = '', size = 200) {\n    this.editor.execCommand('mceInsertContent', false,\n      ``);\n  }\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (this.editor) {\n      this.editor.setContent(this.value);\n    }\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                Your browser does not support iframes.\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n  Modules\n  TinymceModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/tinymce.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                TinymceComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                TinymceComponent\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    TinymceComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\n@NgModule({\n  declarations: [TinymceComponent],\n  entryComponents: [TinymceComponent],\n  exports: [TinymceComponent]\n})\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    : , : (() => ), : true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The toggles placeholder (currently not in use) \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:21\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        propagateChange:     \n\n                    \n                \n                    \n                        \n                            Default value : (_: any) => {\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  };\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/model-config/type-config.service.ts:173\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:210\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:202\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:177\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:216\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:193\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        nestedCrudConfig:     CrudConfig\n\n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    size: 5,\n    // methods: ['get']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:18\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        types:     FieldConfig\n\n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact'\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true\n    },\n    url: {\n      sortable: true,\n      filterable: true\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: value => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(\n        this.symbol.resolve('moment.format.date')\n      )\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: value => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? JSON.stringify(value) : '')\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: value => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: value => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/model-config/type-config.service.ts:26\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfigProperty } from '@ec.components/core/src/config/field-config-property.interface';\nimport { FieldConfig } from '@ec.components/core/src/config/field-config.interface';\nimport { DefaultInputComponent } from '@ec.components/ui/src/form/default-input/default-input.component';\nimport { DefaultOutputComponent } from '@ec.components/ui/src/form/default-output/default-output.component';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    size: 5,\n    // methods: ['get']\n  };\n\n  // TODO check if filterPopClass: '' is still needed\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact'\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true\n    },\n    url: {\n      sortable: true,\n      filterable: true\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: value => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(\n        this.symbol.resolve('moment.format.date')\n      )\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: value => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? JSON.stringify(value) : '')\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: value => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: value => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too. Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format =\n      this.symbol.resolve('moment.format.date') +\n      (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return value => (value ? moment(value).format(format) : '');\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) =>\n      entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return value =>\n      moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n  Modules\n  UiModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/ui.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Imports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FormModule\n                            \n                            \n                                    IconModule\n                            \n                            \n                                    ListModule\n                            \n                            \n                                    LoaderModule\n                            \n                            \n                                    NotificationsModule\n                            \n                            \n                                    PopModule\n                            \n                            \n                                    SelectModule\n                            \n                            \n                                    SymbolModule\n                            \n                            \n                                    UtilityModule\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { ListModule } from './list/list.module';\nimport { FormModule } from './form/form.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\n\n@NgModule({\n  imports: [\n    FormsModule,\n    CommonModule,\n    ReactiveFormsModule,\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    FormsModule,\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n})\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        broadcast\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        relation\n                                \n                                \n                                            Optional\n                                        resource\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcast\n                                    \n                                \n                                \n                                    \n                                        broadcast:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An identifier associated with the update e.g. an entryID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The relation that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     Resource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant resource. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/filter';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[],\n    /** The relevant resource. */\n    resource?: Resource,\n    /** The list where it happened. */\n    list?: ResourceList,\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete',\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string,\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().filter((change: Update) => this.matches(change, filter));\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value))\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the CrudService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core/src/item/item';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { mimeTypes } from './mime-types'\n\n/** Instances of Update are emitted by the changes EventEmitter of the CrudService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource,\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[],\n  /** The uploaded asset as item */\n  item?: Item\n  /** The uploaded asset as item */\n  items?: Array>\n  /** The list where it happened. */\n  list?: ResourceList,\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[]\n  /** Custom file form fieldName */\n  fieldName?: string,\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: []\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, (config.filter || {}), {\n          type: assetGroupID\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id)\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n          if (key in options) {\n            formData.append(key, `${options[key]}`);\n          }\n        });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map(f => f.url) : this.getFormData(files, options);\n    return api.createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {})\n      }\n      return this.sdk.api.createAssets(data, {})\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        }\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string): Promise> {\n    console.warn('FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.');\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset]\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset)\n        });\n\n    })\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. TODO: demo \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/upload/upload.component.ts:42\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                            \n                            Type:    PublicAPI\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:28\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                        The loader that should be used while uploading\n\n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:24\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                        Upload options \n\n                            \n                            Type:    FileOptions\n\n                            \n                        \n                            Default value: Object.assign({}, this.fileService.defaultOptions)\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:30\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                    \n                        The input placeholder\n\n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:22\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        emits when the group has been set from the upload pop \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:36\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:34\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:101\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files: , e: , api: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        event:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileInput:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:38\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        filesToUpload:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        notifications:     Notification[]\n\n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:42\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pop:     PopComponent\n\n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:40\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploadPromise:     Promise\n\n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload/upload.component.ts:19\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent, LoaderService, NotificationsService, WithLoader } from '../../../../ui';\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\nimport { PopComponent } from '../../../../ui/src/pop/pop.component';\nimport { SymbolService } from '../../../../ui/src/symbol/symbol.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService, Upload } from '../file.service';\nimport { FileOptions } from '../file.service';\n\n/** This component will render an input field to upload files to the datamanager. TODO: demo */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger(e) {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    files = typeof files === 'string'\n      ? files.split('\\n').map(url => ({ name: url, url }))\n      : files;\n    if (files[0].url && this.fileService.isOldAssetGroupID(this.assetGroupID)) {\n      delete this.assetGroupID;\n    }\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return Promise.resolve();\n    }\n    return this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.fileService.isNewAssetGroupID(this.assetGroupID) ?\n      this.fileService.uploadAssets(files, this.assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(files))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    })\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.deduplicate' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                                                                                {{\\'upload.deduplicate\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadSelectComponent.html":{"url":"components/UploadSelectComponent.html","title":"component - UploadSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/files/upload-select/upload-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload-select\n            \n\n\n\n\n            \n                templateUrl\n                ./upload-select.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                showUrlInput\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                uploader\n                            \n                            \n                                urlsToUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGroup\n                            \n                            \n                                toggleUrlInput\n                            \n                            \n                                triggerUpload\n                            \n                            \n                                uploadFromUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                custom\n                            \n                            \n                                disableDrop\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                browse\n                            \n                            \n                                groupChanged\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/files/upload-select/upload-select.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                    \n                            \n                            Type:    CrudConfig\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDrop\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                    \n                            \n                            Type:    LoaderComponent\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                    \n                            \n                            Type:    FileOptions\n\n                            \n                        \n                            Default value: Object.assign({}, this.fileService.defaultOptions)\n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                    \n                            \n                            Type:    boolean\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        browse\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                    \n                        emits when the group has been set from the upload pop \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:23\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                    \n                        Emits when an upload is complete. \n\n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:25\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleUrlInput()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerUpload(e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFromUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFromUrls(urls: , e: )\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        fileService:     FileService\n\n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        focusEvent:     EventEmitter\n\n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:35\n                            \n                        \n\n                \n                    \n                        The event that focuses the url input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        showUrlInput:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:33\n                            \n                        \n\n                \n                    \n                        Wether or not the url input should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        symbol:     SymbolService\n\n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        uploader:     UploadComponent\n\n                    \n                \n                    \n                        \n                            Type :     UploadComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:29\n                            \n                        \n\n                \n                    \n                        The nested upload component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        urlsToUpload:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/files/upload-select/upload-select.component.ts:31\n                            \n                        \n\n                \n                    \n                        The Url to upload from \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SymbolService } from '@ec.components/ui/src/symbol/symbol.service';\nimport { UploadComponent } from '../upload/upload.component';\nimport { Upload, FileOptions, FileService } from '../file.service';\n\n@Component({\n    selector: 'ec-upload-select',\n    templateUrl: './upload-select.component.html'\n})\n\nexport class UploadSelectComponent implements OnInit {\n    @Input() readOnly: boolean;\n    @Input() custom: boolean;\n    @Input() disableDrop: boolean;\n    @Input() assetGroupID: string;\n    @Input() loader: LoaderComponent;\n    @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n    /** emits when the group has been set from the upload pop */\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n    /** Emits when an upload is complete. */\n    @Output() uploaded: EventEmitter = new EventEmitter();\n    @Output() browse: EventEmitter = new EventEmitter();\n    @Input() config: CrudConfig;\n    /** The nested upload component */\n    @ViewChild(UploadComponent) uploader: UploadComponent;\n    /** The Url to upload from */\n    urlsToUpload = '';\n    /** Wether or not the url input should be visible */\n    showUrlInput = false;\n    /** The event that focuses the url input */\n    public focusEvent: EventEmitter = new EventEmitter();\n\n    constructor(public symbol: SymbolService, public fileService: FileService) { }\n\n    ngOnInit() { }\n\n    /** Sets the asset group to upload to */\n    setGroup(group) {\n        this.assetGroupID = group;\n        this.groupChanged.emit(group);\n    }\n\n    toggleUrlInput() {\n        this.showUrlInput = !this.showUrlInput;\n        setTimeout(() => {\n            this.focusEvent.emit(true);\n        })\n    }\n\n    uploadFromUrls(urls, e) {\n        this.uploader.uploadFiles(urls, e).then(() => {\n            this.urlsToUpload = '';\n            this.showUrlInput = false;\n        });\n    }\n    triggerUpload(e) {\n        this.uploader.trigger(e);\n    }\n}\n\n    \n\n    \n        \n    Drop to upload\n    \n    {{'upload.link' | symbol}}\n     {{'upload.or' | symbol}}\n        {{'upload.url' | symbol}}\n    \n     {{'upload.or' | symbol}}\n        {{'upload.browse' | symbol}}\n    \n    \n        \n        {{'upload.url.start' | symbol}}\n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Drop to upload        {{\\'upload.link\\' | symbol}}     {{\\'upload.or\\' | symbol}}        {{\\'upload.url\\' | symbol}}         {{\\'upload.or\\' | symbol}}        {{\\'upload.browse\\' | symbol}}                        {{\\'upload.url.start\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'MockupComponent', 'selector': 'ec-mockup'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ec-slot-host]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n  Modules\n  UtilityModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/utility/utility.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                FocusDirective\n                            \n                            \n                                LoginFormComponent\n                            \n                            \n                                MenuComponent\n                            \n                            \n                                MockupComponent\n                            \n                            \n                                SignupFormComponent\n                            \n                            \n                                TabComponent\n                            \n                            \n                                TabsComponent\n                            \n                    \n                \n                \n                    Imports\n                    \n                            \n                                    IoModule\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    FocusDirective\n                            \n                            \n                                    IoModule\n                            \n                            \n                                    LoginFormComponent\n                            \n                            \n                                    MenuComponent\n                            \n                            \n                                    MockupComponent\n                            \n                            \n                                    SignupFormComponent\n                            \n                            \n                                    TabComponent\n                            \n                            \n                                    TabsComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { MockupComponent } from './mockup/mockup.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    TabsComponent,\n    TabComponent,\n    MockupComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [],\n})\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array, form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/form/visible-fields.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        formService:     FormService\n\n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field, Form } from '@ec.components/core';\nimport { FormService } from './form.service';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  constructor(public formService: FormService) { }\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array, form: Form): any {\n    return fields.filter((field) =>\n      this.formService.shouldBePartOfForm(field, form)\n      && !field.hideInForm\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChangelog\n\n@ec.components/data 0.41.0\n\nadded entry-list-select. you can set it up by using inputView:'entry-list-select' in your field config.\n\n\n@ec.components/ui 0.35.0\n\nselects now have an input field that filter the dropdown + keyboard controls.\n\n\n@ec.components/data 0.40.0\nBREAKING CHANGE: \n\nfield property hidden has been renamed to hideInList. You have to refactor all configurations that contain hidden: true to hideInList: true.\n\n\n@ec.components/ui 0.32.0\nBREAKING CHANGE:\n\nec-pop: removed visible attribute + simplified markup structure.\nremoved ec-pop-container class\nremoved ec-pop class\nis-active is now set on the ec-pop element itself\n\n\n\nDEPRECATED: please update all usages of classes ec-pop_* and use ec-modal or ec-pop with the correct classes.\nRefer to the pop demo or the modal demo for example usages.\n\n@ec.components/data 0.34.0\nBREAKING CHANGE:\n\nec-searchbar list input now expects a list instance instead of a list component. The component can now be passed to listComponent input to enable arrow navigation. \n\nChange:\nto\nThe change was introduced to sync the list filter with the searchbar query.\n\n@ec.components/data 0.29.0\nBREAKING CHANGE:\n\nall (change) outputs have been renamed to (changed) to avoid getting also the dom events fired by angular.\n\n\n@ec.components/ui 0.25.0\nBREAKING CHANGE:\n\nall (change) outputs have been renamed to (changed) to avoid getting also the dom events fired by angular.\n\n\n@ec.components/ui 0.22.0\nBREAKING CHANGE:\n\nnow requires ngx-drag-drop packages for new drag and drop features\n\n\n@ec.components/data 0.25.0\nBREAKING CHANGE:\n\nasset-select now contains asset-group selects in the list-pop and when uploading\n\n\n@ec.components/data 0.23.0\nBREAKING CHANGE:\n\nadded useLegacyAssets flag to use old assets. All projects still using old assets need to set this flag to migrate! The flag can be used in the field config or directly in the asset-select config.\n\n\n0.17.0\n\nadded resource module with all resource related components and services\ncan now add delete and modify entries and resource through the selects\nasset select now supports old and new assets. When you pass [assetGroupID] to select (or list/upload), new assets will be used.\ndeprecated asset-list, because ec.sdk now supports public api relations.\n\nBREAKING CHANGE:\n\nremoved [field] input from selects\n\n\n0.15.0\n\ncan now use SdkService without datamanagerID.\nadded resource-delete-pop\nremoved labels config from pagination-config. now using symbol.service\nadded ec-resource-select\nadded support for new assets\n\n\n0.14.0\n\nadded ready event to FormComponent when initialization is complete.\nadded ResourcePopComponent for creating and editing resources.\nadded permissions option to resource-config to automatically show only allowed actions.\nadded ResourceCrudComponent for easy create/read/update/delete of any resource.\ncan now set field config label to false to show an empty label. (COM-89)\noptimized ec-select toggle behaviour (COM-92, COM-93)\ncan now set placeholder for ec-password-reset (COM-101)\nadded SymbolService for localization\n\n\n0.13.0\n\ncan now configure the maximum visible items for 'tags' view via the maxItems option in the field config. The default value is 10.\nadded auto generated id to all fields. Those ids are used in label#for and input#id. You should also reference this id in custom inputs to make the label clickable.\nadded ec-icon component for more flexible icons.\nadded paginationConfig Input to ListComponent (+ all children like ResourceListComponent)\nadded maxColumns option to list-config.\n\nBREAKING CHANGES:\n\nCOM-98: active/visible classes: renamed active to is-active, visible to is-visible and disabled to is-disabled\nCOM-95: renamed is-sortable-active to is-sorted + added is-sorted-asc and is-sorted-desc\nCOM-96: replaced all usages of ec-icon with new ec-icon component (nests one level deeper)\nCOM-45: removed range input from pagination, replaced with PaginationConfig with additional options (see docs)\nremoved [host] input from ListItemsComponent due to incompatibilities.\nrenamed list config property disableSelection to selectMode and inverted its value meaning. When selectMode is true, the checkboxes are shown and the columnClicked event is ignored as long as selectMode is active. You can toggle the selectMode via list#toggleSelectMode.\nremoved DatamanagerListComponent and ModelListComponent. You can use ResourceList for both now.\n\n\n0.12.0\nBREAKING CHANGE:\n\nform.component (and all children): renamed (submit) output to (submitted)\n\n\n0.10.0\nBREAKING CHANGES:\n\nlist.component (and all extending components): renamed select output to columnClicked. (Global replace \"(select)\" to \"(columnClicked)\").\nmonth.component: renamed select output to dayClicked (similar to list.component)\n\n\n0.9.0\n\nadded use method to selection.component to write the model from outside\nBREAKING CHANGES:\necPublicAsset has been renamed to ecAsset and now supports direct id binding to directive.\n\n\n0.8.2\n\nadded ec-toggle to default inputs (use view: 'toggle' in field config)\nadded ec-calendar\nsystem fields (id, created, modified etc) are now readOnly by default\n\n\n0.8.1\n\nadded ec-entry-pop\n\n\n0.8.0\nBREAKING CHANGES:\n\nremoved PublicService and AdminService, you should use sdk methods instead.\nlogin/signup + more auth methods have been moved from SdkService to new AuthService\nformer ec-login has been renamed to ec-login-form, the new ec-login handles login automatically.\ncrud methods have been renamend to 'get', 'put', 'post', 'delete'\nec-entry and ec-entries are now directives ecEntry and ecEntries\n\n\n0.7.0\nBREAKING CHANGES:\n\npop classes have been completely changed to:\n.ec-pop_fullscreen\n.ec-pop_dialog\n.ec-pop_drawer-left\n.ec-pop_drawer-top\n.ec-pop_drawer-right\n.ec-pop_drawer-bottom\n.ec-pop_toast-top\n.ec-pop_toast-bottom\n\n\nadded @ec.components/style package\n\n\n0.6.0\n\nEntryFormComponent.deleteEntry now returns the deletion promise.\nfix: SdkService.ready promise was not renewed after login\nLoginComponent now accepts a loader as input\nBREAKING CHANGES:\nFormComponent.submitted now emits the instance of Form and not the group\n\n\n0.5.3\n\nfeature: asset-select is now capable of using ngModel with two way binding\n\n\n0.5.2\n\nremoved DataRoutingModule from DataModule\nfeature: asset-select can now resolve assetID's.\nfeature: added filterPopClass config option to field-property-config.\nfurther styling\n\n\n0.5.1\n\nfurther styling\nfix: could not set custom inputs/outputs for entry fields\nnow using ec.sdk 0.8.6\n\n\n0.5.0\n\nfurther styling\nBREAKING CHANGES:\nview: 'label' must now be view: 'tag'\nview: 'labels' must now be view: 'tags'\nselection is now a direct input of ec-crud instead of a config property\n\n\n0.4.1\n\nfixed tests after refactoring\nwrote project setup tutorial\nfurther styling\n\n\n0.4.0\n\nnow using ec.sdk 0.8.5\n\nBREAKING CHANGES:\n\nall imports from '@ec.components/_/' must now lead to '@ec.components//src/_'\nimports from '@ec.components/*' can stay the same and should generally be preferred.\n\n\n0.3.1\n\nrefactored typings to be aot compatible\nrefactored imports\nbegan styling\n\n\n0.3.0\n\nnow using ec.sdk 0.8.1\nnow supporting default routes for filtering and more\nAssetInput is now default for asset/assets fields\n\n\n0.2.0\n\nnow using ec.sdk 0.7.1\nentry-form now supports lvl1 entries even with nested resources\nec-datetime now supports iso dates\n\n\n0.1.1\n\nchanged src folder and module structure\nec-model-list\nec-asset-select\nec-upload\nec-datetime input\n\n\n0.1.0 (2017-08-23)\n\nthe most important basic components are now implemented\ndynamic input/output templates\nec-entry, ec-entries\nadded demo with multiple routes\nec-form\nmuch more\n\n\n0.0.2 (2017-05-11)\n\nimproved list\nimproved imports\n\n\n0.0.1 (2017-05-10)\n\ninitial release\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                component\n            \n            \n                AceComponent\n            \n            \n                90 %\n                (19/21)\n            \n        \n        \n            \n                \n                    packages/ace/src/ace.component.ts\n            \n            \n                variable\n            \n            \n                ace\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/collection/collection.ts\n            \n            \n                class\n            \n            \n                Collection\n            \n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                    packages/core/src/config/config.ts\n            \n            \n                class\n            \n            \n                Config\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config-property.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfigProperty\n            \n            \n                100 %\n                (41/41)\n            \n        \n        \n            \n                \n                    packages/core/src/config/field-config.interface.ts\n            \n            \n                interface\n            \n            \n                FieldConfig\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/field/field.ts\n            \n            \n                class\n            \n            \n                Field\n            \n            \n                95 %\n                (23/24)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form-config.interface.ts\n            \n            \n                interface\n            \n            \n                FormConfig\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/core/src/form/form.ts\n            \n            \n                class\n            \n            \n                Form\n            \n            \n                93 %\n                (29/31)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item-config.interface.ts\n            \n            \n                interface\n            \n            \n                ItemConfig\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/core/src/item/item.ts\n            \n            \n                class\n            \n            \n                Item\n            \n            \n                91 %\n                (22/24)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list-config.interface.ts\n            \n            \n                interface\n            \n            \n                ListConfig\n            \n            \n                100 %\n                (21/21)\n            \n        \n        \n            \n                \n                    packages/core/src/list/list.ts\n            \n            \n                class\n            \n            \n                List\n            \n            \n                97 %\n                (41/42)\n            \n        \n        \n            \n                \n                    packages/core/src/pagination/pagination.ts\n            \n            \n                class\n            \n            \n                Pagination\n            \n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                    packages/core/src/selection/selection.ts\n            \n            \n                class\n            \n            \n                Selection\n            \n            \n                95 %\n                (46/48)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                class\n            \n            \n                Sorter\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortBoolean\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortNumber\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                function\n            \n            \n                sortString\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/core/src/sorter/sorter.ts\n            \n            \n                variable\n            \n            \n                collator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/asset-list/asset-list.component.ts\n            \n            \n                component\n            \n            \n                AssetListComponent\n            \n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth-guard.service.ts\n            \n            \n                injectable\n            \n            \n                AuthGuard\n            \n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.module.ts\n            \n            \n                function\n            \n            \n                cookieFactory\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/auth.service.ts\n            \n            \n                injectable\n            \n            \n                AuthService\n            \n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/email-available.validator.ts\n            \n            \n                variable\n            \n            \n                emailAvailable\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                backendErrorCodes\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/errors.ts\n            \n            \n                variable\n            \n            \n                errors\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/password-reset/password-reset.component.ts\n            \n            \n                component\n            \n            \n                PasswordResetComponent\n            \n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                    packages/data/src/auth/signup/signup.component.ts\n            \n            \n                component\n            \n            \n                SignupComponent\n            \n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud-config.interface.ts\n            \n            \n                interface\n            \n            \n                CrudConfig\n            \n            \n                100 %\n                (23/23)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.component.ts\n            \n            \n                component\n            \n            \n                CrudComponent\n            \n            \n                77 %\n                (14/18)\n            \n        \n        \n            \n                \n                    packages/data/src/crud/crud.service.ts\n            \n            \n                injectable\n            \n            \n                CrudService\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    packages/data/src/entries/entries.directive.ts\n            \n            \n                directive\n            \n            \n                EntriesDirective\n            \n            \n                60 %\n                (12/20)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/admin-entry-input.component.ts\n            \n            \n                component\n            \n            \n                AdminEntryInputComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryInputComponent\n            \n            \n                71 %\n                (5/7)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/default-entry-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultEntryOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-form/entry-form.component.ts\n            \n            \n                component\n            \n            \n                EntryFormComponent\n            \n            \n                97 %\n                (38/39)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list-pop/entry-list-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryListPopComponent\n            \n            \n                46 %\n                (12/26)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list-select/entry-list-select.component.ts\n            \n            \n                component\n            \n            \n                EntryListSelectComponent\n            \n            \n                70 %\n                (28/40)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.component.ts\n            \n            \n                component\n            \n            \n                EntryListComponent\n            \n            \n                60 %\n                (15/25)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-list/entry-list.ts\n            \n            \n                class\n            \n            \n                EntryList\n            \n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-pop/entry-pop.component.ts\n            \n            \n                component\n            \n            \n                EntryPopComponent\n            \n            \n                76 %\n                (29/38)\n            \n        \n        \n            \n                \n                    packages/data/src/entry-select/entry-select.component.ts\n            \n            \n                component\n            \n            \n                EntrySelectComponent\n            \n            \n                68 %\n                (59/86)\n            \n        \n        \n            \n                \n                    packages/data/src/entry/entry.directive.ts\n            \n            \n                directive\n            \n            \n                EntryDirective\n            \n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-list-pop/asset-list-pop.component.ts\n            \n            \n                component\n            \n            \n                AssetListPopComponent\n            \n            \n                71 %\n                (23/32)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset-select/asset-select.component.ts\n            \n            \n                component\n            \n            \n                AssetSelectComponent\n            \n            \n                65 %\n                (50/76)\n            \n        \n        \n            \n                \n                    packages/data/src/files/asset/asset.directive.ts\n            \n            \n                directive\n            \n            \n                AssetDirective\n            \n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                    packages/data/src/files/assetgroup-select/assetgroup-select.component.ts\n            \n            \n                component\n            \n            \n                AssetgroupSelectComponent\n            \n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                    packages/data/src/files/dropzone/dropzone.directive.ts\n            \n            \n                directive\n            \n            \n                DropzoneDirective\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                injectable\n            \n            \n                FileService\n            \n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                FileOptions\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/data/src/files/file.service.ts\n            \n            \n                interface\n            \n            \n                Upload\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    packages/data/src/files/image-select-pop/image-select-pop.component.ts\n            \n            \n                component\n            \n            \n                ImageSelectPopComponent\n            \n            \n                62 %\n                (17/27)\n            \n        \n        \n            \n                \n                    packages/data/src/files/image/image.directive.ts\n            \n            \n                directive\n            \n            \n                ImageDirective\n            \n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                    packages/data/src/files/mime-types.ts\n            \n            \n                variable\n            \n            \n                mimeTypes\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    packages/data/src/files/upload-select/upload-select.component.ts\n            \n            \n                component\n            \n            \n                UploadSelectComponent\n            \n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                    packages/data/src/files/upload/upload.component.ts\n            \n            \n                component\n            \n            \n                UploadComponent\n            \n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfig\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-config.service.ts\n            \n            \n                injectable\n            \n            \n                ModelConfigService\n            \n            \n                100 %\n                (9/9)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/model-configuration.interface.ts\n            \n            \n                interface\n            \n            \n                ModelConfiguration\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/sdk-field.ts\n            \n            \n                interface\n            \n            \n                SdkField\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/data/src/model-config/type-config.service.ts\n            \n            \n                injectable\n            \n            \n                TypeConfigService\n            \n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-actionbar/resource-actionbar.component.ts\n            \n            \n                component\n            \n            \n                ResourceActionbarComponent\n            \n            \n                0 %\n                (0/25)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource-config.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceConfig\n            \n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                injectable\n            \n            \n                ResourceService\n            \n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-config/resource.service.ts\n            \n            \n                interface\n            \n            \n                Update\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-crud/resource-crud.component.ts\n            \n            \n                component\n            \n            \n                ResourceCrudComponent\n            \n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-delete-pop/resource-delete-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourceDeletePopComponent\n            \n            \n                60 %\n                (21/35)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.component.ts\n            \n            \n                component\n            \n            \n                ResourceFormComponent\n            \n            \n                92 %\n                (38/41)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-form/resource-form.ts\n            \n            \n                class\n            \n            \n                ResourceForm\n            \n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list-pop/resource-list-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourceListPopComponent\n            \n            \n                39 %\n                (11/28)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.component.ts\n            \n            \n                component\n            \n            \n                ResourceListComponent\n            \n            \n                77 %\n                (34/44)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-list/resource-list.ts\n            \n            \n                class\n            \n            \n                ResourceList\n            \n            \n                91 %\n                (41/45)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-pop/resource-pop.component.ts\n            \n            \n                component\n            \n            \n                ResourcePopComponent\n            \n            \n                75 %\n                (28/37)\n            \n        \n        \n            \n                \n                    packages/data/src/resource-select/resource-select.component.ts\n            \n            \n                component\n            \n            \n                ResourceSelectComponent\n            \n            \n                68 %\n                (52/76)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/history.service.ts\n            \n            \n                injectable\n            \n            \n                HistoryService\n            \n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                    packages/data/src/sdk/sdk.service.ts\n            \n            \n                injectable\n            \n            \n                SdkService\n            \n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                injectable\n            \n            \n                GeocodeService\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/location/src/geocode.service.ts\n            \n            \n                variable\n            \n            \n                google\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/location/src/location-map.component.ts\n            \n            \n                component\n            \n            \n                LocationMapComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location-picker.component.ts\n            \n            \n                component\n            \n            \n                LocationPickerComponent\n            \n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                    packages/location/src/location-search.component.ts\n            \n            \n                component\n            \n            \n                LocationSearchComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/location/src/location.module.ts\n            \n            \n                variable\n            \n            \n                LOCATION_COMPONENTS\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/medium-editor/src/medium-editor.component.ts\n            \n            \n                component\n            \n            \n                MediumEditorComponent\n            \n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce-settings.ts\n            \n            \n                variable\n            \n            \n                editorSettings\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/tinymce/src/tinymce/tinymce.component.ts\n            \n            \n                component\n            \n            \n                TinymceComponent\n            \n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                    packages/ui/src/actionbar/actionbar.component.ts\n            \n            \n                component\n            \n            \n                ActionbarComponent\n            \n            \n                55 %\n                (31/56)\n            \n        \n        \n            \n                \n                    packages/ui/src/actionbar/actionbar.component.ts\n            \n            \n                interface\n            \n            \n                Action\n            \n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                    packages/ui/src/actionbar/actionbar.component.ts\n            \n            \n                interface\n            \n            \n                ActionbarConfig\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/calendar.component.ts\n            \n            \n                component\n            \n            \n                CalendarComponent\n            \n            \n                75 %\n                (41/54)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/daterange.component.ts\n            \n            \n                component\n            \n            \n                DaterangeComponent\n            \n            \n                64 %\n                (24/37)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.component.ts\n            \n            \n                component\n            \n            \n                DatetimeComponent\n            \n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/datetime.pipe.ts\n            \n            \n                pipe\n            \n            \n                DatetimePipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/heatmap.component.ts\n            \n            \n                component\n            \n            \n                HeatmapComponent\n            \n            \n                65 %\n                (28/43)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                component\n            \n            \n                MonthComponent\n            \n            \n                65 %\n                (23/35)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/datetime/month.component.ts\n            \n            \n                interface\n            \n            \n                Day\n            \n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-input/default-input.component.ts\n            \n            \n                component\n            \n            \n                DefaultInputComponent\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/default-output/default-output.component.ts\n            \n            \n                component\n            \n            \n                DefaultOutputComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.component.ts\n            \n            \n                component\n            \n            \n                FormComponent\n            \n            \n                96 %\n                (30/31)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/form.service.ts\n            \n            \n                injectable\n            \n            \n                FormService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/max-items.pipe.ts\n            \n            \n                pipe\n            \n            \n                MaxItemsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/toggle/toggle.component.ts\n            \n            \n                component\n            \n            \n                ToggleComponent\n            \n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/form/visible-fields.pipe.ts\n            \n            \n                pipe\n            \n            \n                VisibleFieldsPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/ec-icons.ts\n            \n            \n                variable\n            \n            \n                ecIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/emoji-icons.ts\n            \n            \n                variable\n            \n            \n                emojiIcons\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.component.ts\n            \n            \n                component\n            \n            \n                IconComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/icon/icon.service.ts\n            \n            \n                injectable\n            \n            \n                IconService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-rack/dynamic-rack.component.ts\n            \n            \n                component\n            \n            \n                DynamicRackComponent\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/dynamic-slot/dynamic-slot.component.ts\n            \n            \n                component\n            \n            \n                DynamicSlotComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input-errors/input-errors.component.ts\n            \n            \n                component\n            \n            \n                InputErrorsComponent\n            \n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/input/input.component.ts\n            \n            \n                component\n            \n            \n                InputComponent\n            \n            \n                76 %\n                (16/21)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/output/output.component.ts\n            \n            \n                component\n            \n            \n                OutputComponent\n            \n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                    packages/ui/src/io/slot-host.directive.ts\n            \n            \n                directive\n            \n            \n                SlotHostDirective\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/group.pipe.ts\n            \n            \n                pipe\n            \n            \n                GroupPipe\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-config.service.ts\n            \n            \n                injectable\n            \n            \n                ListConfigService\n            \n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-header/list-header.component.ts\n            \n            \n                component\n            \n            \n                ListHeaderComponent\n            \n            \n                83 %\n                (10/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list-items/list-items.component.ts\n            \n            \n                component\n            \n            \n                ListItemsComponent\n            \n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/list.component.ts\n            \n            \n                component\n            \n            \n                ListComponent\n            \n            \n                78 %\n                (22/28)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination-config.interface.ts\n            \n            \n                class\n            \n            \n                PaginationConfig\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/pagination/pagination.component.ts\n            \n            \n                component\n            \n            \n                PaginationComponent\n            \n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                    packages/ui/src/list/searchbar/searchbar.component.ts\n            \n            \n                component\n            \n            \n                SearchbarComponent\n            \n            \n                75 %\n                (28/37)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.component.ts\n            \n            \n                component\n            \n            \n                LoaderComponent\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/loader.service.ts\n            \n            \n                injectable\n            \n            \n                LoaderService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/loader/with-loader.interface.ts\n            \n            \n                interface\n            \n            \n                WithLoader\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    packages/ui/src/modal/modal.component.ts\n            \n            \n                component\n            \n            \n                ModalComponent\n            \n            \n                80 %\n                (24/30)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/error/error.component.ts\n            \n            \n                component\n            \n            \n                ErrorComponent\n            \n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notification.ts\n            \n            \n                class\n            \n            \n                Notification\n            \n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.component.ts\n            \n            \n                component\n            \n            \n                NotificationsComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                injectable\n            \n            \n                NotificationsService\n            \n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/notifications.service.ts\n            \n            \n                variable\n            \n            \n                window\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/notifications/with-notifications.interface.ts\n            \n            \n                interface\n            \n            \n                WithNotifications\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.component.ts\n            \n            \n                component\n            \n            \n                PopComponent\n            \n            \n                71 %\n                (10/14)\n            \n        \n        \n            \n                \n                    packages/ui/src/pop/pop.service.ts\n            \n            \n                injectable\n            \n            \n                PopService\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/select/select.component.ts\n            \n            \n                component\n            \n            \n                SelectComponent\n            \n            \n                69 %\n                (32/46)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.interface.ts\n            \n            \n                interface\n            \n            \n                Symbol\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.pipe.ts\n            \n            \n                injectable\n            \n            \n                SymbolPipe\n            \n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/symbol/symbol.service.ts\n            \n            \n                injectable\n            \n            \n                SymbolService\n            \n            \n                77 %\n                (7/9)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/focus/focus.directive.ts\n            \n            \n                directive\n            \n            \n                FocusDirective\n            \n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/focus/focus.interface.ts\n            \n            \n                interface\n            \n            \n                Focus\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/login-form/login-form.component.ts\n            \n            \n                component\n            \n            \n                LoginFormComponent\n            \n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/menu/menu.component.ts\n            \n            \n                component\n            \n            \n                MenuComponent\n            \n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/mockup/mockup.component.ts\n            \n            \n                component\n            \n            \n                MockupComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/signup-form/signup-form.component.ts\n            \n            \n                component\n            \n            \n                SignupFormComponent\n            \n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tab/tab.component.ts\n            \n            \n                component\n            \n            \n                TabComponent\n            \n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/tabs/tabs.component.ts\n            \n            \n                component\n            \n            \n                TabsComponent\n            \n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/email.validator.ts\n            \n            \n                variable\n            \n            \n                emailValidator\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    packages/ui/src/utility/validators/field-validators.ts\n            \n            \n                variable\n            \n            \n                FieldValidators\n            \n            \n                100 %\n                (1/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : 1.0.0-beta.3\n        \n            @angular/compiler : ^5.2.2\n        \n            @angular/core : ^5.2.2\n        \n            @angular/forms : ^5.2.2\n        \n            @angular/http : ^5.2.2\n        \n            @angular/platform-browser : ^5.2.2\n        \n            @angular/platform-browser-dynamic : ^5.2.2\n        \n            @angular/router : ^5.2.2\n        \n            @ec.components/data : *\n        \n            @ec.components/location : *\n        \n            @ec.components/medium-editor : *\n        \n            @ec.components/style : *\n        \n            @ec.components/tinymce : *\n        \n            ace-builds : ^1.2.9\n        \n            core-js : ^2.5.7\n        \n            ec.sdk : ^0.17.6\n        \n            eventsource : ^1.0.7\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.0.3\n        \n            rxjs : ^5.5.11\n        \n            stream : 0.0.2\n        \n            tinymce : ^4.7.6\n        \n            x.ui : ^9.1.1\n        \n            zone.js : ^0.8.20\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                    \n                \n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a: , b: )\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis is the main project for ec.components, written in Typescript and Angular.\nModules\nThere are three main modules:\n\n*@ec.components/core*: contains core typescript classes (no angular, no datamanager)\n*@ec.components/ui*: contains core ui components (angular, no datamanager)\n*@ec.components/data*: contains ui components for datamanager (angular+datamanager)\n\nThe dependencies stack up from core to data (data > ui > core).\nThe packages sources are located at src/packages.\nThere is also a fourth module called ```*@ec.components/style*`.\nIt contains more sophisticated styles for ui components using x.ui.\nDocumentation\nThe main documentation is located at https://entrecode.github.io/ec.components/.\nYou can find a getting started guide there\nDemo\nA Demo is available at https://components.entrecode.de/.\nDevelopment\nThis project was generated with Angular CLI version 1.0.0-rc.0.\nLerna\nThe repository is a monorepo, managed by lerna.\nDeveloping with Symlinks\nThe start npm script will automatically use the symlinks from src/packages for @ec.components.\nIt also deletes eventually existing node_modules folders inside the packages.\nThis enables you to always use imports like: import  from '@ec.components/'.\nPublishing\n\nRun bootstrap task, this will call lerna bootstrap for core/ui/data packages and their prepublish scripts:npm run bootstrap\nRun publish task and select versions:npm run publish\n\nTo publish a new package, make sure you run npm publish --access=public before running lerna.\nMake sure you update the symlinks.sh and delete-modules.sh scripts to make it work for the demo server.\nImport Structure\nAll imports inside src/packages that import from the same package or another ec.components package must be relative.\n\nImports from the same package should always import the index file \"from '..'\"\nThis implies that all components/classes etc are placed inside a flat subfolder structure.\nThe relative path '..' therefore links to the index.ts where all package exports are defined.\n\n\nImports from another package should always import the relative path to the package index (e.g. ../../packages/core)\n\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive/pipe/service/class/module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nUse the --env=prod or --env=stag for environment builds.\nCAUTION: you may have to \"es2015\" in tsconfig.json / lib to make UglifyJS work\nsee https://github.com/mishoo/UglifyJS2/issues/659\nBuild Trouble Shooting\nErrors like this (or similar):\nERROR in ./node_modules/@ec.components/data/src/auth/auth.service.ts\nModule build failed: Error: /Users/kon/workspace/0.entrecode/nwb.admin/node_modules/@ec.components/data/src/auth/auth.service.ts is missing from the TypeScript compilation. Please make sure it is in your tsconfig via the 'files' or 'include' property.can be fixed by including the ec.components files explicitly (+excluding the test files):\n{\n  \"extends\": \"../tsconfig.json\",\n  \"compilerOptions\": {\n    \"outDir\": \"../out-tsc/app\",\n    \"baseUrl\": \"./\",\n    \"module\": \"es2015\",\n    \"types\": []\n  },\n  \"exclude\": [\n    \"test.ts\",\n    \"**/*.spec.ts\",\n    \"../node_modules/@ec.components/**/*.spec.ts\"\n  ],\n  \"include\": [\n    \"**/*.ts\",\n    \"../node_modules/@ec.components/**/*.ts\"\n  ]\n}Running unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumModule\n\n\n\ncluster_MediumModule_declarations\n\n\n\ncluster_MediumModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n ), : true\n} -->\n\n{\n    : , : (() => ), : true\n}\n\n{\n    : , : (() => ), : true\n}\n\n ), : true\n}->AceComponent -->\n\n{\n    : , : (() => ), : true\n}->AceComponent\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n ), : true\n}->MediumEditorComponent -->\n\n{\n    : , : (() => ), : true\n}->MediumEditorComponent\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\n ), : true\n}->SelectComponent -->\n\n{\n    : , : (() => ), : true\n}->SelectComponent\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\n()\n\n()\n\nAuthModule -->\n\n()->AuthModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nAuthGuard\n\nAuthGuard\n\nAuthModule -->\n\nAuthGuard->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nCrudService\n\nCrudService\n\nDataModule -->\n\nCrudService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarComponent->FormModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nFormModule -->\n\nDaterangeComponent->FormModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nFormModule -->\n\nDatetimePipe->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nFormModule -->\n\nHeatmapComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nFormModule -->\n\nMonthComponent->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nFormModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nFormModule->DaterangeComponent \n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nFormModule->DatetimePipe \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nFormModule->HeatmapComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nFormModule->MonthComponent \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nIoModule  -->\n\nUtilityModule->IoModule \n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nMockupComponent \n\nMockupComponent \n\nMockupComponent  -->\n\nUtilityModule->MockupComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumModule\n\nMediumModule\n\nMediumModule -->\n\nMediumEditorComponent->MediumModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumModule->MediumEditorComponent \n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nMockupComponent\n\nMockupComponent\n\nUtilityModule -->\n\nMockupComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            20 modules\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        67 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        7 directives\n                    \n                \n            \n            \n                \n                    \n                        \n                        20 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 pipes\n                    \n                \n            \n            \n                \n                    \n                        \n                        14 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        19 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ace   (packages/.../ace.component.ts)\n                        \n                        \n                            backendErrorCodes   (packages/.../errors.ts)\n                        \n                        \n                            collator   (packages/.../sorter.ts)\n                        \n                        \n                            ecIcons   (packages/.../ec-icons.ts)\n                        \n                        \n                            editorSettings   (packages/.../tinymce-settings.ts)\n                        \n                        \n                            emailAvailable   (packages/.../email-available.validator.ts)\n                        \n                        \n                            emailValidator   (packages/.../email.validator.ts)\n                        \n                        \n                            emojiIcons   (packages/.../emoji-icons.ts)\n                        \n                        \n                            errors   (packages/.../errors.ts)\n                        \n                        \n                            FieldValidators   (packages/.../field-validators.ts)\n                        \n                        \n                            google   (packages/.../geocode.service.ts)\n                        \n                        \n                            LOCATION_COMPONENTS   (packages/.../location.module.ts)\n                        \n                        \n                            mimeTypes   (packages/.../mime-types.ts)\n                        \n                        \n                            window   (packages/.../notifications.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ace/src/ace.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ace\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ace:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        Workaround that expects ace to be imported somewhere else... \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/errors.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            backendErrorCodes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        backendErrorCodes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  2460: {\n    'account_not_found': 'Der Login war ungültig.'\n  }\n}\n                        \n                    \n\n                \n                    \n                        Maps error messages to error codes that come from the backend. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            errors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        errors:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  emailUnavailable: 'Diese Email ist schon vergeben',\n  required: 'Dieses Feld ist ein Pflichtfeld',\n  pattern: 'Ungültige Eingabe',\n  minlength: 'Die Eingabe ist kurz'\n}\n                        \n                    \n\n                \n                    \n                        Error Messages to show in notifications. \n\n                    \n                \n\n            \n        \n\n    packages/core/src/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            collator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        collator:     \n\n                    \n                \n                    \n                        \n                            Default value : new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' })\n                        \n                    \n\n                \n                    \n                        Used for natural sorting of strings \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/ec-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            ecIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        ecIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n  { name: 'add' },\n  { name: 'add-circle' },\n  { name: 'alarm' },\n  { name: 'alarm-clock' },\n  { name: 'alarm-silent' },\n  { name: 'align-center' },\n  { name: 'align-justify' },\n  { name: 'align-left' },\n  { name: 'align-right' },\n  { name: 'all-caps' },\n  { name: 'brackets' },\n  { name: 'angle-tool' },\n  { name: 'arrange-1-to-9' },\n  { name: 'arrange-9-to-1' },\n  { name: 'arrange-a-to-z' },\n  { name: 'arrange-z-to-a' },\n  { name: 'arrow-down' },\n  { name: 'arrow-down-left' },\n  { name: 'arrow-down-right' },\n  { name: 'arrow-left' },\n  { name: 'arrow-return' },\n  { name: 'arrow-right' },\n  { name: 'arrow-up' },\n  { name: 'arrow-up-left' },\n  { name: 'arrow-up-right' },\n  { name: 'artboard' },\n  { name: 'asterisk' },\n  { name: 'at-sign' },\n  { name: 'bank' },\n  { name: 'bank-note' },\n  { name: 'banking-debit-machine' },\n  { name: 'barcode' },\n  { name: 'trash' },\n  { name: 'binoculars' },\n  { name: 'bitcoin-coin' },\n  { name: 'bookmark' },\n  { name: 'border-bottom' },\n  { name: 'border-inside' },\n  { name: 'border-inside-vertical' },\n  { name: 'border-inside-horizontal' },\n  { name: 'border-left' },\n  { name: 'border-none' },\n  { name: 'border-outside' },\n  { name: 'border-right' },\n  { name: 'border-top' },\n  { name: 'box' },\n  { name: 'briefcase' },\n  { name: 'bus' },\n  { name: 'graph-pie' },\n  { name: 'scale' },\n  { name: 'whiteboard' },\n  { name: 'graph-plot' },\n  { name: 'calculator' },\n  { name: 'calculator-2' },\n  { name: 'calendar' },\n  { name: 'calendar-check' },\n  { name: 'calendar-close' },\n  { name: 'calendar-pencil' },\n  { name: 'calendar-refresh-2' },\n  { name: 'camera' },\n  { name: 'brightness-1' },\n  { name: 'camera-off' },\n  { name: 'camera-pin' },\n  { name: 'camera-refresh' },\n  { name: 'car-6' },\n  { name: 'dashboard' },\n  { name: 'tape' },\n  { name: 'center-point' },\n  { name: 'chat-bubble-circle' },\n  { name: 'chat-bubble-circle-active' },\n  { name: 'chat-bubble-square' },\n  { name: 'chat-bubble-square-active' },\n  { name: 'chat-bubble-square-2' },\n  { name: 'chat-bubbles-square' },\n  { name: 'check-box' },\n  { name: 'cloud' },\n  { name: 'cloud-disable' },\n  { name: 'cloud-download' },\n  { name: 'cloud-refresh' },\n  { name: 'cloud-upload' },\n  { name: 'cloud-wifi' },\n  { name: 'color-contrast-off' },\n  { name: 'color-contrast-on' },\n  { name: 'color-palette' },\n  { name: 'computer-screen' },\n  { name: 'contact-book' },\n  { name: 'content-book' },\n  { name: 'content-bookmark' },\n  { name: 'filter' },\n  { name: 'layers-hide' },\n  { name: 'layers-show' },\n  { name: 'note' },\n  { name: 'content-view-array' },\n  { name: 'content-view-content' },\n  { name: 'content-view-list' },\n  { name: 'content-view-module' },\n  { name: 'crop' },\n  { name: 'cursor-arrow' },\n  { name: 'cursor-hand' },\n  { name: 'cursor-move' },\n  { name: 'cursor-select-area' },\n  { name: 'cursor-tap' },\n  { name: 'cursor-target' },\n  { name: 'data-download' },\n  { name: 'data-syncing' },\n  { name: 'data-transfer' },\n  { name: 'data-upload' },\n  { name: 'delete' },\n  { name: 'dial-pad' },\n  { name: 'diamond' },\n  { name: 'divide' },\n  { name: 'email' },\n  { name: 'email-read' },\n  { name: 'envelope' },\n  { name: 'equaliser' },\n  { name: 'eraser' },\n  { name: 'expand' },\n  { name: 'expand-2' },\n  { name: 'expand-vertical' },\n  { name: 'expand-horizontal' },\n  { name: 'exposure-level' },\n  { name: 'file-add' },\n  { name: 'file-copy' },\n  { name: 'file-new' },\n  { name: 'file-notes-document' },\n  { name: 'file-notes-new' },\n  { name: 'files' },\n  { name: 'files-thumbs' },\n  { name: 'flash' },\n  { name: 'flash-off' },\n  { name: 'flip-down' },\n  { name: 'flip-left' },\n  { name: 'flip-right' },\n  { name: 'flip-up' },\n  { name: 'focus' },\n  { name: 'focus-off' },\n  { name: 'folder-new' },\n  { name: 'folders' },\n  { name: 'font-color' },\n  { name: 'font-size' },\n  { name: 'format-clear' },\n  { name: 'frame' },\n  { name: 'gradient' },\n  { name: 'hash' },\n  { name: 'health-blood-drop' },\n  { name: 'eye-closed' },\n  { name: 'highlight' },\n  { name: 'hourglass' },\n  { name: 'id-card' },\n  { name: 'inbox' },\n  { name: 'indent-decrease' },\n  { name: 'indent-increase' },\n  { name: 'infinity-loop' },\n  { name: 'interface-alert-circle' },\n  { name: 'interface-information' },\n  { name: 'interface-question-mark' },\n  { name: 'intersect' },\n  { name: 'italic' },\n  { name: 'key' },\n  { name: 'laptop' },\n  { name: 'square' },\n  { name: 'lightbulb' },\n  { name: 'link' },\n  { name: 'link-broken' },\n  { name: 'list-bullets' },\n  { name: 'list-number' },\n  { name: 'location-direction' },\n  { name: 'location-globe' },\n  { name: 'location-gps-off' },\n  { name: 'location-gps-on' },\n  { name: 'location-plan' },\n  { name: 'location-map' },\n  { name: 'location-pin-1' },\n  { name: 'location-pin-2' },\n  { name: 'lock-closed' },\n  { name: 'lock-open' },\n  { name: 'leave' },\n  { name: 'harry-potter' },\n  { name: 'measuring-tool' },\n  { name: 'minus-front' },\n  { name: 'mobile-phone' },\n  { name: 'money-note-coin' },\n  { name: 'move-down' },\n  { name: 'move-left' },\n  { name: 'move-right' },\n  { name: 'move-to-back' },\n  { name: 'move-to-front' },\n  { name: 'move-up' },\n  { name: 'music-note' },\n  { name: 'hamburger' },\n  { name: 'more-horizontal' },\n  { name: 'more-vertical' },\n  { name: 'new-square' },\n  { name: 'outbox' },\n  { name: 'paint-brush' },\n  { name: 'paint-bucket' },\n  { name: 'paint-palette' },\n  { name: 'paint-roll' },\n  { name: 'paperclip' },\n  { name: 'paperplane' },\n  { name: 'paragraph' },\n  { name: 'paragraph-left-to-right' },\n  { name: 'paragraph-right-to-left' },\n  { name: 'paragraph-spacing' },\n  { name: 'pen-tool' },\n  { name: 'pencil' },\n  { name: 'percent' },\n  { name: 'bug' },\n  { name: 'photo-landscape' },\n  { name: 'photo-portrait' },\n  { name: 'photo-view-all' },\n  { name: 'picture-layer' },\n  { name: 'pin' },\n  { name: 'home' },\n  { name: 'power' },\n  { name: 'printer' },\n  { name: 'qr-code' },\n  { name: 'quote-closing' },\n  { name: 'quote-opening' },\n  { name: 'reflect-left' },\n  { name: 'reflect-right' },\n  { name: 'close-x-big' },\n  { name: 'ruler' },\n  { name: 'scale-vertical' },\n  { name: 'scissors' },\n  { name: 'select-area' },\n  { name: 'send-to-back' },\n  { name: 'send-to-front' },\n  { name: 'database' },\n  { name: 'settings-slider' },\n  { name: 'share' },\n  { name: 'megaphone' },\n  { name: 'rss' },\n  { name: 'signal' },\n  { name: 'signal-tower' },\n  { name: 'shear-left' },\n  { name: 'shear-right' },\n  { name: 'shopping-bag-alt' },\n  { name: 'shopping-basket' },\n  { name: 'shopping-cart' },\n  { name: 'shrink' },\n  { name: 'shrink-diagonal' },\n  { name: 'shrink-horizontal' },\n  { name: 'shrink-vertical' },\n  { name: 'command' },\n  { name: 'sign-euro' },\n  { name: 'sign-ramp-left' },\n  { name: 'sign-ramp-right' },\n  { name: 'skull' },\n  { name: 'sliders' },\n  { name: 'slider' },\n  { name: 'small-caps' },\n  { name: 'speaker-volume-decrease' },\n  { name: 'speaker-volume-high' },\n  { name: 'speaker-volume-increase' },\n  { name: 'speaker-volume-low' },\n  { name: 'speaker-volume-off' },\n  { name: 'spelling-check' },\n  { name: 'spray-paint' },\n  { name: 'strike-through' },\n  { name: 'subscript' },\n  { name: 'substract' },\n  { name: 'sunny' },\n  { name: 'superscript' },\n  { name: 'switch-left' },\n  { name: 'switch-right' },\n  { name: 'switches' },\n  { name: 'bluetooth' },\n  { name: 'wifi' },\n  { name: 'repeat' },\n  { name: 'synchronize' },\n  { name: 'switch' },\n  { name: 'price-tag' },\n  { name: 'tank' },\n  { name: 'text' },\n  { name: 'text-eraser' },\n  { name: 'rotate-right' },\n  { name: 'rotate-left' },\n  { name: 'text-vector' },\n  { name: 'toolbox' },\n  { name: 'underline' },\n  { name: 'unite' },\n  { name: 'user' },\n  { name: 'vector-circle' },\n  { name: 'vector-line' },\n  { name: 'vector-square' },\n  { name: 'video-call' },\n  { name: 'video-clip' },\n  { name: 'eject' },\n  { name: 'next' },\n  { name: 'pause' },\n  { name: 'play' },\n  { name: 'previous' },\n  { name: 'stop' },\n  { name: 'heart-outlined' },\n  { name: 'star-outlined' },\n  { name: 'thumbs-down' },\n  { name: 'thumbs-up' },\n  { name: 'zoom-in' },\n  { name: 'zoom-out' },\n  { name: 'glasses' },\n  { name: 'save' },\n  { name: 'chevron-left' },\n  { name: 'chevron-right' },\n  { name: 'move-vertical' },\n  { name: 'drag-handle' },\n  { name: 'user-chat' },\n  { name: 'text-input' },\n  { name: 'tablet' },\n  { name: 'company' },\n  { name: 'android' },\n  { name: 'apple' },\n  { name: 'facebook' },\n  { name: 'google' },\n  { name: 'linkedin' },\n  { name: 'twitter' },\n  { name: 'xing' },\n  { name: 'youtube' },\n  { name: 'find' },\n  { name: 'business-man' },\n  { name: 'factory' },\n  { name: 'building' },\n  { name: 'fax' },\n  { name: 'globe' },\n  { name: 'phone' },\n  { name: 'close-x-circle' },\n  { name: 'ticket' },\n  { name: 'key-enter' },\n  { name: 'key-left' },\n  { name: 'key-right' },\n  { name: 'key-shift' },\n  { name: 'img' },\n  { name: 'smiley' },\n  { name: 'arrow-next' },\n  { name: 'arrow-prev' },\n  { name: 'wand' },\n  { name: 'h-align-left' },\n  { name: 'h-align-middle' },\n  { name: 'h-align-right' },\n  { name: 'v-align-bottom' },\n  { name: 'v-align-middle' },\n  { name: 'v-align-top' },\n  { name: 'flip-h' },\n  { name: 'flip-v' },\n  { name: 'graph-bar' },\n  { name: 'check' },\n  { name: 'layer-down' },\n  { name: 'layer-up' },\n  { name: 'undo' },\n  { name: 'redo' },\n  { name: 'stackoverflow' },\n  { name: 'kununu' },\n  { name: 'totop' },\n  { name: 'shopping-bag' },\n  { name: 'profile-circle' },\n  { name: 'heart-filled' },\n  { name: 'github' },\n  { name: 'glue' },\n  { name: 'adhesive-tape' },\n  { name: 'transparent' },\n  { name: 'recycling' },\n  { name: 'dumbbell' },\n  { name: 'instagram' },\n  { name: 'eye-open' },\n  { name: 'water-bottle' },\n  { name: 'close-x' },\n  { name: 'star-filled' },\n  { name: 'clock' },\n  { name: 'appointment' },\n  { name: 'save-date' },\n  { name: 'whistle' },\n  { name: 'weight' },\n  { name: 'share-alt' },\n  { name: 'coin-transfer' },\n  { name: 'toggle-caret' },\n  { name: 'config' },\n  { name: 'server' },\n  { name: 'undo-2' },\n  { name: 'filter-2' },\n  { name: 'article' },\n  { name: 'bold' },\n  { name: 'bigger-text' },\n  { name: 'checkmark' },\n  { name: 'cross' },\n  { name: 'img-center' },\n  { name: 'img-full' },\n  { name: 'img-left' },\n  { name: 'smaller-text' },\n  { name: 'checkmark-2' },\n  { name: 'json' },\n  { name: 'required' },\n  { name: 'validate' },\n  { name: 'fingerprint' }\n]\n                        \n                    \n\n                \n                    \n                        Contains all icons that are available in ec-icons font. \n\n                    \n                \n\n            \n        \n\n    packages/tinymce/src/tinymce/tinymce-settings.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            editorSettings\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        editorSettings:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  theme: 'modern',\n  menubar: false,\n  branding: false,\n  resize: true,\n  skin: false,\n  plugins: [\n    'paste template autoresize fullscreen code link table visualblocks autolink lists contextmenu textcolor colorpicker'\n  ],\n  autoresize_min_height: 300,\n  autoresize_max_height: 800,\n  content_css: [\n    'https://icons.entrecode.de/ec-icons-3.0.0.min.css'\n  ],\n  paste_as_text: true,\n  table_toolbar: false,\n  table_default_attributes: {\n    class: 'table-grid'\n  },\n  table_class_list: [\n    { title: 'grid', value: 'table-grid' },\n  ],\n  // templates: [],\n  textcolor_map: [\n    '37474F', 'Text',\n    '879195', 'Text Light',\n    '00B0FF', 'Link',\n    'FF5353', 'Super',\n    'FFFF8D', 'Highlight',\n    'FFFFFF', 'Weiß'\n  ],\n  link_class_list: [\n    { title: 'einfacher link', value: '' },\n    { title: 'Normaler Button', value: 'btn' },\n    { title: 'Super Button', value: 'btn super' },\n    { title: 'Sekundärer Button', value: 'btn minor' }\n  ],\n  style_formats: [\n    { title: 'H2 - Titel', block: 'h2' },\n    { title: 'H3 - Untertitel', block: 'h3' },\n    { title: 'H4 - Überschrift 1', block: 'h4' },\n    { title: 'H5 - Überschrift 2', block: 'h5' },\n    { title: 'Einfacher Absatz', block: 'p' },\n    { title: 'Einleitung', block: 'p', classes: 'lead' },\n    { title: 'Quellenangabe', inline: 'small' },\n    { title: 'Checkliste', selector: 'ul', classes: 'v-checklist' },\n    { title: 'Frage', selector: 'p', classes: 'v-question' },\n    { title: 'Antwort', selector: 'p', classes: 'v-reply' }\n  ],\n  formats: {\n    alignleft: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-left'\n    },\n    aligncenter: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-center'\n    },\n    alignright: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-right'\n    },\n    alignjustify: {\n      selector: 'p,h1,h2,h3,h4,h5,h6,td,th,div,ul,ol,li,table,img',\n      classes: 'v-full'\n    }\n  },\n  toolbar: 'undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | forecolor | table | template | bullist numlist | link internal image youtube | removeformat | code | fullscreen',\n  setup: (editor) => {\n\n    editor.addButton('youtube', {\n      icon: 'media',\n      onclick: function (edit, element) {\n        const window = editor.windowManager.open({\n          title: 'Youtube einfügen',\n          body: [{\n            type: 'textbox',\n            name: 'yt',\n            label: 'Youtube-Url/ID'\n          }],\n          onsubmit: function (e) {\n            const yt = e.data.yt;\n\n            if (yt) {\n              const ytUrl = /(?:https?:\\/\\/(?:[a-z]+.)?)(?:youtu\\.?be(?:\\.com)?\\/)(?:embed\\/)?(?:(?:(?:(?:watch\\?)?(?:time_continue=(?:[0-9]+))?.+v=)?([a-zA-Z0-9_-]+))(?:\\?t\\=(?:[0-9a-zA-Z]+))?)/g.exec(yt);\n              const url = 'https://www.youtube.com/embed/' + (ytUrl ? ytUrl[1] : yt) + '?feature=oembed&rel=0';\n              editor.insertContent('');\n            }\n          }\n        });\n      }\n    });\n\n    // TODO\n    /* editor.addButton('image', {\n      icon: 'image',\n      onclick: function (edit, element) {\n        const id = Date.now();\n        console.log('image button clicked', edit, element);\n        const window = editor.windowManager.open({\n          title: 'Bild einfügen',\n          body: [{\n            type: 'container',\n            html: `\n            src: {{src}}\n            Alt-Text\n            \n            Text\n            \n            \n             automatische Breite`\n          }],\n        });\n      }\n    }); */\n  },\n  /* file_browser_callback: (field_name, url, type, win) => {\n    console.log('file browser', field_name, url, type, win);\n  } */\n}\n                        \n                    \n\n                \n                    \n                        Default settings for tinymce editor. \n\n                    \n                \n\n            \n        \n\n    packages/data/src/auth/email-available.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailAvailable\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailAvailable:     \n\n                    \n                \n                    \n                        \n                            Default value : (control: FormControl, delay: number = 500) => {\n  /*return Datamanager.api().emailAvailable(control.value).then((available) => {\n    if (available) {\n      return null;\n    }\n    return { emailUnavailable: true };\n  });*/\n}\n                        \n                    \n\n                \n                    \n                        TODO use this.sdk.accounts.emailAvailable \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/email.validator.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emailValidator\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emailValidator:     ValidatorFn\n\n                    \n                \n                    \n                        \n                            Type :     ValidatorFn\n\n                        \n                    \n                    \n                        \n                            Default value : Validators.pattern(/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/)\n                        \n                    \n\n                \n                    \n                        Validates an email. Used for email inputs \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/icon/emoji-icons.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            emojiIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        emojiIcons:     Symbol[]\n\n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    { name: 'add', content: '➕' },\n    { name: 'close', content: '❌' },\n    { name: 'bitcoin-coin', content: '&#x1F4B0;' },\n    { name: 'bookmark', content: '&#x1F516;' },\n    { name: 'bus', content: '&#x1F68C;' },\n    { name: 'calendar', content: '&#x1F4C5;' },\n    { name: 'camera', content: '&#x1F4F7;' },\n    { name: 'check-box', content: '✅' },\n    { name: 'cloud', content: '☁' },\n    { name: 'computer-screen', content: '&#x1F5A5;' },\n    { name: 'note', content: '&#x1F3B5;' },\n    { name: 'email', content: '&#x1F4E7;' },\n    { name: 'find', content: '&#x1F50D;' }\n]\n                        \n                    \n\n                \n                    \n                        Contains fonts using emojis. \n\n                    \n                \n\n            \n        \n\n    packages/ui/src/utility/validators/field-validators.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            FieldValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        FieldValidators:     literal type\n\n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  email: emailValidator\n}\n                        \n                    \n\n                \n                    \n                        Groups together all validators that are meant to be used on fields. \n\n                    \n                \n\n            \n        \n\n    packages/location/src/geocode.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            google\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        google:     any\n\n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n\n                \n                    \n                        declares google namespace \n\n                    \n                \n\n            \n        \n\n    packages/location/src/location.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            LOCATION_COMPONENTS\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        LOCATION_COMPONENTS:     []\n\n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n]\n                        \n                    \n\n                \n                    \n                        The components of this module \n\n                    \n                \n\n            \n        \n\n    packages/data/src/files/mime-types.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            mimeTypes\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        mimeTypes:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'image': [\n        'image/png',\n        'image/jpeg',\n        'image/gif',\n        'image/webp',\n        'image/svg+xml',\n        'image/vnd.microsoft.icon',\n        'image/x-icon'],\n    'video': [\n        'video/mp4'],\n    'audio': [\n        'audio/mpeg',\n        'audio/mpeg3',\n        'audio/mp3'],\n    'plain': [\n        'text/plain',\n        'text/markdown',\n        'application/json'],\n    'document': [\n        'application/pdf',\n        'application/vnd.apple.pages',\n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        'application/msword',\n        'application/vnd.oasis.opendocument.text'],\n    'spreadsheet': [\n        'application/vnd.apple.numbers',\n        'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\n        'application/vnd.ms-excel',\n        'application/vnd.oasis.opendocument.spreadsheet'\n    ]\n}\n                        \n                    \n\n\n            \n        \n\n    packages/ui/src/notifications/notifications.service.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            window\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        window:     \n\n                    \n                \n\n                \n                    \n                        Workaround to get window without typescript complaining \n\n                    \n                \n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/localization.html":{"url":"additional-documentation/project-setup-tutorial/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields-config.html","title":"additional-page - Custom Fields Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nExample\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nSee the related doc links for default values / possible config values.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-list.html","title":"additional-page - Custom Entry List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec-entry-list\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations.\nDefault Usage\nThe above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema.\nPassing a Config\nThe following snippet will assign the given config to the model/schema config:\ncolumnClicked output\nYou can react to column clicks via the columnClicked output:\nselect(item) {\n    console.log('entry',item.getBody(),item.id());\n}Seperated header/items/pagination markup\nIf you need a seperation of the list-header -items and -pagination, you can use the sub components of list.component:\n\n\n\n\nCreate Custom Cells via transform methods\nIf you want to custom cell values that do not require a custom markup, you can use transforms\ndisplay\nThe display transform method is used to display the value (say what?).\nIt is called from inside ec-output, which is used in list-cells and form readOnly fields.\nYou can change the display behaviour like this:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            display: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});group\nYou can use grouping to get a clearer outline over sorted data:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            group: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});The syntax is the same as for display but the result is used as a group label when the property is sorted.\nresolve\nThe value that is passed to the transform methods like display, group etc. can be changed beforehand with the resolve method. NOTE: the params are different than for the transform methods:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            resolve: (body, item) => {\n                if(body.amazement_factor === -1) {\n                    return 0;\n                }\n                return body.amazement_factor;\n            }\n        }\n    }\n});this will also affect your forms!\npseudo properties via resolve\nYou can also define pseudo properties, meaning properties that do not exist on the original object:\nthis.modelConfig.set('muffin', {\n    fields: {\n        ranking: {\n            resolve: (body, item) => body.amazement_factor*body.flavour/body.price\n        }\n    }\n});This comes in handy when you want to display a often combined value out of multiple values.\nNOTE: pseudo properties should not be passed to the backend...\nCustom Cells via custom output component\nIf you want to custom cell values that do require a custom markup, you can use a custom output component:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            output: StrongComponent\n        }\n    }\n});In your strong.component.ts, you can inherit OutputComponent, giving you access to the field and item of your cell:\n@Component({\n  selector: 'app-strong',\n  template: `{{item.resolve(field.property)}}`\n})\nexport class StrongComponent extends OutputComponent {}NOTE: customizing the output component will also change the look of forms using that config, if the property is set readOnly.\nFiltering Lists\nBy default, each column that hosts a filterable property contains a search icon in its header. If the property is filterable is defined either by the field config (filterable) or falls back to the backend types that support filters. The search icon will open a pop with a field type specific filter input inside.\nCustom Filtering\nIf you do not want that (currently pretty clunky) pop filters, you can set filterable to false and manually call list.load with the desired filter:\n\n    show amazing muffins\n\nClicking the link will now show all muffins with exactly amazement_factor 10.\nCustom filter operators\nBy default, the entry-list will filter the property by its default filterOperator (see type config). If you want to change the default operator you can set it in the config:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            filterOperator: 'from'\n        }\n    }\n});\n    show amazing muffins\n\nIf you now click the link, all muffins with amazement_factor>=5 will be loaded.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-forms.html","title":"additional-page - Custom Entry Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntry Forms\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry forms can edit and create entries. They support notifications, loader, validation error handling and dynamic config generation out of the box.\nNOTE: it is expected you have placed a ec-notifications tag somewhere in your root component.\nDefault Behaviour\nCreate\nsubmitting the form will create a new entry and then switch to edit mode.\nEdit\nDynamic Edit/Create from template\nYou can also access the form from the template and call edit or create:\n\n\n    \n      {{muffin.name}}\n    \n  \nCreate new MuffinConfiguration\nIf nothing else is configured, the form will parse the schema of muffin and generate a generic field config.\nIf you configured the model via ModelConfigService (see Custom Fields), the form will use that config.\nAlternatively, you can also pass a config directly:\nThe given config will be Object.assigned to the possible preexisting modelConfig.\nCustom Markup with ec-input/ec-output\nMost times, you'll want more freedom over your forms markup etc. This is where ec-input and ec-output come into play:\n  \n    \n    Title\n        \n    \n    \n    Amazement Factor\n    \n    Submit\n  As soon as the ec-entry-form contains elements (or you pass empty=true, as meantioned below), the contents will be rendered instead of the default form.\nFeatures you have to add manually (if needed)\n\nsubmit button\nfield.readOnly handling (show ec-output instead of ec-input)\nlocal ec-loader\n\nNOTE: dont wrap labels around complex input components, because they fire ghost clicks!\nCustom input/output markup\nOf course you can remove another layer of abstraction to further customize the form:\n  \n    \n    Title\n    \n    \n    \n    Amazement Factor\n    {{form.display('amazement_factor')}}\n\n    Submit\n  Features you have to add manually:\n\nhandling of input errors (ec-input-errors)\nmaking sure your markup handles the field type correctly\nmaking sure your markup handles the field value correctly\n\nIt is generally recommended to use ec-input over hard coded forms.\nThe empty flag\nYou can also place the ec-input elements somewhere else and just tell the ec-entry-form that it shouldn't render the default form with the empty flag:\n\nNOTE: Always make sure the property accessed by ec-input is also present in your config (or you dont use a config at all). Otherwise, the input wont know what to render.\nCreating custom inputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nCustom Fields without wrapper\nYou can also use custom components as input directly without needing to wrap them in \"CustomFieldsComponent\".\nJust make sure you implement ControlValueAccessor like above. When changes occur from the template, call propagateChange. You can react to outside model changes in writeValue.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { InputComponent } from '../../../packages/ui';\nimport { ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'ec-counter',\n    templateUrl: './counter.component.html'\n})\n\nexport class CounterComponent extends InputComponent implements ControlValueAccessor {\n\n    value = 0;\n\n    increment() {\n        this.propagateChange(++this.value);\n    }\n\n    decrement() {\n        this.propagateChange(--this.value);\n    }\n\n    writeValue(value: any) {\n        this.value = value;\n        console.log('received value', value);\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n\n}\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui.html":{"url":"additional-documentation/ui.html","title":"additional-page - UI","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nUI Components Overview\nNow that the Core classes were discussed, lets have a look at its application in the ui components.\nThe ui components, which lay inside the ui package are all basic angular components.\nThey are API agnostic, meaning they do not contain any datamanager logic (or similar).\nAPI related components are meant to inherit from the base ui components to eliminate redundancies.\nInstallation\nnpm i @ec.components/uiDemo\nTBD:\n\nList\nCustom Cell Components\nTransform fields\n\n\nForm\nCustom Field Components\nInline Forms\n\n\nLogin\nPop\nTabs\nSelect\n\nNotifications\n\nLoader\nMenu\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/icons.html":{"url":"additional-documentation/ui/icons.html","title":"additional-page - Icons","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIcon\nOpen Demo\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/notificationscomponent.html":{"url":"additional-documentation/ui/notificationscomponent.html","title":"additional-page - NotificationsComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nNotifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/loadercomponent.html":{"url":"additional-documentation/ui/loadercomponent.html","title":"additional-page - LoaderComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLoader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ui/listcomponent.html":{"url":"additional-documentation/ui/listcomponent.html","title":"additional-page - ListComponent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/data.html":{"url":"additional-documentation/data.html","title":"additional-page - Data","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nData Components Overview\nDemo\n\nSdkService\nModelConfig\nHow to set up custom fields (input/output)\n\n\nentry-list\nentry-form\nentry-select\ncrud\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/medium.html":{"url":"additional-documentation/medium.html","title":"additional-page - Medium","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nInstallation\n\nInstall package\n\nnpm install @ec.components/medium-editor --save\nAdd Module\n\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/tinymce.html":{"url":"additional-documentation/tinymce.html","title":"additional-page - TinyMCE","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/tinymce --save\nAdd Module\n\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/ace.html":{"url":"additional-documentation/ace.html","title":"additional-page - Ace","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nInstallation\n\nInstall package\n\nnpm install @ec.components/ace --save\nAdd Module\n\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}\nAdd CDN\n\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n\nUse it\n\n \n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes.html":{"url":"additional-documentation/core-classes.html","title":"additional-page - Core Classes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nIntroduction\nThis is the Tutorial for ec.components.\nIt will take a look at all the major concepts in a didactic order.\nHINT: if you are looking for more information than this tutorial, have a look at the tests or the\nDemos!\nCore Classes\nThe core classes, which lay inside the core package are the abstract base for all components.\nThey are typescript only, without using any angular or datamanager code.\nInstead of EventEmitters there the Observables are served via RxJS subjects.\nInstallation\nnpm i @ec.components/core\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/field.html":{"url":"additional-documentation/core-classes/field.html","title":"additional-page - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nField\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/item.html":{"url":"additional-documentation/core-classes/item.html","title":"additional-page - Item","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nItem\nThe foundation for all entities is the Item class.\nIt consists of a body (value) and a config (see ItemConfig).\nIt can be used with arbitrary body values but is mainly thought to be a wrapper for objects.\nPrimitive use:\nconst primitive = new Item('a');\nprimitive.resolve(); //'a'Default use:\nconst tommy = new Item({ name: 'tommy' });\ntommy.resolve('name'); //'tommy'\ntommy.display('name'); //'tommy'\ntommy.group('name'); //'tommy'\ntommy.sort('name'); //'tommy'Item with fields definition\nWhen using it with objects, it can be passed a config (see ItemConfig) to set up its field config (see FieldConfig.\nEach item can call directly call a transformation function for a field:\nconst bobby = new Item({ value: { name: 'bobby' } }, {\n  fields: {\n    name: {\n      resolve: (body) => body.value.name,\n      display: (value) => value.toUpperCase(),\n      group: (value) => value.length + ' Buchstaben',\n      sort: (value) => value.length\n    }\n  }\n});\nbobby.resolve('name'); //'bobby'\nbobby.display('name'); //'Bobby'\nbobby.group('name'); //'5 Buchstaben'\nbobby.sort('name'); //5Identifiers and labels\nAn Item also brings the concept of identifiers and labels:\nconst e = new Item({ nr: '#AYQ', title: 'Wurst' }, { identifier: 'nr', label: 'title');\ne.id(); //'#AYQ'\ne.display(); //'Wurst'Saving items\nYou can set up a callback that is invoked when calling item.save():\nconst n = new Item(1, { onSave: (item, body) => body+1 });\nn.save();\nn.resolve(); //2\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/form.html":{"url":"additional-documentation/core-classes/form.html","title":"additional-page - Form","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nForm\nForm is an Item with extra functions:\n\ninstantiates fields to iterate over\ngetters for fields and property values, including prefills.\n\nconst tommy = new Form({ name: 'tommy' }); //init without config\ntommy.getValue('name')); //'tommy'\nconst bobby = new Form(null, { fields: { name: { prefill:'bobby' }}}); //init with config only\ntommy.getValue('name')); //'bobby'\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/collection.html":{"url":"additional-documentation/core-classes/collection.html","title":"additional-page - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCollection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/pagination.html":{"url":"additional-documentation/core-classes/pagination.html","title":"additional-page - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nPagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/list.html":{"url":"additional-documentation/core-classes/list.html","title":"additional-page - List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nList\nList is a Collection with list specific features:\n\nIt instantiates each array value as an Item\nIt instantiates each field property config as a Field.\nIt supports getting items by identifier via the id method (if identifier is set)\nIt supports filtering, sorting, grouping and pagination.\n\nthis.trees = new List([{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}, {\n  name: 'Cinnamon',\n  height: 10,\n  fruits: true\n}], {\n  size: 3,\n  fields: {\n    name: {\n      label: 'Name',\n      view: 'string',\n      required: true,\n      input: CoolStringComponent,\n      output: CoolStringComponent\n    },\n    height: {\n      label: 'Höhe',\n      group: (h) => h > 10 ? 'Höher als 10m' : 'Niedriger als 10m',\n      view: 'number',\n      required: true,\n      validate: (value) => {\n        if (value  value ? 'ja' : 'nein',\n      view: 'boolean'\n    },\n  },\n});Here is an easy example of using a List instance in a template with Angular:\n\n    \n        {{tree.display('name')}}\n        Früchte? {{tree.display('fruits')}}\n    \n\nNach Name sortierenFor all the features, have a look at the List documentation.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/selection.html":{"url":"additional-documentation/core-classes/selection.html","title":"additional-page - Selection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSelection\nSelection is a List with selection specific features:\n\nsupports select method with solo option\noverrides the index method to allow all items with the same identifier to be recognized as selected.\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/core-classes/sorter.html":{"url":"additional-documentation/core-classes/sorter.html","title":"additional-page - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adding-new-packages.html":{"url":"additional-documentation/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new package\nTo add a new package to @ec.components, follow this guide!\n1. Create folder in packages\nCreate a new folder, e.g. mkdir packages/medium-editor\n2. init npm\ncd packages/medium-editor && npm init\n\nMake sure to name the package scoped: ```@ec.components/*`\nAdd dependencies according to your needs, e.g. angular etc.\n\n3. Create src folder\nCreate a src folder and add your super cool typescript code.\n\nMake sure your package.json main file is correct.\nMake sure you have all dependencies up to date.\n\n4. add package to symlinks.sh\n\nAdd your package name to the symlinks script.\n\n5. add package to delete-modules.sh script\n\nAdd your package name to the delete-modules script.\n\n6. add package to main package.json dependencies\n\nKeep version up to date (or use * as wildcard)\nrun npm i\n\n7. add package to lerna.json\n\nThis integrates the package to the bootstrap/publish cycle of lerna.\n\n8. Manually Publish package the first time\nBefore being able to publish with lerna, you have to publish it manually the first time:\nnpm publish --access=publicsee https://docs.npmjs.com/cli/access#details.\n9. Add Demo\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/publishing.html":{"url":"additional-documentation/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
