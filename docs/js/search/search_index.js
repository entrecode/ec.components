var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.5","fields":["title","body"],"fieldVectors":[["title/components/AceComponent.html",[0,0.279,1,1.266]],["body/components/AceComponent.html",[0,0.422,1,1.834,2,0.87,3,0.16,4,0.166,5,0.622,6,1.63,7,0.804,8,0.776,9,1.254,10,0.125,11,2.658,12,0.35,13,2.698,14,5.505,15,4.186,16,2.192,17,1.549,18,4.339,19,4.626,20,1.819,21,2.108,22,2.492,23,2.553,24,0.665,25,1.52,26,0.007,27,2.035,28,3.092,29,2.526,30,3.092,31,2.526,32,0.911,33,2.145,34,1.864,35,3.032,36,5.664,37,1.123,38,4.626,39,0.323,40,0.575,41,3.892,42,1.578,43,3.56,44,3.56,45,1.441,46,1.634,47,2.831,48,1.925,49,2.908,50,2.999,51,2.492,52,1.811,53,0.731,54,3.378,55,2.947,56,2.875,57,3.032,58,4.01,59,4.626,60,4.626,61,2.797,62,3.378,63,3.425,64,1.224,65,6.614,66,8.835,67,0.813,68,1.721,69,1.182,70,2.985,71,1.373,72,2.62,73,6.379,74,4.878,75,5.222,76,5.222,77,3.28,78,3.28,79,6.379,80,2.985,81,2.985,82,3.339,83,0.977,84,2.68,85,3.173,86,2.872,87,1.085,88,1.237,89,1.872,90,2.985,91,4.626,92,5.222,93,2.985,94,2.908,95,2.985,96,3.538,97,1.844,98,3.339,99,1.015,100,1.022,101,0.732,102,2.908,103,2.985,104,4.626,105,2.985,106,4.376,107,3.787,108,4.626,109,4.626,110,2.985,111,4.626,112,2.908,113,2.985,114,3.173,115,2.378,116,1.781,117,2.048,118,4.167,119,2.283,120,0.962,121,2.283,122,2.553,123,1.174,124,3.538,125,2.985,126,1.603,127,2.985,128,1.575,129,2.985,130,1.982,131,2.985,132,2.563,133,2.985,134,3.032,135,3.787,136,2.985,137,1.61,138,1.683,139,2.283,140,2.283,141,1.226,142,1.386,143,2.283,144,1.683,145,2.283,146,1.805,147,2.283,148,2.283,149,2.048,150,0.268,151,1.345,152,0.266,153,1.199,154,0.927,155,2.658,156,2.985,157,2.985,158,2.985,159,2.658,160,2.443,161,2.658,162,2.443,163,2.283,164,0.591,165,0.111,166,0.13,167,4.626,168,4.626,169,2.985,170,2.985,171,5.222,172,2.985,173,3.538,174,2.658,175,5.044,176,2.985,177,5.664,178,2.985,179,3.032,180,2.985,181,1.361,182,4.12,183,2.985,184,1.58,185,2.985,186,1.029,187,2.985,188,2.985,189,3.538,190,2.985,191,1.683,192,1.876,193,2.985,194,2.283,195,2.985,196,0.552,197,1.224,198,0.611,199,1.254,200,1.688,201,0.804,202,0.804,203,0.725,204,1.525,205,0.737,206,0.763,207,0.688,208,0.75,209,0.763,210,2.051,211,0.75,212,1.284,213,1.718,214,0.763,215,1.238,216,2.12,217,0.763,218,0.763,219,0.804,220,0.75,221,1.246,222,0.763,223,0.804,224,0.75,225,0.804,226,0.737,227,0.737,228,1.533,229,1.525,230,0.737,231,0.75,232,0.75,233,0.737,234,0.804,235,0.763,236,1.859,237,0.763,238,0.75,239,0.763,240,0.763,241,0.763,242,0.75,243,0.804,244,0.75,245,0.763,246,0.804,247,0.75,248,0.804,249,0.75,250,0.75,251,0.915,252,0.804,253,0.75,254,0.804,255,0.737,256,0.75,257,0.804,258,0.75,259,0.804,260,0.688,261,0.804,262,0.75,263,1.375,264,0.804,265,0.737,266,0.804,267,0.75,268,0.804,269,0.725,270,0.804,271,0.75,272,0.737,273,0.75,274,0.712,275,0.804,276,0.75,277,0.804,278,0.804,279,0.75,280,0.804,281,0.75,282,0.804,283,0.725,284,0.804,285,0.737,286,0.75,287,0.804,288,0.75,289,0.776,290,0.804,291,0.737,292,0.75,293,1.725,294,0.75,295,0.763,296,0.665,297,0.763,298,0.763,299,0.75,300,0.763,301,0.763,302,0.763,303,0.804,304,0.737,305,0.75,306,0.804,307,0.75,308,0.776,309,0.75,310,0.804,311,0.75,312,0.804,313,0.763,314,0.75,315,0.75,316,0.804,317,0.75,318,0.804,319,0.75,320,0.804,321,0.75,322,0.712,323,0.7,324,0.725,325,0.804,326,0.737,327,0.804,328,0.737,329,0.804,330,0.737,331,0.804,332,0.737,333,0.804,334,0.737,335,0.79,336,0.804,337,0.737,338,0.79,339,0.804,340,0.002,341,0.003,342,0.002]],["title/modules/AceModule.html",[343,1.142,344,3.636]],["body/modules/AceModule.html",[1,2.513,3,0.353,4,0.364,10,0.276,25,2.632,26,0.007,27,3.805,28,4.72,29,4.72,30,4.72,31,5.04,32,1.485,150,0.335,152,0.586,154,2.04,164,1.299,165,0.298,166,0.287,196,1.214,340,0.004,341,0.005,342,0.004,343,1.489,344,6.977,345,2.582,346,2.476,347,3.552,348,2.697,349,3.474,350,5.848,351,5.848,352,5.848,353,5.848,354,5.848,355,5.294,356,3.366,357,2.528,358,2.199,359,5.848,360,4.517,361,2.683,362,2.285,363,6.566,364,5.848,365,6.566]],["title/interfaces/Action.html",[366,1.43,367,2.84]],["body/interfaces/Action.html",[0,0.403,3,0.302,4,0.312,10,0.236,17,1.366,20,2.86,22,3.2,26,0.007,32,0.905,33,1.213,34,1.058,37,1.366,39,0.609,40,0.905,42,1.489,46,1.439,52,2.287,56,2.537,67,0.838,68,1.943,83,0.971,101,0.988,122,3.632,150,0.312,152,0.502,164,1.114,165,0.317,166,0.246,186,1.547,203,1.766,215,0.954,251,1.685,304,1.796,340,0.004,341,0.005,342,0.004,357,2.167,366,2.065,367,5.251,368,2.477,369,4.305,370,3.661,371,4.394,372,4.968,373,3.794,374,6.513,375,1.796,376,3.851,377,5.013,378,3.447,379,1.598,380,5.953,381,5.562,382,5.013,383,1.598,384,2.477,385,3.174,386,2.312,387,5.953,388,5.013,389,1.114,390,3.851,391,4.607,392,5.013,393,5.013,394,1.543,395,5.013,396,5.013,397,5.013,398,5.013,399,5.013,400,4.607,401,5.013,402,5.013,403,5.013,404,5.013,405,6.477,406,7.176,407,5.013,408,5.013,409,5.013,410,4.989,411,5.013,412,3.283,413,5.013,414,5.013,415,5.013,416,5.013,417,5.013,418,5.013,419,6.477,420,4.063,421,5.013,422,3.404,423,5.013,424,3.404,425,5.013,426,5.013,427,4.607,428,5.013]],["title/interfaces/ActionbarConfig.html",[366,1.43,381,3.852]],["body/interfaces/ActionbarConfig.html",[0,0.417,3,0.319,4,0.329,10,0.25,17,1.442,20,3.25,22,3.313,26,0.007,32,0.956,33,1.28,34,1.117,37,1.442,42,1.527,46,1.49,52,2.346,56,2.678,67,0.542,68,1.779,83,1.025,122,3.725,150,0.32,152,0.53,164,1.176,165,0.323,166,0.259,186,1.579,203,1.828,215,1.007,251,1.176,304,1.859,340,0.004,341,0.005,342,0.004,357,2.288,366,2.137,367,4.899,368,2.614,369,4.544,370,2.554,371,4.021,372,3.466,373,3.472,374,5.757,375,1.324,376,3.986,377,5.291,378,3.917,379,1.687,380,6.163,381,6.32,382,5.291,383,1.687,384,2.614,385,3.35,386,2.441,387,6.163,388,5.291,389,1.176,390,3.986,391,4.863,392,5.291,393,5.291,394,1.628,395,5.291,396,5.291,397,5.291,398,5.291,399,5.291,400,4.863,401,5.291,402,5.291,403,5.291,404,5.291,405,6.705,406,7.361,407,5.291,408,5.291,409,5.291,410,5.165,411,5.291,412,3.466,413,5.291,414,5.291,415,5.291,416,5.291,417,5.291,418,5.291,419,6.705,420,4.288,421,5.291,422,3.593,423,5.291,424,3.593,425,5.291,426,5.291,427,4.863,428,5.291]],["title/components/AdminEntryInputComponent.html",[0,0.279,205,1.244]],["body/components/AdminEntryInputComponent.html",[0,0.433,1,1.001,2,1.08,3,0.214,4,0.221,5,0.83,7,1.073,8,1.037,10,0.167,12,0.468,20,2.259,21,2.242,24,0.888,26,0.007,32,0.641,33,2.168,34,1.885,37,1.394,39,0.432,40,0.714,42,1.586,45,0.957,46,1.84,47,3.366,48,2.338,49,3.61,50,4.851,51,2.963,52,2.092,53,0.908,62,3.901,63,4.072,67,0.809,69,1.151,71,1.08,83,0.687,88,0.86,89,1.302,99,0.845,100,1.046,101,0.609,117,2.734,118,4.544,119,3.048,120,0.97,121,3.048,126,1.443,128,0.984,130,1.784,138,2.247,139,3.048,140,3.048,141,1.637,142,1.72,143,3.048,144,2.247,145,3.048,146,2.41,147,3.048,148,3.048,149,2.734,150,0.286,152,0.355,154,1.238,165,0.148,166,0.174,196,0.737,197,1.52,198,0.816,200,1.95,201,1.073,202,1.073,203,0.968,204,1.813,205,1.819,206,1.019,207,1.876,208,1.001,209,1.019,210,2.258,211,1.001,212,1.527,213,1.984,214,1.019,215,1.379,216,2.311,217,1.019,218,1.019,219,1.073,220,1.001,221,1.547,222,1.019,223,1.073,224,1.001,225,1.073,226,0.984,227,0.984,228,1.859,229,1.813,230,0.984,231,1.001,232,1.001,233,0.984,234,1.073,235,1.019,236,2.103,237,1.019,238,1.001,239,1.019,240,1.019,241,1.019,242,1.001,243,1.073,244,1.001,245,1.019,246,1.073,247,1.001,248,1.073,249,1.001,250,1.001,251,1.137,252,1.073,253,1.001,254,1.073,255,0.984,256,1.001,257,1.073,258,1.001,259,1.073,260,0.919,261,1.073,262,1.001,263,1.634,264,1.073,265,0.984,266,1.073,267,1.001,268,1.073,269,0.968,270,1.073,271,1.001,272,0.984,273,1.001,274,0.951,275,1.073,276,1.001,277,1.073,278,1.073,279,1.001,280,1.073,281,1.001,282,1.073,283,0.968,284,1.073,285,0.984,286,1.001,287,1.073,288,1.001,289,1.037,290,1.073,291,0.984,292,1.001,293,1.881,294,1.001,295,1.019,296,0.888,297,1.019,298,1.019,299,1.001,300,1.019,301,1.019,302,1.019,303,1.073,304,0.984,305,1.001,306,1.073,307,1.001,308,1.037,309,1.001,310,1.073,311,1.001,312,1.073,313,1.019,314,1.001,315,1.001,316,1.073,317,1.001,318,1.073,319,1.001,320,1.073,321,1.001,322,0.951,323,0.935,324,0.968,325,1.073,326,0.984,327,1.073,328,0.984,329,1.073,330,0.984,331,1.073,332,0.984,333,1.073,334,0.984,335,1.055,336,1.073,337,0.984,338,1.055,339,1.073,340,0.003,341,0.004,342,0.003,386,2.359,389,0.789,412,2.325,429,5.637,430,5.972,431,2.877,432,3.136,433,3.61,434,2.953,435,4.392,436,5.115,437,6.392,438,3.764,439,3.61,440,4.145,441,5.115,442,5.115,443,5.743,444,4.145,445,4.392,446,3.095,447,2.176,448,3.138,449,5.115,450,5.743,451,1.796,452,3.262,453,1.754,454,3.262,455,3.986,456,2.877,457,3.262,458,4.701,459,4.701,460,3.473]],["title/directives/AssetDirective.html",[198,1.031,324,1.223]],["body/directives/AssetDirective.html",[3,0.266,4,0.274,5,1.761,9,2.079,10,0.208,12,0.581,17,1.622,23,3.408,24,1.103,26,0.007,32,1.074,33,1.439,39,0.536,40,0.831,42,1.61,46,1.762,53,1.056,55,3.74,64,1.768,67,0.86,68,1.823,69,1.196,71,0.93,83,1.152,88,1,89,1.122,99,0.983,100,0.799,101,0.709,116,2.572,132,3.397,137,2.325,142,2.425,150,0.314,152,0.441,164,0.979,165,0.184,166,0.216,186,1.471,198,1.548,199,2.079,207,2.088,212,2.229,323,1.161,324,1.622,340,0.003,341,0.004,342,0.003,371,4.553,373,2.079,375,1.489,389,0.979,394,1.356,446,3.659,447,2.702,448,3.397,451,2.231,453,2.178,456,3.572,460,4.896,461,1.722,462,4.407,463,4.564,464,6.68,465,6.68,466,8.905,467,4.616,468,6.191,469,5.458,470,6.102,471,2.519,472,5.591,473,6.68,474,3.339,475,4.955,476,4.949,477,2.34,478,4.286,479,5.468,480,4.949,481,4.949,482,4.821,483,4.949,484,2.627,485,4.949,486,4.949,487,3.896,488,5.949,489,4.949,490,3.166,491,3.011,492,5.949,493,2.033,494,4.949,495,4.378,496,4.949,497,3.537,498,4.949,499,4.407,500,3.243,501,4.949,502,4.949,503,3.395,504,4.949,505,3.11,506,4.949,507,4.949,508,2.887,509,4.949,510,2.038,511,3.572,512,3.572,513,3.243,514,3.784,515,6.68,516,7.21,517,3.784,518,3.572,519,4.949,520,1.863,521,3.395,522,3.395,523,4.407,524,5.468,525,4.949,526,4.949,527,4.949,528,4.949]],["title/components/AssetListComponent.html",[0,0.279,211,1.266]],["body/components/AssetListComponent.html",[0,0.366,1,0.966,2,1.052,3,0.207,4,0.213,5,0.801,7,1.035,8,1,10,0.162,17,1.358,20,2.201,21,0.95,22,2.903,24,0.857,26,0.007,32,0.9,33,2.166,34,1.884,37,1.358,39,0.416,40,0.696,42,1.034,45,1.099,46,1.59,52,1.092,53,0.884,55,2.585,56,3.266,64,1.481,67,0.83,68,1.351,69,1.186,71,1.052,84,1.615,87,1.548,88,1.203,89,1.746,99,0.97,100,1.067,101,0.817,116,1.481,118,4.925,120,0.737,123,1.512,126,1.406,128,0.95,132,2.249,150,0.217,152,0.343,165,0.143,166,0.168,196,0.711,197,1.481,198,0.787,200,1.917,201,1.035,202,1.035,203,0.933,204,1.777,205,0.95,206,0.983,207,1.671,208,0.966,209,0.983,210,2.233,211,1.82,212,1.88,213,1.951,214,0.983,215,1.586,216,2.288,217,0.983,218,0.983,219,1.035,220,0.966,221,1.507,222,0.983,223,1.035,224,0.966,225,1.035,226,0.95,227,0.95,228,1.669,229,1.777,230,0.95,231,0.966,232,0.966,233,0.95,234,1.035,235,0.983,236,2.073,237,0.983,238,0.966,239,0.983,240,0.983,241,0.983,242,0.966,243,1.035,244,0.966,245,0.983,246,1.035,247,0.966,248,1.035,249,0.966,250,0.966,251,1.107,252,1.035,253,0.966,254,1.035,255,0.95,256,0.966,257,1.035,258,0.966,259,1.035,260,1.291,261,1.035,262,0.966,263,1.602,264,1.035,265,0.95,266,1.035,267,0.966,268,1.035,269,0.933,270,1.035,271,0.966,272,0.95,273,0.966,274,0.918,275,1.035,276,0.966,277,1.035,278,1.035,279,0.966,280,1.035,281,0.966,282,1.035,283,0.933,284,1.035,285,0.95,286,0.966,287,1.035,288,0.966,289,1,290,1.035,291,0.95,292,0.966,293,1.954,294,0.966,295,0.983,296,0.857,297,0.983,298,2.423,299,0.966,300,0.983,301,0.983,302,0.983,303,1.035,304,0.95,305,0.966,306,1.035,307,0.966,308,1,309,0.966,310,1.035,311,0.966,312,1.035,313,0.983,314,0.966,315,0.966,316,1.035,317,0.966,318,1.035,319,0.966,320,1.035,321,0.966,322,0.918,323,0.902,324,0.933,325,1.035,326,0.95,327,1.035,328,0.95,329,1.035,330,0.95,331,1.035,332,0.95,333,1.035,334,0.95,335,1.018,336,1.035,337,0.95,338,1.018,339,1.035,340,0.003,341,0.004,342,0.003,375,1.247,376,2.036,378,2.652,383,1.092,390,2.963,394,1.054,472,2.243,493,1.58,497,3.493,500,2.52,520,1.561,529,4.984,530,4.581,531,3.425,532,4.984,533,3.72,534,3.384,535,3.667,536,6.597,537,3.392,538,5.596,539,3.347,540,6.577,541,2.903,542,5.596,543,2.963,544,4.28,545,1.822,546,3.845,547,3.425,548,3.425,549,1.392,550,3.425,551,3.425,552,3.845,553,3.845,554,3.845,555,1.977,556,3.845,557,3.148,558,2.036,559,3.845,560,1.871,561,3.845,562,2.941,563,3.425,564,3.845,565,1.822,566,3.148,567,2.243,568,3.845,569,3.845,570,2.351,571,1.45,572,3.839,573,3.425,574,3.845,575,2.651,576,3.148,577,3.845,578,3.845,579,3.845,580,3.845,581,2.036,582,2.941,583,3.845,584,2.638,585,1.392,586,3.845,587,3.845,588,3.148,589,3.845,590,3.845,591,3.845,592,2.775,593,2.417,594,3.845,595,3.845,596,2.941,597,3.845,598,2.417,599,2.243,600,5.596,601,4.28]],["title/components/AssetgroupSelectComponent.html",[0,0.279,208,1.266]],["body/components/AssetgroupSelectComponent.html",[0,0.387,1,1.07,2,1.132,3,0.229,4,0.236,5,0.887,7,1.146,8,1.107,10,0.179,17,1.461,21,1.051,22,3.073,24,0.949,26,0.007,33,2.174,34,1.891,37,1.461,39,0.461,40,0.749,42,1.58,45,0.709,46,1.382,53,0.951,56,3.422,64,1.593,67,0.78,68,1.554,69,1.126,83,0.734,88,0.638,89,0.965,99,0.626,100,1.045,101,0.452,120,0.92,126,1.512,128,1.051,142,2.274,150,0.233,152,0.38,165,0.158,166,0.186,196,0.787,197,1.593,198,0.872,200,2.009,201,1.146,202,1.146,203,1.034,204,1.881,205,1.051,206,1.088,207,0.982,208,1.907,209,2.27,210,2.302,211,1.07,212,1.584,213,2.044,214,1.088,215,1.41,216,2.351,217,1.088,218,1.088,219,1.146,220,1.07,221,1.621,222,1.088,223,1.146,224,1.07,225,1.146,226,1.051,227,1.051,228,1.721,229,1.881,230,1.051,231,1.07,232,1.07,233,1.051,234,1.146,235,1.088,236,2.157,237,1.088,238,1.07,239,1.088,240,1.088,241,1.088,242,1.07,243,1.146,244,1.07,245,1.088,246,1.146,247,1.07,248,1.146,249,1.07,250,1.07,251,1.646,252,1.146,253,1.07,254,1.146,255,1.051,256,1.07,257,1.146,258,1.07,259,1.146,260,0.982,261,1.146,262,1.07,263,1.695,264,1.146,265,1.051,266,1.146,267,1.07,268,1.146,269,1.034,270,1.146,271,1.07,272,1.051,273,1.07,274,1.016,275,1.146,276,1.07,277,1.146,278,1.146,279,1.07,280,1.146,281,1.07,282,1.146,283,1.034,284,1.146,285,1.051,286,1.07,287,1.146,288,1.07,289,1.107,290,1.146,291,1.051,292,1.07,293,1.913,294,1.07,295,1.088,296,0.949,297,1.088,298,1.088,299,1.07,300,1.088,301,1.088,302,1.088,303,1.146,304,1.051,305,1.07,306,1.146,307,1.07,308,1.107,309,1.07,310,1.146,311,1.07,312,1.146,313,1.088,314,1.07,315,1.07,316,1.146,317,1.07,318,1.146,319,1.07,320,1.146,321,1.07,322,1.016,323,0.999,324,1.034,325,1.146,326,1.051,327,1.146,328,1.051,329,1.146,330,1.051,331,1.146,332,1.051,333,1.146,334,1.051,335,1.127,336,1.146,337,1.051,338,1.127,339,1.146,340,0.003,341,0.004,342,0.003,375,1.692,389,1.191,471,2.27,510,1.836,602,8.017,603,7.368,604,3.485,605,5.362,606,5.37,607,4.791,608,7.592,609,6.984,610,4.118,611,3.938,612,5.717,613,4.258,614,5.362,615,4.258,616,4.258,617,4.258,618,4.258,619,3.792,620,3.792,621,3.792,622,3.073,623,2.189,624,1.606,625,2.676,626,3.073,627,4.258,628,4.258,629,4.928,630,3.641]],["title/guards/AuthGuard.html",[631,3.852,632,3.852]],["body/guards/AuthGuard.html",[3,0.332,4,0.343,10,0.26,12,0.725,17,1.5,26,0.007,32,0.994,39,0.669,40,0.769,53,1.219,67,0.704,69,0.979,71,1.582,72,2.538,83,1.066,85,5.294,88,0.926,99,0.909,100,0.74,101,0.655,141,2.538,150,0.352,152,0.551,154,1.92,165,0.23,166,0.27,186,1.402,272,1.526,340,0.004,341,0.005,342,0.004,373,2.596,389,1.223,446,3.702,447,3.374,448,3.718,451,2.785,510,2.354,555,4.532,631,5.902,632,5.902,633,6.179,634,7.495,635,5.503,636,5.294,637,4.667,638,6.218,639,4.351,640,3.493,641,5.945,642,4.851,643,3.657,644,7.214,645,9.252,646,4.094,647,4.177,648,6.179,649,6.179,650,5.294,651,3.478,652,2.398,653,3.604,654,4.812,655,3.089,656,3.884,657,4.05,658,6.179,659,5.058,660,4.05,661,1.45,662,2.237,663,2.483,664,6.179,665,5.058,666,6.179,667,6.179,668,6.179,669,7.717,670,6.179,671,6.179,672,5.503,673,6.179,674,6.179,675,6.179]],["title/modules/AuthModule.html",[343,1.142,676,3.636]],["body/modules/AuthModule.html",[2,1.423,3,0.322,4,0.332,10,0.252,12,0.703,25,2.725,26,0.007,150,0.372,152,0.534,153,2.407,154,1.861,165,0.281,166,0.261,186,1.088,196,1.107,269,2.354,288,2.436,289,1.558,305,2.436,340,0.004,341,0.005,342,0.004,343,1.881,345,2.355,346,2.258,347,3.407,348,2.46,349,3.333,355,5.175,356,3.179,357,2.306,358,2.005,361,2.534,362,2.633,463,3.377,581,3.171,632,5.787,676,7.146,677,5.334,678,5.334,679,5.334,680,5.334,681,5.334,682,7.019,683,5.354,684,4.902,685,5.214,686,4.266,687,5.787,688,3.586,689,2.699,690,5.461,691,5.987,692,5.191,693,6.739,694,4.58,695,5.334,696,5.989,697,4.58,698,5.334,699,4.902,700,5.989,701,5.989,702,5.989,703,5.989,704,5.989]],["title/injectables/AuthService.html",[652,1.565,683,2.938]],["body/injectables/AuthService.html",[3,0.329,4,0.188,10,0.143,12,0.398,25,2.014,26,0.007,27,3.378,32,0.986,34,0.959,39,0.367,44,3.206,45,0.85,46,1.622,53,1.43,54,2.701,67,0.7,68,1.961,69,1.127,86,2.006,87,1.923,88,1.375,99,1.276,100,1.038,101,0.96,116,1.306,120,0.672,132,2.739,137,1.775,150,0.264,152,0.303,164,1.213,165,0.126,166,0.148,186,1.764,207,2.228,272,1.805,289,2.131,293,1.343,296,1.137,308,1.901,340,0.002,341,0.003,342,0.005,357,1.964,383,1.935,389,0.671,440,4.424,444,5.542,446,2.575,448,3.085,451,1.529,475,3.343,477,1.97,478,2.701,493,3.366,520,0.946,521,5.464,533,4.329,543,4.065,545,3.23,549,2.468,562,6.267,571,1.279,638,3.343,650,3.499,652,1.585,662,1.228,663,1.363,683,2.975,685,2.132,686,1.913,705,1.608,706,3.021,707,4.175,708,2.975,709,3.343,710,6.071,711,5.95,712,4.175,713,3.853,714,4.687,715,5.017,716,4.175,717,5.872,718,4.175,719,5.459,720,3.681,721,5.58,722,2.975,723,4.543,724,4.543,725,4.543,726,5.101,727,4.543,728,5.101,729,5.101,730,4.543,731,6.817,732,6.817,733,5.101,734,5.101,735,3.021,736,3.393,737,3.206,738,4.543,739,5.101,740,3.393,741,5.459,742,6.721,743,4.543,744,3.393,745,5.101,746,3.393,747,1.924,748,6.817,749,5.101,750,8.384,751,3.378,752,3.393,753,2.785,754,6.071,755,3.206,756,5.101,757,3.393,758,4.467,759,2.777,760,3.393,761,6.838,762,5.101,763,3.393,764,3.393,765,5.101,766,3.393,767,5.101,768,3.393,769,4.175,770,2.701,771,3.021,772,3.393,773,4.543,774,2.223,775,2.223,776,1.696,777,2.223,778,6.817,779,6.817,780,5.101,781,5.101,782,5.101,783,6.071,784,5.101,785,3.393,786,5.101,787,3.393,788,6.129,789,5.58,790,3.393,791,3.393,792,5.101,793,3.393,794,2.777,795,3.021,796,3.393,797,2.132,798,3.393,799,3.393,800,3.393,801,3.393,802,3.393,803,3.393,804,3.393,805,5.101,806,3.021,807,5.101,808,3.393,809,3.084,810,3.393,811,3.206,812,3.499,813,3.393,814,5.101,815,5.101,816,3.393,817,3.393,818,3.393,819,4.175,820,3.343,821,5.101,822,3.393,823,5.101,824,3.681,825,5.101,826,5.101,827,3.499,828,5.101,829,5.101,830,5.101,831,5.101,832,3.393,833,5.101,834,3.393,835,3.393,836,3.393,837,3.393,838,3.393,839,3.393,840,3.393,841,3.393,842,3.393,843,3.393,844,3.393,845,3.021,846,2.132,847,3.021,848,3.393]],["title/modules/CalendarModule.html",[343,1.142,849,3.301]],["body/modules/CalendarModule.html",[2,1.378,3,0.306,4,0.316,10,0.239,12,0.668,25,2.662,26,0.007,27,3.987,53,0.9,67,0.739,69,0.722,88,0.853,99,0.838,100,0.682,101,0.604,150,0.357,152,0.508,164,1.127,165,0.272,166,0.249,186,1.035,196,1.053,218,2.461,222,2.461,245,2.461,281,2.419,340,0.004,341,0.005,342,0.004,343,1.837,345,2.24,346,2.148,347,3.328,348,2.34,349,3.256,356,3.079,357,2.193,358,1.907,361,1.907,362,2.551,651,3.303,686,4.132,688,3.473,689,2.567,690,5.848,713,5.695,849,6.473,850,5.073,851,5.073,852,5.073,853,6.95,854,5.073,855,4.606,856,5.29,857,5.073,858,7.329,859,4.432,860,5.696,861,5.696,862,5.696,863,5.696,864,5.696,865,5.696,866,5.696,867,5.073,868,5.999,869,5.696,870,5.999,871,5.696,872,5.999,873,5.073,874,5.073,875,5.696,876,3.445,877,3.212,878,5.073,879,5.696,880,5.696,881,5.696]],["title/classes/Collection.html",[166,0.22,882,3.301]],["body/classes/Collection.html",[3,0.182,4,0.188,10,0.143,12,0.398,26,0.007,32,1.519,39,0.939,40,0.635,45,1.423,46,1.52,52,2.671,53,0.806,67,0.832,69,1.148,83,1.261,87,2.178,88,1.356,89,1.658,97,1.475,99,1.276,100,1.038,101,0.943,120,1.125,137,1.181,150,0.132,164,1.447,165,0.126,166,0.223,181,1.501,186,1.523,215,1.039,340,0.002,341,0.003,342,0.002,358,1.137,375,2.158,389,0.672,394,2.377,461,1.181,484,2.875,493,2.096,520,1.902,535,4.018,539,3.787,558,3.61,624,1.924,650,4.678,651,3.074,654,4.578,655,1.697,656,4.286,722,3.577,747,3.56,769,2.779,882,6.208,883,2.464,884,3.023,885,6.132,886,5.103,887,4.914,888,5.103,889,5.103,890,6.819,891,4.545,892,4.177,893,5.103,894,5.103,895,3.086,896,5.103,897,5.103,898,4.545,899,5.641,900,4.177,901,6.132,902,3.577,903,3.153,904,3.395,905,3.344,906,8.268,907,3.395,908,4.018,909,5.103,910,5.103,911,6.029,912,3.659,913,3.395,914,4.124,915,4.469,916,6.819,917,5.103,918,5.103,919,3.395,920,5.103,921,3.903,922,3.208,923,5.103,924,3.395,925,5.103,926,5.103,927,3.395,928,5.103,929,5.103,930,3.395,931,3.395,932,2.624,933,5.103,934,3.395,935,5.103,936,5.103,937,3.395,938,3.977,939,5.103,940,5.103,941,3.395,942,5.103,943,3.395,944,3.395,945,3.395,946,3.395,947,2.329,948,3.395,949,3.395,950,3.395,951,3.395,952,3.395,953,3.317,954,3.395,955,3.395,956,3.395,957,2.134,958,1.568,959,5.221,960,3.903,961,6.132,962,5.103,963,5.103,964,3.395,965,1.853,966,3.395,967,3.395,968,3.395,969,6.819,970,7.311,971,6.132,972,7.967,973,3.395,974,3.395,975,3.395,976,3.395,977,3.023,978,3.395,979,3.395,980,3.395,981,3.395]],["title/classes/Config.html",[166,0.22,383,1.43]],["body/classes/Config.html",[3,0.331,4,0.342,10,0.259,12,0.723,26,0.007,39,0.668,40,0.959,45,1.027,46,1.664,53,1.218,67,0.767,68,1.921,69,0.977,72,3.617,87,2.169,88,1.259,99,0.907,100,0.738,101,0.892,116,2.967,120,0.812,165,0.229,166,0.336,186,1.4,340,0.004,341,0.005,342,0.004,383,2.831,386,3.165,412,3.596,477,1.782,493,2.532,570,3.699,575,3.892,623,3.17,643,3.652,663,3.378,751,4.069,859,3.728,883,2.477,982,5.491,983,7.486,984,6.308,985,6.165,986,6.165,987,6.165,988,6.863,989,7.706,990,4.528,991,7.706,992,6.863,993,7.706,994,4.843,995,6.863,996,4.495,997,5.046,998,4.715,999,6.165,1000,6.165,1001,6.165,1002,7.706,1003,8.406,1004,6.165]],["title/components/CrudComponent.html",[0,0.279,220,1.266]],["body/components/CrudComponent.html",[0,0.313,1,0.748,2,0.868,3,0.16,4,0.165,5,1.436,7,0.802,8,0.774,9,1.25,10,0.125,12,0.349,17,1.12,21,0.735,22,2.488,24,0.663,26,0.007,32,1.173,33,2.145,34,1.862,37,1.12,39,0.322,40,0.574,42,1.274,45,0.769,46,1.747,52,2.232,53,1.202,56,2.871,64,1.221,67,0.788,68,1.411,69,1.139,71,0.868,74,3.53,83,0.796,87,1.083,88,1.209,89,1.047,99,1.014,100,1.046,101,0.875,116,3.235,120,0.839,123,2.711,126,1.6,128,0.735,130,1.979,142,2.279,150,0.335,151,1.342,152,0.265,154,1.979,164,0.589,165,0.111,166,0.13,181,1.663,186,1.429,196,0.55,197,1.496,198,0.609,199,1.25,200,1.686,201,0.802,202,0.802,203,0.723,204,1.522,205,0.735,206,0.761,207,0.686,208,0.748,209,0.761,210,2.049,211,0.748,212,1.282,213,1.715,214,0.761,215,1.542,216,2.118,217,0.761,218,0.761,219,0.802,220,1.832,221,1.243,222,0.761,223,0.802,224,0.748,225,0.802,226,0.735,227,0.735,228,1.793,229,1.522,230,0.735,231,0.748,232,0.748,233,0.735,234,0.802,235,0.761,236,1.856,237,1.628,238,0.748,239,0.761,240,1.628,241,0.761,242,0.748,243,0.802,244,0.748,245,0.761,246,0.802,247,0.748,248,0.802,249,0.748,250,0.748,251,0.913,252,0.802,253,0.748,254,0.802,255,0.735,256,0.748,257,0.802,258,0.748,259,0.802,260,1.469,261,0.802,262,0.748,263,1.372,264,0.802,265,0.735,266,0.802,267,0.748,268,0.802,269,0.723,270,0.802,271,0.748,272,0.735,273,0.748,274,0.71,275,0.802,276,0.748,277,0.802,278,0.802,279,0.748,280,0.802,281,0.748,282,0.802,283,0.723,284,0.802,285,0.735,286,0.748,287,0.802,288,0.748,289,0.774,290,0.802,291,0.735,292,0.748,293,1.723,294,0.748,295,0.761,296,0.663,297,0.761,298,0.761,299,0.748,300,0.761,301,0.761,302,0.761,303,0.802,304,0.735,305,0.748,306,0.802,307,0.748,308,0.774,309,0.748,310,0.802,311,0.748,312,0.802,313,0.761,314,0.748,315,0.748,316,0.802,317,0.748,318,0.802,319,0.748,320,0.802,321,0.748,322,0.71,323,0.698,324,0.723,325,0.802,326,0.735,327,0.802,328,0.735,329,0.802,330,0.735,331,0.802,332,0.735,333,0.802,334,0.735,335,0.788,336,0.802,337,0.735,338,0.788,339,0.802,340,0.002,341,0.003,342,0.002,358,1.546,373,1.25,375,1.029,376,3.373,379,0.845,383,1.605,386,2.996,389,0.589,390,2.993,394,1.265,446,1.939,447,1.625,448,2.56,451,1.342,463,2.602,470,4.975,471,1.741,490,2.187,497,1.576,510,1.725,534,4.41,541,3.033,570,2.375,575,1.196,592,3.331,596,5.272,599,1.736,601,2.276,640,1.146,646,3.354,647,3.019,653,1.736,662,1.078,663,3.245,683,3.715,685,3.553,747,2.402,776,1.488,797,1.871,958,3.812,1005,2.651,1006,3.778,1007,3.166,1008,3.778,1009,3.778,1010,3.53,1011,4.616,1012,2.993,1013,3.419,1014,3.188,1015,4.111,1016,5.654,1017,5.407,1018,3.778,1019,4.616,1020,4.616,1021,4.616,1022,3.553,1023,3.419,1024,4.438,1025,3.553,1026,3.591,1027,3.188,1028,2.047,1029,2.453,1030,4.616,1031,4.021,1032,2.976,1033,3.778,1034,4.111,1035,2.602,1036,2.976,1037,4.616,1038,2.976,1039,2.976,1040,2.676,1041,5.578,1042,2.976,1043,2.444,1044,4.111,1045,2.976,1046,2.692,1047,4.616,1048,2.976,1049,3.331,1050,3.778,1051,4.616,1052,2.976,1053,3.184,1054,4.616,1055,2.976,1056,4.616,1057,2.976,1058,4.616,1059,2.976,1060,2.187,1061,3.019,1062,4.616,1063,2.976,1064,3.331,1065,2.976,1066,3.166,1067,2.907,1068,3.025,1069,2.976,1070,2.976,1071,1.625,1072,2.436,1073,2.651,1074,2.276,1075,1.951,1076,1.951,1077,2.976,1078,2.976,1079,2.976,1080,2.651,1081,2.148,1082,2.976,1083,5.035,1084,2.651,1085,2.276,1086,2.651,1087,2.976,1088,2.976,1089,2.976,1090,2.976,1091,2.976,1092,2.976,1093,2.976,1094,2.976,1095,2.976,1096,2.976,1097,2.976,1098,2.651,1099,2.651,1100,2.976,1101,2.976,1102,2.791,1103,2.373,1104,4.08,1105,2.976,1106,2.042,1107,3.331,1108,2.976,1109,1.871,1110,1.871,1111,2.042,1112,2.042,1113,2.976,1114,1.951,1115,4.111]],["title/interfaces/CrudConfig.html",[366,1.43,1031,2.938]],["body/interfaces/CrudConfig.html",[0,0.442,3,0.202,4,0.209,10,0.274,12,0.442,20,2.168,26,0.007,32,1.549,34,1.037,39,0.408,40,0.686,48,1.538,53,1.335,65,4.217,67,0.883,68,1.899,71,1.647,72,2.265,86,2.168,101,1.055,120,0.726,150,0.253,154,1.171,165,0.14,181,1.622,209,1.409,212,1.25,215,1.432,228,1.841,251,1.734,260,1.655,283,1.742,296,1.921,322,1.712,340,0.003,341,0.004,342,0.003,366,1.07,368,1.658,375,2.207,378,3.09,379,1.07,384,3.718,386,2.265,470,5.758,472,4.186,478,4.224,482,3.98,484,3.137,497,2.919,500,3.613,520,1.538,539,2.547,541,3.51,555,3.69,560,2.682,565,2.613,571,3.186,610,4.102,630,3.334,643,2.613,646,3.881,747,2.88,754,7.105,770,2.919,809,4.34,811,4.099,812,4.473,859,3.334,887,2.835,932,2.835,958,2.547,1014,3.109,1031,4.186,1033,4.513,1060,4.256,1116,3.356,1117,2.368,1118,5.514,1119,5.514,1120,7.176,1121,7.176,1122,7.176,1123,7.176,1124,7.978,1125,7.176,1126,7.176,1127,5.179,1128,6.391,1129,7.176,1130,7.176,1131,6.391,1132,5.538,1133,7.176,1134,7.176,1135,7.176,1136,7.176,1137,6.391,1138,7.176,1139,7.176,1140,4.217,1141,4.911,1142,3.98,1143,5.514,1144,4.923,1145,5.488,1146,2.613,1147,1.957,1148,3.918,1149,5.228,1150,2.919,1151,4.217,1152,5.514,1153,4.911,1154,3.613,1155,4.046,1156,3.98,1157,4.911,1158,4.217,1159,3.109,1160,4.34,1161,4.911,1162,4.217,1163,3.466,1164,5.514,1165,4.217,1166,4.217,1167,4.513,1168,5.514,1169,2.835,1170,6.391,1171,6.391,1172,4.34,1173,7.176,1174,4.911,1175,5.514,1176,3.334,1177,2.682,1178,3.613,1179,3.334,1180,5.514,1181,4.513,1182,3.782,1183,4.513,1184,4.217,1185,5.514,1186,4.513,1187,3.613,1188,5.514,1189,4.911,1190,3.768]],["title/modules/DataModule.html",[343,1.142,1191,3.455]],["body/modules/DataModule.html",[3,0.228,4,0.235,10,0.178,25,2.49,26,0.007,27,2.641,53,0.67,69,0.538,88,0.635,99,0.624,100,0.507,101,0.45,116,2.311,150,0.378,152,0.378,153,1.704,154,1.317,164,0.839,165,0.223,166,0.185,186,0.77,196,0.784,205,2.154,215,1.285,220,2.307,226,2.154,227,2.154,228,1.849,235,2.348,237,2.348,238,2.343,239,2.384,240,2.348,241,2.384,328,2.268,330,2.268,340,0.003,341,0.004,342,0.003,343,0.961,345,1.668,346,1.599,347,2.862,348,1.742,349,2.8,355,5.178,356,2.522,357,1.633,358,1.42,360,3.385,361,2.01,362,2.089,389,0.839,430,3.243,599,2.473,653,2.473,676,6.629,688,2.845,689,1.911,690,5.03,692,4.118,694,3.243,711,5.697,713,3.773,714,3.243,715,3.471,720,4.333,776,3.001,856,4.333,996,2.473,1026,4.682,1072,3.471,1074,4.591,1075,3.934,1076,2.779,1191,6.887,1192,3.776,1193,3.776,1194,3.776,1195,3.776,1196,3.776,1197,6.629,1198,6.3,1199,6.019,1200,5.697,1201,5.994,1202,5.022,1203,3.776,1204,3.776,1205,6.003,1206,4.24,1207,5.346,1208,5.346,1209,3.243,1210,3.061,1211,4.24,1212,4.24,1213,3.776,1214,4.24,1215,3.773,1216,3.773,1217,3.243,1218,3.471,1219,3.061,1220,5.346,1221,4.591,1222,4.24,1223,4.24,1224,3.061,1225,3.776,1226,4.24,1227,3.471,1228,3.776,1229,4.24]],["title/components/DatetimeComponent.html",[0,0.279,224,1.266]],["body/components/DatetimeComponent.html",[0,0.428,1,0.972,2,1.057,3,0.208,4,0.214,5,0.806,7,1.042,8,1.006,9,1.625,10,0.162,12,0.454,17,1.364,18,5.454,21,0.955,24,0.862,25,1.846,26,0.007,27,2.473,28,3.614,29,3.068,30,3.614,31,3.068,32,1.169,33,2.167,34,1.884,37,1.364,39,0.419,40,0.699,42,1.573,43,4.161,45,1.21,46,1.31,47,2.809,53,0.888,57,4.761,58,5.061,61,3.399,64,1.487,67,0.734,68,1.151,69,1.118,71,1.057,83,0.969,87,1.318,88,0.991,89,1.501,94,3.532,97,1.624,99,0.827,100,1.038,101,0.596,102,3.532,112,3.532,116,2.164,120,1.016,123,1.521,126,1.412,128,0.955,130,1.746,138,4.799,150,0.282,151,1.743,152,0.345,153,1.554,165,0.144,166,0.169,191,2.181,192,2.431,196,0.715,197,1.487,198,0.792,199,1.625,200,1.923,201,1.042,202,1.042,203,0.939,204,1.783,205,0.955,206,0.989,207,0.892,208,0.972,209,0.989,210,2.237,211,0.972,212,1.501,213,1.956,214,0.989,215,1.365,216,2.292,217,0.989,218,1.857,219,1.042,220,0.972,221,1.513,222,0.989,223,1.042,224,2.023,225,1.042,226,0.955,227,0.955,228,1.672,229,1.783,230,0.955,231,0.972,232,0.972,233,0.955,234,1.042,235,0.989,236,2.078,237,0.989,238,0.972,239,0.989,240,0.989,241,0.989,242,0.972,243,1.042,244,0.972,245,0.989,246,1.042,247,0.972,248,1.042,249,0.972,250,0.972,251,1.112,252,1.042,253,0.972,254,1.042,255,0.955,256,0.972,257,1.042,258,0.972,259,1.042,260,0.892,261,1.042,262,0.972,263,1.607,264,1.042,265,0.955,266,1.042,267,0.972,268,1.042,269,0.939,270,1.042,271,0.972,272,0.955,273,0.972,274,0.923,275,1.042,276,0.972,277,1.042,278,1.042,279,0.972,280,1.042,281,0.972,282,1.042,283,0.939,284,1.042,285,0.955,286,0.972,287,1.042,288,0.972,289,1.006,290,1.042,291,0.955,292,0.972,293,1.865,294,0.972,295,0.989,296,0.862,297,0.989,298,0.989,299,0.972,300,0.989,301,0.989,302,0.989,303,1.042,304,0.955,305,0.972,306,1.042,307,0.972,308,1.006,309,0.972,310,1.042,311,0.972,312,1.042,313,0.989,314,0.972,315,0.972,316,1.042,317,0.972,318,1.042,319,0.972,320,1.042,321,0.972,322,0.923,323,0.907,324,0.939,325,1.042,326,0.955,327,1.042,328,0.955,329,1.042,330,0.955,331,1.042,332,0.955,333,1.042,334,0.955,335,1.024,336,1.042,337,0.955,338,1.024,339,1.042,340,0.003,341,0.004,342,0.003,375,1.253,432,3.068,585,2.035,610,3.968,747,2.119,855,4.851,876,5.459,877,3.169,1149,3.683,1230,3.445,1231,4.761,1232,5.005,1233,5.62,1234,6.62,1235,6.62,1236,5.005,1237,3.868,1238,4.238,1239,4.056,1240,3.868,1241,5.62,1242,3.868,1243,3.868,1244,5.62,1245,3.868,1246,6.471,1247,3.868,1248,3.868,1249,5.62,1250,3.868,1251,3.868,1252,5.005,1253,3.868,1254,5.005,1255,5.62,1256,3.532,1257,2.792,1258,2.181,1259,3.868]],["title/pipes/DatetimePipe.html",[853,3.636,1260,2.59]],["body/pipes/DatetimePipe.html",[3,0.338,4,0.349,10,0.265,12,0.739,17,1.529,24,1.404,26,0.007,32,1.013,45,1.586,52,2.217,53,0.995,67,0.575,68,2.013,69,0.799,71,1.468,87,1.832,88,0.943,99,0.926,100,1.016,101,0.668,120,0.83,141,3.208,150,0.329,152,0.562,164,1.246,165,0.234,166,0.275,186,1.542,340,0.004,341,0.005,342,0.004,493,2.587,575,3.138,663,3.138,708,4.555,747,2.945,853,5.636,876,5.133,887,4.015,905,5.118,1028,2.28,1029,3.007,1231,5.118,1256,4.908,1257,4.546,1260,4.015,1261,4.546,1262,5.609,1263,5.357,1264,4.403,1265,5.636,1266,5.118,1267,6.298,1268,6.976,1269,8.124,1270,6.298,1271,7.809,1272,5.636,1273,4.546,1274,3.959,1275,6.298,1276,6.298,1277,5.609,1278,6.298,1279,6.298,1280,6.298,1281,6.298,1282,6.298,1283,6.298,1284,6.298]],["title/interfaces/Day.html",[366,1.43,1285,4.123]],["body/interfaces/Day.html",[0,0.286,3,0.185,4,0.191,10,0.145,12,0.405,17,0.838,22,2.273,23,2.328,26,0.007,32,1.288,33,0.743,34,0.649,37,0.838,39,0.929,40,0.643,42,1.585,46,1.361,56,1.555,67,0.84,68,1.843,72,2.122,83,1.27,86,2.435,87,1.813,88,0.774,89,1.669,97,1.789,101,0.729,137,2.985,142,2.205,150,0.285,152,0.308,164,1.457,165,0.192,166,0.337,181,1.52,184,3.279,186,1.635,281,0.867,296,1.152,340,0.002,341,0.003,342,0.002,366,1.758,368,1.518,375,1.988,389,0.683,394,1.416,438,2.261,484,2.895,510,1.889,520,1.441,535,4.058,539,1.594,558,2.735,584,2.367,585,1.87,654,4.019,655,1.725,747,1.948,751,2.273,855,3.247,873,3.073,874,5.515,876,5.444,878,7.855,883,1.387,922,2.169,953,3.012,958,1.594,1023,4.844,1028,1.249,1029,1.989,1040,1.45,1043,1.827,1061,3.258,1140,2.639,1147,1.834,1149,2.261,1177,1.679,1209,2.639,1232,4.601,1236,7.755,1239,2.49,1254,7.755,1256,5.178,1257,2.49,1273,2.49,1274,2.169,1285,7.815,1286,3.073,1287,7.362,1288,3.897,1289,6.882,1290,7.362,1291,5.782,1292,8.577,1293,4.229,1294,3.729,1295,6.557,1296,8.82,1297,6.192,1298,4.229,1299,2.824,1300,2.367,1301,2.261,1302,3.451,1303,2.824,1304,3.451,1305,5.515,1306,5.166,1307,6.026,1308,3.013,1309,5.166,1310,3.073,1311,2.639,1312,2.087,1313,3.451,1314,3.451,1315,3.451,1316,7.727,1317,3.451,1318,3.451,1319,3.451,1320,3.451,1321,2.824,1322,3.451,1323,4.229,1324,1.774,1325,3.451,1326,3.451,1327,3.451,1328,3.451,1329,3.451,1330,3.451,1331,6.875,1332,3.451,1333,3.451,1334,3.451,1335,3.451,1336,3.451,1337,3.451,1338,3.451,1339,3.451,1340,3.451,1341,3.451,1342,7.727,1343,5.166,1344,6.192,1345,5.166,1346,6.192,1347,5.166,1348,3.451,1349,3.451,1350,3.451,1351,3.451,1352,3.451,1353,7.362,1354,3.451,1355,3.451,1356,3.451,1357,3.451,1358,3.451,1359,3.451,1360,6.875,1361,3.451,1362,5.166,1363,5.166,1364,5.069,1365,3.451,1366,3.451,1367,3.451,1368,3.451,1369,3.451,1370,5.166,1371,3.451,1372,3.451,1373,5.166,1374,2.49,1375,1.679,1376,3.451,1377,3.451,1378,3.451,1379,3.451,1380,3.451,1381,3.451,1382,3.451,1383,3.451,1384,5.166,1385,3.451,1386,3.451,1387,3.451,1388,3.451,1389,3.451,1390,3.451,1391,3.451,1392,3.451,1393,3.451,1394,3.451,1395,6.192,1396,3.451,1397,6.192,1398,3.451,1399,3.451,1400,3.451,1401,3.451,1402,5.166,1403,3.451,1404,3.451,1405,3.451,1406,3.451,1407,3.073,1408,6.192,1409,3.451,1410,2.639,1411,3.451,1412,2.087,1413,3.451,1414,3.451,1415,3.451,1416,5.627,1417,5.166,1418,3.451,1419,3.451,1420,3.451,1421,3.451,1422,3.451,1423,3.729,1424,3.451,1425,3.451,1426,3.451,1427,2.49,1428,3.451,1429,3.451,1430,3.451,1431,3.451,1432,3.451,1433,3.451,1434,3.451,1435,3.451,1436,3.451,1437,2.087,1438,3.451,1439,2.639,1440,3.451,1441,3.451,1442,3.451,1443,3.451,1444,3.451,1445,3.451]],["title/components/DefaultEntryInputComponent.html",[0,0.279,226,1.244]],["body/components/DefaultEntryInputComponent.html",[0,0.438,1,1.03,2,1.102,3,0.22,4,0.227,5,1.425,7,1.104,8,1.067,10,0.172,12,0.481,20,2.305,21,2.254,24,0.914,26,0.007,32,0.66,33,2.17,34,1.887,37,1.423,39,0.444,40,0.729,42,1.65,45,0.977,46,1.848,47,3.42,48,2.358,49,3.685,50,4.875,51,3.01,52,2.119,53,0.926,62,3.952,63,4.137,67,0.803,69,1.146,71,1.102,83,0.707,88,0.878,89,1.329,99,0.862,100,1.053,101,0.622,117,2.813,118,4.578,119,3.136,120,1.139,121,3.136,126,1.473,128,1.013,130,1.821,138,2.312,139,3.136,140,3.136,141,1.685,142,1.756,143,3.136,144,2.312,145,3.136,146,2.48,147,3.136,148,3.136,149,2.813,150,0.265,152,0.366,154,1.274,165,0.152,166,0.179,196,0.758,197,1.551,198,0.84,200,1.975,201,1.104,202,1.104,203,0.996,204,1.842,205,1.013,206,1.048,207,0.946,208,1.03,209,1.048,210,2.277,211,1.03,212,1.551,213,2.01,214,1.048,215,1.392,216,2.328,217,1.048,218,1.048,219,1.104,220,1.03,221,1.579,222,1.048,223,1.104,224,1.03,225,1.104,226,1.843,227,1.013,228,1.853,229,1.842,230,1.013,231,1.03,232,1.03,233,1.013,234,1.104,235,1.048,236,2.126,237,1.048,238,1.03,239,1.048,240,1.048,241,1.048,242,1.03,243,1.104,244,1.03,245,1.048,246,1.104,247,1.03,248,1.104,249,1.03,250,1.03,251,1.16,252,1.104,253,1.03,254,1.104,255,1.013,256,1.03,257,1.104,258,1.03,259,1.104,260,0.946,261,1.104,262,1.03,263,1.661,264,1.104,265,1.013,266,1.104,267,1.03,268,1.104,269,0.996,270,1.104,271,1.03,272,1.013,273,1.03,274,0.979,275,1.104,276,1.03,277,1.104,278,1.104,279,1.03,280,1.104,281,1.03,282,1.104,283,0.996,284,1.104,285,1.013,286,1.03,287,1.104,288,1.03,289,1.067,290,1.104,291,1.013,292,1.03,293,1.895,294,1.03,295,1.048,296,0.914,297,1.048,298,1.048,299,1.03,300,1.048,301,1.048,302,1.048,303,1.104,304,1.013,305,1.03,306,1.104,307,1.03,308,1.067,309,1.03,310,1.104,311,1.03,312,1.104,313,1.048,314,1.03,315,1.03,316,1.104,317,1.03,318,1.104,319,1.03,320,1.104,321,1.03,322,0.979,323,0.962,324,0.996,325,1.104,326,1.013,327,1.104,328,1.013,329,1.104,330,1.013,331,1.104,332,1.013,333,1.104,334,1.013,335,1.085,336,1.104,337,1.013,338,1.085,339,1.104,340,0.003,341,0.004,342,0.003,389,0.812,429,5.388,431,2.96,432,3.2,433,3.685,434,3.014,445,4.483,446,3.136,447,2.239,448,3.173,451,1.848,453,1.805,454,3.357,457,3.357,458,4.798,459,4.798,460,3.545,1216,4.692,1293,4.798,1446,4.101,1447,5.862]],["title/components/DefaultEntryOutputComponent.html",[0,0.279,227,1.244]],["body/components/DefaultEntryOutputComponent.html",[0,0.483,1,1.143,2,1.186,3,0.244,4,0.252,5,0.947,7,1.225,8,1.183,10,0.191,12,0.534,21,1.123,24,1.014,26,0.007,33,2.178,34,1.895,37,1.531,39,0.493,40,0.785,42,0.841,48,2.476,52,2.52,67,0.575,69,0.8,100,1.042,120,1.169,126,1.584,128,1.123,150,0.245,152,0.406,165,0.169,166,0.199,196,0.841,197,1.669,198,0.932,200,2.068,201,1.225,202,1.225,203,1.104,204,1.949,205,1.123,206,1.163,207,1.049,208,1.143,209,1.163,210,2.345,211,1.143,212,1.641,213,2.104,214,1.163,215,1.44,216,2.39,217,1.163,218,1.163,219,1.225,220,1.143,221,1.698,222,1.163,223,1.225,224,1.143,225,1.225,226,1.123,227,1.93,228,1.897,229,1.949,230,1.123,231,1.143,232,1.143,233,1.123,234,1.225,235,1.163,236,2.21,237,1.163,238,1.143,239,1.163,240,1.163,241,1.163,242,1.143,243,1.225,244,1.143,245,1.163,246,1.225,247,1.143,248,1.225,249,1.143,250,1.143,251,1.248,252,1.225,253,1.143,254,1.225,255,1.123,256,1.143,257,1.225,258,1.143,259,1.225,260,1.049,261,1.225,262,1.143,263,1.757,264,1.225,265,1.123,266,1.225,267,1.143,268,1.225,269,1.104,270,1.225,271,1.143,272,1.123,273,1.143,274,1.086,275,1.225,276,1.143,277,1.225,278,1.225,279,1.143,280,1.225,281,1.143,282,1.225,283,1.104,284,1.225,285,1.123,286,1.143,287,1.225,288,1.143,289,1.183,290,1.225,291,1.123,292,1.143,293,1.945,294,1.143,295,1.163,296,1.014,297,1.163,298,1.163,299,1.143,300,1.163,301,1.163,302,1.163,303,1.225,304,1.123,305,1.143,306,1.225,307,1.143,308,1.183,309,1.143,310,1.225,311,1.143,312,1.225,313,1.163,314,1.143,315,1.143,316,1.225,317,1.143,318,1.225,319,1.143,320,1.225,321,1.143,322,1.086,323,1.067,324,1.104,325,1.225,326,1.123,327,1.225,328,1.123,329,1.225,330,1.123,331,1.225,332,1.123,333,1.225,334,1.123,335,1.204,336,1.225,337,1.123,338,1.204,339,1.225,340,0.003,341,0.004,342,0.003,379,1.292,429,5.224,432,3.443,433,3.964,434,3.242,457,3.724,458,5.162,459,5.162,460,3.814,510,2.784,777,4.133,1216,4.549,1293,5.162,1375,3.068,1448,3.724,1449,5.616,1450,4.052,1451,4.052,1452,5.616]],["title/components/DefaultInputComponent.html",[0,0.279,21,1.244]],["body/components/DefaultInputComponent.html",[0,0.433,1,1.002,2,1.08,3,0.214,4,0.221,5,0.831,7,1.074,8,1.037,10,0.168,12,0.468,17,1.395,21,1.82,23,1.798,24,0.889,26,0.007,32,0.924,33,2.168,34,1.885,37,1.395,39,0.432,40,0.715,42,1.55,45,0.957,46,1.827,47,3.905,48,2.533,49,4.234,50,4.629,51,3.437,52,2.437,53,0.908,62,4.544,63,4.457,67,0.765,69,1.109,71,1.386,83,0.991,88,0.861,89,1.303,99,0.845,100,1.046,101,0.61,117,3.942,120,1.072,126,1.444,128,0.985,130,2.29,138,3.798,141,2.36,142,2.34,144,3.24,146,4.073,149,3.942,150,0.303,152,0.356,153,1.603,165,0.148,166,0.174,196,0.737,197,1.521,198,0.817,200,1.95,201,1.074,202,1.074,203,0.968,204,1.814,205,0.985,206,1.02,207,0.92,208,1.002,209,1.02,210,2.258,211,1.002,212,1.527,213,1.985,214,1.02,215,1.379,216,2.311,217,1.02,218,1.02,219,1.074,220,1.002,221,1.547,222,1.02,223,1.074,224,1.002,225,1.074,226,0.985,227,0.985,228,1.688,229,1.814,230,0.985,231,1.002,232,1.002,233,0.985,234,1.074,235,1.02,236,2.104,237,1.02,238,1.002,239,1.02,240,1.02,241,1.02,242,1.002,243,1.074,244,1.002,245,1.02,246,1.074,247,1.002,248,1.074,249,1.002,250,1.002,251,1.137,252,1.074,253,1.002,254,1.074,255,0.985,256,1.002,257,1.074,258,1.002,259,1.074,260,0.92,261,1.074,262,1.002,263,1.635,264,1.074,265,0.985,266,1.074,267,1.002,268,1.074,269,0.968,270,1.074,271,1.002,272,0.985,273,1.002,274,0.952,275,1.074,276,1.002,277,1.074,278,1.074,279,1.002,280,1.074,281,1.002,282,1.074,283,0.968,284,1.074,285,0.985,286,1.002,287,1.074,288,1.002,289,1.037,290,1.074,291,0.985,292,1.002,293,1.881,294,1.002,295,1.02,296,0.889,297,1.02,298,1.02,299,1.002,300,1.02,301,1.02,302,1.02,303,1.074,304,0.985,305,1.002,306,1.074,307,1.002,308,1.037,309,1.002,310,1.074,311,1.002,312,1.074,313,1.02,314,1.002,315,1.002,316,1.074,317,1.002,318,1.074,319,1.002,320,1.074,321,1.002,322,0.952,323,0.936,324,0.968,325,1.074,326,0.985,327,1.074,328,0.985,329,1.074,330,0.985,331,1.074,332,0.985,333,1.074,334,0.985,335,1.056,336,1.074,337,0.985,338,1.056,339,1.074,340,0.003,341,0.004,342,0.003,379,1.132,389,0.789,424,2.412,431,2.879,432,3.137,433,3.612,434,2.955,445,4.394,449,3.552,453,1.755,474,2.873,687,4.394,1453,7.265,1454,6.787,1455,5.118,1456,5.151,1457,3.989,1458,5.746,1459,3.989,1460,3.989,1461,3.989,1462,3.989,1463,3.989,1464,3.989,1465,3.989,1466,3.265,1467,3.265,1468,3.989,1469,3.989,1470,3.989,1471,2.736,1472,5.746,1473,5.746,1474,5.746]],["title/components/DefaultOutputComponent.html",[0,0.279,230,1.244]],["body/components/DefaultOutputComponent.html",[0,0.4,1,1.134,2,1.179,3,0.243,4,0.25,5,0.94,7,1.216,8,1.174,10,0.19,12,0.53,21,1.115,24,1.006,26,0.007,33,2.177,34,1.895,37,1.523,39,0.489,40,0.78,42,1.332,48,2.541,52,2.586,67,0.572,69,0.795,100,1.04,120,1.116,126,1.576,128,1.115,149,4.303,150,0.243,152,0.403,165,0.168,166,0.197,196,0.834,197,1.66,198,0.924,200,2.061,201,1.216,202,1.216,203,1.096,204,1.941,205,1.115,206,1.154,207,1.041,208,1.134,209,1.154,210,2.34,211,1.134,212,1.634,213,2.097,214,1.154,215,1.436,216,2.386,217,1.154,218,1.154,219,1.216,220,1.134,221,1.689,222,1.154,223,1.216,224,1.134,225,1.216,226,1.115,227,1.115,228,1.749,229,1.941,230,1.924,231,1.134,232,1.134,233,1.115,234,1.216,235,1.154,236,2.204,237,1.154,238,1.134,239,1.154,240,1.154,241,1.154,242,1.134,243,1.216,244,1.134,245,1.154,246,1.216,247,1.134,248,1.216,249,1.134,250,1.134,251,1.241,252,1.216,253,1.134,254,1.216,255,1.115,256,1.134,257,1.216,258,1.134,259,1.216,260,1.041,261,1.216,262,1.134,263,1.75,264,1.216,265,1.115,266,1.216,267,1.134,268,1.216,269,1.096,270,1.216,271,1.134,272,1.115,273,1.134,274,1.077,275,1.216,276,1.134,277,1.216,278,1.216,279,1.134,280,1.216,281,1.134,282,1.216,283,1.096,284,1.216,285,1.115,286,1.134,287,1.216,288,1.134,289,1.174,290,1.216,291,1.115,292,1.134,293,1.942,294,1.134,295,1.154,296,1.006,297,1.154,298,1.154,299,1.134,300,1.154,301,1.154,302,1.154,303,1.216,304,1.115,305,1.134,306,1.216,307,1.134,308,1.174,309,1.134,310,1.216,311,1.134,312,1.216,313,1.154,314,1.134,315,1.134,316,1.216,317,1.134,318,1.216,319,1.134,320,1.216,321,1.134,322,1.077,323,1.059,324,1.096,325,1.216,326,1.115,327,1.216,328,1.115,329,1.216,330,1.115,331,1.216,332,1.115,333,1.216,334,1.115,335,1.195,336,1.216,337,1.115,338,1.195,339,1.216,340,0.003,341,0.004,342,0.003,379,1.282,384,2.76,432,3.424,433,3.942,510,2.376,770,3.321,777,4.11,1238,3.659,1448,3.695,1449,5.586,1450,4.02,1451,4.02,1452,8.544,1453,5.9,1475,5.512,1476,6.272,1477,4.514,1478,4.514,1479,7.789,1480,4.303]],["title/directives/DropzoneDirective.html",[198,1.031,326,1.244]],["body/directives/DropzoneDirective.html",[3,0.303,4,0.313,10,0.237,12,0.662,24,1.257,26,0.007,32,1.419,33,1.569,39,0.611,42,1.346,45,0.94,46,1.116,64,1.927,67,0.736,69,1.166,83,0.973,99,0.83,100,0.675,101,0.598,120,0.743,122,3.842,126,2.141,142,2.553,150,0.219,152,0.503,165,0.21,166,0.352,186,1.548,198,1.745,323,1.323,326,1.799,340,0.004,341,0.005,342,0.004,375,1.623,389,1.116,394,2.553,471,2.746,508,5.271,510,2.222,623,3.745,625,4.578,662,2.042,912,3.479,1040,3.581,1177,4.721,1210,6.522,1364,6.602,1481,5.024,1482,6.486,1483,7.283,1484,8.824,1485,8.066,1486,5.57,1487,7.283,1488,4.996,1489,8.523,1490,9.037,1491,5.024,1492,5.641,1493,5.961,1494,5.641,1495,6.486,1496,7.283,1497,5.641,1498,8.523,1499,5.641,1500,7.283,1501,3.856,1502,5.533,1503,5.641,1504,5.641,1505,6.522,1506,5.641,1507,5.641,1508,5.641,1509,5.641,1510,4.071,1511,5.024,1512,5.024,1513,5.641,1514,5.641,1515,8.066,1516,6.602,1517,7.859,1518,5.641,1519,5.641,1520,5.641,1521,5.641,1522,5.641,1523,5.641,1524,5.641]],["title/components/DynamicRackComponent.html",[0,0.279,231,1.266]],["body/components/DynamicRackComponent.html",[0,0.404,1,1.158,2,1.196,3,0.248,4,0.256,5,0.96,7,1.241,8,1.199,10,0.194,12,0.541,21,1.138,24,1.027,26,0.007,33,2.178,34,1.898,37,1.545,42,0.852,48,1.775,67,0.42,69,0.585,71,1.603,84,2.673,99,0.678,100,1.066,101,0.489,120,0.838,126,1.599,128,1.138,130,1.977,150,0.247,152,0.411,165,0.171,166,0.201,196,0.852,197,1.684,198,1.492,200,2.08,201,1.241,202,1.241,203,1.119,204,1.963,205,1.138,206,1.178,207,1.063,208,1.158,209,1.178,210,2.353,211,1.158,212,1.652,213,2.116,214,1.178,215,1.51,216,2.398,217,1.178,218,1.178,219,1.241,220,1.158,221,1.714,222,1.178,223,1.241,224,1.158,225,1.241,226,1.138,227,1.138,228,1.759,229,1.963,230,1.138,231,1.974,232,1.158,233,1.941,234,1.241,235,1.178,236,2.221,237,1.178,238,1.158,239,1.178,240,1.178,241,1.178,242,1.158,243,1.241,244,1.158,245,1.178,246,1.241,247,1.158,248,1.241,249,1.158,250,1.158,251,1.259,252,1.241,253,1.158,254,1.241,255,1.138,256,1.158,257,1.241,258,1.158,259,1.241,260,1.063,261,1.241,262,1.158,263,1.769,264,1.241,265,1.138,266,1.241,267,1.158,268,1.241,269,1.119,270,1.241,271,1.158,272,1.138,273,1.158,274,1.1,275,1.241,276,1.158,277,1.241,278,1.241,279,1.158,280,1.241,281,1.158,282,1.241,283,1.119,284,1.241,285,1.138,286,1.158,287,1.241,288,1.158,289,1.199,290,1.241,291,1.138,292,1.158,293,1.952,294,1.158,295,1.178,296,1.027,297,1.178,298,1.178,299,1.158,300,1.178,301,1.178,302,1.178,303,1.241,304,1.138,305,1.158,306,1.241,307,1.158,308,1.199,309,1.158,310,1.241,311,1.158,312,1.241,313,1.178,314,1.158,315,1.158,316,1.241,317,1.158,318,1.241,319,1.158,320,1.241,321,1.158,322,1.1,323,1.081,324,1.119,325,1.241,326,1.138,327,1.241,328,1.138,329,1.241,330,1.138,331,1.241,332,1.138,333,1.241,334,1.138,335,1.22,336,1.241,337,1.138,338,1.22,339,1.241,340,0.003,341,0.004,342,0.003,389,1.442,571,2.4,662,1.669,1061,3.016,1147,1.636,1375,3.096,1525,5.209,1526,5.209,1527,4.105,1528,5.209,1529,6.364,1530,4.105,1531,6.521,1532,4.609,1533,5.209,1534,5.209,1535,5.209,1536,5.667,1537,5.209,1538,4.609,1539,4.609,1540,4.609]],["title/components/DynamicSlotComponent.html",[0,0.279,232,1.266]],["body/components/DynamicSlotComponent.html",[0,0.458,1,1.049,2,1.415,3,0.224,4,0.232,5,0.87,7,1.125,8,1.086,10,0.175,12,0.49,21,1.031,24,0.931,26,0.007,33,2.172,34,1.892,37,1.442,39,0.452,40,0.739,42,0.772,45,0.696,46,1.175,48,2.305,52,1.686,53,0.938,67,0.793,69,0.954,71,1.633,84,2.495,86,2.335,87,1.393,88,0.625,99,0.874,100,1.058,101,0.63,120,1.047,123,1.642,126,1.492,128,1.031,130,1.845,137,2.067,150,0.23,151,1.882,152,0.372,164,1.368,165,0.155,166,0.182,186,0.759,196,0.772,197,1.571,198,1.415,200,1.992,201,1.125,202,1.125,203,1.014,204,1.861,205,1.031,206,1.067,207,0.963,208,1.049,209,1.067,210,2.289,211,1.049,212,1.567,213,2.027,214,1.067,215,1.473,216,2.339,217,1.067,218,1.067,219,1.125,220,1.049,221,1.599,222,1.067,223,1.125,224,1.049,225,1.125,226,1.031,227,1.031,228,1.711,229,1.861,230,1.031,231,1.049,232,1.891,233,1.964,234,1.125,235,1.067,236,2.141,237,1.067,238,1.049,239,1.067,240,1.067,241,1.067,242,1.049,243,1.125,244,1.049,245,1.067,246,1.125,247,1.049,248,1.125,249,1.049,250,1.049,251,1.175,252,1.125,253,1.049,254,1.125,255,1.031,256,1.049,257,1.125,258,1.049,259,1.125,260,0.963,261,1.125,262,1.049,263,1.678,264,1.125,265,1.031,266,1.125,267,1.049,268,1.125,269,1.014,270,1.125,271,1.049,272,1.031,273,1.049,274,0.997,275,1.125,276,1.049,277,1.125,278,1.125,279,1.049,280,1.125,281,1.049,282,1.125,283,1.014,284,1.125,285,1.031,286,1.049,287,1.125,288,1.049,289,1.086,290,1.125,291,1.031,292,1.049,293,1.904,294,1.049,295,1.067,296,0.931,297,1.067,298,1.067,299,1.049,300,1.067,301,1.067,302,1.067,303,1.125,304,1.031,305,1.049,306,1.125,307,1.049,308,1.086,309,1.049,310,1.125,311,1.049,312,1.125,313,1.067,314,1.049,315,1.049,316,1.125,317,1.049,318,1.125,319,1.049,320,1.125,321,1.049,322,0.997,323,0.98,324,1.014,325,1.125,326,1.031,327,1.125,328,1.031,329,1.125,330,1.031,331,1.125,332,1.031,333,1.125,334,1.031,335,1.105,336,1.125,337,1.859,338,1.105,339,1.125,340,0.003,341,0.004,342,0.003,389,1.368,453,1.838,463,3.348,571,2.239,751,3.041,1061,3.567,1147,2.108,1375,2.889,1525,6.509,1528,4.861,1530,3.719,1531,6.76,1533,4.861,1534,5.656,1535,4.861,1536,5.289,1537,4.861,1541,5.739,1542,3.719,1543,5.285,1544,4.861,1545,6.509,1546,4.861,1547,5.938,1548,4.861,1549,6.161,1550,4.176,1551,6.509,1552,4.176,1553,4.861,1554,4.861,1555,4.861,1556,3.719,1557,4.176,1558,4.176,1559,4.176,1560,4.176,1561,4.176,1562,4.176]],["title/directives/EntriesDirective.html",[198,1.031,328,1.244]],["body/directives/EntriesDirective.html",[0,0.238,3,0.231,4,0.238,5,0.894,9,1.803,10,0.18,12,0.504,17,1.47,23,3.162,24,0.957,26,0.007,32,1.292,33,1.305,34,0.807,39,0.465,40,0.753,42,1.541,45,1.169,46,1.761,53,0.957,54,2.273,55,3.52,64,1.602,67,0.823,68,1.24,69,1.214,71,1.319,87,1.787,88,1.351,89,1.728,99,0.891,100,0.725,101,0.642,116,3.425,120,0.924,132,3.229,137,2.652,150,0.339,152,0.383,154,1.881,164,0.849,165,0.16,166,0.187,181,1.263,186,1.557,198,1.24,199,1.803,215,1.189,260,1.618,323,1.007,328,1.495,340,0.003,341,0.004,342,0.003,373,1.803,375,1.698,383,1.719,389,1.198,394,1.922,446,3.201,447,2.343,448,3.062,451,1.935,461,1.494,463,4.296,467,4.678,469,5.063,472,4.863,474,3.027,478,3.206,482,4.37,495,3.968,497,3.206,514,3.283,517,3.283,518,3.098,524,6.237,541,3.535,567,5.103,592,6.882,623,2.207,640,1.653,647,3.807,661,1.42,663,3.443,887,4.499,960,5.365,1012,3.714,1027,4.53,1028,2.909,1029,3.094,1081,3.098,1099,3.823,1102,2.596,1114,4.597,1148,3.83,1150,4.774,1563,3.823,1564,5.393,1565,6.786,1566,6.786,1567,6.786,1568,6.786,1569,6.055,1570,6.248,1571,6.055,1572,4.292,1573,4.292,1574,4.37,1575,4.154,1576,5.393,1577,6.055,1578,4.292,1579,4.292,1580,4.292,1581,7.619,1582,4.292,1583,4.956,1584,4.292,1585,4.292,1586,4.292,1587,4.292,1588,4.292,1589,4.292,1590,6.055,1591,4.292,1592,4.292,1593,4.597,1594,4.292,1595,4.292,1596,4.154,1597,4.292,1598,3.823,1599,4.292,1600,2.813,1601,3.823,1602,4.292,1603,7.015,1604,6.055,1605,3.514,1606,4.292,1607,4.292,1608,4.292,1609,3.514,1610,3.823,1611,7.015,1612,3.098,1613,4.292,1614,6.248,1615,7.619,1616,7.015,1617,4.292,1618,4.292,1619,4.292,1620,4.292,1621,4.292,1622,4.292,1623,4.292,1624,4.292]],["title/directives/EntryDirective.html",[198,1.031,330,1.244]],["body/directives/EntryDirective.html",[3,0.27,4,0.278,5,1.769,9,2.109,10,0.211,12,0.589,17,1.637,23,3.433,24,1.119,26,0.007,32,1.085,33,1.453,34,0.944,39,0.544,40,0.839,42,1.617,46,1.731,53,1.066,55,3.762,64,1.785,67,0.856,68,1.667,69,1.206,71,1.432,83,0.866,88,1.01,89,1.138,99,0.738,100,0.601,101,0.532,116,3.441,132,3.414,137,2.347,142,2.439,150,0.329,152,0.448,154,2.095,165,0.187,166,0.219,186,1.479,198,1.559,199,2.109,228,1.97,260,1.757,323,1.178,330,1.666,340,0.003,341,0.005,342,0.003,371,4.256,373,2.109,375,1.503,389,0.993,394,1.376,446,3.421,447,2.741,448,3.272,451,2.263,460,4.924,461,1.747,463,4.591,467,4.879,469,5.497,470,6.132,471,2.543,472,5.546,474,3.371,477,1.949,478,3.571,482,4.868,484,2.652,487,3.934,490,3.196,491,3.04,492,6.006,495,4.42,497,3.571,499,4.471,500,3.29,510,2.057,514,3.839,517,3.839,518,3.623,524,5.521,541,3.738,640,1.933,647,4.026,662,1.818,1012,4.033,1027,4.79,1028,3.076,1029,3.271,1081,3.623,1098,4.471,1102,3.036,1114,3.29,1564,6.006,1593,3.29,1600,3.29,1612,3.623,1614,4.471,1625,4.471,1626,7.616,1627,6.234,1628,6.744,1629,5.02,1630,5.02,1631,5.02,1632,5.02,1633,5.02,1634,5.02,1635,5.02,1636,5.02,1637,5.02,1638,5.02,1639,5.02,1640,5.02,1641,6.744,1642,5.02,1643,4.471,1644,5.02,1645,5.02,1646,5.02]],["title/components/EntryListPopComponent.html",[0,0.279,238,1.266]],["body/components/EntryListPopComponent.html",[0,0.321,1,0.778,2,0.895,3,0.166,4,0.172,5,0.645,7,1.282,8,0.806,10,0.13,12,0.364,17,1.156,20,1.872,21,0.765,23,2.613,24,0.691,26,0.007,32,1.281,33,2.149,34,1.868,37,1.156,39,0.335,40,0.592,41,1.747,42,1.298,45,1.084,46,1.822,52,1.351,53,0.752,55,3.006,64,1.26,67,0.84,68,1.332,69,1.203,71,1.09,77,2.448,78,2.448,83,0.534,86,1.872,87,0.727,88,1.156,89,1.592,99,1.09,100,1.044,101,0.786,115,2.448,116,2.703,118,4.617,120,0.976,122,3.973,123,1.218,126,1.862,128,0.765,142,2.103,150,0.287,151,1.396,152,0.276,154,0.962,164,0.613,165,0.115,166,0.323,184,2.52,186,0.563,196,0.573,197,1.26,198,0.634,200,1.722,201,0.834,202,0.834,203,0.752,204,1.561,205,0.765,206,0.792,207,0.714,208,0.778,209,0.792,210,2.079,211,0.778,212,1.314,213,1.752,214,0.792,215,1.654,216,2.145,217,0.792,218,0.792,219,0.834,220,0.778,221,1.282,222,0.792,223,0.834,224,0.778,225,0.834,226,0.765,227,0.765,228,1.755,229,1.561,230,0.765,231,0.778,232,0.778,233,0.765,234,0.834,235,0.792,236,1.891,237,0.792,238,1.635,239,0.792,240,0.792,241,0.792,242,0.778,243,0.834,244,0.778,245,0.792,246,0.834,247,0.778,248,0.834,249,0.778,250,0.778,251,1.288,252,0.834,253,0.778,254,0.834,255,0.765,256,0.778,257,0.834,258,0.778,259,0.834,260,0.714,261,0.834,262,0.778,263,1.407,264,0.834,265,0.765,266,0.834,267,0.778,268,0.834,269,0.752,270,0.834,271,0.778,272,0.765,273,0.778,274,0.739,275,0.834,276,0.778,277,0.834,278,0.834,279,0.778,280,0.834,281,0.778,282,0.834,283,0.752,284,0.834,285,0.765,286,0.778,287,0.834,288,0.778,289,0.806,290,0.834,291,2.233,292,0.778,293,1.746,294,0.778,295,0.792,296,0.691,297,0.792,298,0.792,299,0.778,300,0.792,301,0.792,302,1.663,303,0.834,304,0.765,305,0.778,306,0.834,307,0.778,308,0.806,309,0.778,310,0.834,311,0.778,312,0.834,313,0.792,314,0.778,315,0.778,316,0.834,317,0.778,318,0.834,319,0.778,320,0.834,321,0.778,322,0.739,323,0.727,324,0.752,325,0.834,326,0.765,327,0.834,328,0.765,329,0.834,330,0.765,331,0.834,332,0.765,333,0.834,334,0.765,335,0.82,336,0.834,337,0.765,338,0.82,339,0.834,340,0.002,341,0.003,342,0.002,375,1.061,376,3.717,379,0.879,383,1.646,384,2.095,389,0.942,390,3.924,394,1.783,410,2.125,422,2.879,429,6.477,471,1.795,493,1.955,510,1.452,520,1.958,592,2.236,623,2.448,624,1.795,625,2.992,637,2.879,651,2.146,776,1.549,895,3.934,912,2.232,914,1.873,938,1.807,947,3.265,958,3.681,996,1.807,1022,4.413,1025,4.089,1026,3.958,1031,3.382,1040,2,1046,1.807,1060,4.177,1071,1.691,1074,6.863,1076,2.03,1081,2.236,1103,3.345,1111,2.125,1112,2.125,1163,3.644,1177,3.755,1288,1.507,1486,3.64,1488,3.265,1501,3.07,1502,2.125,1510,2.236,1593,2.03,1600,2.03,1647,2.369,1648,3.64,1649,4.745,1650,4.865,1651,3.799,1652,3.436,1653,4.76,1654,3.436,1655,2.747,1656,3.436,1657,3.265,1658,4.184,1659,3.098,1660,4.24,1661,2.536,1662,2.759,1663,2.759,1664,2.369,1665,2.125,1666,2.369,1667,1.807,1668,2.236,1669,2.369,1670,2.236,1671,2.125,1672,2.369,1673,2.536,1674,2.369,1675,3.897,1676,3.977,1677,2.759,1678,2.236,1679,2.369,1680,2.03,1681,6.506,1682,3.098,1683,2.759,1684,3.64,1685,3.098,1686,4.24,1687,2.369,1688,3.436,1689,2.236,1690,2.369,1691,1.747,1692,1.947,1693,2.236,1694,2.236,1695,2.369,1696,2.52,1697,2.236,1698,2.369,1699,2.536,1700,2.759,1701,3.098,1702,2.759,1703,4.24,1704,2.759,1705,2.369,1706,2.236,1707,2.236,1708,2.369,1709,2.369,1710,2.236,1711,2.536,1712,2.369,1713,3.098,1714,3.098,1715,2.536,1716,2.236,1717,2.369,1718,2.759,1719,3.098,1720,3.098]],["title/injectables/EntryService.html",[652,1.565,1200,3.455]],["body/injectables/EntryService.html",[0,0.31,3,0.206,4,0.213,10,0.161,12,0.45,15,1.728,26,0.007,32,1.237,39,0.415,40,0.819,45,1.59,46,1.303,48,1.557,52,2.352,53,0.882,67,0.822,68,1.845,69,1.098,71,1.36,77,2.871,78,2.871,82,4.03,83,1.385,87,2.204,88,1.297,97,2.604,99,1.249,100,1.016,101,0.901,116,3.334,120,0.735,130,1.191,132,2.908,141,2.294,150,0.311,152,0.342,164,1.432,165,0.143,166,0.167,181,1.128,186,1.678,191,2.162,228,1.9,293,1.586,296,1.893,340,0.003,341,0.004,342,0.003,367,3.148,371,1.865,375,0.855,379,1.088,383,2.183,386,1.575,389,0.759,394,1.53,439,3.51,446,3.039,447,2.093,448,2.908,451,1.728,474,2.791,477,1.108,487,4.682,493,2.294,505,4.14,537,3.954,539,3.708,543,3.831,570,2.346,571,3.027,575,2.647,585,2.022,611,2.162,623,2.871,624,1.446,642,3.51,652,1.735,655,1.917,662,1.388,705,1.817,751,4.091,770,4.072,797,4.14,811,2.41,812,2.63,820,2.513,908,5.04,932,1.971,938,3.257,965,3.596,990,3.72,1014,3.148,1040,3.039,1146,2.646,1147,1.361,1150,4.072,1151,2.932,1172,2.319,1200,3.831,1437,4.375,1593,5.04,1600,2.513,1643,3.415,1691,3.148,1721,3.415,1722,2.791,1723,4.03,1724,4.03,1725,3.51,1726,2.717,1727,3.831,1728,3.831,1729,5.131,1730,6.444,1731,4.973,1732,4.973,1733,4.518,1734,5.866,1735,3.834,1736,4.571,1737,3.834,1738,3.377,1739,4.571,1740,4.22,1741,7.235,1742,3.834,1743,3.377,1744,5.584,1745,3.834,1746,5.584,1747,3.834,1748,4.571,1749,4.571,1750,3.834,1751,3.377,1752,4.316,1753,5.584,1754,8.285,1755,3.834,1756,4.571,1757,4.03,1758,4.973,1759,4.03,1760,5.584,1761,6.586,1762,3.834,1763,3.834,1764,2.767,1765,5.584,1766,3.834,1767,3.834,1768,3.834,1769,3.138,1770,3.834,1771,2.767,1772,3.138,1773,3.834,1774,3.983,1775,3.834,1776,3.834,1777,3.834,1778,3.138,1779,3.834,1780,5.584,1781,3.834,1782,3.834,1783,3.834,1784,3.834,1785,6.586,1786,5.391,1787,3.138,1788,3.138,1789,3.138,1790,3.834,1791,3.834,1792,3.415,1793,5.584,1794,4.571,1795,3.834,1796,2.767,1797,3.834,1798,5.037,1799,6.586,1800,3.138,1801,3.138,1802,3.138,1803,3.138,1804,3.138,1805,5.923,1806,2.513,1807,2.63,1808,3.138,1809,3.834,1810,3.834,1811,3.834,1812,3.834,1813,3.834,1814,4.973,1815,3.415,1816,3.834]],["title/components/ErrorComponent.html",[0,0.279,242,1.266]],["body/components/ErrorComponent.html",[0,0.39,1,1.082,2,1.141,3,0.231,4,0.239,5,0.897,7,1.16,8,1.12,10,0.181,12,0.505,17,1.473,21,1.064,22,3.092,23,3.168,24,0.96,26,0.007,33,2.174,34,1.892,37,1.473,39,0.466,42,1.299,53,0.959,55,3.525,56,3.439,64,1.606,67,0.554,69,1.02,88,1.053,89,1.593,97,1.754,99,0.633,100,1.08,101,0.457,116,2.337,120,0.799,126,1.525,128,1.064,150,0.235,152,0.384,164,0.852,165,0.16,166,0.188,186,0.782,196,0.796,197,1.606,198,0.882,200,2.019,201,1.16,202,1.16,203,1.045,204,1.892,205,1.064,206,1.101,207,0.993,208,1.082,209,1.101,210,2.309,211,1.082,212,1.593,213,2.055,214,1.101,215,1.484,216,2.358,217,1.101,218,1.101,219,1.16,220,1.766,221,1.634,222,1.101,223,1.16,224,1.082,225,1.16,226,1.064,227,1.064,228,1.792,229,1.892,230,1.064,231,1.082,232,1.082,233,1.064,234,1.16,235,1.101,236,2.166,237,1.101,238,1.082,239,1.101,240,1.101,241,1.101,242,1.917,243,1.16,244,1.082,245,1.101,246,1.16,247,1.082,248,1.16,249,1.082,250,1.082,251,1.201,252,1.16,253,1.082,254,1.16,255,1.064,256,1.082,257,1.16,258,1.082,259,1.16,260,0.993,261,1.16,262,1.082,263,1.706,264,1.16,265,1.064,266,1.16,267,1.082,268,1.16,269,1.045,270,1.16,271,1.082,272,1.064,273,1.082,274,1.028,275,1.16,276,1.082,277,1.16,278,1.16,279,1.082,280,1.16,281,1.082,282,1.16,283,1.045,284,1.16,285,1.064,286,1.082,287,1.16,288,1.082,289,1.12,290,1.16,291,1.064,292,1.082,293,1.919,294,1.082,295,1.101,296,0.96,297,1.101,298,1.101,299,1.082,300,1.101,301,1.101,302,1.101,303,1.16,304,1.064,305,1.082,306,1.16,307,1.082,308,1.12,309,1.082,310,1.16,311,1.082,312,1.16,313,1.101,314,1.082,315,1.082,316,1.16,317,1.082,318,1.16,319,1.082,320,1.16,321,1.082,322,1.028,323,1.01,324,1.045,325,1.16,326,1.064,327,1.16,328,1.064,329,1.16,330,1.064,331,1.16,332,1.064,333,1.16,334,1.064,335,1.14,336,1.16,337,1.064,338,1.14,339,1.16,340,0.003,341,0.004,342,0.003,358,2.032,389,0.852,446,1.809,539,4.046,640,3.474,641,5.272,662,1.559,1006,4.968,1007,4.163,1008,4.968,1009,4.968,1010,4.641,1028,2.197,1029,2.938,1238,3.54,1274,2.707,1301,2.822,1437,3.67,1817,3.835,1818,6.069,1819,3.108,1820,6.069,1821,4.307,1822,4.307,1823,5.405,1824,4.307,1825,4.307,1826,5.405,1827,4.307,1828,4.307,1829,4.307,1830,4.307,1831,4.307,1832,4.307,1833,4.307,1834,4.307,1835,6.069,1836,4.307]],["title/classes/Field.html",[48,1.405,166,0.22]],["body/classes/Field.html",[0,0.391,2,0.682,3,0.195,4,0.201,10,0.152,17,1.302,26,0.007,32,1.266,39,0.393,40,0.667,42,1.39,45,1.485,48,2.67,51,2.359,52,1.811,53,1.188,54,2.839,64,1.865,67,0.878,68,1.978,69,1.217,71,1.199,72,3.088,83,0.626,87,1.258,88,1.278,99,0.534,100,1,101,1.038,120,0.928,130,2.597,150,0.141,164,1.061,165,0.135,166,0.379,186,1.366,215,1.447,251,1.061,340,0.002,341,0.004,342,0.002,370,2.304,371,3.658,375,2.025,383,2.5,384,3.756,386,2.202,389,0.718,394,2.231,461,1.262,477,1.549,478,3.731,484,2.109,490,1.719,491,1.635,503,3.678,510,2.149,537,2.757,549,2.309,560,1.765,565,1.719,570,1.524,575,3.618,576,4.389,581,3.377,610,4.186,626,3.87,709,3.514,751,2.359,770,4.426,883,1.458,899,3.37,932,2.757,990,2.757,1049,3.87,1053,3.522,1060,2.541,1147,2.967,1155,3.023,1169,1.865,1179,3.242,1181,5.767,1182,4.375,1265,3.87,1307,2.969,1308,4.979,1312,3.242,1324,2.757,1375,3.829,1655,1.719,1692,3.37,1837,3.23,1838,5.336,1839,5.749,1840,5.749,1841,5.221,1842,4.877,1843,3.857,1844,5.157,1845,5.68,1846,4.726,1847,5.749,1848,5.221,1849,7.046,1850,7.046,1851,7.046,1852,5.361,1853,3.627,1854,5.361,1855,5.361,1856,3.627,1857,3.627,1858,3.627,1859,3.627,1860,4.1,1861,3.514,1862,3.87,1863,3.627,1864,3.627,1865,4.389,1866,4.389,1867,4.429,1868,3.627,1869,4.775,1870,5.361,1871,4.1,1872,3.627,1873,3.87,1874,3.627,1875,3.627,1876,3.627,1877,5.361,1878,4.1,1879,3.514,1880,3.627,1881,3.627,1882,3.627,1883,7.009,1884,3.627,1885,3.678,1886,3.627,1887,3.627,1888,3.627,1889,3.127,1890,3.627,1891,3.627,1892,3.627,1893,4.775,1894,4.1,1895,3.37,1896,3.627,1897,3.627,1898,3.23,1899,5.361,1900,3.627,1901,2.28,1902,3.627,1903,3.627,1904,3.23,1905,2.28,1906,2.774,1907,5.361,1908,3.627,1909,3.72,1910,3.514,1911,3.627,1912,2.969,1913,2.377,1914,3.627,1915,3.627,1916,3.23,1917,3.23,1918,3.627,1919,2.377,1920,3.627,1921,3.627,1922,3.627,1923,5.361,1924,5.361,1925,2.969,1926,3.627,1927,5.361,1928,3.627,1929,3.627,1930,2.488,1931,3.627,1932,3.627,1933,2.618,1934,3.23,1935,3.627,1936,3.627,1937,2.969,1938,3.23,1939,2.488,1940,3.23,1941,3.23,1942,4.389,1943,3.627,1944,3.627,1945,3.23,1946,6.378,1947,4.775,1948,3.627,1949,2.969,1950,3.627]],["title/interfaces/FieldConfig.html",[366,1.43,1160,3.046]],["body/interfaces/FieldConfig.html",[3,0.391,4,0.404,10,0.306,12,0.854,26,0.007,48,2.52,68,1.744,69,0.923,130,2.647,150,0.282,165,0.271,215,1.444,340,0.005,341,0.006,342,0.005,366,2.066,368,3.202,383,2.066,386,3.5,990,4.381,994,5.355,1049,6.149,1117,4.574,1160,5.152,1726,4.145,1838,6.22,1898,6.481,1941,6.481,1951,7.588,1952,7.277]],["title/interfaces/FileOptions.html",[366,1.43,1132,3.301]],["body/interfaces/FileOptions.html",[0,0.186,3,0.18,4,0.186,10,0.333,12,0.394,26,0.007,32,1.276,39,0.363,40,0.629,46,1.772,48,0.935,52,2.252,67,0.789,68,1.771,69,0.425,71,1.367,83,1.544,87,1.428,88,0.757,97,0.969,101,0.95,116,1.291,120,0.442,130,1.891,132,3.188,134,3.314,141,1.377,142,2.03,150,0.335,152,0.299,164,1.616,165,0.226,166,0.146,181,1.791,186,1.746,207,0.773,212,2.09,215,1.149,228,0.675,250,0.843,251,0.664,293,1.334,296,0.748,322,2.092,340,0.002,341,0.003,342,0.002,366,1.924,367,1.891,368,1.476,370,2.913,371,1.631,372,2.949,375,1.954,379,0.952,383,1.924,394,1.993,434,1.724,439,3.826,446,2.557,448,2.032,451,1.511,468,5.183,474,1.676,487,1.956,490,1.589,505,2.108,511,4.892,512,2.42,521,2.3,533,3.432,539,2.336,543,3.223,549,1.214,565,2.884,570,1.409,571,1.265,572,3.469,585,2.204,598,2.108,606,3.058,607,5.842,629,2.745,630,5.54,642,2.108,650,2.3,652,1.571,661,0.787,662,1.214,663,2.446,708,1.956,747,2.295,775,2.198,776,2.528,811,3.826,819,2.745,820,2.198,827,2.3,887,3.13,912,1.291,932,1.724,953,2.46,958,2.812,990,1.724,996,4.242,1014,1.891,1068,3.314,1132,4.766,1142,2.42,1146,1.589,1147,2.405,1148,4.563,1150,2.677,1155,1.891,1162,2.565,1169,1.724,1179,2.028,1202,3.058,1224,2.42,1471,2.3,1575,2.3,1691,2.851,1722,1.676,1723,2.42,1724,2.42,1725,2.108,1726,1.631,1727,2.3,1728,2.3,1729,3.55,1738,3.681,1759,2.42,1764,2.42,1769,2.745,1774,4.623,1798,4.655,1889,2.949,1909,1.956,1913,2.198,1953,2.745,1954,7.066,1955,6.808,1956,6.477,1957,6.477,1958,6.477,1959,6.477,1960,3.314,1961,4.503,1962,4.503,1963,4.503,1964,4.139,1965,4.139,1966,4.503,1967,4.503,1968,4.503,1969,2.987,1970,4.655,1971,2.565,1972,2.987,1973,2.987,1974,2.745,1975,4.982,1976,2.565,1977,2.987,1978,2.987,1979,2.565,1980,2.987,1981,2.987,1982,5.421,1983,2.987,1984,5.421,1985,2.987,1986,2.987,1987,2.987,1988,2.565,1989,2.987,1990,2.987,1991,2.987,1992,2.987,1993,2.745,1994,2.987,1995,5.183,1996,2.42,1997,2.987,1998,4.503,1999,2.987,2000,4.503,2001,4.503,2002,2.987,2003,2.987,2004,2.987,2005,2.987,2006,4.503,2007,3.826,2008,2.987,2009,2.745,2010,2.987,2011,2.565,2012,2.987,2013,6.808,2014,2.987,2015,2.987,2016,2.987,2017,2.987,2018,2.987,2019,5.421,2020,2.745,2021,2.987,2022,2.987,2023,4.503,2024,2.987,2025,4.503,2026,4.503,2027,4.503,2028,4.503,2029,4.503,2030,4.503,2031,4.503,2032,4.503,2033,2.565,2034,2.745,2035,3.867,2036,2.987,2037,2.987,2038,2.987,2039,4.503,2040,2.987,2041,2.987,2042,2.987,2043,2.987,2044,2.987,2045,2.987,2046,2.987,2047,2.987,2048,2.42,2049,2.987,2050,5.421,2051,2.987,2052,2.987,2053,2.987,2054,4.503,2055,2.987,2056,2.987,2057,2.987,2058,2.745,2059,2.987,2060,1.891,2061,2.987,2062,2.987,2063,2.987,2064,2.987,2065,2.987,2066,2.987,2067,2.987,2068,2.987,2069,2.987,2070,2.987,2071,2.987,2072,2.987,2073,2.42,2074,2.987,2075,2.987,2076,2.987,2077,2.565,2078,2.987,2079,2.987,2080,2.987]],["title/modules/FilesModule.html",[343,1.142,1197,3.636]],["body/modules/FilesModule.html",[3,0.265,4,0.274,10,0.207,25,2.482,26,0.007,150,0.377,152,0.441,153,1.985,154,1.535,165,0.184,166,0.216,196,0.913,208,2.396,209,1.263,211,2.368,212,1.713,214,2.409,215,1.131,217,2.438,249,2.368,250,1.241,251,1.32,313,2.438,314,1.241,319,2.396,321,2.368,322,1.179,324,2.288,326,2.328,334,2.328,340,0.003,341,0.004,342,0.003,343,1.12,345,1.943,346,1.863,347,3.103,348,2.029,349,3.036,355,4.909,356,2.802,357,1.902,358,1.654,360,3.761,361,2.234,362,2.322,530,4.043,599,2.881,603,4.043,606,5.265,622,3.565,688,3.162,689,2.226,692,4.576,1075,4.372,1197,7.245,1198,5.972,1199,6.177,1221,6.186,1225,4.399,1227,4.043,2081,4.399,2082,4.399,2083,4.939,2084,4.399,2085,4.399,2086,4.939,2087,3.777,2088,3.565,2089,3.237,2090,4.399,2091,4.399,2092,4.399,2093,4.939,2094,4.939,2095,4.399,2096,4.043,2097,4.043,2098,4.399]],["title/interfaces/Focus.html",[62,2.667,366,1.43]],["body/interfaces/Focus.html",[3,0.398,4,0.411,10,0.311,26,0.007,39,0.802,40,1.071,49,5.889,53,1.361,62,4.559,63,5.666,67,0.676,69,0.94,88,1.11,142,2.807,150,0.287,152,0.661,165,0.276,340,0.005,341,0.006,342,0.005,366,2.104,368,3.261,2099,6.6,2100,7.411]],["title/directives/FocusDirective.html",[198,1.031,332,1.244]],["body/directives/FocusDirective.html",[3,0.357,4,0.368,10,0.279,17,1.958,22,3.823,24,1.48,26,0.007,33,1.872,39,0.719,42,1.606,53,1.275,56,4.074,63,5.465,64,2.135,67,0.793,69,1.174,88,1.208,89,1.829,99,0.977,100,0.795,101,0.704,122,4.074,126,2.027,142,2.603,150,0.258,152,0.592,165,0.247,166,0.29,198,1.652,323,1.558,332,1.992,340,0.004,341,0.005,342,0.004,375,1.937,389,1.314,567,3.874,662,2.405,912,2.557,1456,6.645,1839,6.645,2101,5.915,2102,7.58,2103,6.641,2104,8.067,2105,6.641,2106,6.641,2107,6.641,2108,5.436,2109,6.641,2110,6.641,2111,6.641,2112,6.641,2113,6.641,2114,6.641,2115,6.641]],["title/interfaces/FormConfig.html",[366,1.43,2116,3.852]],["body/interfaces/FormConfig.html",[3,0.367,4,0.379,10,0.287,12,0.803,20,3.23,26,0.007,32,1.468,39,0.741,40,1.022,67,0.803,68,1.802,101,1.006,150,0.265,165,0.254,340,0.005,341,0.006,342,0.005,366,1.942,368,3.01,375,2.113,384,3.614,537,4.223,1053,4.105,1071,3.735,1117,4.3,1144,6.262,1182,5.634,1740,5.446,2116,6.981,2117,6.092,2118,6.723,2119,8.13,2120,9.128,2121,8.13,2122,6.281,2123,6.981,2124,6.281,2125,5.599]],["title/modules/FormModule.html",[343,1.142,2126,3.455]],["body/modules/FormModule.html",[3,0.273,4,0.282,10,0.213,21,2.249,25,2.517,26,0.007,27,3.371,50,4.647,120,0.895,150,0.377,152,0.453,153,2.041,164,1.005,165,0.253,166,0.222,196,0.939,224,2.378,230,2.249,244,2.378,317,2.378,340,0.003,341,0.005,342,0.003,343,1.151,345,1.997,346,1.915,347,3.147,348,2.086,349,3.078,356,2.855,357,1.955,358,1.7,360,3.832,361,2.276,362,1.767,688,3.221,689,2.289,691,5.529,713,4.815,849,5.752,868,4.157,870,4.157,872,4.157,1053,2.539,1215,3.192,1217,3.883,1219,3.665,1258,2.863,1454,3.883,1466,4.157,1475,3.883,2126,6.88,2127,4.523,2128,4.523,2129,4.523,2130,4.523,2131,4.523,2132,6.832,2133,6.832,2134,6.494,2135,6.204,2136,6.204,2137,5.308,2138,5.752,2139,5.752,2140,4.523,2141,4.157,2142,5.078,2143,4.523,2144,5.078,2145,5.078,2146,4.157,2147,3.665,2148,5.078,2149,5.078,2150,4.157,2151,4.157,2152,4.523,2153,5.078,2154,5.078,2155,5.078,2156,5.078]],["title/injectables/FormService.html",[50,2.667,652,1.565]],["body/injectables/FormService.html",[3,0.236,4,0.244,10,0.185,12,0.516,16,3.368,26,0.007,32,1.238,39,0.476,40,0.766,45,0.732,46,1.813,47,4.052,48,2.735,50,3.261,51,3.796,53,0.973,67,0.787,68,0.9,69,1.134,72,2.53,74,4.709,83,1.398,84,2.587,87,1.971,88,1.413,89,0.997,99,1.295,100,1.053,101,0.934,120,0.579,130,3.081,138,2.479,146,4.657,150,0.314,152,0.392,153,1.767,164,1.663,165,0.163,166,0.192,186,1.664,244,1.935,340,0.003,341,0.004,342,0.003,366,1.748,375,0.98,379,1.248,383,2.186,384,3.873,386,2.53,389,0.87,394,2.221,453,1.935,477,1.271,491,2.776,545,2.918,549,1.592,571,2.68,581,3.261,611,3.472,623,2.261,640,2.736,652,1.913,705,2.084,770,3.261,883,2.475,914,3.724,965,3.362,1028,2.788,1029,3.121,1106,5.561,1147,1.561,1274,2.764,1374,4.445,1722,3.078,1725,3.871,1819,3.173,1867,3.871,1889,3.592,1894,4.709,2157,3.916,2158,6.158,2159,3.261,2160,6.158,2161,6.158,2162,6.158,2163,6.158,2164,6.158,2165,6.158,2166,6.158,2167,4.397,2168,6.158,2169,4.397,2170,4.036,2171,6.158,2172,4.397,2173,6.158,2174,6.158,2175,4.397,2176,6.158,2177,4.397,2178,6.158,2179,7.322,2180,7.107,2181,6.158,2182,4.397,2183,6.158,2184,4.397,2185,5.041,2186,5.484,2187,6.158,2188,4.397,2189,7.7,2190,7.107,2191,4.397,2192,5.484,2193,3.916,2194,4.397,2195,7.107,2196,4.397,2197,4.397,2198,3.362,2199,4.397,2200,4.397,2201,4.397,2202,4.397,2203,6.158,2204,4.397,2205,6.158,2206,4.397,2207,4.397,2208,3.916,2209,4.397,2210,4.397,2211,4.397,2212,4.397,2213,3.916,2214,4.397,2215,4.397,2216,4.397,2217,4.397,2218,4.397,2219,4.397,2220,3.916,2221,4.397,2222,4.397,2223,4.397,2224,6.158]],["title/injectables/GeocodeService.html",[652,1.565,2225,3.301]],["body/injectables/GeocodeService.html",[3,0.281,4,0.29,10,0.22,12,0.614,13,4.046,26,0.007,39,0.567,42,1.531,46,1.837,53,1.096,67,0.755,69,1.093,83,1.428,87,2.077,88,1.326,99,1.267,100,1.031,101,0.914,126,2.081,132,3.328,150,0.334,152,0.467,163,4.004,164,1.539,165,0.195,166,0.228,186,1.608,200,1.385,207,1.6,263,2.253,340,0.005,341,0.005,342,0.005,389,1.036,434,2.692,484,2.728,652,2.155,655,3.467,662,1.896,663,2.104,705,2.481,859,4.194,908,5.097,965,2.858,1178,5.427,1186,5.678,1300,3.591,1482,6.177,1493,5.678,1651,4.546,1743,3.166,2225,4.546,2226,4.663,2227,5.427,2228,6.936,2229,6.936,2230,6.936,2231,6.936,2232,6.936,2233,6.936,2234,5.235,2235,8.281,2236,8.044,2237,5.235,2238,6.936,2239,6.936,2240,5.235,2241,7.052,2242,6.936,2243,5.235,2244,5.678,2245,7.673,2246,5.678,2247,5.235,2248,6.936,2249,5.235,2250,6.936,2251,6.936,2252,5.235,2253,6.936,2254,6.936,2255,4.285,2256,5.235,2257,5.235,2258,5.235,2259,5.235,2260,5.235,2261,5.235,2262,5.235,2263,5.304,2264,5.235,2265,5.235,2266,6.936,2267,4.285,2268,6.177,2269,5.235,2270,6.177,2271,5.235,2272,5.235,2273,5.235,2274,5.235,2275,5.235,2276,5.235,2277,4.285,2278,4.663,2279,5.235,2280,6.177,2281,5.235,2282,5.235,2283,5.235,2284,5.235,2285,5.235,2286,5.235,2287,5.235,2288,5.235,2289,5.235,2290,5.235]],["title/pipes/GroupPipe.html",[1260,2.59,1263,3.455]],["body/pipes/GroupPipe.html",[3,0.364,4,0.375,10,0.284,12,0.794,17,1.643,24,1.509,26,0.007,45,1.607,51,3.591,52,2.487,53,1.07,67,0.618,68,1.794,69,0.859,71,1.534,87,1.915,88,1.014,99,0.996,100,1.049,101,0.718,141,3.353,150,0.316,152,0.604,165,0.252,166,0.295,186,1.592,340,0.005,341,0.005,342,0.005,379,1.922,575,3.801,708,4.761,747,3.511,887,4.677,905,5.349,1260,4.196,1261,4.886,1263,6.24,1264,4.602,1265,5.891,1266,4.437,1272,5.891,2291,6.029,2292,8.162,2293,6.77,2294,6.77,2295,6.77]],["title/injectables/HistoryService.html",[652,1.565,1201,3.636]],["body/injectables/HistoryService.html",[3,0.24,4,0.398,10,0.188,12,0.525,26,0.007,39,0.485,40,0.776,45,1.359,46,1.835,53,0.985,67,0.852,68,1.81,69,1.153,83,0.772,87,2.034,88,1.075,89,1.015,97,2.243,99,1.142,100,0.929,101,0.823,120,1.075,132,1.799,137,2.17,150,0.348,152,0.399,154,1.391,164,1.42,165,0.166,166,0.195,184,3.301,186,1.482,293,1.968,296,1.599,340,0.003,341,0.004,342,0.003,370,3.335,373,1.88,385,3.515,389,1.234,394,1.709,437,7.096,452,3.664,472,3.637,497,3.301,522,3.07,523,3.986,539,3.585,543,5.007,570,1.88,639,2.523,640,2.401,647,3.867,652,1.937,653,2.611,705,2.121,708,4.526,720,5.601,811,2.813,812,3.07,846,2.813,859,3.77,895,3.77,912,2.401,947,4.277,990,4.768,1017,5.96,1024,5.305,1027,4.375,1102,2.707,1150,3.301,1177,3.033,1201,5.601,1437,5.109,1593,5.681,1600,2.933,1612,4.5,1729,5.305,1764,3.23,1798,4.768,2296,3.986,2297,5.553,2298,5.104,2299,5.553,2300,6.235,2301,8.159,2302,5.873,2303,6.235,2304,6.235,2305,3.986,2306,6.235,2307,6.235,2308,4.476,2309,5.553,2310,6.235,2311,8.449,2312,6.235,2313,8.669,2314,4.476,2315,5.104,2316,5.935,2317,6.352,2318,6.235,2319,4.476,2320,5.553,2321,5.104,2322,4.476,2323,4.476,2324,4.476,2325,6.235,2326,4.476,2327,4.476,2328,4.476,2329,3.986,2330,6.235,2331,4.476,2332,4.476,2333,8.669,2334,4.476,2335,4.476,2336,4.476,2337,6.235,2338,7.175,2339,4.476,2340,4.476,2341,6.235,2342,5.553,2343,4.476,2344,4.476,2345,4.476,2346,6.235,2347,6.235,2348,4.476,2349,4.476]],["title/components/IconComponent.html",[0,0.279,247,1.266]],["body/components/IconComponent.html",[0,0.432,1,0.993,2,1.073,3,0.212,4,0.219,5,0.823,7,1.064,8,1.028,9,1.66,10,0.166,12,0.464,17,1.386,21,0.976,22,2.949,23,3.02,24,0.881,26,0.007,33,2.168,34,1.888,37,1.386,39,0.428,40,0.71,42,1.239,53,0.902,55,3.391,56,3.308,64,1.511,67,0.611,68,1.169,69,1.029,85,3.916,87,0.927,88,1.004,89,1.519,99,0.581,100,1.134,101,0.419,120,0.883,126,1.434,128,0.976,137,2.709,150,0.302,152,0.353,165,0.249,166,0.292,196,0.731,197,1.511,198,0.809,199,1.66,200,1.942,201,1.064,202,1.064,203,0.96,204,1.805,205,0.976,206,1.01,207,0.912,208,0.993,209,1.01,210,2.252,211,0.993,212,1.519,213,1.976,214,1.01,215,1.375,216,2.306,217,1.01,218,1.01,219,1.064,220,0.993,221,1.537,222,1.01,223,1.064,224,0.993,225,1.064,226,0.976,227,0.976,228,1.683,229,1.805,230,0.976,231,0.993,232,0.993,233,0.976,234,1.064,235,1.01,236,2.096,237,1.01,238,0.993,239,1.01,240,1.01,241,1.01,242,0.993,243,1.064,244,0.993,245,1.01,246,1.064,247,1.844,248,1.064,249,0.993,250,0.993,251,1.13,252,1.064,253,0.993,254,1.064,255,0.976,256,0.993,257,1.064,258,0.993,259,1.064,260,0.912,261,1.064,262,0.993,263,1.627,264,1.064,265,0.976,266,1.064,267,0.993,268,1.064,269,0.96,270,1.064,271,0.993,272,0.976,273,0.993,274,0.943,275,1.064,276,0.993,277,1.064,278,1.064,279,0.993,280,1.064,281,0.993,282,1.064,283,0.96,284,1.064,285,0.976,286,0.993,287,1.064,288,0.993,289,1.028,290,1.064,291,0.976,292,0.993,293,1.876,294,0.993,295,1.01,296,0.881,297,1.01,298,1.01,299,0.993,300,1.01,301,1.01,302,1.01,303,1.064,304,0.976,305,0.993,306,1.064,307,0.993,308,1.028,309,0.993,310,1.064,311,0.993,312,1.064,313,1.01,314,0.993,315,0.993,316,1.064,317,0.993,318,1.064,319,0.993,320,1.064,321,0.993,322,0.943,323,0.927,324,0.96,325,1.064,326,0.976,327,1.064,328,0.976,329,1.064,330,0.976,331,1.064,332,0.976,333,1.064,334,0.976,335,1.046,336,1.064,337,0.976,338,1.046,339,1.064,340,0.003,341,0.005,342,0.003,389,0.782,453,2.512,461,1.376,477,1.142,491,2.573,520,1.592,555,2.935,625,2.484,639,3.778,651,2.573,660,2.59,662,1.431,718,3.235,753,2.158,1028,2.426,1145,3.023,1301,4.392,1412,2.39,1844,6.639,1878,3.023,1909,4.731,1913,3.741,2350,3.52,2351,7.008,2352,7.141,2353,4.81,2354,5.297,2355,5.084,2356,3.588,2357,3.588,2358,5.709,2359,3.953,2360,6.325,2361,5.709,2362,3.953,2363,3.953,2364,3.953,2365,3.953,2366,5.084,2367,5.709,2368,3.953,2369,3.023,2370,5.084,2371,5.709,2372,5.709,2373,3.953,2374,3.953,2375,5.709,2376,3.953,2377,2.484,2378,3.52,2379,3.52,2380,5.709,2381,3.953,2382,3.953,2383,3.953,2384,2.484,2385,3.953,2386,5.709,2387,5.709]],["title/modules/IconModule.html",[343,1.142,2137,3.046]],["body/modules/IconModule.html",[3,0.375,4,0.387,10,0.293,25,2.916,26,0.007,150,0.356,152,0.622,165,0.259,166,0.305,196,1.289,247,2.483,340,0.005,341,0.006,342,0.005,343,1.582,345,2.744,346,2.631,347,3.646,348,2.866,349,3.567,356,3.491,357,2.686,358,2.336,361,2.336,362,2.892,688,3.938,689,3.145,2137,5.903,2360,6.533,2378,6.214,2388,6.214,2389,6.214,2390,6.214,2391,6.214,2392,6.977,2393,6.977]],["title/injectables/IconService.html",[652,1.565,2360,3.455]],["body/injectables/IconService.html",[3,0.362,4,0.374,9,2.833,10,0.283,12,0.791,20,2.652,26,0.007,34,1.749,39,0.73,40,1.013,45,1.123,46,1.731,67,0.615,69,0.855,71,1.531,86,3.202,120,1.152,137,2.834,150,0.352,152,0.601,165,0.251,166,0.294,199,2.833,340,0.005,341,0.005,342,0.005,520,2.534,652,2.53,705,3.196,1028,3.167,1029,3.135,1274,4.239,1722,4.541,1844,6.232,1909,4.749,2351,7.947,2352,7.16,2355,7.252,2360,5.586,2379,6.006,2394,6.006,2395,6.665,2396,8.143,2397,8.143,2398,7.79,2399,6.744,2400,7.252]],["title/directives/ImageDirective.html",[198,1.031,334,1.244]],["body/directives/ImageDirective.html",[3,0.264,4,0.272,5,1.383,10,0.206,12,0.576,17,1.612,20,1.93,23,3.393,24,1.094,26,0.007,32,1.068,33,1.431,39,0.531,40,0.826,42,1.606,45,0.817,46,1.597,53,1.049,55,3.727,64,1.758,67,0.845,68,1.913,69,1.174,71,1.416,83,0.846,88,1.208,89,1.506,99,1.187,100,0.965,101,0.856,120,0.646,122,4.005,126,1.669,134,4.353,150,0.327,152,0.438,165,0.182,166,0.214,186,1.579,198,1.542,212,2.077,250,2.301,323,1.151,324,1.612,334,1.64,335,2.135,340,0.003,341,0.004,342,0.003,371,4.101,375,1.481,389,0.971,394,2.063,446,3.389,447,2.679,448,3.387,451,2.212,453,2.159,461,1.708,463,4.549,467,4.602,468,6.17,469,4.794,472,4.392,477,1.919,488,5.915,493,2.016,511,6.084,512,3.542,514,3.753,516,5.915,517,3.753,518,3.542,630,2.967,663,1.972,737,4.175,742,3.753,1159,5.268,1774,2.967,1913,4.353,1970,6.795,1971,3.753,2007,3.084,2035,3.753,2060,4.753,2092,4.37,2401,4.37,2402,6.642,2403,5.915,2404,6.17,2405,9.16,2406,6.642,2407,8.43,2408,6.642,2409,4.907,2410,5.915,2411,4.907,2412,7.185,2413,4.907,2414,6.642,2415,4.907,2416,6.642,2417,5.437,2418,6.642,2419,4.907,2420,6.642,2421,6.642,2422,4.907,2423,6.642,2424,4.907,2425,4.907,2426,4.907,2427,4.907,2428,7.529,2429,4.907,2430,4.907,2431,4.907,2432,6.642,2433,4.907,2434,4.907,2435,5.437,2436,4.907,2437,6.642,2438,4.907,2439,4.907,2440,4.907,2441,6.642,2442,4.907]],["title/components/ImageSelectPopComponent.html",[0,0.279,249,1.266]],["body/components/ImageSelectPopComponent.html",[0,0.363,1,0.67,2,0.796,3,0.143,4,0.148,5,0.555,7,1.14,8,0.693,10,0.112,12,0.313,17,1.028,20,1.665,21,0.658,22,2.317,24,0.594,26,0.007,32,1.286,33,2.134,34,1.854,37,1.028,39,0.289,40,0.527,41,1.503,42,1.209,45,1.359,46,1.825,53,0.669,56,2.703,64,1.587,67,0.815,68,0.867,69,1.178,71,1.23,77,2.177,78,2.177,83,0.46,84,1.778,86,1.665,87,0.625,88,0.98,89,1.36,92,3.465,99,0.882,100,0.976,101,0.636,115,2.177,118,4.46,120,1.074,122,3.847,123,1.049,126,1.749,128,0.658,130,2.353,142,1.959,150,0.27,151,1.202,152,0.238,154,0.828,164,1.614,165,0.099,166,0.304,184,2.242,186,1.089,194,3.238,196,0.493,197,1.12,198,0.546,200,1.587,201,0.718,202,0.718,203,0.647,204,1.418,205,0.658,206,0.681,207,0.615,208,0.67,209,0.681,210,1.965,211,0.67,212,1.36,213,1.615,214,0.681,215,1.18,216,2.039,217,0.681,218,0.681,219,0.718,220,0.67,221,1.14,222,0.681,223,0.718,224,0.67,225,0.718,226,1.3,227,0.658,228,1.57,229,1.418,230,0.658,231,0.67,232,0.67,233,0.658,234,0.718,235,0.681,236,1.761,237,0.681,238,0.67,239,0.681,240,0.681,241,0.681,242,0.67,243,0.718,244,1.323,245,0.681,246,0.718,247,0.67,248,0.718,249,1.506,250,2.117,251,1.912,252,0.718,253,0.67,254,0.718,255,0.658,256,0.67,257,0.718,258,0.67,259,0.718,260,1.383,261,0.718,262,0.67,263,1.278,264,0.718,265,0.658,266,0.718,267,0.67,268,0.718,269,0.647,270,0.718,271,0.67,272,0.658,273,0.67,274,0.636,275,0.718,276,0.67,277,0.718,278,0.718,279,0.67,280,0.718,281,0.67,282,0.718,283,0.647,284,0.718,285,0.658,286,0.67,287,0.718,288,0.67,289,0.693,290,0.718,291,2.172,292,0.67,293,1.66,294,0.67,295,0.681,296,0.594,297,0.681,298,0.681,299,0.67,300,0.681,301,0.681,302,0.681,303,0.718,304,0.658,305,0.67,306,0.718,307,0.67,308,0.693,309,0.67,310,0.718,311,0.67,312,0.718,313,0.681,314,0.67,315,0.67,316,0.718,317,0.67,318,0.718,319,0.67,320,0.718,321,0.67,322,0.636,323,0.625,324,0.647,325,0.718,326,0.658,327,0.718,328,0.658,329,0.718,330,0.658,331,0.718,332,0.658,333,0.718,334,0.658,335,1.393,336,0.718,337,0.658,338,0.706,339,0.718,340,0.002,341,0.003,342,0.002,373,2.212,375,1.174,376,3.463,379,0.757,384,2.878,386,1.095,389,0.528,390,3.686,394,1.643,446,2.748,448,2.628,451,1.202,453,1.173,471,1.597,484,2.071,493,1.739,510,1.291,520,2.036,541,1.863,543,1.412,555,2.177,585,1.533,606,4.833,607,4.487,622,1.924,624,1.597,637,2.56,895,3.626,912,1.027,914,1.612,921,3.238,938,1.555,1023,2.56,1028,2.643,1029,2.519,1040,1.778,1043,3.864,1046,1.555,1060,4.044,1103,3.083,1159,2.387,1163,3.31,1177,3.551,1183,4.31,1215,1.676,1216,1.676,1288,1.297,1308,3.815,1412,2.56,1480,2.904,1486,3.238,1488,2.904,1501,2.788,1502,1.829,1510,1.924,1647,2.039,1648,3.238,1650,4.55,1652,3.056,1654,3.056,1655,2.495,1656,3.056,1657,2.904,1658,3.8,1660,2.375,1661,2.182,1664,2.039,1665,1.829,1666,2.039,1667,1.555,1668,1.924,1669,2.039,1670,1.924,1671,1.829,1672,2.039,1673,2.182,1674,2.039,1676,3.612,1678,1.924,1679,2.039,1680,1.747,1683,2.375,1687,2.039,1688,3.056,1689,1.924,1690,2.039,1691,1.503,1692,1.676,1693,1.924,1694,1.924,1695,2.039,1696,2.242,1697,1.924,1698,2.039,1699,2.182,1702,3.771,1705,2.039,1706,1.924,1707,1.924,1708,2.039,1709,2.039,1711,2.182,1712,2.039,1846,1.676,1895,2.661,1995,2.039,2033,2.039,2035,2.039,2060,4.398,2097,7.065,2116,4.027,2121,2.375,2443,7.687,2444,4.234,2445,3.465,2446,8.157,2447,6.541,2448,5.266,2449,5.266,2450,2.182,2451,3.771,2452,4.234,2453,2.375,2454,3.771,2455,3.465,2456,2.666,2457,2.666,2458,2.666,2459,4.234,2460,2.375,2461,2.375,2462,2.375,2463,6.541,2464,2.375,2465,2.666,2466,6.541,2467,2.666,2468,2.182,2469,5.996,2470,2.666,2471,2.666,2472,2.666,2473,4.234,2474,4.234,2475,4.234,2476,3.465,2477,4.234,2478,4.234,2479,2.666,2480,4.234,2481,2.666,2482,2.666,2483,2.182,2484,2.182,2485,2.666,2486,2.666,2487,2.182,2488,2.666,2489,6.541,2490,2.666,2491,4.234,2492,2.666,2493,2.666,2494,4.234,2495,2.666,2496,2.666,2497,2.666,2498,2.666,2499,2.666,2500,2.666,2501,2.666,2502,2.375,2503,2.666,2504,2.666,2505,2.039,2506,2.666,2507,1.924,2508,1.555,2509,2.666,2510,4.234,2511,4.234,2512,2.666,2513,2.666,2514,2.666,2515,4.234]],["title/components/InputComponent.html",[0,0.279,128,1.244]],["body/components/InputComponent.html",[0,0.498,1,0.695,2,1.014,3,0.149,4,0.153,5,1.123,7,0.744,8,0.719,10,0.116,12,0.324,15,1.964,17,1.058,18,3.389,20,1.713,21,1.332,23,2.43,24,0.616,25,1.431,26,0.007,27,1.917,28,2.944,29,2.379,30,2.944,31,2.379,32,1.137,33,2.138,34,1.859,37,1.058,39,0.299,40,0.542,42,1.731,43,3.389,44,3.389,45,1.433,46,0.862,47,3.945,48,2.507,49,3.846,51,3.375,52,2.378,53,0.688,54,3.24,55,2.013,57,2.855,58,3.846,61,2.635,62,3.744,64,1.153,67,0.834,68,0.892,69,1.175,71,1.484,83,1.277,84,2.797,86,1.087,87,0.649,88,1.149,89,1.678,94,2.738,96,3.332,97,1.768,98,3.145,99,0.979,100,1.051,101,0.706,102,2.738,112,2.738,114,2.989,115,2.24,116,1.678,117,2.989,118,2.855,120,1.064,123,1.087,126,1.095,128,1.894,130,2.673,137,1.877,138,2.456,142,2.364,144,2.456,146,3.7,150,0.274,152,0.247,153,1.111,160,3.566,164,0.862,165,0.103,166,0.121,179,2.855,186,0.791,189,2.114,191,1.559,192,2.738,196,0.511,197,1.153,198,1.104,200,1.619,201,0.744,202,0.744,203,0.671,204,1.452,205,0.683,206,0.707,207,0.638,208,0.695,209,0.707,210,1.993,211,0.695,212,1.223,213,1.648,214,0.707,215,1.3,216,2.065,217,0.707,218,0.707,219,0.744,220,0.695,221,1.173,222,0.707,223,0.744,224,0.695,225,0.744,226,0.683,227,0.683,228,1.49,229,1.452,230,0.683,231,0.695,232,1.86,233,1.511,234,0.744,235,0.707,236,1.793,237,0.707,238,0.695,239,0.707,240,0.707,241,0.707,242,0.695,243,0.744,244,0.695,245,0.707,246,0.744,247,0.695,248,0.744,249,0.695,250,0.695,251,0.862,252,0.744,253,0.695,254,0.744,255,0.683,256,0.695,257,0.744,258,0.695,259,0.744,260,0.638,261,0.744,262,0.695,263,1.309,264,0.744,265,0.683,266,0.744,267,0.695,268,0.744,269,0.671,270,0.744,271,0.695,272,0.683,273,0.695,274,0.66,275,0.744,276,0.695,277,0.744,278,0.744,279,0.695,280,0.744,281,0.695,282,0.744,283,0.671,284,0.744,285,0.683,286,0.695,287,0.744,288,0.695,289,0.719,290,0.744,291,0.683,292,0.695,293,1.681,294,0.695,295,0.707,296,0.616,297,0.707,298,0.707,299,0.695,300,0.707,301,0.707,302,0.707,303,0.744,304,0.683,305,0.695,306,0.744,307,0.695,308,0.719,309,0.695,310,0.744,311,0.695,312,0.744,313,0.707,314,0.695,315,0.695,316,0.744,317,0.695,318,0.744,319,0.695,320,0.744,321,0.695,322,0.66,323,0.649,324,0.671,325,0.744,326,0.683,327,0.744,328,0.683,329,0.744,330,0.683,331,0.744,332,0.683,333,0.744,334,0.683,335,0.732,336,0.744,337,1.076,338,0.732,339,0.744,340,0.002,341,0.003,342,0.002,370,1.873,375,0.971,379,0.785,383,2.008,422,3.261,432,2.379,463,1.559,471,1.643,472,3.883,491,1.964,493,1.136,510,1.645,560,2.12,575,2.974,581,1.464,582,3.332,585,1.952,643,2.065,751,1.917,877,2.456,912,1.678,953,2.12,965,1.509,1040,2.971,1043,3.919,1061,2.555,1147,0.981,1166,3.332,1215,1.738,1216,1.738,1260,1.421,1299,2.263,1300,1.896,1375,2.12,1454,2.114,1467,5.789,1528,3.566,1531,4.123,1541,3.892,1544,3.566,1545,4.414,1546,3.566,1548,2.263,1549,3.566,1551,3.566,1553,2.263,1554,2.263,1555,2.263,1743,1.672,1838,3.534,1846,2.738,1947,3.88,2007,1.738,2192,4.802,2356,2.738,2357,2.738,2377,1.738,2435,2.263,2454,3.88,2516,2.462,2517,5.392,2518,6.119,2519,5.449,2520,4.414,2521,2.765,2522,4.357,2523,2.765,2524,3.332,2525,2.765,2526,6.298,2527,2.855,2528,2.765,2529,3.88,2530,2.765,2531,2.765,2532,2.765,2533,2.765,2534,3.88,2535,4.357,2536,2.765,2537,3.88,2538,2.765,2539,4.357,2540,2.765,2541,2.765,2542,2.765,2543,2.765,2544,2.765,2545,2.765,2546,2.765,2547,2.765,2548,2.462,2549,2.765,2550,3.145,2551,4.357,2552,3.145,2553,4.357,2554,4.357,2555,2.855,2556,4.357,2557,4.357,2558,4.357,2559,2.765,2560,2.765,2561,2.765,2562,3.88,2563,3.566,2564,2.462,2565,2.462,2566,2.263,2567,2.462,2568,7.072,2569,2.765,2570,2.765,2571,2.765,2572,4.357,2573,3.88,2574,2.765,2575,2.765,2576,6.119,2577,6.657,2578,4.357,2579,2.765,2580,2.765,2581,2.765,2582,2.765,2583,2.765,2584,2.765,2585,4.357,2586,2.765,2587,2.765,2588,2.765,2589,2.765,2590,2.765,2591,2.765,2592,2.765,2593,2.765,2594,2.765,2595,2.765,2596,2.765,2597,2.765,2598,2.765,2599,2.765,2600,2.765]],["title/components/InputErrorsComponent.html",[0,0.279,253,1.266]],["body/components/InputErrorsComponent.html",[0,0.443,1,1.065,2,1.129,3,0.228,4,0.235,5,1.451,7,1.142,8,1.103,10,0.178,12,0.498,21,1.047,24,0.945,26,0.007,33,2.173,34,1.891,37,1.457,39,0.459,40,0.747,42,1.578,46,1.583,47,4.435,53,0.949,64,1.589,67,0.636,69,0.961,71,1.129,88,0.635,99,0.624,100,1.044,101,0.45,120,0.791,126,1.508,128,1.047,130,2.58,138,3.929,141,2.466,150,0.27,152,0.378,153,1.704,161,5.346,165,0.158,166,0.185,186,1.091,196,0.784,197,1.589,198,0.868,200,2.005,201,1.142,202,1.142,203,1.029,204,1.876,205,1.047,206,1.084,207,0.978,208,1.065,209,1.084,210,2.299,211,1.065,212,1.58,213,2.041,214,1.084,215,1.408,216,2.349,217,1.084,218,1.084,219,1.142,220,1.065,221,1.616,222,1.084,223,1.142,224,1.065,225,1.142,226,1.047,227,1.047,228,1.719,229,1.876,230,1.047,231,1.065,232,1.065,233,1.047,234,1.142,235,1.084,236,2.154,237,1.084,238,1.065,239,1.084,240,1.084,241,1.084,242,1.065,243,1.142,244,1.065,245,1.084,246,1.142,247,1.065,248,1.142,249,1.065,250,1.065,251,1.188,252,1.142,253,1.904,254,1.142,255,1.047,256,1.065,257,1.142,258,1.065,259,1.142,260,0.978,261,1.142,262,1.065,263,1.692,264,1.142,265,1.047,266,1.142,267,1.065,268,1.142,269,1.029,270,1.142,271,1.065,272,1.047,273,1.065,274,1.012,275,1.142,276,1.065,277,1.142,278,1.142,279,1.065,280,1.142,281,1.065,282,1.142,283,1.029,284,1.142,285,1.047,286,1.065,287,1.142,288,1.065,289,1.103,290,1.142,291,1.047,292,1.065,293,1.912,294,1.065,295,1.084,296,0.945,297,1.084,298,1.084,299,1.065,300,1.084,301,1.084,302,1.084,303,1.142,304,1.047,305,1.065,306,1.142,307,1.065,308,1.103,309,1.065,310,1.142,311,1.065,312,1.142,313,1.084,314,1.065,315,1.065,316,1.142,317,1.065,318,1.142,319,1.065,320,1.142,321,1.065,322,1.012,323,0.995,324,1.029,325,1.142,326,1.047,327,1.142,328,1.047,329,1.142,330,1.047,331,1.142,332,1.047,333,1.142,334,1.047,335,1.122,336,1.142,337,1.047,338,1.122,339,1.142,340,0.003,341,0.004,342,0.003,389,0.839,453,1.866,570,2.522,640,2.683,641,4.966,990,4.112,1028,2.744,1029,3.079,1147,1.505,1274,2.665,1301,3.934,1819,3.061,1905,3.773,2297,5.346,2298,4.914,2601,7.123,2602,6.546,2603,3.776,2604,5.346,2605,4.844,2606,6.003,2607,6.003,2608,7.578,2609,6.003,2610,4.333,2611,6.003,2612,4.24,2613,5.346,2614,4.333,2615,3.773,2616,4.24,2617,4.24,2618,6.003,2619,4.24,2620,4.24,2621,4.24,2622,4.24,2623,6.003]],["title/modules/IoModule.html",[343,1.142,2134,3.455]],["body/modules/IoModule.html",[3,0.323,4,0.333,10,0.252,25,2.491,26,0.007,42,1.111,128,2.415,150,0.369,152,0.536,153,2.415,165,0.223,166,0.262,196,1.111,231,2.437,232,2.437,233,1.873,253,2.457,285,2.415,337,2.395,340,0.004,341,0.005,342,0.004,343,1.363,345,2.363,346,2.266,347,3.413,348,2.469,349,3.339,356,3.186,357,2.314,358,2.012,360,4.275,361,2.012,362,2.639,688,3.594,689,2.709,691,5.997,1526,4.919,1541,4.337,1543,4.596,1556,5.352,2134,6.827,2566,4.919,2602,4.919,2624,5.352,2625,5.352,2626,5.352,2627,6.009,2628,6.009,2629,6.009,2630,6.009,2631,6.009]],["title/interfaces/ItemConfig.html",[366,1.43,1740,2.938]],["body/interfaces/ItemConfig.html",[3,0.276,4,0.285,10,0.216,12,0.602,26,0.007,39,0.556,40,1.022,45,1.14,48,2.292,52,2.777,67,0.885,68,1.953,71,1.783,72,3.75,84,2.876,98,5.93,101,1.042,132,2.751,141,2.812,150,0.265,165,0.191,166,0.299,215,1.16,340,0.003,341,0.005,342,0.003,366,1.457,368,2.259,372,3.993,373,3.698,383,1.943,384,3.615,385,4.964,386,3.375,520,2.292,560,3.33,570,2.876,575,3.538,581,4.944,611,3.86,623,3.52,651,3.085,660,4.486,751,3.389,770,3.625,883,3.538,887,4.527,906,7.317,957,5.534,958,3.163,997,5.603,1071,2.802,1117,3.226,1147,2.916,1160,4.969,1166,5.235,1189,6.097,1238,3.993,1268,5.235,1294,4.941,1312,4.14,1375,3.33,1651,4.486,1733,4.696,1740,4.792,1894,5.235,1909,5.135,1910,3.364,1940,4.571,2468,6.725,2537,6.097,2555,4.486,2632,4.571,2633,6.846,2634,6.097,2635,7.317,2636,8.216,2637,6.097,2638,6.846,2639,6.846,2640,7.702,2641,6.846,2642,7.317,2643,6.846,2644,6.846,2645,6.846,2646,6.846,2647,5.235,2648,6.846,2649,5.235]],["title/components/ListComponent.html",[0,0.279,255,1.244]],["body/components/ListComponent.html",[0,0.293,1,0.675,2,0.995,3,0.144,4,0.149,5,1.102,7,0.723,8,0.699,9,1.129,10,0.113,12,0.315,17,1.034,21,0.663,23,2.385,24,0.599,26,0.007,32,1.177,33,2.135,34,1.852,37,0.652,39,0.822,40,0.53,42,1.56,45,1.303,46,1.382,51,1.182,52,2.479,53,0.673,54,2.802,55,1.968,62,2.255,64,1.127,67,0.81,69,1.179,71,1.313,75,2.199,83,1.31,84,2.223,87,1.413,88,1.171,89,1.66,97,1.231,99,1.028,100,1.063,101,0.776,120,0.865,126,1.07,128,0.663,137,2.096,142,2.4,144,3.395,150,0.271,152,0.24,165,0.1,166,0.117,181,1.557,186,1.269,194,5.021,196,0.497,197,1.127,198,0.55,199,1.789,200,1.594,201,0.723,202,0.723,203,0.652,204,1.425,205,0.663,206,0.687,207,0.62,208,0.675,209,0.687,210,1.971,211,0.675,212,1.2,213,1.622,214,0.687,215,1.634,216,2.045,217,0.687,218,0.687,219,0.723,220,0.675,221,1.147,222,0.687,223,0.723,224,0.675,225,0.723,226,0.663,227,0.663,228,1.474,229,1.425,230,0.663,231,0.675,232,0.675,233,0.663,234,0.723,235,0.687,236,1.768,237,0.687,238,0.675,239,0.687,240,0.687,241,0.687,242,0.675,243,0.723,244,0.675,245,0.687,246,0.723,247,0.675,248,0.723,249,0.675,250,0.675,251,0.843,252,0.723,253,0.675,254,0.723,255,1.725,256,0.675,257,0.723,258,0.675,259,0.723,260,0.62,261,0.723,262,0.675,263,1.285,264,0.723,265,0.663,266,0.723,267,0.675,268,0.723,269,0.652,270,0.723,271,0.675,272,0.663,273,0.675,274,0.641,275,0.723,276,0.675,277,0.723,278,0.723,279,0.675,280,0.723,281,0.675,282,0.723,283,0.652,284,0.723,285,0.663,286,0.675,287,0.723,288,0.675,289,0.699,290,0.723,291,0.663,292,0.675,293,1.664,294,0.675,295,0.687,296,1.18,297,0.687,298,0.687,299,0.675,300,0.687,301,0.687,302,0.687,303,0.723,304,0.663,305,0.675,306,0.723,307,0.675,308,0.699,309,0.675,310,0.723,311,0.675,312,0.723,313,0.687,314,0.675,315,0.675,316,0.723,317,0.675,318,0.723,319,0.675,320,0.723,321,0.675,322,0.641,323,0.63,324,0.652,325,0.723,326,0.663,327,0.723,328,0.663,329,0.723,330,0.663,331,0.723,332,0.663,333,0.723,334,0.663,335,0.711,336,0.723,337,0.663,338,0.711,339,0.723,340,0.002,341,0.003,342,0.002,370,1.155,375,0.949,376,3.476,378,3.796,379,1.209,383,2.22,384,2.329,386,1.104,389,0.843,390,3.476,394,1.799,410,4.504,420,4.347,422,3.2,461,0.935,471,1.606,484,2.081,493,1.75,497,1.423,510,1.837,532,3.794,537,2.19,544,4.047,558,1.423,565,2.508,566,3.487,567,3.83,571,1.013,573,3.794,575,1.08,582,3.257,584,4.131,585,0.973,593,4.127,599,1.567,747,1.996,776,1.343,882,5.45,887,4.203,912,2.319,953,1.307,958,4.103,960,2.055,1007,2.922,1022,3.326,1023,3.2,1040,1.789,1043,3.876,1053,3.01,1071,1.467,1085,4.047,1111,1.843,1112,1.843,1140,3.257,1147,1.512,1149,4.578,1182,2.922,1264,2.402,1288,2.575,1323,3.487,1324,2.19,1375,2.575,1455,2.393,1505,1.939,1667,2.484,1717,2.055,1743,1.625,1792,3.794,1879,2.791,1904,2.393,1905,1.689,2108,2.199,2186,3.794,2356,2.677,2357,2.677,2377,1.689,2649,2.055,2650,2.393,2651,4.259,2652,4.259,2653,3.487,2654,3.487,2655,5.363,2656,4.713,2657,5.292,2658,3.794,2659,6.022,2660,6.022,2661,6.022,2662,4.259,2663,4.929,2664,5.292,2665,4.592,2666,5.48,2667,2.393,2668,4.259,2669,2.687,2670,3.794,2671,2.687,2672,2.687,2673,2.687,2674,2.687,2675,2.687,2676,2.687,2677,2.687,2678,2.687,2679,2.687,2680,2.687,2681,3.794,2682,2.687,2683,4.259,2684,3.794,2685,4.259,2686,3.794,2687,3.794,2688,2.687,2689,2.687,2690,2.687,2691,2.687,2692,3.257,2693,4.259,2694,2.687,2695,2.687,2696,3.257,2697,4.259,2698,4.259,2699,4.259,2700,2.687,2701,2.687,2702,2.687,2703,2.687,2704,2.687,2705,2.687,2706,2.687,2707,1.939,2708,2.393,2709,2.393,2710,2.687,2711,2.687,2712,2.687,2713,2.687,2714,6.565,2715,2.687,2716,2.199,2717,2.687,2718,2.393,2719,2.687,2720,4.259,2721,2.687,2722,4.259,2723,2.687,2724,2.199,2725,2.687,2726,2.393,2727,2.687,2728,2.687,2729,2.393,2730,2.687,2731,4.259,2732,2.687,2733,3.794,2734,2.687,2735,2.687,2736,2.393,2737,2.687,2738,2.393,2739,2.687,2740,2.687,2741,2.687,2742,6.222,2743,2.687,2744,3.794,2745,2.687,2746,2.687,2747,2.393,2748,2.393,2749,2.687,2750,2.687,2751,2.687,2752,2.687,2753,4.259,2754,2.687,2755,2.687,2756,2.687,2757,4.259,2758,4.259,2759,6.022,2760,2.687]],["title/interfaces/ListConfig.html",[366,1.43,378,2.387]],["body/interfaces/ListConfig.html",[3,0.211,4,0.218,10,0.165,12,0.461,20,2.234,26,0.007,32,1.539,34,1.068,39,0.425,40,0.91,42,1.05,48,1.584,52,1.895,67,0.888,68,1.93,72,2.334,87,1.333,97,1.642,100,0.68,101,1.056,120,0.964,137,1.977,150,0.259,165,0.146,215,1.605,251,1.792,340,0.003,341,0.004,342,0.003,366,1.115,368,1.727,373,3.4,375,2.199,378,2.692,383,2.077,394,1.557,467,3.102,469,5.281,478,3.874,484,3.689,510,1.733,520,2.384,537,4.735,544,6.189,555,4.547,560,2.764,575,2.94,581,3.008,585,2.057,661,2.005,747,2.142,770,3.008,809,3.435,859,4.424,883,2.283,887,4.605,932,2.921,958,2.625,990,4.161,994,3.571,1022,3.571,1043,3.008,1053,3.657,1060,2.692,1066,5.019,1071,2.143,1117,2.468,1127,5.281,1128,6.516,1137,6.516,1153,5.06,1154,3.723,1155,3.203,1156,5.281,1167,4.65,1177,3.559,1182,5.019,1238,3.314,1295,5.06,1308,3.314,1311,4.344,1324,4.394,1375,3.559,1655,3.467,1667,3.314,1715,5.989,1716,5.281,1738,3.435,1740,3.894,1885,3.897,1895,4.599,1912,4.65,1925,5.989,1939,3.897,2060,4.563,2119,6.516,2125,4.65,2213,5.06,2647,4.344,2665,3.435,2716,4.65,2761,3.497,2762,7.316,2763,6.516,2764,5.281,2765,6.516,2766,7.316,2767,5.595,2768,7.316,2769,6.189,2770,6.624,2771,7.316,2772,7.316,2773,5.681,2774,4.65,2775,5.06,2776,5.06,2777,5.681,2778,5.681,2779,4.65,2780,5.06,2781,5.681,2782,5.989,2783,5.06,2784,4.65,2785,5.06,2786,5.681,2787,3.497]],["title/injectables/ListConfigService.html",[593,3.166,652,1.565]],["body/injectables/ListConfigService.html",[3,0.295,4,0.305,10,0.231,26,0.007,32,0.884,39,0.595,40,0.891,45,1.327,46,1.577,48,1.998,53,1.132,67,0.77,68,1.126,69,1.159,88,1.344,89,1.914,99,1.32,100,1.074,101,0.952,150,0.278,152,0.49,164,1.834,165,0.204,166,0.24,186,1.66,215,1.657,340,0.004,341,0.005,342,0.004,379,1.561,383,2.66,394,1.507,520,2.222,575,2.879,581,3.793,593,4.503,639,3.1,652,2.226,705,2.606,965,3.002,990,4.765,1103,2.827,1311,4.205,1757,5.751,2007,3.456,2783,6.38,2785,4.897,2788,7.087,2789,4.205,2790,7.967,2791,7.164,2792,7.164,2793,7.164,2794,7.164,2795,7.164,2796,5.499,2797,7.164,2798,4.501,2799,7.164,2800,5.499,2801,7.164,2802,5.499,2803,7.164,2804,5.499,2805,7.164,2806,5.499,2807,5.499,2808,5.499,2809,5.499,2810,7.164,2811,4.897,2812,7.164,2813,5.499,2814,5.499,2815,5.499,2816,7.967,2817,5.499,2818,7.164,2819,5.499,2820,5.499,2821,7.164,2822,5.499,2823,5.499,2824,7.164,2825,5.499,2826,5.499,2827,5.499,2828,7.164,2829,5.499,2830,5.499,2831,5.499]],["title/components/ListHeaderComponent.html",[0,0.279,256,1.266]],["body/components/ListHeaderComponent.html",[0,0.386,1,0.763,2,0.881,3,0.163,4,0.168,5,0.632,7,0.818,8,0.79,10,0.128,12,0.356,17,1.138,21,0.75,23,2.581,24,0.677,26,0.007,32,0.921,33,2.147,34,1.865,37,1.138,39,0.329,40,0.583,42,1.533,44,1.909,45,1.225,46,1.671,47,3.218,48,2.391,53,0.905,55,2.166,64,1.241,67,0.77,69,1.158,71,0.571,84,2.705,87,1.1,88,1.217,89,1.842,99,1.164,100,1.078,101,0.88,120,0.617,123,1.194,126,1.178,128,1.59,130,2,137,1.057,150,0.285,151,1.369,152,0.271,164,0.601,165,0.113,166,0.133,186,1.392,196,0.561,197,1.241,198,0.622,200,1.704,201,0.818,202,0.818,203,0.737,204,1.542,205,0.75,206,0.776,207,0.7,208,0.763,209,0.776,210,2.064,211,0.763,212,1.298,213,1.734,214,0.776,215,1.609,216,2.132,217,0.776,218,0.776,219,0.818,220,0.763,221,1.262,222,0.776,223,0.818,224,0.763,225,0.818,226,0.75,227,0.75,228,1.543,229,1.542,230,0.75,231,0.763,232,0.763,233,0.75,234,0.818,235,0.776,236,1.874,237,0.776,238,0.763,239,0.776,240,0.776,241,0.776,242,0.763,243,0.818,244,1.617,245,0.776,246,0.818,247,0.763,248,0.818,249,0.763,250,0.763,251,0.928,252,0.818,253,0.763,254,0.818,255,0.75,256,1.617,257,0.818,258,0.763,259,0.818,260,0.7,261,0.818,262,0.763,263,1.39,264,0.818,265,0.75,266,0.818,267,0.763,268,0.818,269,0.737,270,0.818,271,0.763,272,0.75,273,0.763,274,0.725,275,0.818,276,0.763,277,0.818,278,0.818,279,0.763,280,0.818,281,0.763,282,0.818,283,0.737,284,0.818,285,0.75,286,0.763,287,0.818,288,0.763,289,0.79,290,0.818,291,1.59,292,0.763,293,1.735,294,0.763,295,0.776,296,1.276,297,0.776,298,0.776,299,0.763,300,0.776,301,0.776,302,0.776,303,0.818,304,0.75,305,0.763,306,0.818,307,0.763,308,0.79,309,0.763,310,0.818,311,0.763,312,0.818,313,0.776,314,0.763,315,0.763,316,0.818,317,0.763,318,0.818,319,0.763,320,0.818,321,0.763,322,0.725,323,0.712,324,0.737,325,0.818,326,0.75,327,0.818,328,0.75,329,0.818,330,0.75,331,0.818,332,0.75,333,0.818,334,0.75,335,0.804,336,0.818,337,0.75,338,0.804,339,0.818,340,0.002,341,0.003,342,0.002,376,3.684,378,3.632,379,0.862,383,1.331,386,2.858,389,0.601,390,3.684,394,1.569,420,3.384,424,1.836,453,1.336,461,1.057,467,1.658,490,1.439,493,1.247,520,0.847,537,3.941,555,2.944,575,2.587,582,3.585,585,1.697,593,4.373,611,1.712,639,1.712,660,1.99,755,1.909,776,1.518,947,3.216,958,3.657,1041,2.322,1053,2.343,1060,3.051,1161,4.175,1177,2.281,1264,1.712,1301,1.99,1324,4.07,1410,3.585,1751,1.836,1839,2.322,1840,4.379,1844,3.928,1846,1.909,1847,2.322,1860,4.379,1861,3.072,1866,2.486,1873,2.192,1883,2.705,1889,1.771,1895,1.909,1906,3.585,1933,2.192,1993,2.486,2077,2.322,2122,3.585,2193,2.705,2309,4.175,2351,2.486,2356,2.947,2357,2.947,2377,1.909,2519,2.486,2605,1.771,2667,2.705,2692,2.322,2709,2.705,2738,2.705,2744,5.099,2788,7.02,2832,7.514,2833,2.705,2834,4.688,2835,4.688,2836,5.726,2837,6.958,2838,5.726,2839,5.726,2840,5.726,2841,6.438,2842,4.688,2843,4.688,2844,4.688,2845,6.438,2846,4.688,2847,4.688,2848,4.688,2849,4.688,2850,3.037,2851,3.037,2852,3.585,2853,3.837,2854,3.037,2855,4.688,2856,3.037,2857,3.837,2858,3.837,2859,4.688,2860,3.037,2861,4.688,2862,3.037,2863,3.037,2864,3.037,2865,4.688,2866,3.037,2867,4.688,2868,3.037,2869,4.688,2870,3.037,2871,4.688,2872,3.037,2873,3.037,2874,3.037,2875,4.688,2876,3.037,2877,3.037,2878,3.037,2879,2.486,2880,3.037,2881,2.486,2882,3.037,2883,4.688,2884,2.705,2885,3.037,2886,3.037,2887,4.688,2888,6.438,2889,3.037,2890,3.037,2891,3.037,2892,3.037,2893,3.037,2894,3.037,2895,5.726,2896,3.037,2897,3.037,2898,3.037,2899,2.705,2900,3.037,2901,7.353,2902,3.037,2903,3.037,2904,4.688,2905,3.037,2906,3.037,2907,3.037,2908,3.037,2909,3.037,2910,4.688,2911,3.037,2912,3.037,2913,3.037,2914,3.037,2915,3.037,2916,6.438,2917,7.353,2918,3.037]],["title/components/ListItemsComponent.html",[0,0.279,258,1.266]],["body/components/ListItemsComponent.html",[0,0.351,1,0.898,2,0.997,3,0.192,4,0.198,5,0.745,7,0.963,8,0.93,10,0.15,12,0.42,17,1.288,21,0.883,23,2.85,24,0.797,26,0.007,32,1.125,33,2.161,34,1.878,37,1.288,39,0.387,40,0.66,42,1.498,46,1.05,47,2.652,52,2.678,53,0.838,55,3.232,64,1.404,67,0.776,69,1.127,71,0.997,83,0.617,84,2.939,87,1.244,88,1.048,89,1.203,99,0.93,100,1.035,101,0.86,120,0.699,126,1.333,128,0.883,137,1.846,142,2.096,144,2.991,150,0.245,152,0.319,165,0.133,166,0.156,184,3.348,186,0.964,196,0.661,197,1.404,198,0.732,200,1.851,201,0.963,202,0.963,203,0.868,204,1.703,205,0.883,206,0.914,207,0.825,208,0.898,209,0.914,210,2.182,211,0.898,212,1.434,213,1.884,214,0.914,215,1.624,216,2.241,217,0.914,218,0.914,219,0.963,220,0.898,221,1.428,222,0.914,223,0.963,224,0.898,225,0.963,226,0.883,227,0.883,228,1.631,229,1.703,230,0.883,231,0.898,232,0.898,233,0.883,234,0.963,235,0.914,236,2.012,237,0.914,238,0.898,239,0.914,240,0.914,241,0.914,242,0.898,243,0.963,244,0.898,245,0.914,246,0.963,247,0.898,248,0.963,249,0.898,250,0.898,251,1.05,252,0.963,253,0.898,254,0.963,255,0.883,256,0.898,257,0.963,258,1.967,259,0.963,260,0.825,261,0.963,262,0.898,263,1.535,264,0.963,265,0.883,266,0.963,267,0.898,268,0.963,269,0.868,270,0.963,271,0.898,272,0.883,273,0.898,274,0.853,275,0.963,276,0.898,277,0.963,278,0.963,279,0.898,280,0.963,281,0.898,282,0.963,283,0.868,284,0.963,285,0.883,286,0.898,287,0.963,288,0.898,289,0.93,290,0.963,291,0.883,292,0.898,293,1.824,294,0.898,295,0.914,296,0.797,297,0.914,298,0.914,299,0.898,300,0.914,301,0.914,302,0.914,303,0.963,304,0.883,305,0.898,306,0.963,307,0.898,308,0.93,309,0.898,310,0.963,311,0.898,312,0.963,313,0.914,314,0.898,315,0.898,316,0.963,317,0.898,318,0.963,319,0.898,320,0.963,321,0.898,322,0.853,323,0.839,324,0.868,325,0.963,326,0.883,327,0.963,328,0.883,329,0.963,330,0.883,331,0.963,332,0.883,333,0.963,334,0.883,335,0.946,336,0.963,337,0.883,338,0.946,339,0.963,340,0.002,341,0.004,342,0.002,375,1.41,376,3.957,379,1.015,389,0.708,390,3.704,410,4.338,420,5.05,453,1.573,471,2,510,1.618,544,4.836,555,2.727,565,2.514,566,4.342,567,3.094,650,3.639,747,2.638,753,2.896,887,4.514,895,3.208,912,2.877,957,3.334,958,3.997,960,4.057,1022,3.975,1041,5.35,1053,2.652,1085,4.057,1111,3.639,1112,2.453,1169,2.727,1238,3.094,1301,3.476,1324,2.727,1501,3.704,1516,2.927,1691,2.991,1717,2.734,1862,3.829,2356,3.334,2357,3.334,2377,2.247,2656,5.632,2658,4.724,2665,3.208,2670,4.724,2681,4.724,2742,3.184,2747,4.724,2748,3.184,2788,6.867,2852,4.057,2853,4.342,2919,7.35,2920,3.184,2921,5.304,2922,5.304,2923,5.304,2924,5.304,2925,6.996,2926,3.575,2927,5.304,2928,3.575,2929,3.575,2930,5.304,2931,4.724,2932,5.304,2933,3.575,2934,3.575,2935,3.575,2936,3.575,2937,5.304,2938,5.304,2939,3.575,2940,5.304,2941,3.575,2942,3.575,2943,3.575,2944,3.184,2945,3.575,2946,3.575,2947,3.575,2948,3.575]],["title/modules/ListModule.html",[343,1.142,2949,3.455]],["body/modules/ListModule.html",[3,0.299,4,0.308,10,0.234,25,2.632,26,0.007,150,0.376,152,0.496,153,2.236,164,1.101,165,0.268,166,0.243,196,1.028,215,1.358,255,2.37,256,2.411,258,2.411,286,2.411,302,2.453,340,0.004,341,0.005,342,0.004,343,1.261,345,2.188,346,2.098,347,3.291,348,2.285,349,3.22,356,3.032,357,2.142,358,1.863,361,2.417,362,1.936,593,5.659,599,3.245,688,3.42,689,2.507,692,4.951,776,2.781,1263,6.583,2126,6.583,2136,5.9,2137,5.444,2139,5.9,2147,4.015,2150,4.554,2151,4.554,2832,4.554,2919,4.554,2949,6.871,2950,4.955,2951,4.955,2952,5.563,2953,4.955,2954,4.955,2955,4.955,2956,4.955,2957,5.563,2958,5.563,2959,5.563,2960,5.563,2961,5.563,2962,4.955,2963,5.563]],["title/components/LoaderComponent.html",[0,0.279,260,1.162]],["body/components/LoaderComponent.html",[0,0.345,1,0.874,2,1.298,3,0.187,4,0.193,5,1.296,7,0.937,8,0.905,9,1.461,10,0.146,12,0.408,21,0.859,24,0.775,26,0.007,32,0.559,33,2.159,34,1.878,37,1.262,39,0.377,40,0.646,42,0.643,45,0.866,53,0.821,67,0.568,69,1.019,71,1.457,75,4.254,77,2.672,78,2.672,83,0.896,87,1.733,88,0.932,89,1.178,99,0.764,100,1.01,101,0.551,115,3.549,120,0.973,122,3.111,126,1.734,128,0.859,132,3.589,134,3.406,137,1.809,141,2.835,150,0.241,152,0.31,154,1.081,164,0.688,165,0.193,166,0.227,186,0.632,196,0.643,197,1.375,198,0.712,199,1.461,200,1.826,201,0.937,202,0.937,203,0.844,204,1.675,205,0.859,206,0.889,207,0.802,208,0.874,209,0.889,210,2.163,211,0.874,212,1.411,213,1.859,214,0.889,215,1.314,216,2.223,217,0.889,218,0.889,219,0.937,220,0.874,221,1.399,222,0.889,223,0.937,224,0.874,225,0.937,226,0.859,227,0.859,228,1.617,229,1.675,230,0.859,231,0.874,232,0.874,233,0.859,234,0.937,235,0.889,236,1.989,237,0.889,238,0.874,239,0.889,240,0.889,241,0.889,242,0.874,243,0.937,244,0.874,245,0.889,246,0.937,247,0.874,248,0.937,249,0.874,250,0.874,251,1.028,252,0.937,253,0.874,254,0.937,255,0.859,256,0.874,257,0.937,258,0.874,259,0.937,260,1.852,261,0.937,262,0.874,263,1.51,264,0.937,265,0.859,266,0.937,267,0.874,268,0.937,269,0.844,270,0.937,271,0.874,272,0.859,273,0.874,274,0.83,275,0.937,276,0.874,277,0.937,278,0.937,279,0.874,280,0.937,281,0.874,282,0.937,283,0.844,284,0.937,285,0.859,286,0.874,287,0.937,288,0.874,289,0.905,290,0.937,291,0.859,292,0.874,293,1.81,294,0.874,295,0.889,296,0.775,297,0.889,298,0.889,299,0.874,300,0.889,301,0.889,302,0.889,303,0.937,304,0.859,305,0.874,306,0.937,307,0.874,308,0.905,309,0.874,310,0.937,311,0.874,312,0.937,313,0.889,314,0.874,315,0.874,316,0.937,317,0.874,318,0.937,319,0.874,320,0.937,321,0.874,322,0.83,323,0.816,324,0.844,325,0.937,326,0.859,327,0.937,328,0.859,329,0.937,330,0.859,331,0.937,332,0.859,333,0.937,334,0.859,335,0.92,336,0.937,337,0.859,338,0.92,339,0.937,340,0.002,341,0.003,342,0.002,358,1.165,367,1.961,375,0.775,379,0.987,389,0.688,394,1.705,461,1.21,467,2.837,474,2.598,477,1.798,490,1.648,497,4.253,520,1.449,541,4.18,549,1.259,557,5.65,570,2.899,624,1.312,639,1.961,640,2.001,661,0.816,662,1.882,663,3.653,742,2.66,877,3.508,882,4.841,883,1.398,915,3.406,1024,4.026,1046,2.029,1053,4.015,1103,3.985,1158,2.66,1169,1.788,1177,2.528,1179,3.143,1291,3.751,1501,4.372,1655,3.913,1696,2.752,1722,1.739,1726,2.528,1728,3.565,1843,2.103,1885,3.565,1901,2.186,1913,2.279,1919,2.279,1937,2.847,1965,4.254,2048,3.751,2122,3.974,2170,2.279,2263,2.66,2277,5.093,2280,4.628,2302,6.047,2356,3.266,2357,3.266,2377,2.186,2445,2.847,2476,2.847,2696,2.66,2784,5.093,2964,3.098,2965,5.197,2966,5.197,2967,4.628,2968,3.974,2969,5.197,2970,5.197,2971,5.896,2972,8.441,2973,3.478,2974,5.197,2975,3.478,2976,5.197,2977,3.478,2978,3.751,2979,4.628,2980,3.478,2981,5.197,2982,5.197,2983,5.197,2984,3.478,2985,3.478,2986,5.197,2987,3.478,2988,2.847,2989,3.478,2990,5.278,2991,3.478,2992,2.186,2993,5.197,2994,3.478,2995,3.478,2996,5.197,2997,3.478,2998,6.222,2999,3.478,3000,2.279,3001,5.197,3002,6.222,3003,6.222,3004,3.478,3005,3.478,3006,3.478,3007,2.847,3008,3.478,3009,3.478,3010,3.478,3011,2.847,3012,3.478,3013,2.847,3014,2.66,3015,3.478,3016,3.478,3017,3.478,3018,5.197,3019,3.478,3020,3.478,3021,3.478,3022,3.478,3023,3.098,3024,5.197,3025,3.478,3026,3.478]],["title/modules/LoaderModule.html",[343,1.142,2138,3.301]],["body/modules/LoaderModule.html",[3,0.372,4,0.384,10,0.291,25,2.906,26,0.007,150,0.355,152,0.617,165,0.257,166,0.302,196,1.279,260,2.277,340,0.005,341,0.006,342,0.005,343,1.569,345,2.722,346,2.61,347,3.634,348,2.843,349,3.555,356,3.474,357,2.665,358,2.318,361,2.318,362,2.879,688,3.92,689,3.12,1024,5.545,2138,6.389,3027,6.165,3028,6.165,3029,6.165,3030,6.165,3031,6.922,3032,5.666,3033,6.922]],["title/injectables/LoaderService.html",[652,1.565,1024,2.938]],["body/injectables/LoaderService.html",[3,0.336,4,0.347,10,0.263,12,0.734,26,0.007,39,0.677,40,0.967,45,1.042,53,1.228,67,0.772,69,1.073,71,1.664,86,3.057,87,2.207,88,1.164,89,1.418,96,5.945,99,1.144,100,0.93,101,0.825,120,0.824,132,3.821,150,0.301,152,0.558,165,0.232,166,0.273,186,1.412,260,2.211,340,0.004,341,0.005,342,0.004,436,6.924,477,2.247,520,2.168,541,4.407,557,7.595,652,2.415,705,2.963,1024,4.535,1114,5.544,1169,3.997,1605,5.119,1722,3.886,1885,5.333,2302,6.364,2316,5.945,2550,5.611,2696,4.782,2967,6.924,2979,6.924,2990,7.096,3032,5.119,3034,5.569,3035,7.774,3036,6.253,3037,6.253,3038,6.253,3039,6.253]],["title/components/LocationMapComponent.html",[0,0.279,262,1.266]],["body/components/LocationMapComponent.html",[0,0.436,1,1.018,2,1.092,3,0.218,4,0.225,5,0.844,6,2.211,7,1.091,8,1.053,10,0.17,12,0.475,21,1,24,0.903,26,0.007,32,0.934,33,2.17,34,1.888,35,3.808,37,1.41,39,0.439,42,1.557,45,1.517,53,0.918,64,1.537,67,0.746,69,1.037,83,0.699,86,2.285,88,0.87,89,1.317,99,0.855,100,1.05,101,0.616,120,0.895,126,1.46,128,1,130,1.805,142,2.223,150,0.157,152,0.361,164,0.802,165,0.151,166,0.177,179,2.654,186,0.736,194,4.443,196,0.749,197,1.537,198,0.829,200,1.964,201,1.091,202,1.091,203,0.983,204,1.829,205,1,206,1.035,207,0.934,208,1.018,209,1.035,210,2.269,211,1.018,212,1.54,213,1.999,214,1.035,215,1.386,216,2.321,217,1.035,218,1.035,219,1.091,220,1.018,221,1.565,222,1.035,223,1.091,224,1.018,225,1.091,226,1,227,1,228,1.696,229,1.829,230,1,231,1.018,232,1.018,233,1,234,1.091,235,1.035,236,2.116,237,1.035,238,1.018,239,1.035,240,1.035,241,1.035,242,1.018,243,1.091,244,1.018,245,1.035,246,1.091,247,1.018,248,1.091,249,1.018,250,1.018,251,1.15,252,1.091,253,1.018,254,1.091,255,1,256,1.018,257,1.091,258,1.018,259,1.091,260,0.934,261,1.091,262,1.865,263,2.162,264,1.091,265,1,266,1.091,267,1.018,268,1.091,269,0.983,270,1.091,271,1.018,272,1,273,1.018,274,0.967,275,1.091,276,1.018,277,1.091,278,1.091,279,1.018,280,1.091,281,1.018,282,1.091,283,0.983,284,1.091,285,1,286,1.018,287,1.091,288,1.018,289,1.053,290,1.091,291,1,292,1.018,293,1.889,294,1.018,295,1.035,296,0.903,297,1.035,298,1.035,299,1.018,300,1.035,301,1.035,302,1.035,303,1.091,304,1,305,1.018,306,1.091,307,1.018,308,1.053,309,1.018,310,1.091,311,1.018,312,1.091,313,1.035,314,1.018,315,1.018,316,1.091,317,1.018,318,1.091,319,1.018,320,1.091,321,1.018,322,0.967,323,0.95,324,0.983,325,1.091,326,1,327,1.091,328,1,329,1.091,330,1,331,1.091,332,1,333,1.091,334,1,335,1.072,336,1.091,337,1,338,1.072,339,1.091,340,0.003,341,0.004,342,0.003,375,1.295,471,2.191,484,2.285,510,1.772,520,1.62,585,2.687,611,3.83,859,3.513,998,6.442,1040,2.441,1043,4.46,1178,3.808,1501,2.145,1696,3.076,2077,3.097,2227,3.808,2267,5.561,2268,6.999,2270,6.999,3040,6.442,3041,3.607,3042,6.794,3043,5.81,3044,5.81,3045,5.174,3046,8.424,3047,5.81,3048,5.81,3049,4.05,3050,5.174,3051,4.05,3052,5.81,3053,4.05,3054,4.05,3055,7.422,3056,5.81,3057,4.05,3058,5.81,3059,5.174,3060,4.05,3061,5.81,3062,4.05,3063,4.05,3064,4.05,3065,4.05,3066,4.05,3067,4.05,3068,5.81,3069,4.05]],["title/modules/LocationModule.html",[343,1.142,3070,3.636]],["body/modules/LocationModule.html",[2,1.542,3,0.314,4,0.324,10,0.245,12,0.686,25,2.837,26,0.007,27,2.571,53,0.923,69,0.741,88,0.875,99,0.859,100,0.699,101,0.62,150,0.367,152,0.521,153,2.348,154,1.815,164,1.474,165,0.277,166,0.255,186,1.061,196,1.08,262,2.415,263,1.991,265,2.373,267,2.415,340,0.004,341,0.005,342,0.004,343,1.958,345,2.298,346,2.203,347,3.368,348,2.4,349,3.295,355,5.142,356,3.129,357,2.249,358,1.956,360,4.2,361,2.494,362,2.592,432,4.067,686,4.2,687,5.696,688,3.53,689,2.633,690,5.919,691,5.376,713,3.672,856,5.376,857,6.634,2225,5.977,2255,4.782,3007,4.782,3070,7.115,3071,5.203,3072,5.203,3073,5.842,3074,5.203,3075,5.203,3076,5.203,3077,7.448,3078,7.944,3079,5.842,3080,5.842,3081,5.842,3082,4.782,3083,5.203,3084,5.842,3085,5.203,3086,5.203,3087,5.842,3088,8.2,3089,5.842,3090,5.842,3091,5.842,3092,5.842,3093,5.842]],["title/components/LocationPickerComponent.html",[0,0.279,265,1.244]],["body/components/LocationPickerComponent.html",[0,0.433,1,0.807,2,0.92,3,0.173,4,0.178,5,0.669,6,1.753,7,0.865,8,0.835,10,0.135,12,0.377,15,2.206,17,1.609,18,4.485,20,1.925,21,2.144,24,0.716,25,1.608,26,0.007,27,2.153,28,3.237,29,2.672,30,3.237,31,2.672,32,1.257,33,2.152,34,1.869,35,3.207,37,1.188,39,0.348,40,0.609,42,1.681,43,3.726,45,1.493,46,1.787,47,3.567,48,1.99,49,3.076,50,4.653,51,2.609,52,1.882,53,0.773,57,3.207,58,4.167,61,2.959,62,3.51,63,3.585,64,1.295,67,0.817,68,1.002,69,1.189,71,0.92,83,0.554,86,1.925,88,1.171,89,1.773,94,3.076,97,1.916,99,1.05,100,1.039,101,0.757,102,3.076,112,3.076,114,3.357,115,2.516,116,1.884,117,2.203,118,4.267,119,2.456,120,0.99,121,2.456,123,1.925,126,1.229,128,1.637,130,2.336,138,4.408,139,2.456,140,2.456,141,1.319,142,1.466,143,2.456,144,1.811,145,2.456,146,1.942,147,2.456,148,2.456,149,2.203,150,0.292,151,1.448,152,0.286,153,1.291,154,0.998,164,0.636,165,0.119,166,0.14,186,0.583,191,1.811,192,2.019,196,0.594,197,1.295,198,0.658,200,1.754,201,0.865,202,0.865,203,0.78,204,1.596,205,0.793,206,0.821,207,0.741,208,0.807,209,0.821,210,2.105,211,0.807,212,1.344,213,1.785,214,0.821,215,1.274,216,2.17,217,0.821,218,0.821,219,0.865,220,0.807,221,1.318,222,0.821,223,0.865,224,0.807,225,0.865,226,0.793,227,0.793,228,1.574,229,1.596,230,0.793,231,0.807,232,0.807,233,0.793,234,0.865,235,0.821,236,1.921,237,0.821,238,0.807,239,0.821,240,0.821,241,0.821,242,0.807,243,0.865,244,0.807,245,0.821,246,0.865,247,0.807,248,0.865,249,0.807,250,0.807,251,0.968,252,0.865,253,0.807,254,0.865,255,0.793,256,0.807,257,0.865,258,0.807,259,0.865,260,0.741,261,0.865,262,1.889,263,2.222,264,0.865,265,1.857,266,0.865,267,1.889,268,0.865,269,0.78,270,0.865,271,0.807,272,0.793,273,0.807,274,0.766,275,0.865,276,0.807,277,0.865,278,0.865,279,0.807,280,0.865,281,0.807,282,0.865,283,0.78,284,0.865,285,0.793,286,0.807,287,0.865,288,0.807,289,0.835,290,0.865,291,0.793,292,0.807,293,1.766,294,0.807,295,0.821,296,0.716,297,0.821,298,0.821,299,0.807,300,0.821,301,0.821,302,0.821,303,0.865,304,0.793,305,0.807,306,0.865,307,0.807,308,0.835,309,0.807,310,0.865,311,0.807,312,0.865,313,0.821,314,0.807,315,0.807,316,0.865,317,0.807,318,0.865,319,0.807,320,0.865,321,0.807,322,0.766,323,0.753,324,0.78,325,0.865,326,0.793,327,0.865,328,0.793,329,0.865,330,0.793,331,0.865,332,0.793,333,0.865,334,0.793,335,0.85,336,0.865,337,0.793,338,0.85,339,0.865,340,0.002,341,0.003,342,0.002,375,1.322,389,0.968,432,2.672,454,2.629,493,1.319,610,3.669,777,3.207,998,5.979,1053,2.446,1176,4.009,1269,4.358,1437,2.959,1861,4.676,2225,5.411,2241,4.006,2244,4.006,2245,4.358,2246,4.006,2451,4.358,3040,6.907,3045,4.358,3059,4.358,3082,2.629,3083,2.86,3085,2.86,3094,2.86,3095,4.894,3096,5.928,3097,4.894,3098,6.629,3099,5.928,3100,2.86,3101,4.894,3102,3.212,3103,3.212,3104,3.212,3105,3.212,3106,3.212,3107,6.629,3108,3.212,3109,4.006,3110,3.212,3111,4.894,3112,3.212,3113,3.212,3114,3.212,3115,4.894,3116,3.212,3117,3.212,3118,4.894,3119,3.212,3120,3.212,3121,4.894,3122,4.894,3123,3.212,3124,3.212,3125,5.928,3126,3.212,3127,3.212,3128,3.212,3129,3.212,3130,4.894]],["title/components/LocationSearchComponent.html",[0,0.279,267,1.266]],["body/components/LocationSearchComponent.html",[0,0.382,1,1.044,2,1.113,3,0.223,4,0.23,5,0.866,7,1.119,8,1.081,10,0.175,12,0.488,17,1.437,21,1.026,24,0.926,26,0.007,33,2.172,34,1.889,37,1.437,39,0.45,40,0.736,42,1.632,45,1.148,53,0.935,63,4.542,64,1.987,67,0.629,69,1.046,83,0.717,88,0.886,89,1.342,99,0.611,100,1.038,101,0.441,120,0.908,122,3.106,123,1.635,126,1.887,128,1.026,142,2.25,150,0.267,151,1.873,152,0.371,165,0.155,166,0.181,196,0.768,197,1.566,198,0.851,200,1.987,201,1.119,202,1.119,203,1.009,204,1.856,205,1.026,206,1.062,207,0.959,208,1.044,209,1.062,210,2.286,211,1.044,212,1.563,213,2.022,214,1.062,215,1.398,216,2.337,217,1.062,218,1.062,219,1.119,220,1.044,221,1.594,222,1.062,223,1.119,224,1.044,225,1.119,226,1.026,227,1.026,228,1.709,229,1.856,230,1.026,231,1.044,232,1.044,233,1.026,234,1.119,235,1.062,236,2.137,237,1.062,238,1.044,239,1.062,240,1.062,241,1.062,242,1.044,243,1.119,244,1.044,245,1.062,246,1.119,247,1.044,248,1.119,249,1.044,250,1.044,251,1.171,252,1.119,253,1.044,254,1.119,255,1.026,256,1.044,257,1.119,258,1.044,259,1.119,260,0.959,261,1.119,262,1.044,263,2.2,264,1.119,265,1.026,266,1.119,267,1.887,268,1.119,269,1.009,270,1.119,271,1.044,272,1.026,273,1.044,274,0.992,275,1.119,276,1.044,277,1.119,278,1.119,279,1.044,280,1.119,281,1.044,282,1.119,283,1.009,284,1.119,285,1.026,286,1.044,287,1.119,288,1.044,289,1.081,290,1.119,291,1.026,292,1.044,293,1.902,294,1.044,295,1.062,296,0.926,297,1.062,298,1.062,299,1.044,300,1.062,301,1.062,302,1.062,303,1.119,304,1.026,305,1.044,306,1.119,307,1.044,308,1.081,309,1.044,310,1.119,311,1.044,312,1.119,313,1.062,314,1.044,315,1.044,316,1.119,317,1.044,318,1.119,319,1.044,320,1.119,321,1.044,322,0.992,323,0.975,324,1.009,325,1.119,326,1.026,327,1.119,328,1.026,329,1.119,330,1.026,331,1.119,332,1.026,333,1.119,334,1.026,335,1.1,336,1.119,337,1.026,338,1.1,339,1.119,340,0.003,341,0.004,342,0.003,389,1.171,471,2.232,491,2.668,510,1.805,585,2.143,588,4.844,610,4.081,663,2.378,1040,2.486,1043,4.202,1080,3.702,1178,3.878,1427,4.272,1456,5.271,1651,4.922,1738,3.579,1806,4.922,1861,5.406,2225,5.686,2227,3.878,2236,7.56,2241,4.844,2267,5.642,3040,6.492,3082,3.402,3100,3.702,3131,3.702,3132,5.918,3133,6.892,3134,5.918,3135,4.156,3136,5.918,3137,4.156,3138,4.156,3139,5.918,3140,4.156,3141,3.702,3142,4.156,3143,4.156,3144,4.156,3145,4.156]],["title/components/LoginComponent.html",[0,0.279,269,1.223]],["body/components/LoginComponent.html",[0,0.362,1,0.948,2,1.038,3,0.203,4,0.209,5,0.786,7,1.016,8,0.981,9,1.585,10,0.159,12,0.443,17,1.34,21,0.932,24,0.841,26,0.007,32,0.607,33,2.165,34,1.882,37,1.34,39,0.409,40,0.687,42,1.206,45,0.629,46,1.673,53,0.872,64,1.461,67,0.787,69,1.111,71,1.038,83,0.952,84,2.319,88,0.565,89,0.856,99,0.812,100,1.032,101,0.585,120,0.86,123,1.484,126,1.387,128,0.932,141,2.267,142,2.47,150,0.296,151,1.701,152,0.337,154,1.172,164,0.747,165,0.14,166,0.165,196,0.697,197,1.461,198,0.773,199,1.585,200,1.9,201,1.016,202,1.016,203,0.916,204,1.757,205,0.932,206,0.965,207,1.656,208,0.948,209,0.965,210,2.22,211,0.948,212,1.48,213,1.934,214,0.965,215,1.353,216,2.276,217,0.965,218,0.965,219,1.016,220,0.948,221,1.486,222,0.965,223,1.016,224,0.948,225,1.016,226,0.932,227,0.932,228,1.66,229,1.757,230,0.932,231,0.948,232,0.948,233,0.932,234,1.016,235,0.965,236,2.058,237,0.965,238,0.948,239,0.965,240,0.965,241,0.965,242,0.948,243,1.016,244,0.948,245,0.965,246,1.016,247,0.948,248,1.016,249,0.948,250,0.948,251,1.092,252,1.016,253,0.948,254,1.016,255,0.932,256,0.948,257,1.016,258,0.948,259,1.016,260,1.273,261,1.016,262,0.948,263,1.584,264,1.016,265,0.932,266,1.016,267,0.948,268,1.016,269,1.743,270,1.016,271,1.64,272,2.259,273,0.948,274,0.9,275,1.016,276,0.948,277,1.016,278,1.016,279,0.948,280,1.016,281,0.948,282,1.016,283,0.916,284,1.016,285,0.932,286,0.948,287,1.016,288,0.948,289,1.697,290,1.016,291,0.932,292,0.948,293,1.853,294,0.948,295,0.965,296,0.841,297,0.965,298,0.965,299,0.948,300,0.965,301,0.965,302,0.965,303,1.016,304,0.932,305,0.948,306,1.016,307,0.948,308,0.981,309,0.948,310,1.016,311,0.948,312,1.016,313,0.965,314,0.948,315,0.948,316,1.016,317,0.948,318,1.016,319,0.948,320,1.016,321,0.948,322,0.9,323,0.885,324,0.916,325,1.016,326,0.932,327,1.016,328,0.932,329,1.016,330,0.932,331,1.016,332,0.932,333,1.016,334,0.932,335,0.999,336,1.016,337,0.932,338,0.999,339,1.016,340,0.003,341,0.004,342,0.003,373,2.319,389,0.747,453,1.66,456,2.724,471,2.081,475,5.007,478,2.922,510,1.991,513,2.473,541,3.628,640,3.42,643,2.616,646,4.195,647,3.621,654,4.615,656,4.514,659,4.518,660,3.617,661,1.295,683,5.03,685,4.514,697,2.886,753,3.013,758,3.617,759,3.089,1012,3.455,1013,3.946,1027,4.308,1028,2.767,1029,2.942,1064,3.984,1067,3.356,1102,3.338,1103,2.838,1104,4.71,1109,2.372,1110,2.372,1147,1.959,1696,2.922,1878,4.221,2170,3.617,2185,4.518,3146,3.361,3147,4.916,3148,4.518,3149,5.313,3150,5.878,3151,5.519,3152,4.518,3153,3.361,3154,5.519,3155,3.773,3156,4.916,3157,4.916,3158,4.916,3159,3.773,3160,4.916,3161,4.916,3162,3.773,3163,3.773,3164,4.518,3165,3.773,3166,3.773,3167,3.773,3168,3.773,3169,3.089,3170,3.089,3171,3.773,3172,3.089,3173,3.773,3174,3.361,3175,3.089,3176,3.773,3177,3.361,3178,3.089,3179,3.089]],["title/components/LoginFormComponent.html",[0,0.279,271,1.266]],["body/components/LoginFormComponent.html",[0,0.427,1,0.774,2,0.891,3,0.166,4,0.171,5,0.642,7,0.83,8,0.801,9,1.294,10,0.129,12,0.362,17,1.151,21,0.761,22,2.542,24,0.687,26,0.007,32,1.239,33,2.148,34,1.866,37,1.151,39,0.334,40,0.59,42,1.539,45,1.325,46,1.614,48,2.323,51,2.086,53,0.749,56,2.924,64,1.255,67,0.744,68,0.971,69,1.167,83,0.818,87,1.112,88,0.972,89,1.075,99,0.85,100,0.997,101,0.613,120,1.074,126,1.191,128,0.761,130,2.873,141,2.665,142,2.308,146,3.494,150,0.299,152,0.275,153,1.238,164,0.61,165,0.115,166,0.134,186,0.861,196,0.57,197,1.255,198,0.631,199,1.294,200,1.717,201,0.83,202,0.83,203,0.748,204,1.556,205,0.761,206,0.788,207,1.496,208,0.774,209,0.788,210,2.075,211,0.774,212,1.31,213,1.747,214,0.788,215,1.254,216,2.142,217,0.788,218,0.788,219,0.83,220,0.774,221,1.277,222,0.788,223,0.83,224,0.774,225,0.83,226,0.761,227,0.761,228,1.551,229,1.556,230,0.761,231,0.774,232,0.774,233,0.761,234,0.83,235,0.788,236,1.886,237,0.788,238,0.774,239,0.788,240,0.788,241,0.788,242,0.774,243,0.83,244,0.774,245,0.788,246,0.83,247,0.774,248,0.83,249,0.774,250,0.774,251,0.938,252,0.83,253,0.774,254,0.83,255,0.761,256,0.774,257,0.83,258,0.774,259,0.83,260,1.496,261,0.83,262,0.774,263,1.403,264,0.83,265,0.761,266,0.83,267,0.774,268,0.83,269,0.748,270,0.83,271,1.63,272,2.272,273,0.774,274,0.735,275,0.83,276,0.774,277,0.83,278,0.83,279,0.774,280,0.83,281,0.774,282,0.83,283,0.748,284,0.83,285,0.761,286,0.774,287,0.83,288,0.774,289,2.166,290,0.83,291,0.761,292,0.774,293,1.743,294,0.774,295,0.788,296,1.057,297,0.788,298,0.788,299,0.774,300,0.788,301,0.788,302,0.788,303,0.83,304,0.761,305,0.774,306,0.83,307,0.774,308,0.801,309,0.774,310,0.83,311,0.774,312,0.83,313,0.788,314,0.774,315,0.774,316,0.83,317,0.774,318,0.83,319,0.774,320,0.83,321,0.774,322,0.735,323,0.723,324,0.748,325,0.83,326,0.761,327,0.83,328,0.761,329,0.83,330,0.761,331,0.83,332,0.761,333,0.83,334,0.761,335,0.815,336,0.83,337,0.761,338,0.815,339,0.83,340,0.002,341,0.003,342,0.002,375,1.057,384,3.254,389,0.61,461,1.072,471,1.788,474,2.37,478,2.51,487,2.765,490,2.247,510,1.763,535,3.787,541,3.082,555,2.438,570,1.992,610,3.336,640,3.263,646,3.407,651,2.137,655,1.54,737,2.98,758,3.787,794,2.522,883,1.905,912,3.062,1012,3.059,1028,2.536,1029,2.697,1035,1.737,1040,3.107,1067,2.438,1107,2.224,1114,2.019,1144,4.451,1154,3.107,1155,2.673,1165,3.626,1274,1.937,1374,3.422,1427,3.422,1505,3.422,1574,3.422,1696,2.51,1873,3.422,1889,2.765,2123,5.656,2179,3.881,2610,3.422,3000,3.107,3149,4.402,3164,2.522,3179,2.522,3180,8.234,3181,7.071,3182,2.522,3183,5.778,3184,4.222,3185,4.222,3186,6.238,3187,6.862,3188,5.778,3189,5.778,3190,5.146,3191,6.238,3192,6.238,3193,5.146,3194,5.146,3195,5.146,3196,5.146,3197,3.081,3198,7.396,3199,4.741,3200,4.741,3201,3.081,3202,1.558,3203,4.222,3204,3.081,3205,4.222,3206,3.081,3207,5.311,3208,4.222,3209,3.081,3210,2.744,3211,4.222,3212,4.222,3213,3.081,3214,4.222,3215,3.081,3216,3.081,3217,3.081,3218,3.081,3219,4.222,3220,4.222,3221,3.081,3222,3.626,3223,4.222,3224,4.222,3225,3.081,3226,3.081,3227,4.222,3228,4.222,3229,3.081,3230,3.081,3231,3.081,3232,4.222,3233,3.626,3234,3.081,3235,3.081,3236,3.081,3237,2.744,3238,3.081,3239,2.744,3240,2.744,3241,2.522,3242,3.081,3243,2.744,3244,2.744,3245,2.744,3246,4.222,3247,2.744,3248,2.522,3249,4.222,3250,3.081,3251,3.081,3252,3.081,3253,3.081,3254,2.744,3255,2.744,3256,2.744,3257,2.744,3258,3.081,3259,2.744,3260,2.744,3261,3.881]],["title/pipes/MaxItemsPipe.html",[1260,2.59,2132,3.636]],["body/pipes/MaxItemsPipe.html",[3,0.374,4,0.386,10,0.293,12,0.818,17,1.691,24,1.553,26,0.007,45,1.161,52,2.357,53,1.101,67,0.636,69,0.884,88,1.044,99,1.025,100,1.062,101,0.739,120,0.918,150,0.27,152,0.621,165,0.259,166,0.304,186,1.266,340,0.005,341,0.006,342,0.005,484,3.744,747,3.59,953,4.04,1239,6.403,1260,4.722,1261,5.029,1266,4.566,1272,5.993,1845,8.479,2132,5.993,3262,7.395,3263,6.206,3264,7.395,3265,8.304,3266,8.304,3267,6.968,3268,6.968]],["title/components/MediumEditorComponent.html",[0,0.279,273,1.266]],["body/components/MediumEditorComponent.html",[0,0.413,1,0.89,2,0.99,3,0.19,4,0.196,5,0.738,6,1.933,7,0.954,8,0.921,9,1.488,10,0.149,12,0.416,13,3.072,15,4.139,17,1.279,18,3.953,21,0.875,22,2.767,24,0.789,25,1.731,26,0.007,27,2.318,28,3.433,29,2.876,30,3.433,31,2.876,32,0.847,33,2.16,34,1.877,35,3.452,37,1.279,39,0.383,40,0.655,41,4.197,42,1.376,43,3.953,44,4.679,45,1.459,46,1.245,53,0.832,56,3.139,57,3.452,58,4.377,61,3.185,64,1.394,67,0.774,68,1.078,69,1.147,83,0.909,84,2.213,88,1.115,89,1.769,92,4.311,94,3.311,97,2.012,99,0.775,100,1.015,101,0.559,102,3.311,112,3.311,114,3.613,115,2.708,116,3.111,120,0.917,122,2.834,123,1.393,124,4.028,126,1.75,128,0.875,130,1.636,132,2.798,137,1.833,142,2.086,144,2.97,150,0.27,151,1.596,152,0.316,153,1.423,165,0.132,166,0.155,171,2.899,173,2.708,174,3.154,179,3.452,182,3.154,191,1.997,192,2.226,196,0.655,197,1.394,198,0.725,199,1.488,200,1.843,201,0.954,202,0.954,203,0.86,204,1.693,205,0.875,206,0.905,207,0.817,208,0.89,209,0.905,210,2.176,211,0.89,212,1.426,213,1.875,214,0.905,215,1.323,216,2.235,217,0.905,218,0.905,219,0.954,220,0.89,221,1.418,222,0.905,223,0.954,224,0.89,225,0.954,226,0.875,227,0.875,228,1.626,229,1.693,230,0.875,231,0.89,232,0.89,233,0.875,234,0.954,235,0.905,236,2.004,237,0.905,238,0.89,239,0.905,240,0.905,241,0.905,242,0.89,243,0.954,244,0.89,245,0.905,246,0.954,247,0.89,248,0.954,249,0.89,250,0.89,251,1.042,252,0.954,253,0.89,254,0.954,255,0.875,256,0.89,257,0.954,258,0.89,259,0.954,260,0.817,261,0.954,262,0.89,263,1.527,264,0.954,265,0.875,266,0.954,267,0.89,268,0.954,269,0.86,270,0.954,271,0.89,272,0.875,273,1.96,274,2.116,275,0.954,276,0.89,277,0.954,278,0.954,279,0.89,280,0.954,281,0.89,282,0.954,283,0.86,284,0.954,285,0.875,286,0.89,287,0.954,288,0.89,289,0.921,290,0.954,291,0.875,292,0.89,293,1.819,294,0.89,295,0.905,296,0.789,297,0.905,298,0.905,299,0.89,300,0.905,301,0.905,302,0.905,303,0.954,304,0.875,305,0.89,306,0.954,307,0.89,308,0.921,309,0.89,310,0.954,311,0.89,312,0.954,313,0.905,314,0.89,315,0.89,316,0.954,317,0.89,318,0.954,319,0.89,320,0.954,321,0.89,322,0.845,323,0.831,324,0.86,325,0.954,326,0.875,327,0.954,328,0.875,329,0.954,330,0.875,331,0.954,332,0.875,333,0.954,334,0.875,335,0.937,336,0.954,337,0.875,338,0.937,339,0.954,340,0.002,341,0.004,342,0.002,370,2.264,471,1.986,510,1.607,610,3.827,663,2.527,932,2.708,1081,2.556,1148,4.064,1609,2.899,1945,3.154,2653,4.311,2654,4.311,2724,2.899,3269,7.463,3270,7.463,3271,3.154,3272,5.267,3273,5.267,3274,5.267,3275,5.601,3276,6.289,3277,5.267,3278,6.202,3279,6.289,3280,3.541,3281,3.541,3282,7.444,3283,3.541,3284,3.541,3285,3.541,3286,4.691,3287,3.541,3288,3.541,3289,3.541,3290,3.541,3291,3.541,3292,3.541,3293,3.541,3294,3.541,3295,3.541,3296,3.541,3297,3.541,3298,3.541,3299,3.541,3300,3.541,3301,3.541,3302,3.541,3303,3.541,3304,2.899,3305,3.541,3306,3.541,3307,3.541,3308,3.541]],["title/modules/MediumEditorModule.html",[343,1.142,3309,3.636]],["body/modules/MediumEditorModule.html",[3,0.357,4,0.369,10,0.279,25,2.653,26,0.007,27,3.826,28,4.747,29,4.747,30,4.747,31,5.058,32,1.49,150,0.337,152,0.593,164,1.316,165,0.3,166,0.29,196,1.229,273,2.509,274,1.587,340,0.004,341,0.005,342,0.004,343,1.508,345,2.615,346,2.508,347,3.571,348,2.731,349,3.494,356,3.392,357,2.56,358,2.227,361,2.227,362,2.314,688,3.826,689,2.997,3269,5.443,3270,5.443,3309,6.879,3310,5.922,3311,5.922,3312,5.922,3313,5.922,3314,5.922,3315,6.65,3316,5.922,3317,6.65]],["title/components/MenuComponent.html",[0,0.279,276,1.266]],["body/components/MenuComponent.html",[0,0.315,1,0.752,2,0.871,3,0.161,4,0.166,5,0.623,6,1.633,7,0.806,8,0.778,10,0.126,12,0.351,16,3.027,17,1.125,21,0.739,23,2.556,24,0.667,26,0.007,32,1.027,33,2.146,34,1.863,35,3.037,37,1.125,39,0.324,40,0.576,42,1.495,45,1.27,46,1.122,52,2.551,53,0.732,55,2.951,64,1.226,67,0.695,68,1.561,69,1.167,71,0.871,87,1.498,88,1.391,89,1.448,97,1.339,99,1.19,100,1.067,101,0.858,120,1.065,126,1.164,128,0.739,137,2.223,150,0.22,152,0.267,164,0.592,165,0.111,166,0.131,181,0.88,186,1.431,196,0.553,197,1.226,198,0.613,200,1.69,201,0.806,202,0.806,203,0.726,204,1.527,205,0.739,206,0.765,207,0.69,208,0.752,209,0.765,210,2.053,211,0.752,212,1.286,213,1.72,214,0.765,215,1.239,216,2.121,217,0.765,218,0.765,219,0.806,220,0.752,221,1.248,222,0.765,223,0.806,224,0.752,225,0.806,226,0.739,227,0.739,228,1.534,229,1.527,230,0.739,231,0.752,232,0.752,233,0.739,234,0.806,235,0.765,236,1.861,237,0.765,238,0.752,239,0.765,240,0.765,241,0.765,242,0.752,243,0.806,244,0.752,245,0.765,246,0.806,247,0.752,248,0.806,249,0.752,250,0.752,251,0.917,252,0.806,253,0.752,254,0.806,255,0.739,256,0.752,257,0.806,258,0.752,259,0.806,260,0.69,261,0.806,262,0.752,263,1.377,264,0.806,265,0.739,266,0.806,267,0.752,268,0.806,269,0.726,270,0.806,271,0.752,272,0.739,273,0.752,274,0.714,275,0.806,276,1.836,277,1.527,278,0.806,279,0.752,280,0.806,281,0.752,282,0.806,283,0.726,284,0.806,285,0.739,286,0.752,287,0.806,288,0.752,289,0.778,290,0.806,291,0.739,292,0.752,293,1.726,294,0.752,295,0.765,296,1.033,297,0.765,298,0.765,299,0.752,300,0.765,301,0.765,302,0.765,303,0.806,304,0.739,305,0.752,306,0.806,307,0.752,308,0.778,309,0.752,310,0.806,311,0.752,312,0.806,313,0.765,314,0.752,315,0.752,316,0.806,317,0.752,318,0.806,319,0.752,320,0.806,321,0.752,322,0.714,323,0.702,324,0.726,325,0.806,326,0.739,327,0.806,328,0.739,329,0.806,330,0.739,331,0.806,332,0.739,333,0.806,334,0.739,335,0.792,336,0.806,337,0.739,338,0.792,339,0.806,340,0.002,341,0.003,342,0.002,358,1.552,372,5.156,373,2.903,375,1.264,389,0.592,424,2.802,427,3.793,438,4.186,474,2.317,477,1.846,484,2.512,534,5.292,555,2.383,560,3.107,623,1.538,636,5.771,653,1.745,662,1.083,663,2.279,747,1.748,905,3.037,953,3.556,957,4.951,998,3.544,1017,5.415,1023,2.802,1176,3.862,1177,3.107,1305,6.509,1310,5.051,1410,3.544,1437,2.802,1480,2.052,1823,2.665,1843,2.802,2992,2.913,3318,2.665,3319,8.752,3320,4.127,3321,5.672,3322,4.634,3323,5.672,3324,8.087,3325,6.387,3326,4.634,3327,4.634,3328,4.634,3329,4.634,3330,4.634,3331,6.387,3332,4.127,3333,4.634,3334,6.91,3335,6.91,3336,2.665,3337,4.634,3338,6.387,3339,4.634,3340,4.634,3341,4.634,3342,2.992,3343,4.634,3344,3.544,3345,2.992,3346,7.309,3347,4.634,3348,2.992,3349,2.992,3350,2.992,3351,2.992,3352,4.634,3353,2.992,3354,4.634,3355,2.992,3356,4.634,3357,4.634,3358,2.992,3359,7.623,3360,4.634,3361,2.992,3362,4.634,3363,2.992,3364,4.634,3365,4.634,3366,4.634,3367,2.992,3368,4.634,3369,4.634,3370,2.992,3371,4.127,3372,4.634,3373,2.992,3374,6.387,3375,2.992,3376,4.634,3377,2.992,3378,4.634,3379,2.992,3380,2.992,3381,2.992,3382,4.634,3383,3.793,3384,2.665,3385,4.634,3386,2.992,3387,4.634,3388,2.992,3389,2.992,3390,2.992,3391,2.992,3392,2.992,3393,5.672,3394,2.992,3395,5.672,3396,2.992,3397,4.634,3398,2.992,3399,2.992,3400,2.992,3401,2.992,3402,2.992,3403,6.387,3404,5.672,3405,2.992,3406,2.992,3407,2.992,3408,5.672,3409,2.992,3410,4.634,3411,4.634,3412,4.634,3413,2.992,3414,2.992,3415,2.992,3416,2.992]],["title/components/ModalComponent.html",[0,0.279,279,1.266]],["body/components/ModalComponent.html",[0,0.309,1,0.731,2,0.852,3,0.156,4,0.161,5,1.571,7,1.221,8,0.756,9,1.222,10,0.122,12,0.341,17,1.101,20,1.783,21,0.718,22,2.452,23,2.511,24,0.648,26,0.007,32,1.255,33,2.143,34,1.862,37,1.101,39,0.315,40,0.564,41,1.64,42,1.543,45,1.3,46,1.805,53,0.716,54,2.401,55,2.907,56,2.836,64,1.2,65,6.269,67,0.851,68,1.545,69,1.201,71,0.547,86,3.069,87,1.307,88,1.13,89,1.638,97,1.31,99,0.925,100,0.999,101,0.667,106,3.11,115,3.235,118,4.553,120,1.028,122,3.921,123,1.144,126,1.815,128,0.718,142,0.871,150,0.216,152,0.259,160,3.711,164,0.576,165,0.108,166,0.127,175,4.038,181,1.334,184,2.401,196,0.538,197,1.2,198,0.596,199,1.222,200,1.665,201,0.783,202,0.783,203,0.706,204,1.5,205,0.718,206,0.744,207,0.671,208,0.731,209,0.744,210,2.032,211,0.731,212,1.263,213,1.694,214,0.744,215,1.225,216,2.101,217,0.744,218,0.744,219,0.783,220,0.731,221,1.221,222,0.744,223,0.783,224,0.731,225,0.783,226,0.718,227,0.718,228,1.519,229,1.5,230,0.718,231,0.731,232,0.731,233,0.718,234,0.783,235,0.744,236,1.836,237,0.744,238,0.731,239,0.744,240,0.744,241,0.744,242,0.731,243,0.783,244,0.731,245,0.744,246,0.783,247,0.731,248,0.783,249,0.731,250,0.731,251,0.897,252,0.783,253,0.731,254,0.783,255,0.718,256,0.731,257,0.783,258,0.731,259,0.783,260,0.671,261,0.783,262,0.731,263,1.352,264,0.783,265,0.718,266,0.783,267,0.731,268,0.783,269,0.706,270,0.783,271,0.731,272,0.718,273,0.731,274,0.694,275,0.783,276,0.731,277,0.783,278,0.783,279,1.581,280,0.783,281,0.731,282,0.783,283,0.706,284,0.783,285,0.718,286,0.731,287,0.783,288,0.731,289,0.756,290,0.783,291,2.208,292,0.731,293,1.71,294,0.731,295,0.744,296,0.648,297,0.744,298,0.744,299,0.731,300,0.744,301,0.744,302,0.744,303,0.783,304,0.718,305,0.731,306,0.783,307,0.731,308,0.756,309,0.731,310,0.783,311,0.731,312,0.783,313,0.744,314,0.731,315,0.731,316,0.783,317,0.731,318,0.783,319,0.731,320,0.783,321,0.731,322,0.694,323,0.682,324,0.706,325,0.783,326,0.718,327,0.783,328,0.718,329,0.783,330,0.718,331,0.783,332,0.718,333,0.783,334,0.718,335,0.77,336,0.783,337,0.718,338,0.77,339,0.783,340,0.002,341,0.003,342,0.002,370,2.704,375,1.011,376,3.611,389,0.897,390,3.825,394,1.98,433,4.287,434,2.865,471,1.71,474,2.266,477,0.841,484,1.783,490,2.149,493,1.862,520,1.902,565,1.378,575,1.822,637,2.742,737,3.954,883,2.741,895,3.804,898,4.038,912,1.12,914,3.369,938,1.697,953,1.415,1046,1.697,1060,4.123,1103,3.235,1148,3.944,1155,2.556,1163,3.502,1172,1.759,1174,4.038,1177,3.67,1183,3.711,1288,2.71,1311,3.467,1312,2.742,1324,3.879,1488,3.11,1501,1.54,1502,1.995,1650,4.677,1652,3.272,1654,3.272,1655,2.64,1656,3.272,1657,3.11,1658,4.021,1664,2.224,1665,1.995,1666,2.224,1667,1.697,1668,2.099,1669,2.224,1670,2.099,1671,1.995,1672,2.224,1674,2.224,1675,3.711,1676,3.822,1678,2.099,1679,2.224,1680,1.906,1687,2.224,1688,3.272,1689,2.099,1690,2.224,1691,1.64,1692,1.828,1693,5.215,1694,2.099,1695,2.224,1696,2.401,1697,2.099,1698,2.224,1705,2.224,1706,2.099,1707,2.099,1708,2.224,1709,2.224,1712,2.224,1722,2.266,1843,2.742,1893,4.038,1895,3.502,1906,3.467,1910,4.944,1949,3.711,2118,3.711,2353,2.971,2366,4.038,2450,2.381,2455,5.15,2686,4.962,2857,3.711,2879,3.711,2884,2.591,3014,3.467,3202,1.49,3417,2.591,3418,6.386,3419,3.11,3420,3.272,3421,3.467,3422,4.534,3423,4.534,3424,4.038,3425,4.534,3426,4.534,3427,7.804,3428,5.571,3429,6.719,3430,4.534,3431,4.534,3432,2.971,3433,2.909,3434,4.534,3435,2.909,3436,4.534,3437,4.534,3438,8.018,3439,2.909,3440,2.909,3441,3.711,3442,2.909,3443,2.909,3444,2.909,3445,3.711,3446,4.534,3447,4.534,3448,4.534,3449,2.909,3450,4.038,3451,2.909,3452,2.909,3453,2.909,3454,2.909,3455,2.909,3456,4.534,3457,2.909,3458,4.534,3459,4.534,3460,4.534,3461,2.909,3462,4.534,3463,2.591,3464,2.909,3465,4.962,3466,4.534,3467,2.909,3468,2.909,3469,2.909,3470,2.099,3471,2.909,3472,2.909,3473,2.909,3474,2.909,3475,2.909,3476,2.909,3477,2.909,3478,2.909,3479,4.534]],["title/interfaces/ModelConfig.html",[366,1.43,1025,3.166]],["body/interfaces/ModelConfig.html",[3,0.387,4,0.4,10,0.303,12,0.846,26,0.007,39,0.78,40,1.054,48,2.363,67,0.657,86,3.332,101,0.899,150,0.279,165,0.268,340,0.005,341,0.006,342,0.005,366,2.554,368,3.171,379,2.046,386,3.814,747,3.195,994,5.325,1025,5.325,1076,4.723,1117,4.53,1146,4.015,1160,5.615,1726,4.121,1838,5.552,1905,5.325,3480,4.944,3481,6.934,3482,4.625]],["title/injectables/ModelConfigService.html",[652,1.565,1026,2.84]],["body/injectables/ModelConfigService.html",[2,0.911,3,0.17,4,0.176,10,0.133,12,0.69,20,1.247,26,0.007,32,1.373,39,0.343,40,0.603,45,1.182,48,2.294,51,2.132,52,1.87,53,0.766,67,0.808,68,1.871,69,1.043,86,1.906,87,1.93,88,1.339,99,1.145,100,0.931,101,0.826,116,3.539,120,1.154,130,2.204,132,2.646,141,1.991,150,0.319,152,0.283,154,0.985,164,1.713,165,0.118,166,0.257,181,1.938,186,1.573,228,0.638,340,0.002,341,0.003,342,0.002,371,3.452,373,2.98,375,1.311,379,0.9,383,2.731,384,3.756,385,1.788,386,3.297,389,0.628,394,1.944,435,3.706,440,2.289,446,2.471,448,3.006,451,1.429,474,2.422,493,1.991,505,3.046,513,2.078,520,2.086,543,1.679,565,2.297,570,2.036,571,1.196,575,3.128,610,3.386,611,2.732,643,3.121,652,1.506,662,1.148,663,2.851,705,1.503,747,2.483,770,1.679,776,1.585,883,1.947,899,4.139,911,3.324,953,1.543,959,3.176,983,4.316,990,1.63,995,5.865,996,2.827,1025,3.046,1026,2.732,1028,2.13,1029,2.536,1031,4.896,1049,4.753,1071,1.731,1076,5.501,1106,2.175,1147,1.72,1150,2.566,1160,5.076,1200,5.506,1202,3.982,1213,2.824,1231,2.078,1268,2.425,1288,1.543,1308,3.431,1375,3.204,1537,3.967,1593,2.078,1600,2.078,1649,2.596,1710,2.289,1734,5.238,1738,2.931,1751,4.524,1752,3.176,1796,2.289,1814,4.316,1846,3.046,1847,3.706,1889,3.431,1895,3.046,1901,3.046,1949,2.596,1960,3.176,1996,5.121,2009,2.596,2315,3.967,2403,4.316,2468,2.596,2483,6.123,2502,4.316,2635,2.824,2707,3.498,2764,2.289,2789,2.425,2798,2.596,2990,5.426,3013,3.967,3450,4.316,3480,5.758,3481,3.967,3482,3.595,3483,4.846,3484,3.967,3485,3.967,3486,3.706,3487,4.316,3488,5.882,3489,4.846,3490,6.586,3491,4.846,3492,4.846,3493,6.586,3494,3.171,3495,4.846,3496,8.535,3497,3.171,3498,4.846,3499,4.316,3500,4.846,3501,4.316,3502,4.846,3503,4.316,3504,4.316,3505,3.967,3506,4.846,3507,4.846,3508,4.846,3509,3.171,3510,4.316,3511,3.171,3512,3.855,3513,4.846,3514,3.171,3515,4.316,3516,4.316,3517,4.846,3518,4.846,3519,3.967,3520,4.846,3521,2.824,3522,4.846,3523,3.706,3524,4.846,3525,3.171,3526,3.171,3527,7.783,3528,3.171,3529,4.846,3530,3.171,3531,3.171,3532,3.171,3533,3.171,3534,4.846,3535,4.846,3536,3.171,3537,4.846,3538,2.824,3539,3.171,3540,4.846,3541,3.171,3542,2.824,3543,3.171,3544,2.824,3545,3.171,3546,4.846,3547,4.846,3548,4.846,3549,3.171,3550,3.171,3551,3.171,3552,3.171,3553,3.171,3554,3.171,3555,3.171,3556,6.586,3557,3.171,3558,3.171,3559,3.171,3560,3.171,3561,3.171,3562,3.171,3563,3.171,3564,3.171,3565,3.171,3566,3.171,3567,4.846,3568,3.171,3569,3.171,3570,3.171,3571,3.171,3572,3.171,3573,3.171,3574,3.171,3575,4.316,3576,4.316,3577,3.171,3578,3.171,3579,3.171,3580,2.824,3581,4.846,3582,4.846,3583,3.171,3584,4.846,3585,3.171,3586,3.171,3587,3.171,3588,3.171,3589,3.171,3590,3.171,3591,3.171,3592,3.171,3593,3.171,3594,3.171,3595,3.171,3596,2.596,3597,3.171,3598,3.171,3599,3.171,3600,3.171,3601,3.171,3602,4.846,3603,3.171,3604,3.171,3605,4.846,3606,3.171,3607,3.171,3608,3.171,3609,3.171,3610,3.171,3611,2.824,3612,3.171,3613,3.171]],["title/interfaces/ModelConfiguration.html",[366,1.43,3614,4.123]],["body/interfaces/ModelConfiguration.html",[3,0.387,4,0.4,10,0.303,12,0.846,26,0.007,39,0.78,40,1.054,48,2.363,67,0.657,86,3.332,101,0.899,150,0.279,165,0.268,340,0.005,341,0.006,342,0.005,366,2.554,368,3.171,379,2.046,386,3.814,747,3.195,994,5.325,1076,4.723,1146,4.015,1160,5.615,1726,4.121,1838,5.552,1905,5.325,3480,4.944,3481,6.934,3482,4.625,3614,6.934,3615,6.419]],["title/classes/Notification.html",[166,0.22,1067,2.59]],["body/classes/Notification.html",[3,0.418,4,0.291,10,0.221,12,0.914,26,0.007,32,1.118,34,1.307,39,0.569,40,0.865,45,1.158,67,0.89,68,1.814,69,1.213,71,1.307,86,2.733,87,2.079,99,0.772,100,0.628,101,1.042,141,2.855,150,0.204,165,0.195,166,0.229,283,2.093,340,0.004,341,0.005,342,0.004,373,3.797,375,1.549,389,1.542,438,4.555,484,2.733,493,2.855,520,2.559,555,3.573,565,3.294,637,5.014,638,4.555,640,3.756,641,5.652,643,3.294,646,4.311,747,3.127,877,4.392,883,2.11,1027,3.918,1053,3.474,1061,3.929,1067,5.052,1103,4.005,1109,4.896,1110,5.42,1177,3.381,1238,4.054,1294,5.016,1375,4.034,1501,4.566,1575,5.344,1843,4.203,1846,4.368,1939,4.768,1942,4.298,2529,6.19,2858,5.689,3149,4.368,3465,4.677,3523,5.315,3616,4.677,3617,6.95,3618,6.95,3619,6.95,3620,8.291,3621,5.251,3622,6.95,3623,5.251,3624,5.251,3625,6.95,3626,5.251,3627,5.251,3628,6.19,3629,4.768,3630,5.251,3631,6.19,3632,6.95,3633,5.251,3634,6.95,3635,5.251,3636,6.95,3637,5.251,3638,4.677,3639,4.677]],["title/components/NotificationsComponent.html",[0,0.279,283,1.223]],["body/components/NotificationsComponent.html",[0,0.447,1,0.884,2,0.986,3,0.189,4,0.195,5,1.092,7,1.687,8,0.915,9,1.479,10,0.148,12,0.413,17,0.855,21,0.869,24,0.785,26,0.007,32,0.566,33,2.16,34,1.878,37,1.273,39,0.381,40,0.652,42,1.158,45,0.586,46,1.038,64,1.388,67,0.71,69,0.795,72,1.446,83,1.081,84,1.479,87,1.23,99,0.518,100,0.992,101,0.373,120,1.025,126,1.317,128,0.869,137,1.825,150,0.269,152,0.314,162,2.881,165,0.258,166,0.324,186,1.138,196,0.651,197,1.388,198,0.721,199,1.479,200,1.837,201,0.948,202,0.948,203,0.855,204,1.687,205,0.869,206,0.9,207,0.812,208,0.884,209,0.9,210,2.171,211,0.884,212,1.421,213,1.87,214,0.9,215,1.32,216,2.231,217,0.9,218,0.9,219,0.948,220,0.884,221,1.412,222,0.9,223,0.948,224,0.884,225,0.948,226,0.869,227,0.869,228,1.623,229,1.687,230,0.869,231,0.884,232,0.884,233,0.869,234,0.948,235,0.9,236,1.999,237,0.9,238,0.884,239,0.9,240,0.9,241,0.9,242,0.884,243,0.948,244,0.884,245,0.9,246,0.948,247,0.884,248,0.948,249,0.884,250,0.884,251,1.038,252,0.948,253,0.884,254,0.948,255,0.869,256,0.884,257,0.948,258,0.884,259,0.948,260,0.812,261,0.948,262,0.884,263,1.521,264,0.948,265,0.869,266,0.948,267,0.884,268,0.948,269,0.855,270,0.948,271,0.884,272,0.869,273,0.884,274,0.84,275,0.948,276,0.884,277,0.948,278,0.948,279,0.884,280,0.948,281,0.884,282,0.948,283,1.802,284,0.948,285,0.869,286,0.884,287,0.948,288,0.884,289,0.915,290,0.948,291,0.869,292,0.884,293,1.816,294,0.884,295,0.9,296,0.785,297,0.9,298,0.9,299,0.884,300,0.9,301,0.9,302,0.9,303,0.948,304,0.869,305,0.884,306,0.948,307,0.884,308,0.915,309,0.884,310,0.948,311,0.884,312,0.948,313,0.9,314,0.884,315,0.884,316,0.948,317,0.884,318,0.948,319,0.884,320,0.948,321,0.884,322,0.84,323,0.826,324,0.855,325,0.948,326,0.869,327,0.948,328,0.869,329,0.948,330,0.869,331,0.948,332,0.869,333,0.948,334,0.869,335,0.931,336,0.948,337,0.869,338,0.931,339,0.948,340,0.002,341,0.004,342,0.002,343,0.798,366,0.999,373,3.27,379,0.999,389,1.038,424,2.129,461,1.225,477,1.811,484,2.062,520,2.071,549,1.275,565,1.668,575,1.415,640,2.859,641,3.436,643,2.485,646,4.54,647,3.927,662,2.269,665,5.129,747,1.327,751,1.549,755,2.213,797,2.213,809,2.129,877,4.546,882,4.866,883,1.415,899,2.213,915,2.307,953,1.713,1013,3.171,1027,4.186,1053,3.471,1061,2.485,1067,4.82,1102,3.171,1103,4.002,1104,4.523,1107,2.541,1109,3.939,1110,3.939,1146,1.668,1165,2.692,1169,1.81,1179,2.129,1246,3.135,1288,1.713,1301,3.436,1312,2.129,1375,1.713,1412,2.129,1423,3.785,1501,3.931,1575,2.415,1612,2.541,1680,4.55,1692,3.296,1696,2.776,1722,1.76,1726,2.551,1771,2.541,1843,2.129,1919,4.106,2263,2.692,2305,3.135,2315,2.881,2524,2.692,2527,2.307,2563,2.881,2605,3.655,2610,2.541,2692,4.01,2736,3.135,2779,5.129,2780,3.135,2931,4.67,2971,3.597,2988,4.292,2992,3.296,3000,2.307,3007,2.881,3149,3.296,3233,2.692,3383,2.881,3512,2.307,3542,4.67,3640,3.135,3641,5.243,3642,5.243,3643,5.243,3644,5.243,3645,3.52,3646,2.881,3647,3.52,3648,2.415,3649,5.243,3650,3.52,3651,6.266,3652,6.266,3653,5.243,3654,3.52,3655,3.52,3656,3.52,3657,3.52,3658,3.135,3659,2.692,3660,3.52,3661,3.52,3662,3.52,3663,5.243,3664,3.52,3665,3.52,3666,2.415,3667,2.692,3668,3.52,3669,3.52,3670,3.52,3671,3.52,3672,3.52,3673,5.243,3674,3.52,3675,2.881,3676,3.52,3677,1.922,3678,3.52,3679,3.52,3680,3.52,3681,3.135,3682,6.266,3683,3.52,3684,3.52,3685,3.52,3686,3.52,3687,6.266,3688,5.581,3689,3.52,3690,3.52,3691,3.52,3692,3.52,3693,3.52,3694,5.243,3695,3.52,3696,3.135,3697,4.67,3698,3.135,3699,3.52]],["title/modules/NotificationsModule.html",[343,1.142,3700,3.636]],["body/modules/NotificationsModule.html",[3,0.346,4,0.357,10,0.271,25,2.817,26,0.007,27,2.836,150,0.367,152,0.575,165,0.24,166,0.281,196,1.191,242,2.459,283,2.376,340,0.004,341,0.005,342,0.004,343,1.461,345,2.535,346,2.431,347,3.523,348,2.648,349,3.446,356,3.328,357,2.482,358,2.158,361,2.652,362,2.757,394,1.766,647,4.43,688,3.754,689,2.905,713,4.051,2135,6.126,2137,5.653,2141,5.276,2147,4.652,3638,5.74,3681,5.74,3700,7.15,3701,5.74,3702,5.74,3703,6.445,3704,5.74,3705,5.74,3706,6.445,3707,6.445,3708,5.74]],["title/injectables/NotificationsService.html",[647,2.387,652,1.565]],["body/injectables/NotificationsService.html",[2,1.231,3,0.258,4,0.266,10,0.202,12,0.564,25,2.151,26,0.007,27,2.881,32,1.286,34,1.231,39,0.52,40,0.814,45,1.241,46,1.709,53,1.034,67,0.763,69,1.121,83,1.489,84,2.75,88,1.115,89,1.089,99,1.095,100,0.891,101,0.79,106,4.491,120,1.164,132,2.631,144,5.071,150,0.31,152,0.428,159,4.278,163,3.674,164,1.474,165,0.179,166,0.21,186,1.52,340,0.003,341,0.004,342,0.003,343,1.484,375,1.66,389,0.951,424,2.905,474,3.272,477,1.892,484,1.889,493,1.973,520,2.077,555,3.366,558,3.466,571,1.812,638,3.148,641,3.148,646,4.565,647,3.102,652,2.034,654,4.824,655,3.272,656,4.115,663,3.214,705,2.276,712,5.359,713,4.115,741,7.69,777,3.148,827,3.295,877,3.691,908,5.484,959,3.148,1040,3.359,1067,5.052,1109,3.019,1169,2.47,1273,3.467,1308,3.818,1423,4.725,1501,4.234,1655,3.79,1722,3.272,1771,4.725,1910,3.148,1988,5.006,2089,3.148,2707,4.725,2779,3.932,3470,3.467,3504,5.83,3639,4.278,3688,4.278,3696,4.278,3697,5.83,3698,4.278,3708,7.69,3709,4.278,3710,6.546,3711,5.006,3712,9.446,3713,6.546,3714,7.447,3715,6.546,3716,7.997,3717,4.804,3718,6.546,3719,6.546,3720,6.546,3721,4.804,3722,6.546,3723,7.122,3724,8.635,3725,6.546,3726,4.804,3727,6.546,3728,4.804,3729,6.546,3730,6.546,3731,4.804,3732,5.359,3733,6.546,3734,4.804,3735,6.096,3736,4.804,3737,4.804,3738,4.804,3739,4.804,3740,4.804,3741,4.804,3742,4.804,3743,4.804,3744,4.804,3745,4.804,3746,4.804,3747,4.804,3748,4.804,3749,4.804,3750,4.804,3751,4.804,3752,4.804,3753,4.804]],["title/components/OutputComponent.html",[0,0.279,285,1.244]],["body/components/OutputComponent.html",[0,0.488,1,1.033,2,1.288,3,0.221,4,0.228,5,1.427,7,1.107,8,1.069,10,0.173,12,0.482,17,1.425,20,2.309,21,1.015,23,3.088,24,0.916,26,0.007,33,2.171,34,1.889,37,1.425,39,0.445,40,0.73,42,1.381,45,0.685,46,1.162,48,2.633,52,2.634,53,0.928,55,3.452,64,1.554,67,0.772,69,1.042,71,1.288,84,2.467,86,1.617,87,1.854,88,0.879,89,0.932,99,0.605,100,1.035,101,0.436,118,3.627,120,0.984,123,1.617,126,1.475,128,1.015,137,1.431,150,0.29,152,0.367,165,0.153,166,0.179,196,0.76,197,1.554,198,0.842,200,1.977,201,1.107,202,1.107,203,0.998,204,1.845,205,1.015,206,1.051,207,0.948,208,1.033,209,1.051,210,2.278,211,1.033,212,1.553,213,2.012,214,1.051,215,1.393,216,2.33,217,1.051,218,1.051,219,1.107,220,1.033,221,1.581,222,1.051,223,1.107,224,1.033,225,1.107,226,1.015,227,1.015,228,1.703,229,1.845,230,1.952,231,1.033,232,2.126,233,1.845,234,1.107,235,1.051,236,2.128,237,1.051,238,1.033,239,1.051,240,1.051,241,1.051,242,1.033,243,1.107,244,1.033,245,1.051,246,1.107,247,1.033,248,1.107,249,1.033,250,1.033,251,1.162,252,1.107,253,1.033,254,1.107,255,1.015,256,1.033,257,1.107,258,1.033,259,1.107,260,0.948,261,1.107,262,1.033,263,1.663,264,1.107,265,1.015,266,1.107,267,1.033,268,1.107,269,0.998,270,1.107,271,1.033,272,1.015,273,1.033,274,0.981,275,1.107,276,1.033,277,1.107,278,1.107,279,1.033,280,1.107,281,1.033,282,1.107,283,0.998,284,1.107,285,1.845,286,1.033,287,1.107,288,1.033,289,1.069,290,1.107,291,1.015,292,1.033,293,1.896,294,1.033,295,1.051,296,0.916,297,1.051,298,1.051,299,1.033,300,1.051,301,1.051,302,1.051,303,1.107,304,1.015,305,1.033,306,1.107,307,1.033,308,1.069,309,1.033,310,1.107,311,1.033,312,1.107,313,1.051,314,1.033,315,1.033,316,1.107,317,1.033,318,1.107,319,1.033,320,1.107,321,1.033,322,0.981,323,0.964,324,0.998,325,1.107,326,1.015,327,1.107,328,1.015,329,1.107,330,1.015,331,1.107,332,1.015,333,1.107,334,1.015,335,1.088,336,1.107,337,1.45,338,1.088,339,1.107,340,0.003,341,0.004,342,0.003,379,1.167,460,3.551,463,2.318,471,2.214,495,3.848,510,2.28,520,1.638,575,2.36,751,2.584,1061,1.948,1147,1.459,1216,2.584,1217,3.144,1467,4.806,1475,3.144,1531,5.239,1541,4.944,1544,4.806,1545,5.607,1546,4.806,1548,3.365,1549,4.806,1551,3.365,1553,3.365,1554,3.365,1555,3.365,2124,4.49,2356,3.691,2357,3.691,2377,2.584,2526,5.23,2548,3.661,2564,3.661,2565,3.661,2566,3.365,2573,5.23,3754,3.661,3755,5.872,3756,5.23,3757,4.111,3758,4.111,3759,4.111,3760,5.872,3761,4.111]],["title/classes/Pagination.html",[166,0.22,2665,3.046]],["body/classes/Pagination.html",[3,0.181,4,0.186,10,0.141,12,0.394,26,0.007,32,1.277,39,0.364,40,0.63,45,1.015,46,1.514,47,2.531,52,0.954,53,0.8,54,2.681,67,0.789,69,1.187,71,1.146,83,1.255,84,2.127,86,1.991,87,1.795,88,1.412,89,2.011,97,2.361,99,1.168,100,0.95,101,0.887,120,0.959,137,2.965,150,0.196,164,0.665,165,0.125,166,0.266,181,2.609,186,1.593,251,1.002,340,0.002,341,0.003,342,0.002,370,2.176,375,1.705,378,3.963,383,2.584,389,0.665,394,1.388,422,2.032,438,3.318,439,3.183,461,1.169,463,4.607,467,3.327,484,3.827,487,2.954,493,2.503,497,3.226,518,5.73,522,2.305,535,5.48,560,1.635,565,3.215,567,4.766,585,1.833,640,2.612,643,2.4,654,3.974,655,1.68,656,3.183,661,2.298,663,2.449,747,3.264,751,2.228,824,3.655,883,1.35,887,4.082,899,2.112,908,4.77,953,1.635,1043,3.592,1071,1.834,1149,3.318,1169,1.728,1170,4.51,1177,2.463,1288,4.21,1291,6.33,1412,2.032,1437,3.062,1471,2.305,1566,6.042,1567,6.042,1568,6.042,1596,2.305,1725,4.264,1726,2.463,1879,3.318,1885,2.305,1919,2.202,2058,2.75,2060,4.879,2298,2.75,2613,4.51,2614,4.398,2665,5.542,2692,3.872,2729,5.427,2763,5.427,2787,2.992,2852,3.872,3014,5.188,3264,4.51,3332,4.51,3344,3.872,3482,2.765,3499,4.51,3510,6.042,3723,6.813,3762,2.992,3763,7.178,3764,9.103,3765,6.784,3766,6.784,3767,6.042,3768,6.784,3769,5.064,3770,4.51,3771,4.51,3772,5.064,3773,3.957,3774,3.36,3775,5.064,3776,5.064,3777,3.36,3778,3.36,3779,3.36,3780,3.655,3781,4.51,3782,3.36,3783,3.36,3784,3.36,3785,5.064,3786,3.36,3787,3.36,3788,3.36,3789,3.36,3790,5.064,3791,3.36,3792,3.36,3793,3.36,3794,5.064,3795,3.36,3796,5.064,3797,6.042,3798,3.36,3799,5.064,3800,3.36,3801,5.064,3802,6.094,3803,5.064,3804,3.36,3805,5.064,3806,5.064,3807,3.36,3808,2.992,3809,3.36,3810,3.36,3811,3.36,3812,3.36,3813,3.36,3814,3.36,3815,3.36,3816,3.36,3817,7.94,3818,3.36,3819,3.36,3820,8.77,3821,6.784,3822,7.278,3823,3.36,3824,3.36,3825,6.784,3826,5.064,3827,3.36,3828,3.36,3829,3.36,3830,3.36,3831,5.064,3832,3.36,3833,3.36,3834,3.36]],["title/components/PaginationComponent.html",[0,0.279,286,1.266]],["body/components/PaginationComponent.html",[0,0.423,1,0.945,2,1.035,3,0.202,4,0.208,5,0.783,7,1.012,8,0.978,10,0.158,12,0.441,17,1.336,21,0.929,22,2.866,23,2.935,24,0.838,26,0.007,33,2.165,34,1.882,37,1.336,39,0.407,40,0.685,41,4.857,42,1.325,45,0.626,53,0.87,54,2.915,55,3.312,56,3.231,64,1.457,67,0.727,68,1.127,69,1.092,71,1.348,83,0.95,84,3.011,87,1.291,88,1.074,89,1.477,97,2.072,99,0.81,100,1.031,101,0.584,120,0.725,122,3.439,123,2.561,124,4.21,126,1.383,128,0.929,137,1.309,150,0.278,151,1.695,152,0.335,164,0.744,165,0.14,166,0.284,181,2.109,186,1,196,0.695,197,1.457,198,0.77,200,1.897,201,1.012,202,1.012,203,0.913,204,1.754,205,0.929,206,0.961,207,0.867,208,0.945,209,0.961,210,2.218,211,0.945,212,1.477,213,1.93,214,0.961,215,1.351,216,2.274,217,0.961,218,0.961,219,1.012,220,0.945,221,1.482,222,0.961,223,1.012,224,0.945,225,1.012,226,0.929,227,0.929,228,1.658,229,1.754,230,0.929,231,0.945,232,0.945,233,0.929,234,1.012,235,0.961,236,2.055,237,0.961,238,0.945,239,0.961,240,0.961,241,0.961,242,0.945,243,1.012,244,0.945,245,0.961,246,1.012,247,0.945,248,1.012,249,0.945,250,0.945,251,1.089,252,1.012,253,0.945,254,1.012,255,0.929,256,0.945,257,1.012,258,0.945,259,1.012,260,0.867,261,1.012,262,0.945,263,1.581,264,1.012,265,0.929,266,1.012,267,0.945,268,1.012,269,0.913,270,1.012,271,0.945,272,0.929,273,0.945,274,0.897,275,1.012,276,0.945,277,1.012,278,1.012,279,0.945,280,1.012,281,0.945,282,1.012,283,0.913,284,1.012,285,0.929,286,1.801,287,1.012,288,0.945,289,0.978,290,1.012,291,0.929,292,0.945,293,1.851,294,0.945,295,0.961,296,0.838,297,0.961,298,0.961,299,0.945,300,0.961,301,0.961,302,0.961,303,1.012,304,0.929,305,0.945,306,1.012,307,0.945,308,0.978,309,0.945,310,1.012,311,0.945,312,1.012,313,0.961,314,0.945,315,0.945,316,1.012,317,0.945,318,1.012,319,0.945,320,1.012,321,0.945,322,0.897,323,0.882,324,0.913,325,1.012,326,0.929,327,1.012,328,0.929,329,1.012,330,0.929,331,1.012,332,0.929,333,1.012,334,0.929,335,0.995,336,1.012,337,0.929,338,0.995,339,1.012,340,0.003,341,0.004,342,0.003,375,0.838,379,1.067,383,2.338,422,3.329,460,3.329,461,1.309,495,3.608,565,2.609,623,1.933,661,1.932,663,3.462,912,2.12,1028,3.25,1053,2.752,1071,2.053,1288,2.678,1294,3.973,1410,4.21,1727,3.776,2060,3.104,2665,5.667,2666,4.701,2733,3.349,2944,3.349,3763,6.525,3770,4.903,3835,3.349,3836,5.505,3837,6.513,3838,5.505,3839,3.76,3840,3.76,3841,5.505,3842,3.76,3843,3.76,3844,4.506,3845,3.76,3846,3.76,3847,3.76,3848,3.76,3849,5.505,3850,5.8,3851,5.505,3852,3.76,3853,5.505,3854,4.903,3855,5.505,3856,5.505,3857,5.505,3858,3.76,3859,5.505,3860,4.903,3861,3.76,3862,5.505,3863,3.76,3864,3.76,3865,5.505,3866,5.505,3867,5.505,3868,5.505,3869,5.505,3870,5.505,3871,5.505,3872,5.505,3873,5.505,3874,5.505,3875,5.505,3876,5.505,3877,5.505,3878,5.505]],["title/classes/PaginationConfig.html",[166,0.22,2666,3.636]],["body/classes/PaginationConfig.html",[0,0.436,3,0.342,4,0.353,10,0.267,12,0.746,26,0.007,39,0.689,40,0.977,45,1.059,67,0.812,69,1.129,99,0.935,100,0.761,101,0.675,120,0.838,137,2.734,150,0.247,165,0.236,166,0.278,181,2.311,340,0.004,341,0.005,342,0.004,375,1.985,383,2.528,389,1.687,478,4.159,484,3.352,560,3.822,661,1.843,883,2.555,902,5.193,903,4.039,994,4.938,1029,2.449,1035,4.429,1053,3.927,1117,3.997,1163,5.596,1238,4.582,1274,3.997,1288,3.822,1291,5.67,1942,5.205,2198,6.008,2417,6.43,2665,4.751,2666,6.602,3763,7.809,3771,6.996,3879,8.147,3880,8.524,3881,8.524,3882,9.443,3883,7.856,3884,6.359,3885,6.43,3886,6.359,3887,4.289,3888,7.856,3889,7.856,3890,7.856]],["title/components/PasswordResetComponent.html",[0,0.279,288,1.266]],["body/components/PasswordResetComponent.html",[0,0.361,1,0.946,2,1.036,3,0.202,4,0.209,5,0.784,7,1.014,8,0.979,9,1.582,10,0.158,12,0.442,17,1.338,21,0.93,24,0.839,26,0.007,32,1.048,33,2.165,34,1.882,37,1.338,39,0.408,40,0.686,42,1.326,45,0.627,46,1.511,48,1.537,53,0.871,64,1.458,67,0.771,68,1.128,69,1.111,71,1.036,83,0.649,84,2.315,88,0.564,89,0.854,99,0.554,100,1.011,101,0.691,120,0.858,123,1.481,126,1.385,128,0.93,130,2.229,142,2.149,150,0.278,151,1.697,152,0.336,154,1.17,164,0.745,165,0.14,166,0.164,184,2.918,196,0.696,197,1.458,198,0.771,199,1.582,200,1.898,201,1.014,202,1.014,203,0.914,204,1.755,205,0.93,206,0.962,207,1.839,208,0.946,209,0.962,210,2.219,211,0.946,212,1.478,213,1.932,214,0.962,215,1.352,216,2.275,217,0.962,218,0.962,219,1.014,220,0.946,221,1.484,222,0.962,223,1.014,224,0.946,225,1.014,226,0.93,227,0.93,228,1.658,229,1.755,230,0.93,231,0.946,232,0.946,233,0.93,234,1.014,235,0.962,236,2.056,237,0.962,238,0.946,239,0.962,240,0.962,241,0.962,242,0.946,243,1.014,244,0.946,245,0.962,246,1.014,247,0.946,248,1.014,249,0.946,250,0.946,251,1.091,252,1.014,253,0.946,254,1.014,255,0.93,256,0.946,257,1.014,258,0.946,259,1.014,260,1.271,261,1.014,262,0.946,263,1.582,264,1.014,265,0.93,266,1.014,267,0.946,268,1.014,269,0.914,270,1.014,271,0.946,272,0.93,273,0.946,274,0.899,275,1.014,276,0.946,277,1.014,278,1.014,279,0.946,280,1.014,281,0.946,282,1.014,283,0.914,284,1.014,285,0.93,286,0.946,287,1.014,288,1.802,289,2.197,290,1.014,291,0.93,292,0.946,293,1.851,294,0.946,295,0.962,296,0.839,297,0.962,298,0.962,299,0.946,300,0.962,301,0.962,302,0.962,303,1.014,304,0.93,305,0.946,306,1.014,307,0.946,308,0.979,309,0.946,310,1.014,311,0.946,312,1.014,313,0.962,314,0.946,315,0.946,316,1.014,317,0.946,318,1.014,319,0.946,320,1.014,321,0.946,322,0.899,323,0.883,324,0.914,325,1.014,326,0.93,327,1.014,328,0.93,329,1.014,330,0.93,331,1.014,332,0.93,333,1.014,334,0.93,335,0.996,336,1.014,337,0.93,338,0.996,339,1.014,340,0.003,341,0.004,342,0.003,357,3.373,373,2.315,375,1.228,389,0.745,453,1.657,456,2.718,471,2.078,475,4.272,479,4.511,491,2.484,510,1.681,513,2.468,541,3.625,565,2.612,610,3.925,638,4.701,640,2.122,641,2.468,646,4.008,647,3.618,665,4.511,672,3.353,683,4.806,685,4.509,697,2.879,699,7.267,758,5.399,912,2.122,1012,3.451,1028,1.995,1064,3.977,1109,3.464,1147,1.956,1696,2.918,2317,4.511,3149,4.509,3150,4.511,3153,3.353,3175,3.082,3178,3.082,3207,5.872,3261,3.082,3658,3.353,3891,7.907,3892,3.353,3893,5.511,3894,7.801,3895,5.511,3896,5.511,3897,5.511,3898,6.518,3899,5.511,3900,3.765,3901,5.511,3902,3.765,3903,3.765,3904,3.765,3905,7.174,3906,5.511,3907,3.765,3908,3.765,3909,4.908,3910,5.511,3911,4.908,3912,3.765,3913,3.765,3914,3.765,3915,3.765,3916,3.765,3917,3.765,3918,3.765,3919,3.765,3920,3.765,3921,3.765,3922,3.765,3923,3.765,3924,3.765,3925,3.765,3926,5.511]],["title/components/PopComponent.html",[0,0.279,291,1.244]],["body/components/PopComponent.html",[0,0.334,1,0.827,2,0.938,3,0.177,4,0.183,5,0.686,7,1.621,8,0.856,9,1.383,10,0.138,12,0.386,21,0.813,24,0.734,26,0.007,32,1.435,33,2.154,34,1.876,37,1.211,39,0.356,40,0.62,41,2.812,42,1.403,45,1.003,46,1.728,53,0.788,64,1.32,67,0.773,68,1.021,69,1.131,71,1.262,72,2.048,83,0.568,86,2.641,87,1.17,88,1.006,89,1.365,99,0.988,100,1.031,101,0.712,115,3.452,120,1,122,3.82,126,2.13,128,0.813,142,2.011,150,0.193,152,0.294,165,0.122,166,0.144,184,3.555,186,0.598,196,0.608,197,1.32,198,0.674,199,1.383,200,1.777,201,0.887,202,0.887,203,0.799,204,1.621,205,0.813,206,0.842,207,0.759,208,0.827,209,0.842,210,2.123,211,0.827,212,1.365,213,1.808,214,0.842,215,1.287,216,2.187,217,0.842,218,0.842,219,0.887,220,0.827,221,1.343,222,0.842,223,0.887,224,0.827,225,0.887,226,0.813,227,0.813,228,1.587,229,1.621,230,0.813,231,0.827,232,0.827,233,0.813,234,0.887,235,0.842,236,1.943,237,0.842,238,0.827,239,0.842,240,0.842,241,0.842,242,0.827,243,0.887,244,0.827,245,0.842,246,0.887,247,0.827,248,0.887,249,0.827,250,0.827,251,0.987,252,0.887,253,0.827,254,0.887,255,0.813,256,0.827,257,0.887,258,0.827,259,0.887,260,0.759,261,0.887,262,0.827,263,1.461,264,0.887,265,0.813,266,0.887,267,0.827,268,0.887,269,0.799,270,0.887,271,0.827,272,0.813,273,0.827,274,0.786,275,0.887,276,0.827,277,0.887,278,0.887,279,0.827,280,0.887,281,0.827,282,0.887,283,0.799,284,0.887,285,0.813,286,0.827,287,0.887,288,0.827,289,0.856,290,0.887,291,1.658,292,0.827,293,1.78,294,0.827,295,0.842,296,0.734,297,0.842,298,0.842,299,0.827,300,0.842,301,0.842,302,0.842,303,0.887,304,0.813,305,0.827,306,0.887,307,0.827,308,0.856,309,0.827,310,0.887,311,0.827,312,0.887,313,0.842,314,0.827,315,0.827,316,0.887,317,0.827,318,0.887,319,0.827,320,0.887,321,0.827,322,0.786,323,0.772,324,0.799,325,0.887,326,0.813,327,0.887,328,0.813,329,0.887,330,0.813,331,0.887,332,0.813,333,0.887,334,0.813,335,0.871,336,0.887,337,0.813,338,0.871,339,0.887,340,0.002,341,0.003,342,0.002,375,1.608,376,3.555,389,0.652,390,3.187,394,2.323,461,1.146,471,1.881,477,0.951,482,2.376,493,2.048,510,1.521,520,2.117,535,2.158,567,1.92,570,1.383,637,3.64,661,0.772,883,1.323,895,4.06,912,2.778,914,3.016,938,2.909,1046,2.909,1060,4.526,1085,3.813,1103,4.054,1146,1.56,1154,2.158,1163,4.771,1177,4.379,1184,2.518,1187,2.158,1288,2.426,1423,2.376,1488,3.421,1501,2.64,1502,2.259,1510,2.376,1511,2.932,1512,2.932,1517,6.425,1648,3.813,1650,4.428,1652,4.344,1654,3.599,1655,3.737,1656,4.846,1657,4.129,1658,4.846,1665,3.421,1667,3.511,1668,3.599,1670,3.599,1671,4.129,1676,3.421,1678,2.376,1680,3.268,1688,4.846,1689,3.599,1691,2.812,1692,3.134,1693,3.599,1694,3.599,1696,3.555,1697,3.599,1706,3.599,1707,3.599,1869,2.932,1910,2.158,1919,2.158,2108,2.695,2122,3.813,2353,3.945,2356,3.134,2357,3.134,2377,2.069,2450,2.695,2455,5.496,2476,4.082,2527,2.158,2649,2.518,2726,2.932,2992,2.069,3243,2.932,3418,2.518,3419,2.259,3421,2.518,3429,2.932,3659,2.518,3909,2.932,3927,2.932,3928,4.987,3929,4.987,3930,4.987,3931,4.987,3932,4.987,3933,3.292,3934,3.292,3935,3.292,3936,3.292,3937,3.292,3938,3.292,3939,3.292,3940,3.292,3941,3.292,3942,3.292,3943,3.292,3944,3.292,3945,3.292,3946,3.292,3947,3.292,3948,3.292,3949,3.292,3950,2.932,3951,3.292,3952,3.292,3953,3.292,3954,3.292,3955,4.987,3956,6.019,3957,3.292,3958,3.292,3959,3.292,3960,3.292,3961,3.292,3962,3.292,3963,4.987,3964,3.292,3965,3.292,3966,4.987,3967,3.292]],["title/modules/PopModule.html",[343,1.142,2135,3.301]],["body/modules/PopModule.html",[3,0.353,4,0.364,10,0.276,25,2.841,26,0.007,150,0.364,152,0.586,164,1.299,165,0.298,166,0.287,196,1.214,279,2.465,291,2.423,340,0.004,341,0.005,342,0.004,343,1.489,345,2.582,346,2.476,347,3.552,348,2.697,349,3.474,356,3.366,357,2.528,358,2.199,361,2.683,362,2.285,688,3.797,689,2.96,1075,4.303,1650,5.477,2135,6.472,2137,5.678,2147,4.739,3950,5.848,3968,5.848,3969,5.848,3970,6.566,3971,5.848,3972,5.848,3973,5.848,3974,6.566,3975,5.848,3976,6.566]],["title/injectables/PopService.html",[652,1.565,1650,2.938]],["body/injectables/PopService.html",[3,0.34,4,0.35,10,0.266,12,0.742,26,0.007,39,0.684,40,0.974,45,1.48,67,0.714,69,1.078,83,1.35,120,1.17,137,2.724,150,0.33,152,0.564,164,1.251,165,0.235,166,0.276,181,1.86,291,1.561,340,0.004,341,0.005,342,0.004,379,1.794,389,1.682,432,4.273,484,2.486,652,2.432,705,2.996,882,5.984,912,2.434,938,4.565,1060,4.516,1075,4.142,1141,7.913,1145,5.985,1163,4.919,1184,6.794,1650,4.565,1671,5.369,1680,5.822,1895,4.919,2011,5.985,2971,6.59,3977,5.63,3978,9.131,3979,7.827,3980,7.827,3981,8.885,3982,8.501,3983,7.827,3984,7.827,3985,6.321,3986,6.321,3987,6.321,3988,6.321,3989,6.321,3990,6.321,3991,6.321,3992,6.321,3993,6.321,3994,6.321]],["title/interfaces/ResourceActionbarState.html",[366,1.43,3995,4.123]],["body/interfaces/ResourceActionbarState.html",[0,0.343,3,0.238,4,0.245,5,0.921,10,0.186,17,1.074,20,1.739,22,2.721,26,0.007,32,0.711,33,0.953,34,0.832,39,0.772,40,0.769,42,1.143,46,1.608,52,2.192,56,1.993,67,0.741,68,1.769,83,1.23,101,0.819,106,3.034,122,3.213,132,1.777,142,2.434,150,0.342,152,0.394,154,1.921,164,1.796,165,0.23,166,0.193,186,1.57,203,2.043,207,2.115,251,1.411,255,1.527,292,1.111,293,1.562,340,0.003,341,0.004,342,0.003,366,1.256,367,5.449,368,1.946,370,2.658,371,3.952,372,4.739,373,3.811,374,6.437,375,0.986,376,3.274,379,1.256,380,7.427,384,3.137,385,3.486,387,6.89,389,0.875,390,3.274,391,3.62,394,1.954,400,3.62,422,2.675,446,1.858,448,2.485,451,1.993,467,2.415,497,3.775,503,3.034,510,2.175,521,3.034,533,4.02,540,5.062,543,5.024,545,3.85,567,3.607,571,1.668,624,2.689,640,2.381,647,2.93,661,1.673,751,3.137,774,2.898,775,2.898,776,2.211,806,3.939,953,2.152,965,2.415,1027,2.494,1102,2.675,1148,4.813,1265,3.192,1601,3.939,1610,3.939,1612,3.192,1725,5.106,2769,6.213,2971,4.242,3023,3.939,3611,3.939,3995,6.319,3996,3.034,3997,3.62,3998,3.939,3999,5.507,4000,7.72,4001,4.423,4002,4.423,4003,4.423,4004,4.423,4005,4.423,4006,6.183,4007,4.423,4008,4.423,4009,4.423,4010,4.423,4011,4.423,4012,4.423,4013,4.423,4014,4.423,4015,4.423,4016,4.423,4017,4.423,4018,4.423,4019,4.423,4020,3.62,4021,8.124,4022,4.423,4023,4.423,4024,4.423,4025,6.183,4026,4.423,4027,4.423,4028,4.423,4029,4.423,4030,4.423,4031,4.423,4032,3.62,4033,4.423,4034,4.423,4035,4.423,4036,4.423,4037,4.423,4038,4.423,4039,4.423,4040,4.423,4041,4.423,4042,4.423,4043,4.423,4044,4.423,4045,4.423,4046,4.423,4047,4.423,4048,4.423,4049,4.423,4050,4.423,4051,4.423,4052,4.423]],["title/components/ResourceCrudComponent.html",[0,0.279,294,1.266]],["body/components/ResourceCrudComponent.html",[0,0.321,1,0.775,2,0.892,3,0.166,4,0.171,5,1.459,7,0.831,8,0.802,10,0.13,12,0.362,17,1.152,21,0.762,22,2.544,24,0.688,26,0.007,32,0.763,33,2.149,34,1.866,37,1.152,39,0.334,40,0.59,42,1.368,45,0.514,46,1.615,52,1.347,53,1.218,56,2.926,64,1.256,67,0.803,68,1.435,69,1.153,71,1.221,83,0.997,87,1.523,88,1.154,89,1.472,99,0.851,100,1.054,101,0.844,120,0.923,123,2.756,126,1.631,128,0.762,142,2.496,150,0.338,151,1.391,152,0.275,154,2.017,165,0.115,166,0.135,181,0.908,186,1.179,196,0.57,197,1.53,198,0.632,200,1.718,201,0.831,202,0.831,203,0.749,204,1.557,205,0.762,206,0.789,207,1.882,208,0.775,209,0.789,210,2.076,211,0.775,212,1.311,213,1.748,214,0.789,215,1.532,216,2.142,217,0.789,218,0.789,219,0.831,220,0.775,221,1.278,222,0.789,223,0.831,224,0.775,225,0.831,226,0.762,227,0.762,228,1.552,229,1.557,230,0.762,231,0.775,232,0.775,233,0.762,234,0.831,235,0.789,236,1.887,237,0.789,238,0.775,239,0.789,240,0.789,241,0.789,242,0.775,243,0.831,244,0.775,245,0.789,246,0.831,247,0.775,248,0.831,249,0.775,250,0.775,251,1.285,252,0.831,253,0.775,254,0.831,255,0.762,256,0.775,257,0.831,258,0.775,259,0.831,260,1.497,261,0.831,262,0.775,263,1.404,264,0.831,265,0.762,266,0.831,267,0.775,268,0.831,269,0.749,270,0.831,271,0.775,272,0.762,273,0.775,274,0.736,275,0.831,276,0.775,277,0.831,278,0.831,279,0.775,280,0.831,281,0.775,282,0.831,283,0.749,284,0.831,285,0.762,286,0.775,287,0.831,288,0.775,289,0.802,290,0.831,291,0.762,292,0.775,293,2.036,294,1.859,295,0.789,296,0.688,297,0.789,298,1.891,299,0.775,300,1.659,301,0.789,302,0.789,303,0.831,304,0.762,305,0.775,306,0.831,307,0.775,308,0.802,309,0.775,310,0.831,311,0.775,312,0.831,313,0.789,314,0.775,315,0.775,316,0.831,317,0.775,318,0.831,319,0.775,320,0.831,321,0.775,322,0.736,323,0.724,324,0.749,325,0.831,326,0.762,327,0.831,328,0.762,329,0.831,330,0.762,331,0.831,332,0.762,333,0.831,334,0.762,335,0.816,336,0.831,337,0.762,338,0.816,339,0.831,340,0.002,341,0.003,342,0.002,358,1.589,375,0.688,379,0.876,383,1.642,389,0.611,446,2.429,447,1.684,448,2.609,451,1.391,471,1.789,490,2.249,497,2.512,510,2.257,534,4.238,540,3.884,541,3.084,543,3.71,545,2.74,547,5.15,548,4.226,549,1.718,550,4.226,551,4.226,562,3.629,563,4.226,570,2.944,571,3,596,5.359,598,1.939,599,1.8,623,1.586,647,3.076,653,1.8,656,2.983,657,2.022,662,1.117,663,2.324,683,3.787,685,3.634,747,2.448,774,2.022,958,3.849,1006,3.884,1007,3.255,1008,3.884,1009,3.884,1010,3.629,1012,3.062,1014,2.675,1015,4.226,1017,5.46,1018,3.884,1022,4.405,1023,3.497,1024,4.496,1027,3.26,1031,4.088,1033,3.884,1034,4.226,1035,2.675,1040,2.727,1041,3.629,1043,2.512,1044,4.226,1046,2.768,1060,3.653,1061,3.076,1064,3.425,1066,3.255,1071,1.684,1073,2.748,1075,2.022,1083,5.15,1084,2.748,1086,2.748,1111,2.116,1112,2.116,1115,4.226,1144,4.453,1684,3.629,1710,2.227,2642,4.226,3482,2.591,3629,2.116,3996,6.278,4053,7.491,4054,2.748,4055,6.492,4056,5.782,4057,4.745,4058,3.085,4059,3.085,4060,3.085,4061,3.085,4062,3.085,4063,6.492,4064,3.085,4065,3.085,4066,4.226,4067,3.085,4068,3.085,4069,3.085,4070,3.085,4071,4.745,4072,3.085,4073,3.085,4074,4.745,4075,3.085,4076,3.085,4077,3.085,4078,2.359,4079,3.085,4080,2.748,4081,3.085,4082,3.085,4083,3.085,4084,3.085,4085,3.085,4086,3.085,4087,3.085,4088,3.085]],["title/components/ResourceListPopComponent.html",[0,0.279,299,1.266]],["body/components/ResourceListPopComponent.html",[0,0.323,1,0.786,2,0.902,3,0.168,4,0.173,5,0.651,7,1.291,8,0.813,10,0.131,17,1.164,20,1.886,21,0.772,23,2.628,24,0.697,26,0.007,32,1.285,33,2.15,34,1.869,37,1.164,39,0.339,40,0.597,41,1.763,42,1.375,45,1.089,46,1.825,52,1.361,53,0.758,55,3.021,64,1.269,67,0.849,68,1.194,69,1.208,71,1.096,77,2.465,78,2.465,83,0.827,86,1.886,87,0.734,88,1.114,89,1.599,99,1.037,100,1.033,101,0.748,115,2.465,118,4.626,120,0.98,122,3.981,123,1.23,126,1.869,128,0.772,142,2.394,150,0.288,151,1.41,152,0.279,154,0.972,165,0.116,166,0.325,184,2.539,196,0.578,197,1.269,198,0.64,200,1.73,201,0.842,202,0.842,203,0.759,204,1.57,205,0.772,206,0.799,207,1.508,208,0.786,209,0.799,210,2.086,211,0.786,212,1.322,213,1.761,214,0.799,215,1.656,216,2.152,217,0.799,218,0.799,219,0.842,220,0.786,221,1.291,222,0.799,223,0.842,224,0.786,225,0.842,226,0.772,227,0.772,228,1.559,229,1.57,230,0.772,231,0.786,232,0.786,233,0.772,234,0.842,235,0.799,236,1.899,237,0.799,238,0.786,239,0.799,240,0.799,241,0.799,242,0.786,243,0.842,244,0.786,245,0.799,246,0.842,247,0.786,248,0.842,249,0.786,250,0.786,251,1.294,252,0.842,253,0.786,254,0.842,255,0.772,256,0.786,257,0.842,258,0.786,259,0.842,260,0.721,261,0.842,262,0.786,263,1.416,264,0.842,265,0.772,266,0.842,267,0.786,268,0.842,269,0.759,270,0.842,271,0.786,272,0.772,273,0.786,274,0.746,275,0.842,276,0.786,277,0.842,278,0.842,279,0.786,280,0.842,281,0.786,282,0.842,283,0.759,284,0.842,285,0.772,286,0.786,287,0.842,288,0.786,289,0.813,290,0.842,291,2.236,292,0.786,293,1.936,294,0.786,295,0.799,296,0.697,297,0.799,298,0.799,299,1.643,300,0.799,301,0.799,302,1.671,303,0.842,304,0.772,305,0.786,306,0.842,307,0.786,308,0.813,309,0.786,310,0.842,311,0.786,312,0.842,313,0.799,314,0.786,315,0.786,316,0.842,317,0.786,318,0.842,319,0.786,320,0.842,321,0.786,322,0.746,323,0.734,324,0.759,325,0.842,326,0.772,327,0.842,328,0.772,329,0.842,330,0.772,331,0.842,332,0.772,333,0.842,334,0.772,335,0.828,336,0.842,337,0.772,338,0.828,339,0.842,340,0.002,341,0.003,342,0.002,375,1.069,376,3.733,378,2.764,379,0.888,383,1.656,389,0.949,390,3.939,394,1.792,410,2.145,422,4.264,471,1.808,493,1.97,510,1.779,520,1.967,533,4.619,543,3.088,545,2.764,637,2.9,735,2.785,774,2.05,775,2.05,776,1.563,895,3.954,912,2.245,914,1.891,938,1.824,947,3.289,958,3.692,996,2.797,1022,4.432,1040,2.014,1046,1.824,1060,4.09,1103,3.362,1111,2.145,1112,2.145,1163,3.665,1177,3.768,1288,1.521,1486,3.667,1488,3.289,1501,3.088,1502,2.145,1510,2.257,1647,2.392,1648,3.667,1649,4.774,1650,4.878,1651,3.822,1652,3.461,1654,3.461,1655,2.764,1656,3.461,1657,3.289,1658,4.209,1661,2.56,1662,2.785,1663,2.785,1664,2.392,1665,2.145,1666,2.392,1667,1.824,1668,2.257,1669,2.392,1670,2.257,1671,2.145,1672,2.392,1673,2.56,1674,2.392,1675,3.925,1676,4,1677,2.785,1678,2.257,1679,2.392,1680,2.05,1684,3.667,1686,4.271,1687,2.392,1688,3.461,1689,2.257,1690,2.392,1691,1.763,1692,1.966,1693,2.257,1694,2.257,1695,2.392,1696,2.539,1697,2.257,1698,2.392,1699,2.56,1700,2.785,1703,4.271,1704,2.785,1705,2.392,1706,2.257,1707,2.257,1708,2.392,1709,2.392,1711,2.56,1712,2.392,1715,2.56,1716,2.257,1717,2.392,1718,2.785,2453,2.785,2460,4.271,2461,2.785,2462,2.785,3996,6.212,4078,6.926,4080,2.785,4089,5.832,4090,3.127,4091,3.127,4092,3.127,4093,2.56,4094,3.127]],["title/modules/ResourceModule.html",[343,1.142,1198,3.455]],["body/modules/ResourceModule.html",[3,0.274,4,0.283,10,0.214,25,2.522,26,0.007,150,0.376,152,0.455,153,2.049,154,1.584,165,0.19,166,0.222,196,0.942,206,2.421,215,1.155,292,2.38,293,2.061,294,2.38,295,2.421,296,1.519,297,2.421,298,2.448,299,2.38,300,2.421,301,2.421,340,0.003,341,0.005,342,0.003,343,1.156,345,2.005,346,1.922,347,3.153,348,2.094,349,3.085,355,5.34,356,2.863,357,1.963,358,1.707,360,3.842,361,2.282,362,2.372,533,4.954,598,3.204,599,2.974,688,3.229,689,2.298,692,4.675,775,3.341,776,2.548,1075,5.03,1198,6.877,1199,6.207,1219,3.679,1221,3.899,1227,4.173,1729,5.125,1764,3.679,2087,3.899,2088,3.679,2089,3.341,3997,4.173,4053,4.173,4078,5.87,4095,4.54,4096,4.54,4097,5.098,4098,4.54,4099,4.54,4100,5.098,4101,4.54,4102,5.098,4103,4.54,4104,6.814,4105,4.54]],["title/injectables/ResourceService.html",[652,1.565,1729,2.938]],["body/injectables/ResourceService.html",[0,0.286,3,0.185,4,0.191,10,0.145,12,0.404,26,0.007,32,1.4,39,0.373,40,0.769,45,1.576,46,1.528,48,1.439,52,2.088,53,0.815,67,0.834,68,1.858,69,1.104,71,1.291,72,1.415,82,3.723,83,1.381,87,2.193,88,1.284,97,2.576,99,1.238,100,1.007,101,0.893,120,0.679,130,1.07,132,3.103,141,2.119,142,1.032,150,0.326,152,0.307,164,1.224,165,0.192,166,0.15,181,1.013,186,1.681,191,1.942,207,1.846,215,1.048,293,2.14,296,1.835,340,0.002,341,0.003,342,0.002,366,0.978,367,2.908,371,1.675,375,1.531,379,0.978,383,2.088,385,2.908,389,0.682,394,1.882,439,3.887,446,2.885,447,1.88,448,2.76,451,1.552,474,2.579,477,0.995,487,4.504,493,1.415,505,3.887,533,4.147,537,4.533,539,4.337,543,4.765,545,3.794,571,2.912,572,3.539,575,2.76,585,2.981,598,2.165,601,2.634,642,3.242,652,1.603,654,4.016,655,1.721,662,1.247,705,1.632,708,2.009,711,2.362,751,4.022,770,4.239,774,2.257,776,1.721,797,3.887,811,3.242,812,3.539,820,2.257,908,4.821,912,1.986,932,1.771,938,3.009,965,3.75,990,3.782,1014,2.908,1040,2.885,1050,2.819,1068,4.053,1146,2.445,1150,3.637,1172,2.083,1264,1.942,1300,2.362,1437,4.153,1627,2.819,1691,2.908,1722,2.579,1723,3.723,1724,3.723,1725,3.242,1726,2.51,1727,3.539,1728,3.539,1729,3.608,1730,4.594,1731,4.594,1732,4.594,1733,4.243,1736,4.222,1738,3.74,1739,4.222,1743,3.119,1748,4.222,1749,4.222,1751,3.119,1752,4.053,1756,4.222,1757,3.723,1759,5.309,1774,3.119,1786,5.063,1787,2.819,1788,2.819,1789,2.819,1794,4.222,1796,2.486,1800,2.819,1801,2.819,1802,2.819,1803,2.819,1804,2.819,1805,6.021,1806,2.257,1807,2.362,1808,2.819,1871,2.634,1976,2.634,1979,3.945,3484,2.819,3996,6.048,4093,2.819,4106,2.819,4107,5.158,4108,5.158,4109,3.444,4110,6.117,4111,6.117,4112,3.444,4113,4.594,4114,3.444,4115,4.594,4116,3.444,4117,3.444,4118,4.594,4119,3.444,4120,4.594,4121,4.594,4122,4.594,4123,3.444,4124,4.594,4125,4.594,4126,3.444,4127,3.444,4128,3.067,4129,3.067,4130,3.067,4131,3.067,4132,3.067,4133,3.067,4134,4.222,4135,3.067,4136,6.117,4137,3.067,4138,3.067,4139,3.067,4140,3.067,4141,3.067,4142,3.067,4143,3.067,4144,3.067,4145,3.067,4146,3.067,4147,3.067,4148,3.067,4149,3.067,4150,3.067,4151,3.067,4152,3.067,4153,5.508,4154,3.067,4155,4.594,4156,3.067,4157,3.067,4158,3.067,4159,3.067]],["title/interfaces/SdkField.html",[366,1.43,4160,4.123]],["body/interfaces/SdkField.html",[3,0.46,4,0.317,10,0.24,12,1.082,26,0.007,32,1.458,39,0.619,40,0.914,45,1.556,48,2.769,67,0.899,68,1.997,71,1.381,120,1.194,165,0.212,228,1.478,340,0.004,341,0.005,342,0.004,366,1.622,368,2.515,370,2.456,373,3.809,375,2.174,383,2.618,434,2.938,505,4.616,549,2.069,611,4.829,722,3.333,751,3.571,911,6.408,1043,3.889,1148,4.01,1150,3.889,1726,3.573,1752,5.613,1774,4.441,1815,6.541,1846,5.699,1862,5.301,1885,5.038,1889,5.289,1895,4.616,3480,3.92,3501,5.09,3516,5.09,3575,7.628,3576,7.628,3629,5.038,4160,6.012,4161,5.09,4162,5.09,4163,5.715,4164,7.344,4165,7.344,4166,7.344,4167,7.344,4168,5.616,4169,6.012]],["title/modules/SdkModule.html",[343,1.142,1199,3.301]],["body/modules/SdkModule.html",[3,0.384,4,0.396,10,0.3,25,2.944,26,0.007,150,0.347,152,0.637,165,0.265,166,0.312,196,1.319,340,0.005,341,0.006,342,0.005,343,1.619,345,2.807,346,2.692,347,3.46,348,2.932,349,3.385,356,3.539,357,2.749,358,2.39,360,4.025,361,2.39,362,2.932,448,3.847,1199,6.273,2087,5.459,2088,5.152,2089,4.678,4170,6.358,4171,6.358,4172,7.139,4173,7.139]],["title/injectables/SdkService.html",[448,2.024,652,1.565]],["body/injectables/SdkService.html",[3,0.324,4,0.183,10,0.139,12,0.388,25,1.644,26,0.007,27,2.961,32,1.27,39,0.358,40,0.622,44,4.543,45,1.355,46,1.904,53,0.791,54,4.728,67,0.806,68,1.48,69,1.179,71,0.941,82,3.611,83,1.403,84,3.565,85,3.432,86,2.646,87,1.579,88,1.291,89,0.75,99,1.162,100,0.945,101,0.938,116,2.783,120,1.071,123,1.301,132,3.41,135,2.707,137,3.108,150,0.323,152,0.295,165,0.123,166,0.144,173,3.826,186,1.622,189,2.529,207,2.209,212,1.134,340,0.002,341,0.003,342,0.002,371,2.936,375,1.115,389,0.654,394,2.084,412,4.216,437,2.707,440,4.356,446,2.102,448,2.704,452,2.707,460,3.026,475,5.329,477,1.945,490,2.371,491,2.255,495,3.279,513,2.167,520,2.121,522,3.432,545,3.189,549,2.437,560,3.274,570,2.102,585,1.812,638,5.329,640,1.926,651,2.255,652,1.554,654,3.946,655,1.653,663,2.425,685,3.145,686,2.821,705,1.567,707,4.095,708,4.435,709,3.279,710,5.993,711,6.554,712,4.095,713,3.145,714,5.528,715,4.095,716,4.095,717,5.146,718,4.095,719,4.456,720,3.611,721,5.508,722,2.918,723,4.456,724,4.456,725,4.456,727,4.456,730,2.945,737,3.145,738,4.456,742,3.826,743,4.456,751,1.455,753,2.732,755,3.145,773,7.242,774,2.167,777,2.167,783,5.375,795,2.945,797,2.079,827,2.269,846,5.493,859,2,965,1.805,988,4.456,1040,2.102,1273,2.387,1294,3.611,1312,3.026,1505,3.611,1596,4.14,1913,3.279,1939,4.616,2329,2.945,2508,2.918,2881,4.095,2968,3.826,3014,3.826,3169,4.94,3170,2.707,3172,2.707,3486,5.146,3596,4.095,3675,4.095,3894,2.945,4174,2.945,4175,5.003,4176,5.003,4177,5.003,4178,5.003,4179,5.003,4180,6.035,4181,5.375,4182,5.375,4183,6.035,4184,8.132,4185,5.003,4186,5.003,4187,6.035,4188,5.003,4189,3.307,4190,5.003,4191,5.003,4192,3.307,4193,6.035,4194,5.003,4195,3.307,4196,5.003,4197,8.132,4198,5.003,4199,3.307,4200,7.604,4201,5.003,4202,3.307,4203,5.003,4204,3.307,4205,3.307,4206,3.307,4207,3.307,4208,4.456,4209,3.307,4210,5.375,4211,3.307,4212,3.307,4213,3.307,4214,5.003,4215,3.307,4216,4.456,4217,3.307,4218,5.003,4219,5.003,4220,3.307,4221,3.307,4222,3.307,4223,3.307,4224,3.307,4225,3.307,4226,3.307,4227,3.307,4228,3.307,4229,3.307,4230,6.035,4231,3.307,4232,3.307,4233,5.003,4234,3.307,4235,3.307,4236,3.307,4237,6.035,4238,3.307,4239,3.307,4240,3.307,4241,3.307,4242,3.307,4243,3.307,4244,5.003,4245,3.307,4246,3.307,4247,3.307,4248,3.307,4249,3.307,4250,5.003,4251,3.307,4252,3.307,4253,3.307,4254,3.307,4255,3.307,4256,3.307,4257,6.729,4258,3.307,4259,5.003,4260,3.307,4261,3.307,4262,3.307,4263,3.307,4264,3.307]],["title/modules/SelectModule.html",[343,1.142,4265,3.636]],["body/modules/SelectModule.html",[3,0.328,4,0.339,10,0.257,25,2.519,26,0.007,27,3.685,28,4.572,29,4.572,30,4.572,31,4.937,32,1.454,150,0.363,152,0.545,164,1.21,165,0.285,166,0.267,196,1.13,203,2.36,304,2.449,340,0.004,341,0.005,342,0.004,343,1.386,345,2.405,346,2.306,347,3.44,348,2.512,349,3.365,356,3.22,357,2.354,358,2.047,361,2.567,362,2.128,688,3.633,689,2.756,694,4.676,1208,7.459,1209,4.676,1210,4.413,1221,4.676,2138,6.047,2146,5.005,2949,6.669,4265,7.093,4266,5.446,4267,5.446,4268,5.446,4269,6.115,4270,5.446,4271,5.446,4272,5.446,4273,6.115,4274,5.446,4275,6.115]],["title/components/SignupComponent.html",[0,0.279,305,1.266]],["body/components/SignupComponent.html",[0,0.351,1,0.898,2,0.997,3,0.192,4,0.198,5,0.745,7,0.963,8,0.93,9,1.502,10,0.15,12,0.42,17,1.288,20,2.086,21,0.883,24,0.797,26,0.007,32,0.575,33,2.161,34,1.878,37,1.288,39,0.387,40,0.66,42,1.293,45,1.053,46,1.549,48,1.479,53,0.838,64,1.404,67,0.801,69,1.158,71,1.189,83,0.617,84,2.657,88,0.794,89,1.203,99,0.78,100,1.018,101,0.563,118,4.502,120,0.984,123,2.086,126,1.333,128,0.883,130,1.648,141,2.598,142,2.345,150,0.29,151,1.611,152,0.319,154,1.111,164,0.708,165,0.133,166,0.156,196,0.661,197,1.404,198,0.732,199,1.502,200,1.851,201,0.963,202,0.963,203,0.868,204,1.703,205,0.883,206,0.914,207,1.806,208,0.898,209,0.914,210,2.182,211,0.898,212,1.434,213,1.884,214,0.914,215,1.327,216,2.241,217,0.914,218,0.914,219,0.963,220,0.898,221,1.428,222,0.914,223,0.963,224,0.898,225,0.963,226,0.883,227,0.883,228,1.631,229,1.703,230,0.883,231,0.898,232,0.898,233,0.883,234,0.963,235,0.914,236,2.012,237,0.914,238,0.898,239,0.914,240,0.914,241,0.914,242,0.898,243,0.963,244,0.898,245,0.914,246,0.963,247,0.898,248,0.963,249,0.898,250,0.898,251,1.05,252,0.963,253,0.898,254,0.963,255,0.883,256,0.898,257,0.963,258,0.898,259,0.963,260,1.223,261,0.963,262,0.898,263,1.535,264,0.963,265,0.883,266,0.963,267,0.898,268,0.963,269,2.18,270,0.963,271,1.589,272,2.137,273,0.898,274,0.853,275,0.963,276,0.898,277,0.963,278,0.963,279,0.898,280,0.963,281,0.898,282,0.963,283,0.868,284,0.963,285,0.883,286,0.898,287,0.963,288,0.898,289,1.645,290,0.963,291,0.883,292,0.898,293,1.824,294,0.898,295,0.914,296,0.797,297,0.914,298,0.914,299,0.898,300,0.914,301,0.914,302,0.914,303,0.963,304,0.883,305,1.758,306,0.963,307,0.898,308,2.108,309,0.898,310,0.963,311,0.898,312,0.963,313,0.914,314,0.898,315,0.898,316,0.963,317,0.898,318,0.963,319,0.898,320,0.963,321,0.898,322,0.853,323,0.839,324,0.868,325,0.963,326,0.883,327,0.963,328,0.883,329,0.963,330,0.883,331,0.963,332,0.883,333,0.963,334,0.883,335,0.946,336,0.963,337,0.883,338,0.946,339,0.963,340,0.002,341,0.004,342,0.002,373,2.228,456,2.58,471,2,475,5.311,477,1.533,478,3.348,510,1.618,513,2.343,520,1.479,541,3.863,640,3.274,643,2.514,646,4.368,647,1.694,654,4.642,656,4.398,659,5.177,660,4.144,661,1.484,683,4.567,685,3.334,698,3.184,753,2.896,758,3.476,759,2.927,771,3.184,789,6.96,1012,3.348,1013,3.824,1027,2.991,1028,1.921,1029,1.377,1064,4.564,1067,3.597,1102,3.208,1103,2.727,1104,4.564,1109,2.247,1110,2.247,1147,1.269,1696,2.809,1843,3.208,1878,4.836,2170,4.144,2185,5.177,3147,4.724,3148,4.342,3149,5.518,3150,6.117,3156,5.632,3157,5.632,3158,5.632,3160,3.184,3161,3.184,3164,5.177,3169,2.927,3170,2.927,3172,2.927,3174,3.184,3175,2.927,3177,3.184,3178,2.927,4276,3.184,4277,5.304,4278,5.304,4279,3.575,4280,3.575,4281,4.057,4282,3.575,4283,3.575,4284,3.575,4285,3.575,4286,3.575,4287,3.575,4288,3.575,4289,3.575,4290,3.575,4291,3.575,4292,3.575,4293,3.575,4294,3.575,4295,3.575,4296,3.575,4297,3.575,4298,3.575,4299,3.575]],["title/components/SignupFormComponent.html",[0,0.279,307,1.266]],["body/components/SignupFormComponent.html",[0,0.396,1,0.807,2,0.92,3,0.173,4,0.178,5,0.669,7,0.865,8,0.835,9,1.349,10,0.135,12,0.377,17,1.188,20,1.925,21,0.793,22,2.609,24,0.716,26,0.007,32,1.066,33,2.152,34,1.869,37,1.188,39,0.348,40,0.609,42,1.319,45,1.446,46,1.488,48,2.303,51,1.413,53,0.773,56,3.524,64,1.295,67,0.735,68,0.658,69,1.197,71,0.92,87,1.391,88,1.171,89,1.503,99,0.872,100,1.008,101,0.629,118,4.875,120,1.144,126,1.229,128,0.793,130,2.844,141,2.723,142,1.466,146,1.942,150,0.277,152,0.286,153,1.291,164,0.636,165,0.119,166,0.14,186,0.889,196,0.594,197,1.295,198,0.658,199,1.349,200,1.754,201,0.865,202,0.865,203,0.78,204,1.596,205,0.793,206,0.821,207,1.529,208,0.807,209,0.821,210,2.105,211,0.807,212,1.344,213,1.785,214,0.821,215,1.274,216,2.17,217,0.821,218,0.821,219,0.865,220,0.807,221,1.318,222,0.821,223,0.865,224,0.807,225,0.865,226,0.793,227,0.793,228,1.574,229,1.596,230,0.793,231,0.807,232,0.807,233,0.793,234,0.865,235,0.821,236,1.921,237,0.821,238,0.807,239,0.821,240,0.821,241,0.821,242,0.807,243,0.865,244,0.807,245,0.821,246,0.865,247,0.807,248,0.865,249,0.807,250,0.807,251,0.968,252,0.865,253,0.807,254,0.865,255,0.793,256,0.807,257,0.865,258,0.807,259,0.865,260,1.129,261,0.865,262,0.807,263,1.439,264,0.865,265,0.793,266,0.865,267,0.807,268,0.865,269,0.78,270,0.865,271,2.356,272,2.213,273,0.807,274,0.766,275,0.865,276,0.807,277,0.865,278,0.865,279,0.807,280,0.865,281,0.807,282,0.865,283,0.78,284,0.865,285,0.793,286,0.807,287,0.865,288,0.807,289,1.955,290,0.865,291,0.793,292,0.807,293,1.766,294,0.807,295,0.821,296,1.091,297,0.821,298,0.821,299,0.807,300,0.821,301,0.821,302,0.821,303,0.865,304,0.793,305,0.807,306,0.865,307,1.666,308,2.147,309,0.807,310,0.865,311,0.807,312,0.865,313,0.821,314,0.807,315,0.807,316,0.865,317,0.807,318,0.865,319,0.807,320,0.865,321,0.807,322,0.766,323,0.753,324,0.78,325,0.865,326,0.793,327,0.865,328,0.793,329,0.865,330,0.793,331,0.865,332,0.793,333,0.865,334,0.793,335,0.85,336,0.865,337,0.793,338,0.85,339,0.865,340,0.002,341,0.003,342,0.002,375,0.716,384,3.14,471,1.845,478,3.139,487,2.854,490,2.809,520,1.365,535,3.207,541,2.609,555,1.651,570,2.49,610,3.409,640,2.895,646,2.884,651,1.448,737,3.726,758,3.207,789,6.596,794,2.629,883,1.291,912,2.747,1012,3.139,1028,1.772,1029,1.237,1040,2.49,1067,1.651,1107,2.318,1114,2.105,1144,4.548,1154,2.105,1155,1.811,1165,4.534,1219,2.318,1374,4.279,1427,2.318,1505,2.318,1574,2.318,1696,1.701,1843,2.959,1873,2.318,1889,2.854,2123,5.749,2179,4.006,2610,2.318,3000,2.105,3149,4.167,3179,2.629,3181,2.456,3182,2.629,3183,5.28,3184,4.358,3185,4.358,3186,5.904,3187,6.696,3188,6.963,3189,5.28,3190,4.358,3191,6.963,3192,5.904,3193,4.358,3194,4.358,3195,4.358,3196,4.358,3202,1.055,3203,2.86,3205,2.86,3207,5.426,3208,2.86,3210,2.86,3211,2.86,3212,2.86,3214,2.86,3219,2.86,3220,2.86,3222,4.534,3223,5.28,3224,5.28,3227,5.28,3228,2.86,3232,2.86,3233,2.456,3239,2.86,3240,2.86,3241,2.629,3244,2.86,3245,2.86,3246,5.28,3247,2.86,3248,2.629,3249,2.86,3254,2.86,3255,2.86,3256,2.86,3257,2.86,3259,2.86,3260,2.86,3261,4.006,4281,3.742,4300,6.963,4301,6.399,4302,5.928,4303,4.894,4304,3.212,4305,3.212,4306,4.894,4307,3.212,4308,3.212,4309,3.212,4310,3.212,4311,3.212,4312,3.212,4313,3.212,4314,3.212,4315,3.212,4316,3.212,4317,3.212,4318,3.212,4319,4.894,4320,3.212,4321,3.212,4322,3.212,4323,3.212,4324,3.212,4325,3.212,4326,3.212,4327,3.212,4328,3.212,4329,3.212,4330,3.212,4331,3.212,4332,3.212,4333,3.212]],["title/directives/SlotHostDirective.html",[198,1.031,337,1.244]],["body/directives/SlotHostDirective.html",[0,0.454,2,1.714,3,0.366,4,0.378,10,0.286,12,0.8,24,1.519,26,0.007,33,1.765,39,0.738,40,1.019,41,4.62,46,1.621,48,2.285,67,0.747,69,1.039,71,1.54,99,1.002,100,0.815,101,0.723,115,4.213,150,0.264,152,0.608,165,0.253,166,0.297,198,1.678,323,1.599,337,2.023,338,2.168,340,0.005,341,0.005,342,0.005,389,1.739,453,2.998,467,4.977,541,3.605,549,2.967,707,6.707,1061,3.883,1308,4.779,1501,4.338,1534,7.96,1583,6.707,4334,7.825,4335,6.069,4336,8.193,4337,6.814,4338,6.814,4339,8.193,4340,6.814]],["title/classes/Sorter.html",[166,0.22,4341,4.123]],["body/classes/Sorter.html",[3,0.262,4,0.271,10,0.205,12,0.777,26,0.007,32,1.065,39,0.813,40,0.824,45,1.251,52,2.286,53,1.272,67,0.735,68,1.849,69,0.952,71,0.918,83,0.842,87,2.082,88,1.206,99,0.974,100,0.792,101,0.941,120,0.643,150,0.189,164,1.486,165,0.299,166,0.289,181,2.21,186,1.696,340,0.005,341,0.004,342,0.003,375,1.876,434,4.462,439,3.07,461,1.7,484,3.167,493,3.085,549,1.768,558,3.506,575,3.89,581,4.263,639,2.754,651,3.385,663,3.018,747,3.591,751,2.913,824,6.405,856,6.678,883,1.963,887,4.801,899,3.07,900,3.998,977,4.35,997,3.998,1046,2.849,1179,2.954,1186,5.419,1312,4.542,1495,4.35,1583,3.998,1605,6.148,1743,2.954,1807,4.542,1905,4.161,1906,3.735,1909,3.862,1919,3.201,1925,7.574,2007,3.07,2125,3.998,2170,4.339,2244,5.419,2353,4.339,2647,3.735,2765,7.495,2774,7.264,2775,5.896,3808,5.896,4341,7.103,4342,3.998,4343,6.621,4344,6.621,4345,7.511,4346,6.621,4347,5.419,4348,5.419,4349,5.419,4350,4.884,4351,6.621,4352,4.884,4353,8.416,4354,6.621,4355,4.884,4356,6.436,4357,3.998,4358,4.884,4359,4.35,4360,4.884,4361,4.884,4362,4.884,4363,4.35,4364,4.35,4365,4.35,4366,4.884,4367,4.35,4368,4.35,4369,4.35,4370,4.884,4371,6.621,4372,4.884,4373,4.884,4374,4.884,4375,4.884,4376,4.884,4377,6.621,4378,4.884,4379,8.052,4380,4.884,4381,4.884,4382,4.884,4383,4.884,4384,4.884,4385,4.884,4386,4.884,4387,4.884]],["title/interfaces/Symbol.html",[366,1.43,1028,1.824]],["body/interfaces/Symbol.html",[3,0.378,4,0.39,10,0.295,12,0.825,26,0.007,39,0.762,40,1.039,67,0.762,68,1.974,72,3.43,100,1.17,101,0.945,106,4.825,165,0.261,340,0.005,341,0.006,342,0.005,366,1.997,368,3.095,520,2.329,911,4.825,1028,3.49,1157,7.437,1480,5.728,2321,6.835,2353,6.317,2354,6.027,3519,6.835,4388,6.264,4389,7.437,4390,8.35,4391,8.35]],["title/modules/SymbolModule.html",[343,1.142,2139,3.301]],["body/modules/SymbolModule.html",[0,0.432,2,1.465,3,0.337,4,0.432,5,1.307,10,0.264,12,0.736,25,2.784,26,0.007,37,1.523,120,0.827,150,0.353,152,0.56,165,0.29,166,0.34,196,1.16,340,0.004,341,0.005,342,0.004,343,1.423,345,2.468,346,2.367,347,3.481,348,2.578,349,3.405,356,3.273,357,2.416,358,2.101,361,2.101,362,2.712,385,3.538,412,3.661,433,3.944,461,2.184,477,1.814,491,2.829,500,4.113,643,2.974,662,2.272,686,4.393,687,5.959,688,3.692,689,2.829,747,2.367,876,3.795,911,4.305,1028,2.821,1029,3.664,1146,2.974,1260,3.227,1960,4.113,2073,4.53,2139,6.288,2159,3.323,2354,4.53,2384,3.944,2527,4.113,2992,3.944,3011,5.137,3659,4.799,3844,5.137,4216,6.939,4392,5.589,4393,5.589,4394,5.589,4395,5.589,4396,7.041,4397,6.276,4398,6.969,4399,3.661,4400,6.116,4401,5.137,4402,5.137,4403,6.703,4404,5.589,4405,5.589,4406,5.589,4407,5.589,4408,5.589,4409,5.589,4410,5.589,4411,5.589,4412,5.589,4413,5.589,4414,6.378,4415,4.53,4416,5.589,4417,6.276]],["title/injectables/SymbolPipe.html",[652,1.565,4396,3.636]],["body/injectables/SymbolPipe.html",[3,0.463,4,0.362,10,0.274,12,0.767,17,1.586,26,0.007,39,0.707,53,1.262,67,0.596,68,1.887,69,0.829,87,1.874,88,0.979,99,0.961,100,1.122,101,0.693,150,0.335,152,0.583,165,0.243,166,0.285,186,1.451,197,1.729,340,0.004,341,0.005,342,0.004,389,1.293,549,2.892,652,2.482,662,2.366,705,3.096,722,4.659,737,5.02,751,2.875,1028,3.497,1029,3.549,1260,4.621,1266,5.235,1272,5.765,1960,5.235,2353,5.235,4169,5.348,4396,5.765,4403,5.765,4416,5.819,4418,5.819,4419,7.987,4420,7.987,4421,7.987,4422,6.534,4423,7.987,4424,5.819,4425,6.534]],["title/injectables/SymbolService.html",[652,1.565,1029,1.939]],["body/injectables/SymbolService.html",[3,0.226,4,0.233,9,1.766,10,0.177,12,0.493,26,0.007,39,0.751,40,0.742,45,1.419,46,1.722,53,0.943,67,0.85,68,1.968,69,1.173,71,1.122,83,0.725,86,3.256,87,2.042,88,1.303,89,1.711,99,1.28,100,1.143,101,0.923,106,5.178,120,1.166,134,3.909,137,2.882,150,0.293,152,0.375,164,1.372,165,0.156,166,0.183,181,1.237,186,1.448,199,1.766,340,0.003,341,0.004,342,0.003,389,1.372,477,1.724,520,2.641,522,2.883,652,1.853,705,1.992,753,4.751,769,4.883,856,6.764,859,3.607,965,2.295,990,4.379,1028,3.584,1029,2.297,1722,3.773,1807,4.092,1909,4.83,1964,6.178,2352,8.023,2353,3.909,2395,4.883,2400,5.313,3445,6.178,3487,6.722,3631,6.722,4398,4.562,4400,5.976,4403,6.618,4415,6.281,4424,3.743,4426,3.743,4427,5.965,4428,5.965,4429,4.203,4430,7.548,4431,4.203,4432,7.548,4433,8.28,4434,4.203,4435,7.548,4436,4.203,4437,4.203,4438,7.548,4439,4.203,4440,7.548,4441,4.203,4442,5.965,4443,4.203,4444,5.965,4445,4.203,4446,5.965,4447,5.965,4448,4.203,4449,4.203,4450,4.203,4451,4.203,4452,4.203,4453,4.203,4454,4.203,4455,4.203,4456,4.203,4457,5.965,4458,4.203,4459,4.203,4460,4.203,4461,4.203,4462,4.203,4463,7.971,4464,4.203,4465,4.203,4466,4.203,4467,4.203,4468,3.743,4469,4.203,4470,4.203,4471,4.203]],["title/components/TabComponent.html",[0,0.279,309,1.266]],["body/components/TabComponent.html",[0,0.375,1,1.009,2,1.086,3,0.216,4,0.223,5,0.836,7,1.081,8,1.044,10,0.169,12,0.471,21,0.992,24,0.895,26,0.007,32,1.088,33,2.17,34,1.887,37,1.402,39,0.435,40,0.718,42,1.448,46,1.143,53,0.913,64,1.528,67,0.784,68,1.514,69,1.127,83,0.996,87,1.355,88,0.865,89,1.309,99,0.591,100,1.029,101,0.426,120,0.761,122,3.53,126,1.451,128,0.992,141,2.372,142,2.517,150,0.224,152,0.358,165,0.149,166,0.175,196,0.742,197,1.528,198,0.822,200,1.957,201,1.081,202,1.081,203,0.975,204,1.821,205,0.992,206,1.027,207,0.926,208,1.009,209,1.027,210,2.263,211,1.009,212,1.533,213,1.991,214,1.027,215,1.383,216,2.315,217,1.027,218,1.027,219,1.081,220,1.009,221,1.555,222,1.027,223,1.081,224,1.009,225,1.081,226,0.992,227,0.992,228,1.692,229,1.821,230,0.992,231,1.009,232,1.009,233,0.992,234,1.081,235,1.027,236,2.109,237,1.027,238,1.009,239,1.027,240,1.027,241,1.027,242,1.009,243,1.081,244,1.009,245,1.027,246,1.081,247,1.009,248,1.081,249,1.009,250,1.009,251,1.143,252,1.081,253,1.009,254,1.081,255,0.992,256,1.009,257,1.081,258,1.009,259,1.081,260,0.926,261,1.081,262,1.009,263,1.641,264,1.081,265,0.992,266,1.081,267,1.009,268,1.081,269,0.975,270,1.081,271,1.009,272,0.992,273,1.009,274,0.958,275,1.081,276,1.009,277,1.081,278,1.081,279,1.009,280,1.081,281,1.009,282,1.081,283,0.975,284,1.081,285,0.992,286,1.009,287,1.081,288,1.009,289,1.044,290,1.081,291,0.992,292,1.009,293,1.884,294,1.009,295,1.027,296,0.895,297,1.027,298,1.027,299,1.009,300,1.027,301,1.027,302,1.027,303,1.081,304,0.992,305,1.009,306,1.081,307,1.009,308,1.044,309,1.858,310,1.081,311,2.233,312,1.081,313,1.027,314,1.009,315,1.009,316,1.081,317,1.009,318,1.081,319,1.009,320,1.081,321,1.009,322,0.958,323,0.942,324,0.975,325,1.081,326,0.992,327,1.081,328,0.992,329,1.081,330,0.992,331,1.081,332,0.992,333,1.081,334,0.992,335,1.063,336,1.081,337,0.992,338,1.063,339,1.081,340,0.003,341,0.004,342,0.003,375,1.287,384,3.447,389,1.338,394,1.101,453,1.767,471,2.178,510,2.563,520,2.062,534,4.737,637,5.296,914,3.492,957,5.282,1023,5.082,1040,3.106,1061,2.737,1149,3.785,1177,2.809,1239,4.168,1416,4.727,1439,4.416,1491,3.577,1493,6.052,1692,3.63,3148,6.052,4472,3.577,4473,7.739,4474,5.143,4475,5.775,4476,7.394,4477,7.394,4478,7.833,4479,5.775,4480,4.016,4481,5.775,4482,4.016,4483,4.016,4484,4.016,4485,4.016,4486,4.016,4487,4.016,4488,5.775,4489,4.016,4490,3.577,4491,4.016,4492,4.016]],["title/components/TabsComponent.html",[0,0.279,311,1.266]],["body/components/TabsComponent.html",[0,0.428,1,0.973,2,1.058,3,0.208,4,0.215,5,0.807,7,1.043,8,1.007,9,1.627,10,0.163,12,0.455,17,1.366,21,0.957,24,0.864,26,0.007,32,0.623,33,2.167,34,1.884,37,1.366,39,0.419,40,0.7,42,1.224,45,0.645,53,0.889,64,1.489,67,0.704,68,1.357,69,1.054,72,2.311,85,3.859,87,1.706,88,1.089,89,1.648,99,0.975,100,1.055,101,0.703,120,0.873,123,1.523,126,1.413,128,0.957,150,0.257,152,0.345,164,1.113,165,0.144,166,0.169,181,1.14,186,0.704,196,0.716,197,1.489,198,0.793,199,1.627,200,1.924,201,1.043,202,1.043,203,0.94,204,1.784,205,0.957,206,0.99,207,0.893,208,0.973,209,0.99,210,2.238,211,0.973,212,1.502,213,1.958,214,0.99,215,1.366,216,2.293,217,0.99,218,0.99,219,1.043,220,0.973,221,1.515,222,0.99,223,1.043,224,0.973,225,1.043,226,0.957,227,0.957,228,1.673,229,1.784,230,0.957,231,0.973,232,0.973,233,0.957,234,1.043,235,0.99,236,2.079,237,0.99,238,0.973,239,0.99,240,0.99,241,0.99,242,0.973,243,1.043,244,0.973,245,0.99,246,1.043,247,0.973,248,1.043,249,0.973,250,0.973,251,1.439,252,1.043,253,0.973,254,1.043,255,0.957,256,0.973,257,1.043,258,0.973,259,1.043,260,0.893,261,1.043,262,0.973,263,1.608,264,1.043,265,0.957,266,1.043,267,0.973,268,1.043,269,0.94,270,1.043,271,0.973,272,0.957,273,0.973,274,0.924,275,1.043,276,0.973,277,1.043,278,1.043,279,0.973,280,1.043,281,0.973,282,1.043,283,0.94,284,1.043,285,0.957,286,0.973,287,1.043,288,0.973,289,1.007,290,1.043,291,0.957,292,0.973,293,1.866,294,0.973,295,0.99,296,0.864,297,0.99,298,0.99,299,0.973,300,0.99,301,0.99,302,0.99,303,1.043,304,0.957,305,0.973,306,1.043,307,0.973,308,1.007,309,2.244,310,1.043,311,2.024,312,1.043,313,0.99,314,0.973,315,0.973,316,1.043,317,0.973,318,1.043,319,0.973,320,1.043,321,0.973,322,0.924,323,0.909,324,0.94,325,1.043,326,0.957,327,1.043,328,0.957,329,1.043,330,0.957,331,1.043,332,0.957,333,1.043,334,0.957,335,1.025,336,1.043,337,0.957,338,1.025,339,1.043,340,0.003,341,0.004,342,0.003,389,0.767,394,1.542,432,3.072,461,1.348,477,1.119,520,1.569,534,4.67,596,5.56,623,1.992,643,2.666,653,2.26,662,1.403,663,1.557,708,3.282,912,1.492,965,2.115,1017,5.279,1023,4.67,1149,4.765,1159,4.099,1176,3.402,1324,1.992,1416,4.605,1543,2.962,1665,2.657,1738,3.402,1871,4.302,2435,3.171,3000,3.687,3336,3.45,3384,3.45,3463,3.45,3850,5.9,4032,3.171,4473,7.105,4493,3.45,4494,5.626,4495,5.626,4496,6.625,4497,7.731,4498,5.626,4499,7.271,4500,7.271,4501,5.626,4502,5.626,4503,5.626,4504,5.011,4505,3.874,4506,3.874,4507,5.626,4508,7.271,4509,3.874,4510,5.626,4511,3.874,4512,5.626,4513,3.874,4514,3.874,4515,5.626,4516,3.45,4517,3.874,4518,3.874,4519,3.874,4520,3.874,4521,3.874,4522,3.874,4523,3.874,4524,3.874,4525,3.874,4526,3.874,4527,3.874,4528,3.874,4529,3.874,4530,3.874,4531,3.874,4532,3.874,4533,5.626,4534,3.874,4535,3.874,4536,5.626]],["title/components/TinymceComponent.html",[0,0.279,315,1.266]],["body/components/TinymceComponent.html",[0,0.311,1,0.738,2,0.859,3,0.158,4,0.163,5,0.612,6,1.603,7,0.791,8,0.764,9,1.234,10,0.123,12,0.345,13,2.664,15,4.194,17,1.109,18,3.523,21,0.725,24,0.655,25,1.501,26,0.007,27,2.01,28,3.06,29,2.494,30,3.06,31,2.494,32,1.017,33,2.144,34,1.861,35,2.993,37,1.109,39,0.318,40,0.568,41,3.862,42,1.399,43,3.523,44,3.523,45,1.521,46,1.435,47,2.283,53,0.722,54,4.145,57,2.993,58,3.975,61,2.762,63,3.824,64,1.209,67,0.764,68,1.485,69,1.158,71,0.859,83,1.182,84,2.656,88,1.173,89,1.775,94,2.871,97,2.096,99,0.93,100,1.002,101,0.671,102,2.871,112,2.871,114,3.133,115,2.348,116,1.759,120,1.135,122,2.526,123,1.155,124,3.493,126,1.148,128,0.725,132,2.541,134,2.993,135,3.739,137,2.201,142,2.268,150,0.354,151,1.324,152,0.262,153,1.18,164,0.581,165,0.109,166,0.128,171,5.937,173,2.246,179,2.993,184,1.555,186,0.83,189,2.246,191,1.656,192,1.846,196,0.543,197,1.209,198,0.601,199,1.234,200,1.673,201,0.791,202,0.791,203,0.713,204,1.509,205,0.725,206,0.751,207,0.677,208,0.738,209,0.751,210,2.039,211,0.738,212,1.271,213,1.703,214,0.751,215,1.23,216,2.108,217,0.751,218,0.751,219,0.791,220,0.738,221,1.23,222,0.751,223,0.791,224,0.738,225,0.791,226,0.725,227,0.725,228,1.524,229,1.509,230,0.725,231,0.738,232,0.738,233,0.725,234,0.791,235,0.751,236,1.845,237,0.751,238,0.738,239,0.751,240,0.751,241,0.751,242,0.738,243,0.791,244,0.738,245,0.751,246,0.791,247,0.738,248,0.791,249,0.738,250,1.408,251,0.904,252,0.791,253,0.738,254,0.791,255,0.725,256,0.738,257,0.791,258,0.738,259,0.791,260,0.677,261,0.791,262,0.738,263,1.361,264,0.791,265,0.725,266,0.791,267,0.738,268,0.791,269,0.713,270,0.791,271,0.738,272,0.725,273,0.738,274,0.701,275,0.791,276,0.738,277,0.791,278,0.791,279,0.738,280,0.791,281,0.738,282,0.791,283,0.713,284,0.791,285,0.725,286,0.738,287,0.791,288,0.738,289,0.764,290,0.791,291,0.725,292,0.738,293,1.716,294,0.738,295,0.751,296,1.018,297,0.751,298,0.751,299,0.738,300,0.751,301,0.751,302,0.751,303,0.791,304,0.725,305,0.738,306,0.791,307,0.738,308,0.764,309,0.738,310,0.791,311,0.738,312,0.791,313,0.751,314,0.738,315,1.822,316,0.791,317,0.738,318,0.791,319,0.738,320,0.791,321,0.738,322,0.701,323,0.689,324,0.713,325,0.791,326,0.725,327,0.791,328,0.725,329,0.791,330,0.725,331,0.791,332,0.725,333,0.791,334,0.725,335,1.209,336,0.791,337,0.725,338,0.777,339,0.791,340,0.002,341,0.003,342,0.002,389,0.581,394,1.536,424,1.776,471,1.722,484,1.796,491,2.059,510,2.31,539,2.59,585,1.654,588,3.739,638,2.993,654,4.133,655,1.468,656,2.871,662,1.063,737,3.975,820,1.924,847,7.161,877,2.575,914,2.762,996,1.713,1040,1.919,1043,3.627,1061,2.165,1068,2.993,1147,1.621,1154,2.993,1159,3.16,1184,3.493,1299,2.404,1300,2.014,1374,3.297,1456,4.286,1574,3.297,1826,2.615,2060,3.16,2124,3.493,2198,3.493,2277,2.404,2278,2.615,2410,5.632,2519,5.607,2520,4.588,2567,2.615,2653,3.739,2654,3.739,2724,2.404,3013,2.404,3109,3.739,3275,6.101,3278,5.632,3286,4.068,3304,2.404,3648,3.133,3675,3.739,3780,3.297,4399,4.231,4497,4.068,4537,2.615,4538,5.166,4539,4.567,4540,5.605,4541,4.567,4542,4.567,4543,7.253,4544,2.936,4545,6.324,4546,4.567,4547,4.068,4548,4.567,4549,3.493,4550,2.936,4551,4.567,4552,2.936,4553,4.567,4554,4.567,4555,2.936,4556,4.068,4557,2.936,4558,2.936,4559,4.567,4560,4.567,4561,4.567,4562,4.567,4563,5.605,4564,2.936,4565,2.936,4566,2.936,4567,2.936,4568,2.936,4569,2.936,4570,2.936,4571,2.936,4572,2.936,4573,2.936,4574,2.936,4575,2.936,4576,2.936,4577,2.936,4578,2.936,4579,2.936,4580,2.936,4581,2.936,4582,2.936,4583,2.936,4584,2.936,4585,2.936,4586,2.936,4587,2.936,4588,2.936,4589,2.936,4590,2.936,4591,2.936,4592,4.068,4593,2.936,4594,2.936,4595,2.936,4596,2.936,4597,2.936,4598,2.936,4599,2.936,4600,2.936,4601,4.567,4602,2.936,4603,2.936,4604,2.936,4605,2.936,4606,2.936,4607,2.936,4608,2.936,4609,2.936,4610,4.567,4611,2.936,4612,2.936,4613,2.936,4614,2.936,4615,2.936,4616,2.936,4617,2.936,4618,2.936]],["title/modules/TinymceModule.html",[343,1.142,4619,3.636]],["body/modules/TinymceModule.html",[3,0.382,4,0.394,10,0.299,25,2.336,26,0.007,150,0.326,152,0.634,164,1.407,165,0.312,166,0.31,196,1.314,315,2.502,340,0.005,341,0.006,342,0.005,343,1.612,345,2.796,346,2.681,347,3.675,348,2.92,349,3.595,356,3.53,357,2.737,358,2.381,360,4.738,362,2.474,4619,6.972,4620,6.332,4621,6.332,4622,6.332,4623,6.332,4624,7.11,4625,6.332,4626,7.11]],["title/components/ToggleComponent.html",[0,0.279,317,1.266]],["body/components/ToggleComponent.html",[0,0.437,1,1.026,2,1.099,3,0.219,4,0.227,5,1.422,7,1.1,8,1.062,10,0.172,12,0.479,17,1.419,18,4.291,21,1.009,24,0.911,25,1.921,26,0.007,27,2.572,28,3.727,29,3.191,30,3.727,31,3.191,32,0.94,33,2.171,34,1.888,37,1.419,39,0.442,40,0.727,42,1.457,43,4.291,45,1.52,53,0.924,57,3.831,58,4.684,61,3.535,64,1.547,67,0.623,68,1.197,69,1.071,71,1.099,88,1.116,89,1.689,94,3.674,96,4.47,97,1.973,98,4.219,99,0.86,100,1.052,101,0.62,102,3.674,112,3.674,114,4.01,120,1.112,126,1.469,128,1.009,137,2.034,150,0.227,152,0.364,153,1.642,165,0.152,166,0.178,179,4.474,191,2.303,192,2.568,196,0.755,197,1.547,198,0.836,200,1.972,201,1.1,202,1.1,203,0.992,204,1.838,205,1.009,206,1.044,207,0.942,208,1.026,209,1.044,210,2.274,211,1.026,212,1.548,213,2.007,214,1.044,215,1.39,216,2.326,217,1.044,218,1.044,219,1.1,220,1.026,221,1.574,222,1.044,223,1.1,224,1.026,225,1.1,226,1.009,227,1.009,228,1.7,229,1.838,230,1.009,231,1.026,232,1.026,233,1.009,234,1.1,235,1.044,236,2.123,237,1.044,238,1.026,239,1.044,240,1.044,241,1.044,242,1.026,243,1.1,244,1.026,245,1.044,246,1.1,247,1.026,248,1.1,249,1.026,250,1.026,251,1.157,252,1.1,253,1.026,254,1.1,255,1.009,256,1.026,257,1.1,258,1.026,259,1.1,260,0.942,261,1.1,262,1.026,263,1.657,264,1.1,265,1.009,266,1.1,267,1.026,268,1.1,269,0.992,270,1.1,271,1.026,272,1.009,273,1.026,274,0.975,275,1.1,276,1.026,277,1.1,278,1.1,279,1.026,280,1.1,281,1.026,282,1.1,283,0.992,284,1.1,285,1.009,286,1.026,287,1.1,288,1.026,289,1.062,290,1.1,291,1.009,292,1.026,293,1.893,294,1.026,295,1.044,296,0.911,297,1.044,298,1.044,299,1.026,300,1.044,301,1.044,302,1.044,303,1.1,304,1.009,305,1.026,306,1.1,307,1.026,308,1.062,309,1.026,310,1.1,311,1.026,312,1.1,313,1.044,314,1.026,315,1.026,316,1.1,317,2.061,318,1.1,319,1.026,320,1.1,321,1.026,322,0.975,323,0.958,324,0.992,325,1.1,326,1.009,327,1.1,328,1.009,329,1.1,330,1.009,331,1.1,332,1.009,333,1.1,334,1.009,335,1.081,336,1.1,337,1.009,338,1.081,339,1.1,340,0.003,341,0.004,342,0.003,375,1.883,438,3.831,477,1.689,610,4.054,895,5.395,947,5.112,1308,3.41,2395,4.785,2445,4.785,2853,4.785,3109,3.344,3304,3.344,3419,4.01,4627,3.638,4628,5.846,4629,5.846,4630,4.085,4631,4.085,4632,4.085,4633,5.846,4634,4.085,4635,4.085,4636,5.846,4637,4.085,4638,4.085]],["title/injectables/TypeConfigService.html",[652,1.565,1202,3.046]],["body/injectables/TypeConfigService.html",[3,0.151,4,0.156,5,0.921,10,0.118,12,0.331,21,1.092,26,0.007,32,1.533,34,1.582,39,0.305,40,0.55,42,1.686,45,1.625,48,1.233,51,1.945,53,0.977,67,0.832,68,1.663,69,0.979,72,1.816,83,0.763,87,1.45,88,1.278,89,0.639,97,1.278,99,0.909,100,0.924,101,0.656,120,0.982,150,0.308,152,0.251,154,0.875,164,0.875,165,0.105,166,0.123,186,1.476,205,1.659,212,1.616,215,0.749,226,2.195,227,1.96,228,1.889,230,1.76,251,1.772,263,1.073,314,1.111,340,0.002,341,0.003,342,0.002,371,2.151,375,0.986,379,0.8,383,2.389,384,1.945,389,0.557,394,1.212,430,2.154,432,2.414,434,2.806,440,4.462,441,3.937,470,3.191,484,2.431,503,3.033,510,2.604,520,1.233,575,3.472,581,3.774,610,2.273,623,1.448,630,4.311,652,1.374,657,1.846,662,1.02,663,2.864,705,1.335,753,2.414,758,2.897,777,4.051,868,3.619,870,3.619,872,3.619,876,4.311,877,4.019,902,2.579,984,2.306,994,2.779,1014,2.493,1028,2.238,1029,2.38,1031,3.183,1066,3.033,1071,1.538,1150,3.774,1159,2.493,1160,4.062,1176,2.674,1181,3.619,1202,2.674,1215,2.779,1216,2.779,1217,2.154,1224,5.73,1231,2.897,1238,2.579,1256,2.779,1257,2.033,1265,5.863,1277,4.86,1289,2.508,1308,5.571,1375,4.536,1471,5.295,1480,3.033,1593,1.846,1600,1.846,1710,2.033,1726,3.007,1757,2.033,1819,2.033,1838,4.671,1840,6.938,1841,7.215,1842,6.977,1847,6.212,1848,3.619,1901,2.779,1930,3.033,1996,3.191,2033,5.451,2060,2.493,2316,3.381,2417,3.619,2483,6.889,2505,6.212,2524,2.154,2634,3.937,2789,2.154,2798,2.306,2811,3.937,2899,6.639,3445,2.306,3480,5.446,3482,2.414,3521,2.508,4363,5.506,4403,3.191,4639,4.421,4640,4.421,4641,6.182,4642,4.421,4643,6.182,4644,2.817,4645,2.817,4646,4.421,4647,2.817,4648,4.421,4649,4.421,4650,2.817,4651,4.421,4652,2.817,4653,2.817,4654,4.421,4655,4.421,4656,4.421,4657,6.182,4658,7.719,4659,6.182,4660,7.128,4661,7.128,4662,7.128,4663,4.421,4664,4.421,4665,4.421,4666,4.421,4667,4.421,4668,4.421,4669,8.417,4670,4.421,4671,4.421,4672,4.421,4673,6.717,4674,6.182,4675,4.421,4676,4.421,4677,4.421,4678,4.421,4679,4.421,4680,2.306,4681,4.421,4682,2.817,4683,2.817,4684,2.817,4685,2.817,4686,2.817,4687,2.508,4688,2.817,4689,2.817,4690,2.817,4691,2.817,4692,2.817]],["title/modules/UiModule.html",[343,1.142,355,2.84]],["body/modules/UiModule.html",[3,0.311,4,0.321,10,0.243,25,1.902,26,0.007,150,0.37,152,0.516,164,1.146,165,0.275,166,0.253,196,1.07,340,0.004,341,0.005,342,0.004,343,1.313,345,2.277,346,2.184,347,2.379,348,2.379,349,3.281,355,5.651,356,3.111,357,2.23,358,1.939,361,2.48,362,2.015,2126,6.62,2135,6.325,2136,6.325,2137,5.836,2138,6.325,2139,6.325,2141,4.74,2146,4.74,2147,4.179,2150,4.74,2151,4.74,2949,6.62,2956,5.157,3700,6.966,4265,6.966,4272,5.157,4693,5.157,4694,5.79,4695,5.157,4696,5.157,4697,5.79,4698,5.79,4699,5.157,4700,5.79]],["title/interfaces/Update.html",[366,1.43,539,2.327]],["body/interfaces/Update.html",[0,0.223,3,0.216,4,0.223,10,0.169,12,0.473,26,0.007,32,1.384,39,0.436,40,0.843,45,1.5,46,1.145,48,1.124,52,1.643,67,0.849,68,1.879,71,1.088,72,2.377,82,2.908,83,1.277,87,2.087,88,0.603,97,2.266,101,0.943,130,1.252,132,2.722,141,1.655,142,1.734,150,0.34,152,0.359,164,1.34,165,0.215,166,0.176,181,1.185,186,1.718,191,2.271,207,1.562,215,1.426,293,2.141,296,1.918,340,0.003,341,0.004,342,0.003,366,1.144,367,2.271,368,1.773,371,1.96,375,1.65,379,1.144,383,1.144,385,4.603,394,2.029,439,4.257,446,2.431,448,2.326,451,1.816,474,2.014,477,1.673,487,3.951,505,3.638,533,3.263,537,4.325,539,4.327,543,4.817,545,3.21,571,2.183,572,5.079,575,2.326,585,2.839,598,2.532,601,3.081,642,2.532,652,1.798,654,3.698,655,2.014,662,1.459,708,3.376,711,2.764,751,3.592,770,4.152,774,2.64,776,2.014,797,4.257,811,4.654,812,5.079,820,2.64,908,4.439,912,1.551,932,2.071,938,2.35,965,3.698,990,3.483,1014,2.271,1040,2.431,1050,4.737,1068,4.439,1146,1.909,1150,3.064,1172,2.436,1264,3.263,1300,2.764,1437,3.5,1627,4.737,1691,2.271,1722,2.014,1723,2.908,1724,2.908,1725,2.532,1726,1.96,1727,2.764,1728,2.764,1729,3.951,1733,2.764,1736,3.298,1738,3.5,1739,3.298,1743,2.436,1748,3.298,1749,3.298,1751,2.436,1752,3.793,1756,3.298,1757,2.908,1759,5.344,1774,3.5,1786,5.544,1787,3.298,1788,3.298,1789,3.298,1794,4.737,1796,2.908,1800,3.298,1801,3.298,1802,3.298,1803,3.298,1804,3.298,1805,6.419,1806,2.64,1807,2.764,1808,3.298,1871,4.426,1976,4.426,1979,3.081,3484,4.737,3996,2.764,4093,3.298,4106,3.298,4110,5.154,4111,5.154,4113,3.588,4115,3.588,4118,3.588,4120,3.588,4121,3.588,4122,3.588,4124,3.588,4125,3.588,4128,3.588,4129,5.154,4130,5.154,4131,5.154,4132,5.154,4133,5.154,4134,6.419,4135,3.588,4136,6.594,4137,3.588,4138,3.588,4139,3.588,4140,3.588,4141,3.588,4142,3.588,4143,3.588,4144,3.588,4145,3.588,4146,3.588,4147,3.588,4148,3.588,4149,3.588,4150,3.588,4151,3.588,4152,3.588,4153,6.032,4154,3.588,4155,5.154,4156,3.588,4157,3.588,4158,3.588,4159,3.588]],["title/interfaces/Upload.html",[322,1.202,366,1.43]],["body/interfaces/Upload.html",[0,0.188,3,0.182,4,0.188,10,0.307,12,0.397,26,0.007,32,1.28,39,0.367,40,0.634,46,1.775,48,0.944,52,2.546,67,0.779,68,1.63,69,0.429,71,1.28,83,1.532,87,1.436,88,0.763,97,0.978,101,0.92,116,1.304,120,0.446,130,1.582,132,3.199,134,3.338,141,1.391,142,2.188,150,0.336,152,0.302,164,1.621,165,0.228,166,0.148,181,1.801,186,1.748,207,0.781,212,2.147,215,1.388,228,0.682,250,0.851,251,0.67,293,1.342,296,0.755,322,2.096,340,0.002,341,0.003,342,0.002,366,1.738,367,1.909,368,1.49,370,2.927,371,1.647,372,1.975,375,1.518,379,0.961,383,1.933,394,2.001,434,1.741,439,4.59,446,2.572,448,2.047,451,1.526,468,4.682,474,1.693,487,1.975,490,1.605,505,2.128,511,5.912,512,2.444,521,2.323,533,3.452,539,2.828,543,3.242,549,1.226,565,2.901,570,1.422,571,1.277,572,4.672,585,2.466,598,2.128,606,3.702,607,5.856,629,2.772,630,5.582,642,2.128,650,2.323,652,1.582,661,0.794,662,1.226,663,2.46,708,2.971,747,2.754,775,2.219,776,2.546,811,3.848,819,2.772,820,2.219,827,2.323,887,3.945,912,1.304,932,1.741,953,2.478,958,2.828,990,1.741,996,4.259,1014,1.909,1068,4.012,1132,4.463,1142,2.444,1146,1.605,1147,1.808,1148,4.472,1150,2.697,1155,1.909,1162,2.589,1169,1.741,1179,3.08,1202,3.08,1224,2.444,1471,2.323,1575,2.323,1691,2.872,1722,1.693,1723,2.444,1724,2.444,1725,2.128,1726,1.647,1727,2.323,1728,2.323,1729,3.571,1738,3.702,1759,2.444,1764,2.444,1769,2.772,1774,4.64,1798,4.682,1889,2.971,1909,1.975,1913,2.219,1953,2.772,1954,5.453,1955,4.536,1956,4.536,1957,4.536,1958,4.536,1959,4.536,1960,2.219,1961,3.016,1962,3.016,1963,3.016,1964,2.772,1965,2.772,1966,3.016,1967,3.016,1968,4.536,1969,3.016,1970,4.682,1971,2.589,1972,3.016,1973,3.016,1974,4.169,1975,5.978,1976,3.895,1977,3.016,1978,3.016,1979,2.589,1980,3.016,1981,3.016,1982,5.453,1983,3.016,1984,5.453,1985,3.016,1986,3.016,1987,3.016,1988,2.589,1989,3.016,1990,3.016,1991,3.016,1992,3.016,1993,2.772,1994,3.016,1995,5.208,1996,2.444,1997,3.016,1998,4.536,1999,3.016,2000,4.536,2001,4.536,2002,3.016,2003,3.016,2004,3.016,2005,3.016,2006,4.536,2007,3.848,2008,3.016,2009,2.772,2010,3.016,2011,2.589,2012,3.016,2013,6.833,2014,3.016,2015,3.016,2016,3.016,2017,3.016,2018,3.016,2019,5.453,2020,2.772,2021,3.016,2022,3.016,2023,4.536,2024,3.016,2025,4.536,2026,4.536,2027,4.536,2028,4.536,2029,4.536,2030,4.536,2031,4.536,2032,4.536,2033,2.589,2034,2.772,2035,3.895,2036,3.016,2037,3.016,2038,3.016,2039,4.536,2040,3.016,2041,3.016,2042,3.016,2043,3.016,2044,3.016,2045,3.016,2046,3.016,2047,3.016,2048,2.444,2049,3.016,2050,5.453,2051,3.016,2052,3.016,2053,3.016,2054,4.536,2055,3.016,2056,3.016,2057,3.016,2058,2.772,2059,3.016,2060,1.909,2061,3.016,2062,3.016,2063,3.016,2064,3.016,2065,3.016,2066,3.016,2067,3.016,2068,3.016,2069,3.016,2070,3.016,2071,3.016,2072,3.016,2073,2.444,2074,3.016,2075,3.016,2076,3.016,2077,2.589,2078,3.016,2079,3.016,2080,3.016]],["title/components/UploadComponent.html",[0,0.279,319,1.266]],["body/components/UploadComponent.html",[0,0.378,1,0.731,2,0.852,3,0.156,4,0.161,5,0.606,7,0.783,8,0.756,10,0.286,12,0.341,17,1.101,21,0.718,24,0.648,26,0.007,32,0.896,33,2.143,34,1.86,37,1.101,39,0.315,40,0.564,42,1.685,45,1.136,46,1.103,48,1.265,51,3.434,53,0.716,64,1.2,67,0.809,68,1.396,69,1.174,71,1.183,83,1.085,86,1.783,88,1.082,89,1.263,97,1.61,99,1.063,100,1.041,101,0.766,120,0.994,122,2.511,123,1.783,126,1.713,128,0.718,132,1.822,137,1.578,142,2.26,150,0.264,151,1.311,152,0.259,154,0.904,165,0.108,166,0.127,184,4.132,186,1.418,196,0.538,197,1.2,198,0.596,200,1.665,201,0.783,202,0.783,203,0.706,204,1.5,205,0.718,206,0.744,207,2.077,208,0.731,209,0.744,210,2.032,211,0.731,212,1.818,213,1.694,214,0.744,215,1.225,216,2.101,217,0.744,218,0.744,219,0.783,220,0.731,221,1.221,222,0.744,223,0.783,224,0.731,225,0.783,226,0.718,227,0.718,228,1.519,229,1.5,230,0.718,231,0.731,232,0.731,233,0.718,234,0.783,235,0.744,236,1.836,237,0.744,238,0.731,239,0.744,240,0.744,241,0.744,242,0.731,243,0.783,244,0.731,245,0.744,246,0.783,247,0.731,248,0.783,249,0.731,250,0.731,251,0.897,252,0.783,253,0.731,254,0.783,255,0.718,256,0.731,257,0.783,258,0.731,259,0.783,260,1.451,261,0.783,262,0.731,263,1.352,264,0.783,265,0.718,266,0.783,267,0.731,268,0.783,269,0.706,270,0.783,271,0.731,272,0.718,273,0.731,274,0.694,275,0.783,276,0.731,277,0.783,278,0.783,279,0.731,280,0.783,281,0.731,282,0.783,283,0.706,284,0.783,285,0.718,286,0.731,287,0.783,288,0.731,289,0.756,290,0.783,291,1.554,292,0.731,293,1.71,294,0.731,295,0.744,296,1.242,297,0.744,298,0.744,299,0.731,300,0.744,301,0.744,302,0.744,303,0.783,304,0.718,305,0.731,306,0.783,307,0.731,308,0.756,309,0.731,310,0.783,311,0.731,312,0.783,313,0.744,314,0.731,315,0.731,316,0.783,317,0.731,318,0.783,319,1.581,320,0.783,321,0.731,322,2.241,323,0.682,324,0.706,325,0.783,326,0.718,327,0.783,328,0.718,329,0.783,330,0.718,331,0.783,332,0.718,333,0.783,334,0.718,335,0.77,336,0.783,337,0.718,338,0.77,339,0.783,340,0.002,341,0.003,342,0.002,373,1.905,375,1.011,389,0.576,446,1.905,447,1.588,448,2.528,451,1.311,471,1.71,475,3.651,477,1.31,478,2.401,479,3.711,508,5.075,510,1.7,513,1.906,520,1.265,521,4.956,541,3.32,560,2.206,606,4.562,607,3.822,610,3.507,612,4.56,622,2.099,623,2.331,625,2.85,630,2.742,639,1.64,640,2.145,646,3.67,647,2.981,662,1.053,663,2.528,797,1.828,827,1.995,846,2.85,905,1.906,912,2.626,996,2.645,1007,3.11,1012,2.95,1013,3.369,1023,2.742,1024,4.401,1027,3.141,1028,3.113,1029,2.422,1040,2.643,1060,3.8,1067,2.865,1102,2.742,1103,2.331,1104,4.021,1107,2.099,1109,1.828,1114,1.906,1132,3.651,1147,1.977,1148,4.119,1159,2.556,1162,3.467,1364,2.381,1427,3.272,1516,2.381,1575,1.995,1609,2.381,1752,2.971,1774,2.742,1806,4.469,1866,3.711,1974,5.15,2007,1.828,2020,2.381,2034,3.711,2170,2.971,2464,2.591,2484,5.15,2550,3.272,2649,3.467,2684,4.038,2696,4.811,2857,3.711,3149,3.954,3371,4.038,3505,3.711,3735,3.711,4687,2.591,4701,2.591,4702,4.534,4703,5.571,4704,5.571,4705,5.571,4706,4.038,4707,4.534,4708,4.534,4709,2.909,4710,2.909,4711,2.909,4712,4.534,4713,2.909,4714,4.038,4715,2.909,4716,2.909,4717,2.909,4718,2.909,4719,4.038,4720,4.534,4721,2.909,4722,2.909,4723,4.038,4724,2.909,4725,4.534,4726,2.909,4727,4.534,4728,4.534,4729,2.909,4730,2.909,4731,2.909,4732,4.534,4733,2.909,4734,4.534,4735,2.909,4736,4.534,4737,2.909,4738,2.909,4739,4.534,4740,2.909,4741,2.909,4742,2.591,4743,2.909,4744,2.909,4745,2.909,4746,2.909,4747,2.909,4748,2.909,4749,2.909,4750,2.909,4751,2.909,4752,2.909,4753,2.909,4754,2.909,4755,5.571,4756,2.909,4757,2.909,4758,2.909,4759,2.909,4760,2.909,4761,2.909,4762,2.909,4763,2.909,4764,2.909,4765,2.909,4766,2.909,4767,2.909,4768,4.534,4769,4.534,4770,4.534,4771,4.534,4772,4.534,4773,4.534]],["title/components/UploadSelectComponent.html",[0,0.279,321,1.266]],["body/components/UploadSelectComponent.html",[0,0.401,1,0.834,2,0.943,3,0.178,4,0.184,5,0.691,7,0.894,8,0.863,10,0.139,17,1.218,21,0.82,22,2.662,24,0.74,26,0.007,33,2.155,34,1.872,37,1.218,39,0.359,40,0.624,42,1.635,45,1.123,46,1.611,49,3.802,51,3.351,53,0.793,56,3.039,64,1.328,67,0.829,68,1.239,69,1.19,83,1.249,86,1.973,88,1.084,89,1.642,99,0.992,100,1.033,101,0.715,120,1.003,123,1.305,126,1.261,128,0.82,142,2.677,150,0.316,151,1.496,152,0.296,154,1.559,165,0.123,166,0.145,184,3.57,196,0.613,197,1.328,198,0.68,200,1.784,201,0.894,202,0.894,203,0.806,204,1.629,205,0.82,206,0.848,207,0.766,208,0.834,209,0.848,210,2.129,211,0.834,212,1.642,213,1.816,214,0.848,215,1.291,216,2.192,217,0.848,218,0.848,219,0.894,220,0.834,221,1.351,222,0.848,223,0.894,224,0.834,225,0.894,226,0.82,227,0.82,228,1.592,229,1.629,230,0.82,231,0.834,232,0.834,233,0.82,234,0.894,235,0.848,236,1.95,237,0.848,238,0.834,239,0.848,240,0.848,241,0.848,242,0.834,243,0.894,244,0.834,245,0.848,246,0.894,247,0.834,248,0.894,249,0.834,250,0.834,251,1.334,252,0.894,253,0.834,254,0.894,255,0.82,256,0.834,257,0.894,258,0.834,259,0.894,260,1.555,261,0.894,262,0.834,263,1.468,264,0.894,265,0.82,266,0.894,267,0.834,268,0.894,269,0.806,270,0.894,271,0.834,272,0.82,273,0.834,274,0.792,275,0.894,276,0.834,277,0.894,278,0.894,279,0.834,280,0.894,281,0.834,282,0.894,283,0.806,284,0.894,285,0.82,286,0.834,287,0.894,288,0.834,289,0.863,290,0.894,291,0.82,292,0.834,293,1.784,294,0.834,295,0.848,296,0.74,297,0.848,298,0.848,299,0.834,300,0.848,301,0.848,302,0.848,303,0.894,304,0.82,305,0.834,306,0.894,307,0.834,308,0.863,309,0.834,310,0.894,311,0.834,312,0.894,313,0.848,314,0.834,315,0.834,316,0.894,317,0.834,318,0.894,319,1.694,320,0.894,321,1.694,322,2.196,323,0.779,324,0.806,325,0.894,326,0.82,327,0.894,328,0.82,329,0.894,330,0.82,331,0.894,332,0.82,333,0.894,334,0.82,335,0.878,336,0.894,337,0.82,338,0.878,339,0.894,340,0.002,341,0.003,342,0.002,375,1.697,383,1.717,389,0.657,394,1.658,424,2.007,453,1.461,471,1.892,510,2.057,511,2.396,512,2.396,520,1.399,541,2.662,604,2.717,605,4.469,606,5.137,607,4.15,611,3.411,612,4.952,614,2.956,619,2.956,620,2.956,621,2.956,622,2.396,912,1.932,996,2.927,1028,3.289,1029,2.788,1031,3.528,1040,2.832,1053,2.508,1060,2.378,1071,1.812,1132,3.964,1147,2.147,1148,3.303,1159,4.293,1176,3.034,1210,3.622,1710,2.396,1819,2.396,1865,4.107,1970,2.539,1971,2.539,1975,4.952,2095,2.956,2096,7.707,2484,2.717,4706,4.469,4714,4.469,4719,4.469,4723,4.469,4742,2.956,4774,8.386,4775,6.049,4776,6.049,4777,6.049,4778,6.742,4779,5.018,4780,5.018,4781,6.049,4782,5.387,4783,5.018,4784,3.319,4785,3.319,4786,3.319,4787,3.319,4788,3.319,4789,3.319,4790,3.319,4791,3.319,4792,3.319,4793,5.018,4794,3.319,4795,5.018,4796,3.319,4797,3.319,4798,5.018,4799,5.018,4800,3.319,4801,5.018,4802,3.319,4803,3.319,4804,6.049,4805,3.319,4806,3.319,4807,3.319,4808,3.319,4809,3.319,4810,5.018,4811,6.742,4812,5.018,4813,5.018,4814,5.018]],["title/modules/UtilityModule.html",[343,1.142,2136,3.301]],["body/modules/UtilityModule.html",[3,0.315,4,0.325,10,0.246,25,2.452,26,0.007,150,0.373,152,0.523,153,2.355,164,1.16,165,0.278,166,0.256,196,1.083,271,2.429,272,1.448,276,2.429,307,2.429,308,1.524,309,2.429,311,2.429,332,2.387,340,0.004,341,0.005,342,0.004,343,1.329,345,2.305,346,2.21,347,3.374,348,2.408,349,3.3,356,3.136,357,2.257,358,1.963,360,3.305,361,2.499,362,2.04,653,3.419,688,3.537,689,2.642,691,5.928,692,5.634,1207,7.314,1219,5.388,2134,6.363,2136,6.528,2143,5.22,3181,4.483,4301,4.798,4490,5.22,4516,5.22,4815,5.22,4816,5.22,4817,5.862,4818,5.22,4819,5.22,4820,5.862,4821,5.862,4822,5.22,4823,5.862]],["title/pipes/VisibleFieldsPipe.html",[1260,2.59,2133,3.636]],["body/pipes/VisibleFieldsPipe.html",[3,0.355,4,0.367,10,0.278,12,0.776,17,1.606,24,1.475,26,0.007,40,0.823,46,1.309,48,1.845,50,4.898,53,1.045,67,0.734,69,1.021,88,0.991,99,0.973,100,1.038,101,0.702,130,3.051,150,0.336,152,0.59,165,0.246,166,0.289,186,1.202,340,0.004,341,0.005,342,0.004,358,2.695,379,1.878,386,3.8,394,2.206,453,2.911,520,2.245,747,3.489,1172,4.867,1238,4.695,1260,4.138,1261,4.775,1264,5.089,1266,4.336,1272,5.809,1466,5.416,2133,6.515,4824,7.726,4825,5.892,4826,8.049,4827,8.049,4828,8.049,4829,8.049,4830,6.616,4831,8.049,4832,6.616,4833,6.616,4834,6.616,4835,6.616]],["title/interfaces/WithLoader.html",[366,1.43,1012,2.667]],["body/interfaces/WithLoader.html",[0,0.471,3,0.389,4,0.402,10,0.304,12,0.85,26,0.007,39,0.785,40,1.057,67,0.661,71,1.598,150,0.281,165,0.269,260,2.145,340,0.005,341,0.006,342,0.005,366,2.56,368,3.189,497,4.5,541,4.296,753,4.64,1012,4.5,2988,6.957,3032,5.932,4836,6.454,4837,6.454,4838,8.499,4839,8.499]],["title/interfaces/WithNotifications.html",[366,1.43,1013,3.046]],["body/interfaces/WithNotifications.html",[0,0.46,3,0.373,4,0.385,10,0.292,12,0.815,26,0.007,32,1.333,39,0.752,40,1.031,67,0.756,71,1.559,72,3.406,101,0.973,150,0.269,165,0.258,340,0.005,341,0.006,342,0.005,366,2.515,368,3.058,375,1.975,646,4.716,753,4.526,1013,5.014,1067,4.944,1068,5.433,1535,7.511,1843,5.014,2320,8.172,2342,7.384,2555,5.433,2605,4.836,3797,8.172,4840,6.189,4841,6.189]],["title/changelog.html",[4842,3.078,4843,2.925,4844,1.752]],["body/changelog.html",[15,3.453,26,0.006,97,2.214,154,2.38,340,0.005,341,0.006,342,0.005,379,2.175,1258,4.319,1726,3.727,3677,4.182,4844,3.147,4845,2.949,4846,4.632,4847,4.815,4848,5.02,4849,5.02,4850,4.815,4851,5.02]],["title/coverage.html",[4852,6.02]],["body/coverage.html",[0,0.547,1,0.686,10,0.115,11,3.843,14,1.652,21,0.675,26,0.007,48,0.762,50,1.446,52,0.775,62,1.446,67,0.249,83,0.471,128,0.675,130,0.849,166,0.375,198,1.508,203,0.663,205,0.675,206,0.698,208,0.686,211,0.686,214,0.698,215,1.333,217,0.698,218,0.698,220,0.686,222,0.698,224,0.686,226,0.675,227,0.675,228,1.077,230,0.675,231,0.686,232,0.686,235,0.698,237,0.698,238,0.686,239,0.698,240,0.698,241,0.698,242,0.686,244,0.686,245,0.698,247,0.686,249,0.686,251,0.854,253,0.686,255,0.675,256,0.686,258,0.686,260,0.63,262,0.686,265,0.675,267,0.686,269,0.663,271,0.686,273,0.686,276,0.686,279,0.686,281,0.686,283,0.663,285,0.675,286,0.686,288,0.686,291,0.675,292,0.686,294,0.686,295,0.698,296,0.962,297,0.698,298,0.698,299,0.686,300,0.698,301,0.698,302,0.698,304,0.675,305,0.686,307,0.686,309,0.686,311,0.686,313,0.698,315,0.686,317,0.686,319,0.686,321,0.686,322,0.652,324,0.663,326,0.675,328,0.675,330,0.675,332,0.675,334,0.675,337,0.675,340,0.002,341,0.003,342,0.002,359,2.433,364,2.433,366,2.563,367,1.54,369,4.091,378,1.294,381,2.089,383,1.225,385,1.54,429,5.811,430,2.089,431,3.861,435,5.841,448,1.098,462,2.433,529,2.433,530,2.236,531,4.764,533,1.54,539,1.262,572,1.874,581,3.218,592,1.971,593,1.717,598,2.713,602,2.433,603,2.236,604,6.031,606,1.652,631,2.089,632,2.089,634,2.433,635,2.433,647,1.294,652,2.767,682,2.089,683,1.593,684,2.236,699,2.236,706,2.433,775,1.79,853,1.971,854,2.433,867,2.433,882,1.79,884,2.433,953,4.696,958,1.262,982,2.433,1005,2.433,1012,1.446,1013,1.652,1024,1.593,1025,1.717,1026,1.54,1028,0.989,1029,1.052,1031,1.593,1067,1.404,1072,3.533,1074,3.3,1076,3.506,1116,2.433,1117,4.631,1132,1.79,1160,1.652,1200,1.874,1201,1.971,1202,1.652,1203,2.433,1216,2.713,1218,2.236,1220,3.843,1224,1.971,1228,2.433,1230,2.433,1260,3.403,1262,2.433,1263,1.874,1285,2.236,1286,3.843,1303,2.236,1448,3.533,1453,3.533,1454,2.089,1471,6.716,1475,2.089,1481,2.433,1525,3.533,1526,2.236,1527,2.433,1541,1.971,1542,2.433,1563,2.433,1625,2.433,1647,5.634,1650,1.593,1721,2.433,1729,1.593,1740,1.593,1817,2.433,1837,2.433,1838,1.79,1951,3.843,1953,4.379,2090,2.433,2091,2.433,2096,2.236,2097,2.236,2098,2.433,2099,2.433,2101,2.433,2116,2.089,2117,2.433,2132,1.971,2133,1.971,2140,2.433,2152,2.433,2157,2.433,2225,1.79,2226,3.843,2227,1.79,2291,2.433,2296,2.433,2350,2.433,2360,1.874,2370,2.433,2394,2.433,2398,2.433,2401,2.433,2443,2.433,2516,2.433,2601,2.433,2602,2.236,2603,2.433,2605,1.593,2632,2.433,2650,2.433,2655,2.433,2665,1.652,2666,1.971,2761,2.433,2788,4.091,2789,4.648,2832,2.236,2833,2.433,2919,2.236,2920,2.433,2955,2.433,2962,2.433,2964,2.433,3034,2.433,3040,4.091,3041,2.433,3076,3.843,3078,2.433,3086,2.433,3094,2.433,3131,2.433,3146,2.433,3180,2.433,3181,2.089,3182,4.975,3241,2.236,3248,2.236,3262,2.433,3263,2.433,3269,4.975,3270,3.533,3271,2.433,3314,2.433,3316,2.433,3318,2.433,3344,2.089,3417,2.433,3480,4.54,3614,2.236,3615,2.433,3616,2.433,3640,2.433,3709,3.843,3735,2.236,3754,2.433,3762,2.433,3835,2.433,3879,2.433,3891,2.433,3892,2.433,3927,2.433,3973,2.433,3975,2.433,3977,2.433,3995,2.236,3996,5.952,3997,3.533,3998,4.764,3999,2.433,4053,2.236,4054,2.433,4078,4.091,4101,3.843,4103,2.433,4105,2.433,4106,3.533,4160,2.236,4161,2.433,4162,2.433,4174,2.433,4271,2.433,4274,2.433,4276,2.433,4300,2.433,4301,2.236,4334,2.433,4335,2.433,4341,2.236,4342,5.418,4347,2.236,4348,2.236,4349,2.236,4359,2.433,4388,2.433,4396,3.115,4400,1.971,4415,1.971,4418,3.843,4426,2.433,4472,2.433,4493,2.433,4504,8.642,4537,2.433,4592,2.433,4623,2.433,4625,2.433,4627,2.433,4696,2.433,4699,2.433,4701,2.433,4774,2.433,4819,2.433,4822,2.433,4824,2.433,4825,2.433,4836,2.433,4837,2.433,4840,2.433,4841,2.433,4852,2.433,4853,2.236,4854,2.731,4855,7.036,4856,2.731,4857,9.172,4858,9.522,4859,4.316,4860,6.802,4861,2.731,4862,4.316,4863,2.731,4864,5.413,4865,2.731,4866,4.316,4867,2.731,4868,5.35,4869,2.731,4870,2.731,4871,2.731,4872,4.316,4873,2.731,4874,6.619,4875,2.731,4876,2.731,4877,4.316,4878,4.316,4879,6.619,4880,2.731,4881,2.731,4882,2.731,4883,5.35,4884,2.731,4885,6.078,4886,2.731,4887,2.731,4888,2.731,4889,5.35,4890,2.731,4891,2.731,4892,2.731,4893,2.731,4894,2.731,4895,4.316,4896,4.316,4897,2.731,4898,2.731,4899,2.731,4900,2.731,4901,2.731,4902,2.731,4903,2.731,4904,4.316,4905,2.731,4906,4.316,4907,4.316,4908,4.316,4909,2.731,4910,2.731,4911,2.731,4912,2.731,4913,6.078,4914,2.731,4915,5.35,4916,2.731,4917,2.731,4918,2.731,4919,2.731,4920,6.078,4921,2.731,4922,2.731,4923,2.731,4924,2.731,4925,2.731,4926,4.316,4927,4.316,4928,2.731,4929,2.731,4930,2.731,4931,2.731,4932,6.619,4933,2.731,4934,4.316,4935,4.316,4936,2.731,4937,2.731,4938,5.35,4939,2.731,4940,2.731,4941,2.731,4942,2.731,4943,4.316,4944,4.316,4945,5.35,4946,4.316,4947,5.35,4948,2.731,4949,2.731,4950,2.731,4951,2.731,4952,2.731,4953,2.731,4954,2.731,4955,2.731,4956,2.731,4957,2.731,4958,6.619,4959,2.731,4960,2.731,4961,2.731,4962,4.316,4963,5.35,4964,2.731,4965,2.731,4966,5.35,4967,2.731,4968,2.731,4969,2.731,4970,2.731,4971,2.731,4972,2.731,4973,2.731,4974,2.731,4975,2.731,4976,2.731,4977,2.731,4978,2.731,4979,2.731,4980,2.731,4981,4.316,4982,4.316,4983,4.316,4984,4.316,4985,2.731,4986,4.316,4987,4.316,4988,2.731,4989,4.316,4990,2.731,4991,2.731,4992,2.731,4993,4.316,4994,2.731,4995,2.731,4996,2.731,4997,2.731,4998,2.731,4999,2.731,5000,2.731,5001,2.731,5002,2.731,5003,2.731,5004,2.731,5005,2.731,5006,4.316,5007,2.731,5008,2.731,5009,2.731,5010,4.316,5011,2.731,5012,4.316,5013,2.731,5014,2.731,5015,2.731,5016,2.731,5017,2.731,5018,2.731,5019,2.731,5020,2.731,5021,2.731,5022,2.731,5023,4.316,5024,2.731,5025,2.731,5026,2.731,5027,2.731,5028,2.731,5029,2.731,5030,2.731,5031,2.731,5032,2.731,5033,2.731,5034,2.731,5035,2.731,5036,2.731,5037,2.731,5038,2.731,5039,2.731,5040,2.731,5041,4.316,5042,2.731]],["title/dependencies.html",[346,2.273,4845,1.642]],["body/dependencies.html",[14,4.073,15,3.667,26,0.007,152,0.601,153,2.706,154,2.093,233,1.663,274,1.607,340,0.005,341,0.005,342,0.005,346,2.54,379,1.912,545,3.192,653,3.929,655,3.367,689,3.036,694,6.222,695,5.998,709,4.414,1209,5.151,1210,4.861,1256,4.233,1257,4.861,1258,3.797,2088,5.872,2089,5.332,2255,5.513,3141,5.998,3420,4.861,4538,4.233,4846,4.073,4847,4.233,4848,4.414,4849,4.414,4850,4.233,4851,4.414,5043,8.136,5044,6.735,5045,5.998,5046,9.64,5047,5.998,5048,6.735,5049,5.151,5050,6.735,5051,6.735,5052,6.735,5053,6.735,5054,6.735,5055,5.513,5056,6.735,5057,6.735,5058,6.735,5059,6.735,5060,6.735,5061,6.735,5062,6.735,5063,6.735,5064,6.735,5065,6.735]],["title/miscellaneous/functions.html",[5066,3.261,5067,5.367]],["body/miscellaneous/functions.html",[26,0.006,39,0.788,88,1.09,99,1.329,100,1.081,101,0.958,340,0.005,341,0.006,342,0.005,463,4.103,682,6.908,684,5.957,690,5.253,693,6.481,824,6.939,900,5.957,1807,4.992,4342,5.957,4347,6.974,4348,6.974,4349,6.974,4356,6.908,4364,6.481,4365,6.481,4367,6.481,4368,6.481,4369,6.481,5066,5.565,5067,6.481,5068,7.277,5069,9.034]],["title/index.html",[39,0.462,4842,3.078,4843,2.925]],["body/index.html",[0,0.441,2,1.686,3,0.294,4,0.304,6,2.993,13,4.918,14,3.315,15,3.8,16,4.144,26,0.006,71,1.344,72,2.252,77,3.676,78,3.676,83,1.508,97,1.584,100,0.656,101,0.581,120,0.722,154,1.703,251,1.085,274,1.308,340,0.004,341,0.005,342,0.004,346,2.067,358,1.836,370,3.624,379,1.556,444,3.956,461,2.488,477,2.436,491,3.222,508,3.197,539,2.533,545,3.995,549,1.985,558,2.902,560,2.667,624,2.067,625,4.493,643,3.388,651,4.042,657,3.592,709,3.592,722,4.17,753,2.993,809,3.315,846,4.493,855,3.445,877,3.091,883,2.203,959,3.592,1035,4.753,1061,2.598,1146,2.598,1178,3.592,1256,3.445,1258,3.091,1288,2.667,1321,6.901,1778,4.487,1901,3.445,1939,3.76,2159,2.902,2227,3.592,2615,5,2707,5.16,2971,3.76,3420,3.956,3485,4.487,3629,3.76,3646,4.487,3648,3.76,4020,4.487,4168,5.467,4281,5.467,4356,4.192,4357,6.901,4399,4.64,4538,3.445,4842,3.956,4843,3.76,4845,3.246,4846,3.315,4847,3.445,4848,3.592,4849,3.592,4850,3.445,4851,3.592,4853,5.852,5049,4.192,5055,6.512,5070,3.977,5071,4.882,5072,6.367,5073,4.882,5074,6.367,5075,5.525,5076,4.882,5077,4.882,5078,4.882,5079,6.367,5080,4.882,5081,4.882,5082,4.487,5083,4.192,5084,4.882,5085,4.882,5086,6.447,5087,6.367,5088,4.882,5089,4.882,5090,4.882,5091,4.882,5092,5.852,5093,4.882,5094,7.085,5095,4.882,5096,4.335,5097,3.76,5098,6.901,5099,4.882,5100,4.882,5101,4.882,5102,6.237,5103,3.091,5104,4.464,5105,4.882,5106,4.487,5107,4.487,5108,4.882,5109,3.091,5110,4.192,5111,4.882,5112,6.367,5113,4.882,5114,3.091,5115,3.091,5116,4.882,5117,4.882,5118,6.084,5119,2.902,5120,4.487,5121,4.882,5122,5.852,5123,6.265,5124,3.956,5125,4.487,5126,4.882,5127,4.882,5128,4.882,5129,5.999,5130,4.882,5131,4.882,5132,4.487,5133,4.487,5134,4.487,5135,6.367,5136,3.091,5137,6.367,5138,4.882,5139,4.882,5140,4.882,5141,7.085,5142,4.192,5143,4.882,5144,4.882]],["title/modules.html",[345,2.658]],["body/modules.html",[26,0.005,340,0.005,341,0.005,342,0.005,344,4.88,345,2.659,355,3.812,676,4.88,849,4.431,1191,4.638,1197,4.88,1198,4.638,1199,4.431,2089,6.57,2126,4.638,2134,4.638,2135,4.431,2136,4.431,2137,4.089,2138,4.431,2139,4.431,2949,4.638,3070,4.88,3309,4.88,3470,7.236,3700,4.88,4265,4.88,4619,4.88,4782,8.929,5145,10.025]],["title/overview.html",[5146,3.811]],["body/overview.html",[1,2.074,2,0.437,21,1.185,25,0.763,26,0.007,27,3.275,28,4.063,29,4.063,30,4.063,31,4.567,32,1.345,50,2.54,128,1.704,181,0.683,196,0.429,203,1.675,205,1.185,206,1.763,208,1.733,211,1.733,214,1.763,217,1.763,218,1.763,220,1.733,222,1.763,224,1.733,226,1.185,227,1.185,230,1.185,231,1.733,232,1.733,235,1.763,237,1.763,238,1.733,239,1.763,240,1.763,241,1.763,242,1.733,244,1.733,245,1.763,247,1.733,249,1.733,253,1.733,255,1.704,256,1.733,258,1.733,260,1.591,262,1.733,265,1.704,267,1.733,269,1.675,271,1.733,273,2.074,276,1.733,279,1.733,281,1.733,283,1.675,285,1.704,286,1.733,288,1.733,291,1.704,292,1.733,294,1.733,295,1.763,297,1.763,298,1.763,299,1.733,300,1.763,301,1.763,302,1.763,304,2.039,305,1.733,307,1.733,309,1.733,311,1.733,313,1.763,315,1.733,317,1.733,319,1.733,321,1.733,323,0.545,324,1.675,326,1.704,328,1.704,330,1.704,332,1.704,334,1.704,337,1.704,340,0.002,341,0.003,342,0.002,343,0.527,344,4.98,345,0.913,346,0.876,347,0.954,348,0.954,349,0.933,350,2.068,351,2.068,352,2.068,353,2.068,354,2.068,355,5.346,356,1.591,357,0.894,358,0.778,368,1.022,448,1.928,533,2.705,593,3.016,606,2.902,631,1.776,647,2.274,676,6.416,677,2.068,678,2.068,679,2.068,680,2.068,681,2.068,682,3.669,683,2.799,705,1.101,849,5.657,850,2.068,851,2.068,852,2.068,853,4.98,883,0.933,922,1.46,1024,2.799,1026,2.705,1029,1.847,1191,6.655,1192,2.068,1193,2.068,1194,2.068,1195,2.068,1196,2.068,1197,6.931,1198,6.549,1199,5.482,1200,3.291,1201,3.463,1202,2.902,1261,1.676,1263,4.733,1650,2.799,1729,2.799,1930,1.593,2081,2.068,2082,2.068,2084,2.068,2085,2.068,2126,6.578,2127,2.068,2128,2.068,2129,2.068,2130,2.068,2131,2.068,2132,4.98,2133,4.98,2134,6.227,2135,5.789,2136,6.063,2137,5.118,2138,5.41,2139,5.41,2225,3.144,2360,3.291,2388,2.068,2389,2.068,2390,2.068,2391,2.068,2624,2.068,2625,2.068,2626,2.068,2718,2.068,2949,6.479,2950,2.068,2951,2.068,2953,2.068,2954,2.068,3027,2.068,3028,2.068,3029,2.068,3030,2.068,3070,6.037,3071,2.068,3072,2.068,3074,2.068,3075,2.068,3309,4.401,3310,2.068,3311,2.068,3312,2.068,3313,2.068,3700,6.283,3701,2.068,3702,2.068,3704,2.068,3705,2.068,3968,2.068,3969,2.068,3971,2.068,3972,2.068,4095,2.068,4096,2.068,4098,2.068,4099,2.068,4170,2.068,4171,2.068,4265,6.23,4266,2.068,4267,2.068,4268,2.068,4270,2.068,4392,2.068,4393,2.068,4394,2.068,4395,2.068,4396,4.98,4619,4.401,4620,2.068,4621,2.068,4622,2.068,4693,2.068,4695,2.068,4815,2.068,4816,2.068,4818,2.068,4864,2.068,5146,1.309,5147,1.355,5148,2.323,5149,1.901]],["title/miscellaneous/typealiases.html",[5066,3.261,5150,6.027]],["body/miscellaneous/typealiases.html",[26,0.006,39,0.837,67,0.705,340,0.005,341,0.006,342,0.005,369,5.91,374,6.745,581,4.092,5066,5.91,5151,7.728,5152,7.728]],["title/additional-documentation/angular-7-upgrade-guide.html",[16,1.384,661,0.685,922,1.835,3202,0.959,5083,2.233,5153,2.92]],["body/additional-documentation/angular-7-upgrade-guide.html",[2,1.074,3,0.307,10,0.24,16,4.623,26,0.007,42,1.056,71,1.381,77,3.776,78,2.938,83,0.986,97,2.122,150,0.352,164,1.131,181,1.681,340,0.004,341,0.005,342,0.004,343,1.84,361,1.914,372,4.284,383,1.622,412,3.333,477,2.475,495,3.745,508,3.333,539,3.749,571,2.155,575,2.296,585,3.101,624,2.155,639,4.829,640,3.491,657,3.745,722,4.284,755,3.592,809,3.456,876,3.456,902,3.333,922,5.384,932,4.404,1110,4.616,1147,2.88,1148,3.12,1187,5.318,1218,4.678,1231,3.745,1258,3.222,1260,2.938,1323,4.678,1407,5.09,1733,3.92,1774,4.441,1861,4.813,1909,4.734,1937,4.678,2159,3.026,2208,5.09,2384,5.569,2404,4.37,2507,4.125,2508,3.333,2534,5.09,2605,3.333,2992,3.592,3233,4.37,3309,4.125,3432,3.745,3667,4.37,4182,5.09,4842,4.125,4845,2.2,4846,3.456,4850,3.592,5075,3.745,5083,6.206,5102,3.745,5104,3.026,5110,6.206,5120,4.678,5122,6.012,5124,4.125,5129,5.038,5132,4.678,5142,4.37,5154,5.715,5155,7.344,5156,5.715,5157,5.715,5158,5.715,5159,5.715,5160,5.715,5161,5.715,5162,5.715,5163,5.715,5164,5.715,5165,5.715,5166,4.678,5167,5.715,5168,7.344,5169,5.715,5170,5.715,5171,5.715,5172,5.09,5173,5.715,5174,5.09,5175,5.715,5176,5.715,5177,5.715,5178,5.715,5179,5.715,5180,5.715,5181,5.09,5182,5.715,5183,5.715,5184,5.09,5185,5.715,5186,7.344,5187,8.565,5188,7.344,5189,7.344,5190,6.541,5191,5.715,5192,5.715,5193,5.715,5194,5.715,5195,5.715,5196,8.115,5197,5.715,5198,5.715,5199,8.115,5200,8.115,5201,7.344,5202,5.715,5203,5.715,5204,5.715,5205,4.678,5206,5.715,5207,8.115,5208,5.715,5209,7.344,5210,5.715,5211,5.715,5212,5.715,5213,5.715,5214,5.715,5215,5.715,5216,5.715,5217,5.715,5218,5.715,5219,5.715,5220,5.09,5221,5.715]],["title/additional-documentation/project-setup-tutorial.html",[661,0.765,3202,1.072,4399,1.903,5070,1.631,5222,2.355]],["body/additional-documentation/project-setup-tutorial.html",[0,0.383,2,0.979,3,0.28,6,4.236,16,2.469,25,1.712,26,0.007,32,1.112,34,1.617,71,1.3,72,2.14,76,4.264,78,2.678,83,1.484,98,3.76,100,0.623,115,2.678,116,2.006,120,0.686,150,0.36,152,0.465,153,2.093,164,1.368,165,0.288,166,0.227,181,1.533,233,1.286,340,0.003,341,0.005,342,0.003,345,2.049,347,2.14,348,2.14,361,2.315,362,1.813,370,2.971,394,1.428,444,4.99,477,1.998,491,2.348,508,3.039,520,1.453,545,2.469,558,3.66,570,2.904,624,3.531,646,2.534,651,2.348,653,3.039,686,2.937,689,2.348,711,6.557,714,5.287,716,4.264,717,6.32,720,5.6,721,5.659,722,4.526,845,6.91,846,4.877,902,3.039,903,2.678,921,3.984,922,3.274,959,3.414,1028,1.886,1035,3.898,1061,2.469,1067,2.678,1106,3.574,1110,3.274,1146,3.276,1148,2.844,1159,2.937,1191,5.67,1204,4.639,1239,4.99,1312,3.15,1375,2.534,1655,2.469,1722,2.604,1733,3.574,1772,5.659,1879,3.414,1910,3.414,1938,4.639,2011,3.984,2087,3.984,2088,4.99,2089,4.531,2159,3.66,2246,4.264,2317,4.264,2384,4.345,2508,3.039,2610,3.76,2615,3.274,2708,4.639,2716,4.264,2852,3.984,2978,3.76,2990,3.984,2992,4.345,3320,6.157,3419,4.742,3432,3.414,3503,4.639,3512,3.414,3523,3.984,3596,5.659,3648,3.574,3911,4.639,4169,4.264,4399,3.039,4402,5.659,4845,2.662,4846,4.692,4847,3.274,5045,4.639,5047,6.157,5070,4.579,5075,3.414,5082,4.264,5086,5.287,5096,2.678,5098,6.765,5102,5.085,5103,4.66,5104,3.66,5106,4.264,5110,5.287,5118,5.287,5119,2.758,5123,5.67,5124,3.76,5125,4.264,5129,3.574,5133,6.351,5134,6.351,5142,3.984,5166,4.264,5174,4.639,5190,4.639,5222,5.6,5223,5.209,5224,5.209,5225,4.639,5226,5.209,5227,6.913,5228,6.913,5229,9.439,5230,5.209,5231,5.209,5232,5.209,5233,5.209,5234,5.209,5235,5.209,5236,4.639,5237,5.209,5238,5.209,5239,5.209,5240,5.209,5241,5.209,5242,5.209,5243,5.209,5244,5.209,5245,5.209,5246,5.209,5247,6.157,5248,5.209,5249,6.913,5250,5.209,5251,5.209,5252,5.209,5253,5.209,5254,5.209,5255,5.209,5256,5.209,5257,4.032,5258,5.209,5259,6.913,5260,5.209,5261,3.984,5262,5.209,5263,5.209,5264,5.209,5265,5.209,5266,5.209,5267,5.209,5268,5.209,5269,5.209,5270,5.209]],["title/additional-documentation/project-setup-tutorial/routes.html",[636,2.925,661,1,3202,1.401]],["body/additional-documentation/project-setup-tutorial/routes.html",[0,0.514,2,1.346,5,1.491,26,0.007,83,1.455,150,0.278,164,1.417,181,2.106,340,0.005,341,0.006,342,0.005,372,4.921,490,3.392,534,5.425,571,3.182,624,2.699,636,6.356,902,4.175,903,3.68,1014,4.036,2384,4.499,2508,4.175,2555,4.691,2615,5.639,2881,5.859,3512,4.691,5097,4.91,5102,4.691,5123,4.91,5222,5.166,5271,7.158,5272,7.158,5273,7.158,5274,5.859,5275,7.158,5276,7.158,5277,7.158,5278,7.158,5279,7.514,5280,7.158,5281,7.158,5282,6.375,5283,7.158]],["title/additional-documentation/project-setup-tutorial/authorization.html",[661,1,3202,1.401,5261,3.261]],["body/additional-documentation/project-setup-tutorial/authorization.html",[0,0.404,5,1.776,26,0.006,77,3.747,78,3.747,83,1.257,181,2.144,269,1.769,272,2.232,340,0.005,341,0.006,342,0.005,453,3.207,477,2.106,490,3.454,520,2.033,534,5.466,571,3.215,624,3.215,636,4.999,644,6.979,902,4.251,903,3.747,1017,5.588,1146,3.454,1655,3.454,2159,3.859,3152,5.965,4399,4.251,5070,3.643,5096,3.747,5222,6.524,5261,6.521,5274,5.965,5284,6.49,5285,6.49,5286,6.49,5287,6.49,5288,6.49]],["title/additional-documentation/project-setup-tutorial/localization.html",[661,1,3202,1.401,4398,3.261]],["body/additional-documentation/project-setup-tutorial/localization.html",[0,0.466,4,0.394,5,1.479,26,0.006,37,1.724,120,0.935,150,0.275,165,0.264,166,0.31,340,0.005,341,0.006,342,0.005,385,4.003,412,4.141,433,4.463,477,2.052,491,3.2,500,4.653,643,3.365,662,2.571,747,2.677,876,4.294,911,4.87,1028,3.04,1029,3.233,1146,3.365,1260,3.651,1960,4.653,2073,5.124,2159,3.759,2354,5.124,2384,4.463,2527,4.653,2992,4.463,3011,5.812,3659,5.43,3844,5.812,4398,6.838,4399,4.141,4400,6.453,4401,5.812,4402,5.812,4403,6.901,4404,6.323,4405,6.323,4406,6.323,4407,6.323,4408,6.323,4409,6.323,4410,6.323,4411,6.323,4412,6.323,4413,6.323,4414,6.873,4415,5.124]],["title/additional-documentation/project-setup-tutorial/custom-fields-config.html",[383,0.926,386,1.34,661,0.765,1147,1.158,3202,1.072]],["body/additional-documentation/project-setup-tutorial/custom-fields-config.html",[0,0.336,26,0.007,32,0.975,34,1.14,40,0.949,45,1.625,48,2.516,51,3.852,52,1.722,67,0.553,71,1.14,72,2.491,83,1.046,100,0.998,116,2.335,120,1.005,130,2.803,165,0.225,166,0.265,186,1.673,215,1.293,228,1.221,340,0.004,341,0.005,342,0.004,378,2.874,383,2.369,384,3.97,386,2.491,394,1.662,484,2.385,510,1.85,520,2.127,549,2.762,555,3.118,581,3.211,626,6.022,662,2.196,686,4.3,770,4.038,899,3.812,957,4.794,984,6.243,994,3.812,1014,3.42,1025,3.812,1026,4.3,1061,3.615,1066,4.161,1103,3.118,1147,2.153,1155,4.704,1166,4.638,1169,3.118,1176,3.668,1256,3.812,1266,3.975,1298,4.965,1303,4.965,1324,3.118,1375,2.951,1655,2.874,1740,3.538,1752,3.975,1846,4.794,1848,4.965,1867,3.812,1879,5.468,1930,4.161,1933,4.378,2007,3.812,2299,5.402,2555,3.975,2614,4.378,2776,5.402,2782,4.965,3344,5.833,3482,3.311,3512,3.975,3544,5.402,3667,4.638,4389,5.402,5102,3.975,5279,5.402,5289,6.065,5290,6.065,5291,6.065,5292,4.965,5293,6.065,5294,6.065,5295,6.065,5296,6.065,5297,6.065,5298,6.065,5299,5.402,5300,5.402,5301,6.065,5302,6.065,5303,7.627,5304,6.065,5305,6.065,5306,6.065,5307,6.065]],["title/additional-documentation/project-setup-tutorial/custom-entry-list.html",[215,0.553,228,0.657,661,0.765,1147,1.158,3202,1.072]],["body/additional-documentation/project-setup-tutorial/custom-entry-list.html",[0,0.442,2,0.894,5,0.99,20,1.87,26,0.007,33,1.025,34,1.222,40,1.037,42,0.879,45,1.389,48,2.221,51,3.504,52,2.444,53,1.171,67,0.676,69,0.603,71,1.393,87,1.116,97,2.141,116,2.503,120,1.134,130,1.478,165,0.177,166,0.208,181,1.399,186,1.63,215,1.414,228,1.491,285,1.606,340,0.004,341,0.004,342,0.003,358,1.592,370,2.044,378,2.254,383,2.638,384,2.093,386,3.62,394,1.303,434,2.445,435,4.972,438,3.117,467,3.55,472,2.774,477,2.301,490,2.254,491,2.144,510,2.688,520,2.066,537,4.095,541,2.093,549,2.354,565,2.254,570,2.731,571,1.793,575,3.351,576,3.893,599,2.774,611,3.666,626,4.693,639,2.681,640,1.831,642,2.989,643,3.774,646,2.314,651,2.144,686,2.681,751,2.093,770,3.922,887,2.445,905,3.117,922,4.087,953,2.314,957,2.989,992,4.235,1022,4.087,1026,2.681,1043,2.518,1060,3.081,1061,3.081,1066,4.46,1145,3.637,1147,3.267,1150,2.518,1155,2.681,1167,3.893,1171,4.235,1172,2.876,1179,3.932,1182,4.46,1187,3.117,1264,3.666,1266,5.219,1298,6.064,1307,6.064,1312,2.876,1324,3.343,1375,4.427,1596,3.262,1655,3.511,1667,2.774,1684,3.637,1726,2.314,1740,2.774,1796,3.433,1840,6.09,1841,5.322,1844,4.46,1860,5.665,1861,4.261,1862,3.433,1867,4.087,1879,3.117,1901,2.989,1909,4.864,1910,4.261,1912,3.893,1917,4.235,1919,3.117,1933,3.433,1988,3.637,2073,3.433,2316,4.972,2384,2.989,2487,3.893,2508,3.792,2552,6.018,2555,3.117,2614,3.433,2615,2.989,2665,2.876,2774,3.893,2782,5.322,2879,3.893,3000,3.117,3050,4.235,3421,5.665,3470,3.433,3482,2.596,3486,3.637,3512,3.117,3648,3.262,3767,4.235,3781,4.235,3885,5.322,3887,4.045,4468,4.235,4549,3.637,5247,4.235,5282,7.092,5292,7.047,5299,7.667,5308,4.756,5309,4.756,5310,4.756,5311,4.756,5312,6.502,5313,4.756,5314,4.756,5315,4.235,5316,4.756,5317,4.756,5318,4.756,5319,4.756,5320,6.502,5321,8.972,5322,6.502,5323,4.756,5324,4.756,5325,4.756,5326,4.756,5327,4.756,5328,4.756,5329,4.756,5330,7.408,5331,4.235,5332,4.756,5333,4.756,5334,4.756,5335,4.756,5336,4.972,5337,6.502,5338,4.756,5339,4.756,5340,4.756,5341,4.756,5342,4.756,5343,4.756,5344,4.756,5345,4.756,5346,4.756,5347,4.756,5348,4.756,5349,4.756,5350,4.756]],["title/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[228,0.657,661,0.765,1147,1.158,1867,2.051,3202,1.072]],["body/additional-documentation/project-setup-tutorial/custom-entry-forms.html",[0,0.51,2,1.099,5,1.642,16,1.936,17,0.992,18,4.956,20,2.299,22,1.797,25,1.342,26,0.007,27,2.572,28,3.191,29,2.23,30,3.191,31,2.23,32,0.657,33,1.471,34,1.754,35,3.831,37,1.657,40,0.727,41,2.303,42,1.771,43,4.291,45,1.439,47,2.042,48,2.409,52,1.16,58,2.568,61,3.535,64,1.547,65,3.124,67,0.623,71,0.768,72,1.678,74,3.124,77,3.51,78,4.054,83,1.008,85,2.802,87,0.958,94,2.568,97,1.689,100,0.489,102,2.568,112,2.568,115,2.1,116,2.251,120,0.981,128,2.133,130,2.88,137,1.422,138,3.296,150,0.335,152,0.609,153,2.349,154,2.121,162,4.785,163,3.124,165,0.254,166,0.298,179,3.831,181,1.202,191,2.303,192,3.674,228,1.587,233,1.444,314,1.026,340,0.003,341,0.004,342,0.003,343,0.926,358,1.368,360,3.296,362,1.422,371,1.987,373,2.456,378,1.936,383,2.563,384,3.279,386,3.239,412,2.383,431,2.948,442,3.638,445,4.47,460,2.47,472,2.383,477,2.496,484,1.607,500,3.831,510,2.082,541,2.572,549,2.472,558,3.095,562,3.124,570,1.716,571,3.093,575,2.743,584,2.802,585,2.117,624,3.093,626,4.219,640,1.573,642,3.674,643,2.77,646,2.844,651,1.841,660,3.831,686,2.303,722,3.982,755,2.568,809,2.47,892,3.344,902,2.383,903,2.1,932,3.006,953,1.987,957,2.568,1007,4.01,1010,3.124,1025,2.568,1026,2.303,1049,4.219,1106,5.112,1140,3.124,1144,2.802,1147,3.377,1150,2.163,1154,2.677,1155,3.849,1158,4.47,1159,3.296,1169,3.006,1187,3.831,1215,2.568,1268,3.124,1308,4.346,1480,2.802,1576,5.206,1596,4.683,1598,3.638,1655,1.936,1667,2.383,1676,2.802,1740,2.383,1758,3.638,1771,4.219,1862,2.948,1867,4.684,1873,2.948,1889,2.383,1894,4.47,1930,2.802,1933,4.219,1934,5.206,2123,5.22,2124,3.124,2170,3.831,2198,4.47,2220,3.638,2263,3.124,2354,2.948,2508,4.926,2524,3.124,2527,3.831,2552,4.219,2555,3.831,2562,3.638,2563,3.344,2604,3.638,2605,3.41,2614,4.219,2615,2.568,2637,3.638,2784,3.344,2968,3.124,3383,5.588,3421,6.273,3432,2.677,3470,2.948,3482,2.23,3486,3.124,3505,3.344,3512,2.677,3519,3.344,3523,4.47,3580,3.638,3628,3.638,3629,2.802,3666,4.01,3667,3.124,3711,3.124,3732,3.344,3756,3.638,3854,5.206,3860,3.638,3887,3.727,4066,6.08,4168,3.124,4414,3.344,4474,3.638,4547,3.638,4549,4.47,4556,3.638,4860,3.638,5097,2.802,5123,2.802,5124,2.948,5220,3.638,5225,3.638,5257,2.383,5292,3.344,5300,5.206,5315,3.638,5351,3.638,5352,4.085,5353,4.085,5354,4.085,5355,4.085,5356,4.085,5357,3.638,5358,4.085,5359,4.085,5360,4.085,5361,5.846,5362,4.085,5363,4.085,5364,5.846,5365,5.846,5366,4.085,5367,4.085,5368,4.085,5369,3.124,5370,4.085,5371,5.846,5372,4.085,5373,4.085,5374,4.085,5375,4.085,5376,4.085,5377,4.085,5378,4.085,5379,4.085,5380,4.085,5381,5.846,5382,4.085,5383,4.085,5384,8.202,5385,4.085,5386,5.846,5387,4.085,5388,4.085,5389,4.085,5390,4.085,5391,4.085,5392,5.846,5393,4.085,5394,4.085,5395,4.085,5396,4.085,5397,4.085,5398,4.085,5399,4.085,5400,4.085,5401,5.846,5402,4.085,5403,4.085,5404,4.085,5405,4.085,5406,4.085,5407,4.085,5408,4.085,5409,4.085,5410,4.085,5411,4.085,5412,4.085,5413,4.085,5414,4.085,5415,4.085]],["title/additional-documentation/readme.html",[461,1.484,661,1,3202,1.401]],["body/additional-documentation/readme.html",[0,0.441,2,1.686,3,0.294,4,0.304,6,2.993,13,4.918,14,3.315,15,3.8,16,4.144,26,0.006,71,1.344,72,2.252,77,3.676,78,3.676,83,1.508,97,1.584,100,0.656,101,0.581,120,0.722,154,1.703,251,1.085,274,1.308,340,0.004,341,0.005,342,0.004,346,2.067,358,1.836,370,3.624,379,1.556,444,3.956,461,2.488,477,2.436,491,3.222,508,3.197,539,2.533,545,3.995,549,1.985,558,2.902,560,2.667,624,2.067,625,4.493,643,3.388,651,4.042,657,3.592,709,3.592,722,4.17,753,2.993,809,3.315,846,4.493,855,3.445,877,3.091,883,2.203,959,3.592,1035,4.753,1061,2.598,1146,2.598,1178,3.592,1256,3.445,1258,3.091,1288,2.667,1321,6.901,1778,4.487,1901,3.445,1939,3.76,2159,2.902,2227,3.592,2615,5,2707,5.16,2971,3.76,3420,3.956,3485,4.487,3629,3.76,3646,4.487,3648,3.76,4020,4.487,4168,5.467,4281,5.467,4356,4.192,4357,6.901,4399,4.64,4538,3.445,4842,3.956,4843,3.76,4845,3.246,4846,3.315,4847,3.445,4848,3.592,4849,3.592,4850,3.445,4851,3.592,4853,5.852,5049,4.192,5055,6.512,5070,3.977,5071,4.882,5072,6.367,5073,4.882,5074,6.367,5075,5.525,5076,4.882,5077,4.882,5078,4.882,5079,6.367,5080,4.882,5081,4.882,5082,4.487,5083,4.192,5084,4.882,5085,4.882,5086,6.447,5087,6.367,5088,4.882,5089,4.882,5090,4.882,5091,4.882,5092,5.852,5093,4.882,5094,7.085,5095,4.882,5096,4.335,5097,3.76,5098,6.901,5099,4.882,5100,4.882,5101,4.882,5102,6.237,5103,3.091,5104,4.464,5105,4.882,5106,4.487,5107,4.487,5108,4.882,5109,3.091,5110,4.192,5111,4.882,5112,6.367,5113,4.882,5114,3.091,5115,3.091,5116,4.882,5117,4.882,5118,6.084,5119,2.902,5120,4.487,5121,4.882,5122,5.852,5123,6.265,5124,3.956,5125,4.487,5126,4.882,5127,4.882,5128,4.882,5129,5.999,5130,4.882,5131,4.882,5132,4.487,5133,4.487,5134,4.487,5135,6.367,5136,3.091,5137,6.367,5138,4.882,5139,4.882,5140,4.882,5141,7.085,5142,4.192,5143,4.882,5144,4.882]],["title/additional-documentation/readme/data-readme.html",[370,1.589,461,1.287,661,0.867,3202,1.215]],["body/additional-documentation/readme/data-readme.html",[2,1.594,8,1.877,20,2.838,26,0.007,71,1.357,150,0.28,165,0.268,166,0.315,181,2.123,340,0.005,341,0.006,342,0.005,343,2.041,361,2.417,362,2.512,545,3.42,571,2.722,624,2.722,651,3.253,661,1.693,686,4.069,846,4.536,883,3.407,1191,5.816,1865,5.908,1901,4.536,3780,5.209,4844,2.965,4845,3.264,4846,5.444,5103,4.78,5104,3.821,5146,4.78,5257,4.21,5336,5.519,5369,5.519,5416,5.908,5417,5.908,5418,6.94,5419,7.217,5420,7.217,5421,4.364,5422,4.73]],["title/additional-documentation/readme/ui-readme.html",[461,1.287,661,0.867,1035,2.084,3202,1.215]],["body/additional-documentation/readme/ui-readme.html",[2,1.366,8,1.89,16,3.444,26,0.007,150,0.282,154,2.805,165,0.27,166,0.317,181,2.138,340,0.005,341,0.006,342,0.005,343,1.93,355,4.8,361,2.433,362,2.529,379,2.063,624,2.741,651,3.276,661,1.705,883,2.92,3515,6.472,3711,5.558,3780,5.245,4680,5.949,4844,2.985,4845,3.476,5103,4.8,5104,3.848,5146,4.8,5257,4.239,5336,5.558,5369,5.558,5416,5.949,5417,5.949,5418,6.968,5421,4.395,5422,4.763,5423,6.472,5424,7.267]],["title/additional-documentation/readme/core-readme.html",[461,1.287,545,1.752,661,0.867,3202,1.215]],["body/additional-documentation/readme/core-readme.html",[16,3.532,26,0.006,52,2.116,83,1.286,164,1.475,340,0.005,341,0.006,342,0.005,379,2.452,545,3.532,651,3.894,809,4.507,883,3.472,959,4.884,2647,5.7,3711,5.7,4844,3.062,4845,2.87,5104,3.946,5146,4.202,5336,5.7,5369,5.7,5416,6.101,5417,6.101,5418,6.101,5421,4.507,5423,6.638,5425,7.453,5426,7.453,5427,7.453,5428,7.453,5429,7.453]],["title/additional-documentation/readme/style-readme.html",[461,1.287,661,0.867,3202,1.215,3419,2.536]],["body/additional-documentation/readme/style-readme.html",[6,5.28,26,0.006,150,0.359,181,2.106,340,0.005,341,0.006,342,0.005,383,2.395,461,2.491,477,2.438,491,3.226,570,3.544,624,3.383,639,4.036,651,3.226,824,5.166,903,3.68,1147,2.541,1169,3.68,2159,3.79,2369,5.474,2552,6.09,3420,6.687,4399,4.175,4844,2.94,4845,3.249,4847,5.303,5075,4.691,5103,5.058,5104,3.79,5129,4.91,5146,4.036,5181,8.252,5236,6.375,5421,4.329,5430,7.158,5431,8.437,5432,7.158,5433,7.158,5434,7.158,5435,7.158]],["title/additional-documentation/readme/calendar-readme.html",[461,1.287,661,0.867,855,2.324,3202,1.215]],["body/additional-documentation/readme/calendar-readme.html",[2,1.389,26,0.007,150,0.287,165,0.275,166,0.323,181,2.174,340,0.005,341,0.006,342,0.005,343,1.949,361,2.475,362,2.572,477,2.136,624,2.787,661,1.734,849,5.634,855,4.645,876,4.469,903,3.8,1046,4.311,1258,5.126,1533,6.049,2159,3.913,4844,3.036,4845,3.31,5103,4.847,5104,3.913,5146,4.847,5257,4.311,5421,4.469,5422,4.843]],["title/additional-documentation/readme/location-readme.html",[263,0.897,461,1.287,661,0.867,3202,1.215]],["body/additional-documentation/readme/location-readme.html",[13,4.233,16,3.439,26,0.007,42,1.572,120,0.956,150,0.281,165,0.27,166,0.317,181,2.135,263,1.762,265,1.792,340,0.005,341,0.006,342,0.005,343,1.929,361,2.43,362,2.526,386,2.981,477,2.097,624,2.737,661,1.703,662,2.628,903,3.731,1178,4.756,1202,4.389,1867,4.561,1916,6.463,1996,5.238,2227,4.756,3070,6.139,4844,2.981,4845,3.275,4849,5.913,5103,4.796,5104,3.842,5146,4.796,5257,4.233,5421,4.389,5422,4.756,5436,7.257]],["title/additional-documentation/readme/ace-readme.html",[14,2.235,461,1.287,661,0.867,3202,1.215]],["body/additional-documentation/readme/ace-readme.html",[0,0.398,13,4.187,14,5.432,15,3.235,16,3.402,26,0.007,76,5.875,150,0.36,155,6.393,165,0.267,166,0.313,181,2.112,340,0.005,341,0.006,342,0.005,343,1.916,344,6.1,361,2.403,362,2.498,477,2.442,624,3.387,661,1.684,903,3.691,1187,4.704,2369,5.489,2404,5.489,2552,5.181,3432,4.704,4549,5.489,4844,2.948,4845,3.254,4848,5.886,5049,5.489,5103,4.765,5104,3.8,5146,4.765,5257,4.187,5421,4.341,5422,4.704,5437,8.451,5438,7.178,5439,7.178,5440,7.178]],["title/additional-documentation/readme/medium-editor-readme.html",[15,1.471,274,0.779,461,1.135,661,0.765,3202,1.072]],["body/additional-documentation/readme/medium-editor-readme.html",[13,4.299,15,4.215,16,3.492,26,0.007,150,0.286,165,0.274,166,0.322,181,2.168,198,1.509,274,1.759,340,0.005,341,0.006,342,0.005,343,1.946,361,2.468,362,2.565,477,2.13,624,2.779,661,1.729,903,3.789,4844,3.027,4845,3.305,4850,5.708,5103,4.839,5104,3.902,5146,4.839,5184,7.644,5257,4.299,5421,4.456,5422,4.83]],["title/additional-documentation/readme/tinymce-readme.html",[461,1.287,661,0.867,3202,1.215,4538,2.324]],["body/additional-documentation/readme/tinymce-readme.html",[0,0.405,6,4.663,13,4.263,15,3.294,16,3.463,26,0.007,150,0.283,165,0.272,166,0.319,181,2.15,340,0.005,341,0.006,342,0.005,343,1.936,361,2.447,362,2.543,477,2.112,508,4.263,624,3.221,661,1.714,903,3.757,3432,4.789,4538,4.593,4619,6.164,4844,3.002,4845,3.288,4851,5.93,5103,4.815,5104,3.869,5146,4.815,5205,5.982,5257,4.263,5421,4.419,5422,4.789,5441,7.308,5442,7.308]],["title/additional-documentation/changelog.html",[661,1,3202,1.401,4844,1.752]],["body/additional-documentation/changelog.html",[15,3.453,26,0.006,97,2.214,154,2.38,340,0.005,341,0.006,342,0.005,379,2.175,1258,4.319,1726,3.727,3677,4.182,4844,3.147,4845,2.949,4846,4.632,4847,4.815,4848,5.02,4849,5.02,4850,4.815,4851,5.02]],["title/additional-documentation/changelog/data-changelog.html",[370,1.589,661,0.867,3202,1.215,4844,1.518]],["body/additional-documentation/changelog/data-changelog.html",[0,0.207,2,0.701,5,0.777,10,0.157,15,2.467,26,0.006,32,0.88,34,1.029,39,0.404,42,1.198,45,0.621,48,1.527,50,2.898,51,2.853,52,1.554,62,3.433,83,0.643,97,1.078,107,3.054,116,2.107,120,0.721,130,1.701,186,0.678,209,0.954,212,1.91,215,1.502,228,1.784,251,1.843,293,2.001,314,0.937,322,0.89,340,0.003,341,0.004,342,0.003,349,1.499,361,1.249,370,1.603,372,2.176,378,1.768,383,2.57,434,2.814,446,2.723,467,2.037,491,2.922,503,2.559,508,2.176,510,1.138,520,1.808,522,2.559,537,3.672,539,1.723,549,1.351,560,1.815,565,1.768,567,2.176,570,1.567,571,2.064,584,3.755,585,1.351,599,3.193,611,2.103,624,2.064,625,2.345,630,2.256,637,2.256,640,2.107,657,2.445,661,0.875,697,2.853,717,4.186,747,1.407,755,2.345,892,3.054,905,2.445,912,1.436,915,4.249,932,1.918,958,1.723,1018,3.054,1026,2.103,1031,3.193,1060,3.767,1106,2.559,1127,2.692,1131,3.322,1142,3.95,1147,1.943,1151,4.186,1156,2.692,1158,2.853,1159,2.103,1169,1.918,1172,2.256,1176,2.256,1179,2.256,1215,2.345,1252,3.322,1264,2.103,1288,1.815,1291,2.692,1324,2.814,1412,2.256,1439,2.853,1565,3.322,1570,3.322,1574,2.692,1651,4.984,1655,2.594,1667,3.193,1716,3.95,1722,1.865,1740,2.176,1743,2.256,1751,2.256,1771,2.692,1806,2.445,1842,2.853,1861,2.445,1867,2.345,1905,2.345,1995,2.853,2048,3.95,2060,2.103,2102,3.054,2412,3.322,2505,2.853,2507,3.95,2508,4.792,2527,3.587,2550,3.95,2663,3.054,2764,2.692,2769,2.853,2770,3.054,2978,2.692,3222,2.853,3418,2.853,3441,5.307,3482,2.037,3666,5.217,3677,2.037,3732,3.054,3773,4.637,3887,5.111,4134,4.48,4181,3.322,4208,3.322,4210,4.875,4680,3.054,4843,2.559,4845,3.604,4846,5.661,5070,1.865,5096,1.918,5109,2.103,5114,2.103,5115,2.103,5119,4.957,5136,2.103,5147,4.166,5149,3.054,5331,3.322,5351,3.322,5357,3.322,5443,2.256,5444,2.256,5445,3.31,5446,2.256,5447,3.73,5448,5.969,5449,5.816,5450,3.73,5451,5.661,5452,3.73,5453,5.712,5454,3.73,5455,5.42,5456,4.968,5457,3.73,5458,3.73,5459,5.789,5460,5.754,5461,3.322,5462,5.473,5463,4.875,5464,4.875,5465,2.256,5466,2.256,5467,4.875,5468,3.73,5469,3.73,5470,3.054,5471,3.73,5472,3.73,5473,3.054,5474,3.054,5475,2.853,5476,3.73,5477,3.73,5478,3.73,5479,3.73,5480,3.054,5481,3.73,5482,3.73,5483,4.48,5484,3.73,5485,3.73,5486,3.322,5487,3.73,5488,3.73,5489,3.73,5490,3.73,5491,3.73,5492,3.322,5493,3.054,5494,3.322,5495,3.322,5496,3.73,5497,4.48,5498,3.73,5499,3.73,5500,3.73,5501,3.73,5502,5.599,5503,3.73,5504,3.054,5505,3.054,5506,3.73,5507,4.599,5508,3.73,5509,3.73,5510,3.73,5511,3.73,5512,3.73,5513,3.73,5514,3.73,5515,3.054,5516,3.73,5517,3.73,5518,3.322,5519,3.322,5520,3.322,5521,3.73,5522,3.73,5523,3.73,5524,3.73,5525,3.73,5526,3.73,5527,3.73,5528,3.73,5529,3.73,5530,3.73,5531,3.73,5532,3.73,5533,3.73,5534,3.054,5535,3.73,5536,5.473,5537,3.73,5538,3.73,5539,3.73,5540,3.73,5541,3.73,5542,3.73,5543,3.73,5544,3.73,5545,3.73,5546,4.599,5547,3.73,5548,3.73,5549,3.73,5550,3.73,5551,3.322,5552,3.322,5553,3.73,5554,3.322,5555,3.73,5556,3.73,5557,3.73,5558,3.73,5559,3.73,5560,3.73,5561,3.73,5562,3.73,5563,3.322,5564,3.73,5565,3.322,5566,3.73,5567,3.73,5568,3.73,5569,3.73,5570,3.73,5571,3.73,5572,3.73,5573,3.73,5574,3.322,5575,3.322,5576,3.322,5577,3.73,5578,3.73,5579,3.73,5580,3.73,5581,3.73,5582,3.73,5583,3.322,5584,3.322,5585,3.322,5586,3.73,5587,3.73,5588,3.054,5589,3.73,5590,3.73,5591,3.322,5592,3.322,5593,3.73,5594,3.73,5595,3.73,5596,3.322,5597,3.322,5598,3.73,5599,3.73,5600,3.73,5601,3.73,5602,3.73,5603,3.73,5604,3.73,5605,3.73,5606,3.322,5607,3.322,5608,3.054,5609,3.054,5610,3.322,5611,3.322,5612,3.322,5613,3.73,5614,3.73,5615,3.322]],["title/additional-documentation/changelog/ui-changelog.html",[661,0.867,1035,2.084,3202,1.215,4844,1.518]],["body/additional-documentation/changelog/ui-changelog.html",[0,0.395,5,0.919,10,0.185,15,2.782,26,0.006,32,1.145,34,1.161,42,1.628,44,2.773,46,0.873,47,3.086,48,2.151,51,2.716,54,2.336,62,3.268,64,1.167,77,2.268,83,1.065,97,1.275,100,0.528,107,3.611,120,0.813,130,1.918,138,2.487,144,2.487,150,0.239,154,2.817,165,0.164,212,1.84,215,1.537,228,1.243,233,1.089,251,1.709,293,0.967,340,0.003,341,0.004,342,0.003,349,1.773,361,1.477,378,2.091,383,2.189,394,1.209,434,2.268,520,1.722,537,4.173,549,1.597,558,2.336,571,1.664,584,4.234,585,1.597,624,2.328,630,2.668,640,2.377,655,2.205,751,1.941,755,3.88,912,1.699,915,4.666,932,2.268,958,2.038,1035,2.487,1060,3.655,1127,3.184,1142,4.455,1151,3.374,1156,5.139,1172,2.668,1176,2.668,1215,3.88,1231,2.891,1264,2.487,1273,3.184,1288,2.146,1324,4.325,1412,2.668,1543,3.374,1596,3.026,1651,5.054,1655,3.374,1657,3.026,1716,4.455,1743,2.668,1751,3.733,1806,2.891,1839,3.374,1842,3.374,1844,4.234,1860,3.374,1960,2.891,2048,3.184,2060,2.487,2102,3.611,2487,3.611,2508,4.153,2520,3.611,2605,3.6,2663,3.611,2764,3.184,2767,3.374,2769,3.374,2770,3.611,2978,3.184,3000,2.891,3222,3.374,3237,3.929,3418,3.374,3441,3.611,3482,3.37,3538,3.929,3666,5.77,3677,2.409,3773,4.498,3780,3.184,3887,4.951,4400,3.184,4415,3.184,4473,3.611,4843,3.026,4845,3.529,5070,2.205,5096,2.268,5109,2.487,5114,2.487,5115,2.487,5119,4.801,5136,2.487,5147,4.498,5149,3.611,5443,2.668,5444,2.668,5445,2.668,5446,2.668,5448,5.949,5449,3.374,5451,5.484,5453,5.762,5455,5.484,5456,5.086,5459,5.785,5460,5.762,5461,3.929,5465,2.668,5466,2.668,5467,5.497,5473,3.611,5474,3.611,5475,3.374,5480,3.611,5483,3.611,5492,3.929,5493,5.053,5494,3.929,5495,3.929,5497,3.611,5502,5.221,5504,5.053,5505,3.611,5507,4.306,5515,3.611,5534,3.611,5546,4.908,5551,3.929,5552,3.929,5554,3.929,5565,3.929,5574,3.929,5575,3.929,5576,3.929,5583,3.929,5584,3.929,5585,3.929,5588,3.611,5591,3.929,5592,3.929,5596,3.929,5597,3.929,5606,3.929,5607,3.929,5608,3.611,5609,3.611,5612,3.929,5615,3.929,5616,4.412,5617,4.412,5618,4.412,5619,4.412,5620,4.412,5621,4.412,5622,4.412,5623,4.412,5624,6.173,5625,6.173,5626,6.173,5627,6.173,5628,4.412,5629,4.412,5630,4.412,5631,4.412,5632,4.412,5633,4.412,5634,4.412,5635,4.412,5636,4.412,5637,4.412,5638,4.412,5639,4.412,5640,4.412,5641,3.929,5642,3.929,5643,3.929,5644,4.412,5645,4.412,5646,3.929,5647,3.929,5648,3.929,5649,3.929,5650,3.929,5651,3.929,5652,3.929,5653,4.412,5654,4.412,5655,4.412,5656,4.412,5657,4.412,5658,4.412,5659,4.412,5660,4.412,5661,4.412,5662,4.412,5663,4.412,5664,3.611,5665,4.412,5666,4.412,5667,4.412,5668,4.412,5669,4.412,5670,4.412,5671,4.412,5672,4.412,5673,4.412,5674,4.412,5675,4.412,5676,4.412,5677,4.412,5678,4.412,5679,4.412,5680,4.412,5681,4.412,5682,4.412,5683,4.412,5684,4.412,5685,4.412,5686,4.412,5687,4.412,5688,4.412,5689,4.412,5690,4.412,5691,4.412,5692,4.412,5693,3.929,5694,4.412,5695,3.929,5696,4.412,5697,4.412,5698,4.412]],["title/additional-documentation/changelog/core-changelog.html",[545,1.752,661,0.867,3202,1.215,4844,1.518]],["body/additional-documentation/changelog/core-changelog.html",[10,0.252,26,0.006,34,1.129,45,1,97,2.19,130,1.865,186,1.09,215,1.285,251,1.188,340,0.004,341,0.005,342,0.004,378,3.591,379,2.723,491,2.706,537,3.086,549,2.173,558,3.178,560,2.92,565,2.845,567,3.501,585,2.173,915,3.934,958,2.773,1127,4.332,1264,3.384,1324,3.896,1412,3.63,1423,4.332,1751,3.63,1905,3.773,2505,4.59,2550,4.332,2605,3.501,2687,5.346,2764,5.469,2767,4.59,2978,5.469,3424,5.346,3666,6.17,3677,3.277,3773,3.501,3887,5.236,4845,3.693,5070,3.001,5096,3.086,5109,3.384,5114,3.384,5115,3.384,5119,5.078,5136,3.384,5147,4.844,5443,3.63,5444,3.63,5445,3.63,5446,3.63,5448,5.963,5449,4.59,5451,5.8,5453,5.757,5455,5.274,5456,5.022,5459,5.022,5460,5.022,5465,3.63,5466,3.63,5475,4.59,5480,4.913,5483,4.913,5502,5.439,5504,4.913,5505,4.913,5507,5.022,5515,4.913,5546,5.274,5563,5.346,5588,4.913,5608,4.913,5609,4.913,5610,5.346,5611,5.346,5641,5.346,5642,5.346,5643,5.346,5664,4.913,5695,5.346,5699,6.003,5700,6.003,5701,6.003,5702,6.003,5703,6.003,5704,6.003,5705,5.346,5706,5.346,5707,6.003,5708,6.003,5709,6.003,5710,6.003,5711,6.003,5712,6.003,5713,6.003,5714,6.003,5715,6.003,5716,6.003,5717,6.003,5718,6.003,5719,6.003]],["title/additional-documentation/changelog/style-changelog.html",[661,0.867,3202,1.215,3419,2.536,4844,1.518]],["body/additional-documentation/changelog/style-changelog.html",[10,0.265,26,0.006,34,1.468,42,1.164,62,3.335,97,1.82,101,0.668,130,1.957,215,1.068,251,1.68,293,1.711,340,0.004,341,0.005,342,0.004,383,2.217,503,4.321,510,1.921,537,3.238,549,2.28,558,3.335,585,2.28,915,4.128,1156,4.546,1324,3.238,1412,3.809,1751,3.809,2118,5.155,2508,3.674,2767,4.816,3482,3.439,3666,4.321,3677,3.439,3773,3.674,3887,5.199,4845,3.666,4847,5.985,5070,3.148,5096,3.238,5109,3.551,5114,3.551,5115,3.551,5119,5.042,5136,3.551,5147,4.555,5443,3.809,5444,3.809,5445,3.809,5446,3.809,5448,5.945,5449,4.816,5451,5.758,5453,5.844,5455,5.133,5456,5.133,5459,5.516,5460,5.516,5465,3.809,5466,3.809,5473,5.155,5474,5.155,5475,4.816,5502,5.133,5507,3.809,5518,5.609,5519,5.609,5520,5.609,5534,5.155,5546,5.366,5664,5.155,5705,5.609,5706,5.609,5720,6.298,5721,6.298,5722,6.298,5723,6.298,5724,6.298,5725,6.298,5726,6.298,5727,6.298,5728,6.298,5729,6.298,5730,6.298,5731,6.298,5732,6.298,5733,6.298]],["title/additional-documentation/changelog/calendar-changelog.html",[661,0.867,855,2.324,3202,1.215,4844,1.518]],["body/additional-documentation/changelog/calendar-changelog.html",[10,0.274,26,0.005,97,1.883,340,0.004,341,0.005,342,0.004,549,2.36,585,2.36,1231,4.271,1258,5.477,3677,3.558,3773,3.802,3887,5.303,4845,3.74,5070,3.258,5096,3.351,5109,3.675,5114,3.675,5115,3.675,5119,5.143,5136,3.675,5147,5.027,5443,3.941,5444,3.941,5445,3.941,5446,3.941,5448,5.949,5451,5.874,5453,5.795,5455,5.211,5456,4.823,5459,4.823,5460,4.823,5465,3.941,5466,3.941,5493,6.528,5497,5.335,5502,4.823,5507,4.823,5546,5.43,5646,5.804,5647,5.804,5648,5.804,5649,5.804,5650,5.804,5651,5.804,5652,5.804,5734,7.975,5735,6.517,5736,6.517,5737,6.517,5738,6.517,5739,6.517,5740,6.517,5741,6.517,5742,6.517,5743,6.517,5744,5.804,5745,6.517,5746,6.517,5747,6.517]],["title/additional-documentation/changelog/location-changelog.html",[263,0.897,661,0.867,3202,1.215,4844,1.518]],["body/additional-documentation/changelog/location-changelog.html",[10,0.279,26,0.005,50,4.271,97,1.919,340,0.004,341,0.005,342,0.004,549,2.405,585,2.405,3677,3.626,3773,4.706,3887,5.287,4845,3.729,4849,6.347,5070,3.32,5096,3.415,5109,3.744,5114,3.744,5115,3.744,5119,5.128,5136,3.744,5147,4.706,5443,4.016,5444,4.016,5445,4.016,5446,4.016,5448,5.942,5451,5.857,5453,5.762,5455,4.879,5456,4.879,5459,4.879,5460,4.879,5463,7.185,5464,7.185,5465,4.016,5466,4.016,5486,5.915,5502,5.255,5507,4.879,5546,5.465,5748,8.067,5749,6.641,5750,6.641,5751,6.641,5752,6.641,5753,6.641,5754,6.641,5755,6.641,5756,6.641,5757,6.641]],["title/additional-documentation/changelog/ace-changelog.html",[14,2.235,661,0.867,3202,1.215,4844,1.518]],["body/additional-documentation/changelog/ace-changelog.html",[10,0.282,14,4.057,26,0.005,97,1.939,340,0.004,341,0.005,342,0.004,549,2.429,585,2.429,1035,3.783,3677,3.663,3773,3.913,3887,5.296,4845,3.735,4848,6.357,5070,3.354,5096,3.45,5109,3.783,5114,3.783,5115,3.783,5119,5.136,5136,3.783,5147,4.735,5443,4.057,5444,4.057,5445,4.057,5446,4.057,5448,5.926,5451,5.866,5453,5.774,5455,4.909,5456,4.909,5459,4.057,5460,4.057,5465,4.057,5466,4.057,5470,5.492,5502,4.909,5507,4.909,5546,5.484,5758,8.117,5759,6.709,5760,6.709,5761,6.709,5762,6.709,5763,6.709,5764,6.709,5765,6.709,5766,6.709,5767,6.709,5768,6.709]],["title/additional-documentation/changelog/medium-editor-changelog.html",[15,1.471,274,0.779,661,0.765,3202,1.072,4844,1.34]],["body/additional-documentation/changelog/medium-editor-changelog.html",[10,0.28,15,4.368,26,0.005,97,1.927,340,0.004,341,0.005,342,0.004,549,2.414,585,2.414,3677,3.64,3773,3.889,3887,5.291,4845,3.731,4850,6.091,5070,3.333,5096,3.428,5109,3.759,5114,3.759,5115,3.759,5119,5.131,5136,3.759,5147,4.717,5443,4.031,5444,4.031,5445,4.031,5446,4.031,5448,5.921,5451,5.86,5453,5.767,5455,4.89,5456,4.89,5459,4.031,5460,4.031,5465,4.031,5466,4.031,5502,4.89,5507,4.89,5546,5.472,5769,8.086,5770,6.667,5771,6.667,5772,6.667,5773,6.667,5774,6.667,5775,6.667,5776,6.667,5777,6.667,5778,6.667]],["title/additional-documentation/changelog/tinymce-changelog.html",[661,0.867,3202,1.215,4538,2.324,4844,1.518]],["body/additional-documentation/changelog/tinymce-changelog.html",[0,0.362,10,0.274,16,3.096,26,0.005,54,3.459,61,3.951,97,1.888,132,2.626,340,0.004,341,0.005,342,0.004,549,2.366,560,3.179,585,2.366,640,2.516,2507,4.716,3677,3.567,3773,4.659,3887,5.273,4538,5.02,4845,3.719,4851,6.33,5070,3.266,5096,3.359,5109,3.684,5114,3.684,5115,3.684,5119,5.145,5136,3.684,5147,4.659,5443,3.951,5444,3.951,5445,3.951,5446,3.951,5448,5.93,5451,5.841,5453,5.798,5455,4.83,5456,4.83,5459,5.217,5460,5.217,5465,3.951,5466,3.951,5502,4.83,5507,4.83,5546,5.435,5779,7.987,5780,6.534,5781,6.534,5782,6.534,5783,6.534,5784,6.534,5785,6.534,5786,6.534,5787,6.534,5788,6.534,5789,6.534,5790,6.534,5791,6.534,5792,6.534,5793,6.534,5794,6.534,5795,6.534]],["title/additional-documentation/adding-new-packages.html",[83,0.563,661,0.765,3202,1.072,5075,2.138,5097,2.238]],["body/additional-documentation/adding-new-packages.html",[26,0.007,45,1.058,72,2.609,77,3.266,78,3.266,83,1.577,97,1.836,100,0.939,150,0.355,181,1.869,340,0.004,341,0.005,342,0.004,346,2.395,361,2.629,370,3.825,412,4.97,508,3.705,549,2.3,571,2.395,624,3.448,654,4.286,655,3.175,661,1.49,709,4.163,761,5.657,891,5.657,899,3.992,902,3.705,903,3.266,921,4.857,922,3.992,1013,4.747,1067,4.036,1110,4.934,1187,4.163,1439,4.857,1772,6.426,1879,5.144,1930,4.357,2159,4.156,2321,5.199,2384,3.992,2404,4.857,2507,6.149,2605,3.705,2615,5.355,2858,6.426,2968,4.857,3432,4.163,3885,6.426,4032,5.199,4844,2.609,4845,3.427,5075,4.163,5086,4.857,5092,5.199,5097,4.357,5102,4.163,5107,5.199,5118,4.857,5119,3.363,5123,5.845,5129,5.385,5166,6.974,5172,5.657,5205,5.199,5470,5.199,5693,5.657,5796,6.352,5797,7.85,5798,6.352,5799,8.52,5800,6.352,5801,6.352,5802,6.352,5803,6.352,5804,6.352,5805,6.352,5806,6.352,5807,6.352,5808,6.352,5809,6.352,5810,6.352,5811,6.352,5812,7.85,5813,7.85,5814,6.352,5815,6.352,5816,6.352,5817,6.352,5818,6.352,5819,6.352,5820,6.352,5821,6.352,5822,6.352,5823,7.85,5824,7.85,5825,6.352]],["title/additional-documentation/stackblitz.html",[661,1,3202,1.401,5826,3.798]],["body/additional-documentation/stackblitz.html",[2,1.382,6,4.012,16,3.483,26,0.007,150,0.352,165,0.273,166,0.321,340,0.005,341,0.006,342,0.005,343,1.666,361,2.461,362,2.558,477,2.124,571,2.771,624,2.771,849,5.615,1258,4.831,2159,3.891,2369,5.62,4401,6.015,5257,4.286,5744,6.545,5826,7.631,5827,7.349,5828,7.349,5829,7.349,5830,7.349]],["title/additional-documentation/publishing.html",[661,1,3202,1.401,5831,4.264]],["body/additional-documentation/publishing.html",[0,0.404,5,1.776,26,0.006,77,3.747,78,3.747,83,1.257,181,2.144,269,1.769,272,2.232,340,0.005,341,0.006,342,0.005,453,3.207,477,2.106,490,3.454,520,2.033,534,5.466,571,3.215,624,3.215,636,4.999,644,6.979,902,4.251,903,3.747,1017,5.588,1146,3.454,1655,3.454,2159,3.859,3152,5.965,4399,4.251,5070,3.643,5096,3.747,5222,6.524,5261,6.521,5274,5.965,5284,6.49,5285,6.49,5286,6.49,5287,6.49,5288,6.49]]],"invertedIndex":[["",{"_index":26,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["0",{"_index":953,"title":{},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["0.12.3\",in",{"_index":5204,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["0.18.10",{"_index":5751,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.11",{"_index":5750,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.12",{"_index":5749,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.13",{"_index":5748,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.3",{"_index":5757,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.4",{"_index":5756,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.5",{"_index":5755,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.6",{"_index":5754,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.7",{"_index":5486,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.8",{"_index":5753,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.18.9",{"_index":5752,"title":{},"body":{"additional-documentation/changelog/location-changelog.html":{}}}],["0.19.10",{"_index":5712,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.11",{"_index":5711,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.12",{"_index":5710,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.2",{"_index":5053,"title":{},"body":{"dependencies.html":{}}}],["0.19.6",{"_index":5716,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.7",{"_index":5715,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.8",{"_index":5714,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.19.9",{"_index":5713,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.2.10",{"_index":5740,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.11",{"_index":5739,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.12",{"_index":5738,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.13",{"_index":5735,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.14",{"_index":5734,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.3",{"_index":5747,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.4",{"_index":5746,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.5",{"_index":5745,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.6",{"_index":5744,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["0.2.7",{"_index":5743,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.8",{"_index":5742,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.2.9",{"_index":5741,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["0.20.0",{"_index":5709,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.1",{"_index":5708,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.20.2",{"_index":5707,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.21.0",{"_index":5706,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.1",{"_index":5731,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.2",{"_index":5730,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.3",{"_index":5729,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.4",{"_index":5728,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.5",{"_index":5727,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.21.6",{"_index":5726,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.0",{"_index":5705,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.1",{"_index":5725,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.2",{"_index":5724,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.3",{"_index":5723,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.4",{"_index":5722,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.5",{"_index":5721,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.22.6",{"_index":5720,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["0.23.0",{"_index":5704,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.0",{"_index":5702,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.1",{"_index":5701,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.2",{"_index":5700,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.24.3",{"_index":5699,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["0.36.10",{"_index":5671,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.11",{"_index":5670,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.12",{"_index":5669,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.13",{"_index":5668,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.14",{"_index":5667,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.15",{"_index":5666,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.4",{"_index":5682,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.5",{"_index":5681,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.6",{"_index":5680,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.7",{"_index":5679,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.8",{"_index":5676,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.36.9",{"_index":5672,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.0",{"_index":5663,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.1",{"_index":5661,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.2",{"_index":5660,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.3",{"_index":5659,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.37.4",{"_index":5658,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.38.0",{"_index":5657,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.0",{"_index":5656,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.1",{"_index":5653,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.2",{"_index":5645,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.39.3",{"_index":5644,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.4.10",{"_index":5771,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.11",{"_index":5770,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.12",{"_index":5769,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.3",{"_index":5778,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.4",{"_index":5777,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.5",{"_index":5776,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.6",{"_index":5775,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.7",{"_index":5774,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.8",{"_index":5773,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.4.9",{"_index":5772,"title":{},"body":{"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["0.40.0",{"_index":5636,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.0",{"_index":5628,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.1",{"_index":5624,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.2",{"_index":5623,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.3",{"_index":5620,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.4",{"_index":5617,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.41.5",{"_index":5616,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["0.42.10",{"_index":5555,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.11",{"_index":5553,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.12",{"_index":5550,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.13",{"_index":5549,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.14",{"_index":5548,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.15",{"_index":5547,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.16",{"_index":5545,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.4",{"_index":5561,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.5",{"_index":5560,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.6",{"_index":5559,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.7",{"_index":5558,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.8",{"_index":5557,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.42.9",{"_index":5556,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.0",{"_index":5542,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.1",{"_index":5540,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.10",{"_index":5516,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.2",{"_index":5539,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.3",{"_index":5535,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.4",{"_index":5533,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.5",{"_index":5529,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.6",{"_index":5527,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.7",{"_index":5525,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.8",{"_index":5521,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.43.9",{"_index":5517,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.0",{"_index":5514,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.1",{"_index":5511,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.44.2",{"_index":5506,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.0",{"_index":5503,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.1",{"_index":5501,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.2",{"_index":5498,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.3",{"_index":5496,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.4",{"_index":5491,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.5",{"_index":5488,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.45.6",{"_index":5482,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.0",{"_index":5472,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.1",{"_index":5468,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.2",{"_index":5462,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.3",{"_index":5458,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.4",{"_index":5457,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.5",{"_index":5454,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.6",{"_index":5452,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.46.7",{"_index":5447,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0.5.10",{"_index":5782,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.11",{"_index":5781,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.12",{"_index":5780,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.13",{"_index":5779,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.3",{"_index":5793,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.4",{"_index":5792,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.5",{"_index":5791,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.6",{"_index":5790,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.7",{"_index":5785,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.8",{"_index":5784,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.5.9",{"_index":5783,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["0.6.10",{"_index":5761,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.11",{"_index":5760,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.12",{"_index":5758,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.3",{"_index":5768,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.4",{"_index":5767,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.5",{"_index":5766,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.6",{"_index":5765,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.7",{"_index":5764,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.8",{"_index":5763,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.6.9",{"_index":5762,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["0.8.29",{"_index":5065,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":4858,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":4942,"title":{},"body":{"coverage.html":{}}}],["0/27",{"_index":4960,"title":{},"body":{"coverage.html":{}}}],["0/29",{"_index":4961,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":5032,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":4962,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":4996,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":5013,"title":{},"body":{"coverage.html":{}}}],["00a2e2e",{"_index":5794,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["00dbf0",{"_index":3339,"title":{},"body":{"components/MenuComponent.html":{}}}],["01",{"_index":5453,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["02",{"_index":5502,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["020e689",{"_index":5587,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0256008",{"_index":5481,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["03",{"_index":5455,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["04",{"_index":5449,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["041cd83",{"_index":5631,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["04fffbd",{"_index":5592,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["05",{"_index":5450,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["06b615c",{"_index":5573,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0777809",{"_index":5652,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["08",{"_index":5497,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["0b433be",{"_index":5570,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["0dbce91",{"_index":5619,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1",{"_index":181,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["1&&!pagination?.isfirst",{"_index":3865,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1&&!pagination?.islast",{"_index":3869,"title":{},"body":{"components/PaginationComponent.html":{}}}],["1)[0",{"_index":981,"title":{},"body":{"classes/Collection.html":{}}}],["1.0.0",{"_index":5043,"title":{},"body":{"dependencies.html":{}}}],["1.1.0",{"_index":5059,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":5054,"title":{},"body":{"dependencies.html":{}}}],["1.3.2",{"_index":5228,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["1.4.3",{"_index":5050,"title":{},"body":{"dependencies.html":{}}}],["1.9.0",{"_index":5063,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":4857,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1879,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["10/10",{"_index":4866,"title":{},"body":{"coverage.html":{}}}],["10/11",{"_index":5035,"title":{},"body":{"coverage.html":{}}}],["10/13",{"_index":5016,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":1471,"title":{},"body":{"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["10004",{"_index":1478,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["10m",{"_index":2722,"title":{},"body":{"components/ListComponent.html":{}}}],["11",{"_index":5823,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["11/11",{"_index":4997,"title":{},"body":{"coverage.html":{}}}],["11/12",{"_index":4965,"title":{},"body":{"coverage.html":{}}}],["11/13",{"_index":4901,"title":{},"body":{"coverage.html":{}}}],["11/15",{"_index":5025,"title":{},"body":{"coverage.html":{}}}],["11/18",{"_index":4897,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1949,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["12/12",{"_index":4883,"title":{},"body":{"coverage.html":{}}}],["12/13",{"_index":4941,"title":{},"body":{"coverage.html":{}}}],["12/14",{"_index":4933,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":4988,"title":{},"body":{"coverage.html":{}}}],["12/20",{"_index":4916,"title":{},"body":{"coverage.html":{}}}],["12/30",{"_index":4974,"title":{},"body":{"coverage.html":{}}}],["121566c",{"_index":5605,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["13/16",{"_index":4911,"title":{},"body":{"coverage.html":{}}}],["13/29",{"_index":4923,"title":{},"body":{"coverage.html":{}}}],["14",{"_index":5149,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["14/18",{"_index":4914,"title":{},"body":{"coverage.html":{}}}],["14/19",{"_index":4967,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":5507,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["15/24",{"_index":4985,"title":{},"body":{"coverage.html":{}}}],["15/25",{"_index":4925,"title":{},"body":{"coverage.html":{}}}],["16/16",{"_index":4873,"title":{},"body":{"coverage.html":{}}}],["16/18",{"_index":4946,"title":{},"body":{"coverage.html":{}}}],["17/22",{"_index":4957,"title":{},"body":{"coverage.html":{}}}],["18",{"_index":5148,"title":{},"body":{"overview.html":{}}}],["18/21",{"_index":4992,"title":{},"body":{"coverage.html":{}}}],["18/28",{"_index":4949,"title":{},"body":{"coverage.html":{}}}],["187",{"_index":5577,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["19/26",{"_index":5011,"title":{},"body":{"coverage.html":{}}}],["1].id",{"_index":414,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["1].indexof(tab.route",{"_index":4523,"title":{},"body":{"components/TabsComponent.html":{}}}],["1c382d1",{"_index":5597,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1cb8b1c",{"_index":5694,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["1cfc328",{"_index":5565,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["1d9e231",{"_index":5686,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["2",{"_index":902,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["2.0.1",{"_index":5058,"title":{},"body":{"dependencies.html":{}}}],["2.4.2",{"_index":5232,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["2.6.5",{"_index":5052,"title":{},"body":{"dependencies.html":{}}}],["2.html",{"_index":5404,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["2/2",{"_index":4958,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":5012,"title":{},"body":{"coverage.html":{}}}],["20",{"_index":2718,"title":{},"body":{"components/ListComponent.html":{},"overview.html":{}}}],["20/21",{"_index":5033,"title":{},"body":{"coverage.html":{}}}],["20/23",{"_index":4928,"title":{},"body":{"coverage.html":{}}}],["20/25",{"_index":4856,"title":{},"body":{"coverage.html":{}}}],["200",{"_index":2410,"title":{},"body":{"directives/ImageDirective.html":{},"components/TinymceComponent.html":{}}}],["2000",{"_index":3003,"title":{},"body":{"components/LoaderComponent.html":{}}}],["2019",{"_index":5448,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21",{"_index":5147,"title":{},"body":{"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["21/22",{"_index":5034,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":5483,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["22/22",{"_index":4891,"title":{},"body":{"coverage.html":{}}}],["22/24",{"_index":4886,"title":{},"body":{"coverage.html":{}}}],["22/28",{"_index":5019,"title":{},"body":{"coverage.html":{}}}],["22/36",{"_index":4968,"title":{},"body":{"coverage.html":{}}}],["232",{"_index":5646,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["237",{"_index":5494,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["24",{"_index":5523,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["24/35",{"_index":4865,"title":{},"body":{"coverage.html":{}}}],["24868b9",{"_index":5585,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["25",{"_index":3773,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["25/26",{"_index":4878,"title":{},"body":{"coverage.html":{}}}],["25/31",{"_index":5024,"title":{},"body":{"coverage.html":{}}}],["25/37",{"_index":4869,"title":{},"body":{"coverage.html":{}}}],["25/42",{"_index":4937,"title":{},"body":{"coverage.html":{}}}],["255",{"_index":5736,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["25a36aa",{"_index":5665,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["26/26",{"_index":4887,"title":{},"body":{"coverage.html":{}}}],["263",{"_index":1791,"title":{},"body":{"injectables/EntryService.html":{}}}],["27",{"_index":3988,"title":{},"body":{"injectables/PopService.html":{}}}],["27/27",{"_index":4912,"title":{},"body":{"coverage.html":{}}}],["277",{"_index":5492,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["28",{"_index":5546,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["28/36",{"_index":5022,"title":{},"body":{"coverage.html":{}}}],["2826ac4",{"_index":5602,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["289",{"_index":5637,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["29",{"_index":5456,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["29/31",{"_index":4882,"title":{},"body":{"coverage.html":{}}}],["29/40",{"_index":4977,"title":{},"body":{"coverage.html":{}}}],["29/43",{"_index":4871,"title":{},"body":{"coverage.html":{}}}],["29a9e1",{"_index":3338,"title":{},"body":{"components/MenuComponent.html":{}}}],["2b0b354",{"_index":5500,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["2e97a10",{"_index":5478,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["3",{"_index":903,"title":{},"body":{"classes/Collection.html":{},"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["3.13.1",{"_index":5056,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":4874,"title":{},"body":{"coverage.html":{}}}],["3/4",{"_index":4899,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":4955,"title":{},"body":{"coverage.html":{}}}],["30/35",{"_index":4972,"title":{},"body":{"coverage.html":{}}}],["30/42",{"_index":4930,"title":{},"body":{"coverage.html":{}}}],["300px",{"_index":3068,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["31/34",{"_index":5003,"title":{},"body":{"coverage.html":{}}}],["31/45",{"_index":4924,"title":{},"body":{"coverage.html":{}}}],["34/44",{"_index":4975,"title":{},"body":{"coverage.html":{}}}],["34/63",{"_index":4995,"title":{},"body":{"coverage.html":{}}}],["35",{"_index":5014,"title":{},"body":{"coverage.html":{}}}],["35/51",{"_index":5028,"title":{},"body":{"coverage.html":{}}}],["35022a6",{"_index":5474,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["364482b",{"_index":5601,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["373bebf",{"_index":5733,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["39/43",{"_index":4921,"title":{},"body":{"coverage.html":{}}}],["39/45",{"_index":4969,"title":{},"body":{"coverage.html":{}}}],["39;muffin",{"_index":3532,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["3fb8f47",{"_index":5692,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["4",{"_index":3432,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["4.3.6",{"_index":5229,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["4.7.4",{"_index":5786,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["4.9.3",{"_index":5061,"title":{},"body":{"dependencies.html":{}}}],["4/4",{"_index":4879,"title":{},"body":{"coverage.html":{}}}],["4/5",{"_index":5010,"title":{},"body":{"coverage.html":{}}}],["4/7",{"_index":5009,"title":{},"body":{"coverage.html":{}}}],["40",{"_index":4973,"title":{},"body":{"coverage.html":{}}}],["400",{"_index":2452,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["42",{"_index":1411,"title":{},"body":{"interfaces/Day.html":{}}}],["42/42",{"_index":4876,"title":{},"body":{"coverage.html":{}}}],["42/44",{"_index":4890,"title":{},"body":{"coverage.html":{}}}],["42/55",{"_index":4863,"title":{},"body":{"coverage.html":{}}}],["42301aa",{"_index":5528,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["431e3fd",{"_index":5581,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["43c7da5",{"_index":5567,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["44",{"_index":4922,"title":{},"body":{"coverage.html":{}}}],["46",{"_index":4917,"title":{},"body":{"coverage.html":{}}}],["4650da9",{"_index":5513,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["46d4a1f",{"_index":5662,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["47/50",{"_index":4894,"title":{},"body":{"coverage.html":{}}}],["47a7930",{"_index":5607,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["48.8093253",{"_index":3047,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["4920dd4",{"_index":5534,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["4a14246",{"_index":5572,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["4a5ea9",{"_index":3340,"title":{},"body":{"components/MenuComponent.html":{}}}],["5",{"_index":1930,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["5.0.0",{"_index":2209,"title":{},"body":{"injectables/FormService.html":{}}}],["5.23.2",{"_index":5057,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":5020,"title":{},"body":{"coverage.html":{}}}],["5/6",{"_index":4983,"title":{},"body":{"coverage.html":{}}}],["5/8",{"_index":5036,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":3344,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["500",{"_index":3352,"title":{},"body":{"components/MenuComponent.html":{}}}],["5000",{"_index":3730,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["500px",{"_index":195,"title":{},"body":{"components/AceComponent.html":{}}}],["50e2d98",{"_index":5688,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["53",{"_index":4994,"title":{},"body":{"coverage.html":{}}}],["53/82",{"_index":4939,"title":{},"body":{"coverage.html":{}}}],["54",{"_index":4979,"title":{},"body":{"coverage.html":{}}}],["56/61",{"_index":4976,"title":{},"body":{"coverage.html":{}}}],["56/92",{"_index":4954,"title":{},"body":{"coverage.html":{}}}],["57",{"_index":5008,"title":{},"body":{"coverage.html":{}}}],["57/84",{"_index":4978,"title":{},"body":{"coverage.html":{}}}],["5892365",{"_index":5586,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["59",{"_index":4936,"title":{},"body":{"coverage.html":{}}}],["5see",{"_index":3812,"title":{},"body":{"classes/Pagination.html":{}}}],["5the",{"_index":1932,"title":{},"body":{"classes/Field.html":{}}}],["6",{"_index":921,"title":{},"body":{"classes/Collection.html":{},"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["6.3.3",{"_index":5060,"title":{},"body":{"dependencies.html":{}}}],["6/11",{"_index":4980,"title":{},"body":{"coverage.html":{}}}],["6/12",{"_index":4919,"title":{},"body":{"coverage.html":{}}}],["6/13",{"_index":4918,"title":{},"body":{"coverage.html":{}}}],["6/6",{"_index":4948,"title":{},"body":{"coverage.html":{}}}],["6/7",{"_index":4986,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":4915,"title":{},"body":{"coverage.html":{}}}],["61",{"_index":4896,"title":{},"body":{"coverage.html":{}}}],["62",{"_index":4984,"title":{},"body":{"coverage.html":{}}}],["624aecf",{"_index":5505,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["63",{"_index":4906,"title":{},"body":{"coverage.html":{}}}],["63/92",{"_index":4931,"title":{},"body":{"coverage.html":{}}}],["64",{"_index":4938,"title":{},"body":{"coverage.html":{}}}],["651f1de",{"_index":5524,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["66",{"_index":4963,"title":{},"body":{"coverage.html":{}}}],["67",{"_index":4868,"title":{},"body":{"coverage.html":{}}}],["68",{"_index":4864,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["68f12f5",{"_index":5526,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["6e961b8",{"_index":5554,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["6f53065",{"_index":5475,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["7",{"_index":922,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"classes/Collection.html":{},"interfaces/Day.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["7.2.0",{"_index":5203,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["7.2.1",{"_index":5120,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["7.2.7",{"_index":5046,"title":{},"body":{"dependencies.html":{}}}],["7/10",{"_index":4999,"title":{},"body":{"coverage.html":{}}}],["7/11",{"_index":4907,"title":{},"body":{"coverage.html":{}}}],["7/20",{"_index":5015,"title":{},"body":{"coverage.html":{}}}],["7/23",{"_index":4956,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":4947,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":4944,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":4998,"title":{},"body":{"coverage.html":{}}}],["70d5e24",{"_index":5695,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["71",{"_index":4929,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":4908,"title":{},"body":{"coverage.html":{}}}],["73",{"_index":4966,"title":{},"body":{"coverage.html":{}}}],["7430c70",{"_index":5664,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["75",{"_index":4898,"title":{},"body":{"coverage.html":{}}}],["7580583",{"_index":5603,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["76",{"_index":4862,"title":{},"body":{"coverage.html":{}}}],["7664cb2",{"_index":5621,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["77",{"_index":4913,"title":{},"body":{"coverage.html":{}}}],["7733151",{"_index":5675,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["78",{"_index":5018,"title":{},"body":{"coverage.html":{}}}],["789e7ca",{"_index":5569,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["79c1a6d",{"_index":5541,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["7a88da8",{"_index":5697,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7d50c5f",{"_index":5633,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["7f99383",{"_index":5479,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8",{"_index":2716,"title":{},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["8/10",{"_index":5004,"title":{},"body":{"coverage.html":{}}}],["8/11",{"_index":4909,"title":{},"body":{"coverage.html":{}}}],["8/12",{"_index":4964,"title":{},"body":{"coverage.html":{}}}],["8/8",{"_index":5023,"title":{},"body":{"coverage.html":{}}}],["8/9",{"_index":4959,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":4855,"title":{},"body":{"coverage.html":{}}}],["81",{"_index":4910,"title":{},"body":{"coverage.html":{}}}],["8236caf",{"_index":5615,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["83",{"_index":4982,"title":{},"body":{"coverage.html":{}}}],["83cc6374",{"_index":715,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{}}}],["84",{"_index":4900,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":4932,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":4927,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":4943,"title":{},"body":{"coverage.html":{}}}],["878e9df",{"_index":5655,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["88",{"_index":4945,"title":{},"body":{"coverage.html":{}}}],["8ab4791",{"_index":5622,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["8abc48b",{"_index":5538,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["8f56fb2",{"_index":5643,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["8fab72f",{"_index":5795,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["9",{"_index":2011,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/PopService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["9.1.3",{"_index":5048,"title":{},"body":{"dependencies.html":{}}}],["9.159388100000001",{"_index":3048,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["9/10",{"_index":4934,"title":{},"body":{"coverage.html":{}}}],["9/14",{"_index":5031,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":4920,"title":{},"body":{"coverage.html":{}}}],["91",{"_index":4885,"title":{},"body":{"coverage.html":{}}}],["92",{"_index":4940,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":4881,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":4893,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":4889,"title":{},"body":{"coverage.html":{}}}],["96",{"_index":4877,"title":{},"body":{"coverage.html":{}}}],["96a29d70d11b",{"_index":3425,"title":{},"body":{"components/ModalComponent.html":{}}}],["9776",{"_index":2918,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["98ae3d0",{"_index":5515,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9915311",{"_index":5638,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["9a",{"_index":3593,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["9bf067d",{"_index":5609,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["9e23457",{"_index":5532,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["9e671b9",{"_index":5584,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["9ea65ad",{"_index":5467,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["_",{"_index":191,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["_'@ec.components/$1'_",{"_index":5180,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_'@ec.components/(\\w+).*'_",{"_index":5179,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["_]{22}$/.test(id",{"_index":2012,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["_]{7,14",{"_index":3595,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_api",{"_index":783,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["_api.login(email",{"_index":787,"title":{},"body":{"injectables/AuthService.html":{}}}],["_api.resetpassword(email",{"_index":834,"title":{},"body":{"injectables/AuthService.html":{}}}],["_cre",{"_index":3528,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_created",{"_index":3544,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["_creator",{"_index":3551,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_entry",{"_index":1785,"title":{},"body":{"injectables/EntryService.html":{}}}],["_entrytitle",{"_index":3597,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_item.id",{"_index":1620,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["_items",{"_index":4374,"title":{},"body":{"classes/Sorter.html":{}}}],["_items.indexof(item",{"_index":4375,"title":{},"body":{"classes/Sorter.html":{}}}],["_methods",{"_index":831,"title":{},"body":{"injectables/AuthService.html":{}}}],["_methods.filter(x",{"_index":829,"title":{},"body":{"injectables/AuthService.html":{}}}],["_modified",{"_index":3549,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["_moment",{"_index":1425,"title":{},"body":{"interfaces/Day.html":{}}}],["_resource",{"_index":4153,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["_toggle",{"_index":3952,"title":{},"body":{"components/PopComponent.html":{}}}],["_upload",{"_index":4763,"title":{},"body":{"components/UploadComponent.html":{}}}],["a.path",{"_index":4035,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["a.then(r",{"_index":825,"title":{},"body":{"injectables/AuthService.html":{}}}],["a08a9d6",{"_index":5595,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a542c43",{"_index":5485,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["a992381",{"_index":5576,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ab86f41",{"_index":5464,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["above",{"_index":1933,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["abstract",{"_index":997,"title":{},"body":{"classes/Config.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{}}}],["abstractcontrol",{"_index":2192,"title":{},"body":{"injectables/FormService.html":{},"components/InputComponent.html":{}}}],["abstraction",{"_index":5369,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ac3bb86",{"_index":5487,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ac4aec3",{"_index":5737,"title":{},"body":{"additional-documentation/changelog/calendar-changelog.html":{}}}],["accepts",{"_index":3745,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["access",{"_index":2555,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["access=public",{"_index":5113,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["accessed",{"_index":5377,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["accessible",{"_index":1157,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Symbol.html":{}}}],["accessors",{"_index":4188,"title":{},"body":{"injectables/SdkService.html":{}}}],["according",{"_index":3805,"title":{},"body":{"classes/Pagination.html":{}}}],["account",{"_index":440,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["accountresource",{"_index":3169,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["accounts",{"_index":773,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["accounts(environment.environment",{"_index":4246,"title":{},"body":{"injectables/SdkService.html":{}}}],["ace",{"_index":14,"title":{"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}},"body":{"components/AceComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ace'},{'name",{"_index":202,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ace.component",{"_index":363,"title":{},"body":{"modules/AceModule.html":{}}}],["ace.component.html",{"_index":38,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.component.scss",{"_index":36,"title":{},"body":{"components/AceComponent.html":{}}}],["ace.edit(this.container.nativeelement",{"_index":172,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/mode",{"_index":108,"title":{},"body":{"components/AceComponent.html":{}}}],["ace/theme",{"_index":111,"title":{},"body":{"components/AceComponent.html":{}}}],["acecomponent",{"_index":1,"title":{"components/AceComponent.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["acemodule",{"_index":344,"title":{"modules/AceModule.html":{}},"body":{"modules/AceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["acemoduleconfig",{"_index":364,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["act",{"_index":4412,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["action",{"_index":367,"title":{"interfaces/Action.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["action(item.getbody().data",{"_index":4007,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar",{"_index":380,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actionbar'},{'name",{"_index":204,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["actionbar.component",{"_index":4104,"title":{},"body":{"modules/ResourceModule.html":{}}}],["actionbar.component.ts",{"_index":3998,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["actionbar.dropdownloader",{"_index":4028,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.dropdownloader.wait(loading",{"_index":4029,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar.loadactions(actions",{"_index":4026,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionbar/actionbar.component",{"_index":4273,"title":{},"body":{"modules/SelectModule.html":{}}}],["actionbar/api",{"_index":4105,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbar/resource",{"_index":3997,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["actionbarcomponent",{"_index":203,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["actionbarconfig",{"_index":381,"title":{"interfaces/ActionbarConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{}}}],["actionfunction",{"_index":374,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{},"miscellaneous/typealiases.html":{}}}],["actions",{"_index":387,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["actions.length",{"_index":4045,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actions.push",{"_index":4010,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["actionsbefore",{"_index":405,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["actionstack",{"_index":388,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["activate",{"_index":4476,"title":{},"body":{"components/TabComponent.html":{}}}],["activated",{"_index":637,"title":{},"body":{"guards/AuthGuard.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["activatedroute",{"_index":596,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{}}}],["active",{"_index":1177,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["active>a",{"_index":3414,"title":{},"body":{"components/MenuComponent.html":{}}}],["activies",{"_index":3016,"title":{},"body":{"components/LoaderComponent.html":{}}}],["activity",{"_index":2989,"title":{},"body":{"components/LoaderComponent.html":{}}}],["acts",{"_index":1495,"title":{},"body":{"directives/DropzoneDirective.html":{},"classes/Sorter.html":{}}}],["actual",{"_index":2921,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["actual_component",{"_index":339,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ad58c68",{"_index":5614,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["add",{"_index":624,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["add(item",{"_index":910,"title":{},"body":{"classes/Collection.html":{}}}],["add3ee6",{"_index":5627,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["addall",{"_index":888,"title":{},"body":{"classes/Collection.html":{}}}],["addall(items",{"_index":918,"title":{},"body":{"classes/Collection.html":{}}}],["added",{"_index":915,"title":{},"body":{"classes/Collection.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["addfield",{"_index":2160,"title":{},"body":{"injectables/FormService.html":{}}}],["addfield(field",{"_index":2168,"title":{},"body":{"injectables/FormService.html":{}}}],["addimagebyurl",{"_index":4542,"title":{},"body":{"components/TinymceComponent.html":{}}}],["addimagebyurl(url",{"_index":4562,"title":{},"body":{"components/TinymceComponent.html":{}}}],["adding",{"_index":5097,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["additional",{"_index":3202,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{}}}],["address",{"_index":2245,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{}}}],["adds",{"_index":914,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{}}}],["addtostack",{"_index":419,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["admin",{"_index":444,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/AuthService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["adminentryinputcomponent",{"_index":205,"title":{"components/AdminEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["adresse",{"_index":3901,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["advanced",{"_index":3660,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["advantage",{"_index":3006,"title":{},"body":{"components/LoaderComponent.html":{}}}],["affect",{"_index":5329,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["aftercontentinit",{"_index":4496,"title":{},"body":{"components/TabsComponent.html":{}}}],["afterviewinit",{"_index":1456,"title":{},"body":{"components/DefaultInputComponent.html":{},"directives/FocusDirective.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["afterwards",{"_index":3448,"title":{},"body":{"components/ModalComponent.html":{}}}],["agm",{"_index":3069,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["agm/core",{"_index":2255,"title":{},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"dependencies.html":{}}}],["agmcoremodule",{"_index":3081,"title":{},"body":{"modules/LocationModule.html":{}}}],["agmcoremodule.forroot",{"_index":3087,"title":{},"body":{"modules/LocationModule.html":{}}}],["agnostic",{"_index":5418,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["aizasyadgeue1yxo1f",{"_index":3089,"title":{},"body":{"modules/LocationModule.html":{}}}],["algorithm",{"_index":4353,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.resolve",{"_index":4383,"title":{},"body":{"classes/Sorter.html":{}}}],["algorithm(a.sort(property",{"_index":4385,"title":{},"body":{"classes/Sorter.html":{}}}],["aliases",{"_index":5151,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allowed",{"_index":748,"title":{},"body":{"injectables/AuthService.html":{}}}],["allows",{"_index":1118,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["along",{"_index":5258,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["already",{"_index":3723,"title":{},"body":{"injectables/NotificationsService.html":{},"classes/Pagination.html":{}}}],["als",{"_index":5303,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["alt",{"_index":2469,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["alter(value",{"_index":1440,"title":{},"body":{"interfaces/Day.html":{}}}],["altered",{"_index":4167,"title":{},"body":{"interfaces/SdkField.html":{}}}],["alternative",{"_index":2445,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ToggleComponent.html":{}}}],["alternatively",{"_index":5355,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["always",{"_index":1140,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["alwaysloadentry",{"_index":1120,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["alwaysshowheader",{"_index":2762,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["amazement",{"_index":5300,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["amazement_factor",{"_index":5299,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazement_factor>=5",{"_index":5350,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amazing",{"_index":5321,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["amount",{"_index":3634,"title":{},"body":{"classes/Notification.html":{}}}],["angezeigt",{"_index":670,"title":{},"body":{"guards/AuthGuard.html":{}}}],["angular",{"_index":16,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"components/AceComponent.html":{},"injectables/FormService.html":{},"components/MenuComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["angular.json",{"_index":5205,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["angular/animations",{"_index":5045,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/cli",{"_index":5227,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/clithe",{"_index":5226,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/common",{"_index":689,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/compiler",{"_index":5047,"title":{},"body":{"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/core",{"_index":152,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/core/src/metadata/lifecycle_hooks",{"_index":2944,"title":{},"body":{"components/ListItemsComponent.html":{},"components/PaginationComponent.html":{}}}],["angular/datamanager",{"_index":5076,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["angular/forms",{"_index":153,"title":{},"body":{"components/AceComponent.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["angular/http",{"_index":5230,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/language",{"_index":5231,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["angular/platform",{"_index":2088,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular/router",{"_index":653,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["angular7",{"_index":5154,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["animate",{"_index":3434,"title":{},"body":{"components/ModalComponent.html":{}}}],["animation",{"_index":3428,"title":{},"body":{"components/ModalComponent.html":{}}}],["another",{"_index":660,"title":{},"body":{"guards/AuthGuard.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["anweisungen",{"_index":3919,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["anything",{"_index":5171,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["anywhere",{"_index":1869,"title":{},"body":{"classes/Field.html":{},"components/PopComponent.html":{}}}],["api",{"_index":207,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["api(api",{"_index":4235,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.asset(this.assetid",{"_index":525,"title":{},"body":{"directives/AssetDirective.html":{}}}],["api.checkpermission(permission",{"_index":801,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.create(relation",{"_index":4157,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["api.createdmassets(assetgroupid",{"_index":2024,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["api.getschema(model",{"_index":4261,"title":{},"body":{"injectables/SdkService.html":{}}}],["api.logout",{"_index":835,"title":{},"body":{"injectables/AuthService.html":{}}}],["api.me().then((account",{"_index":795,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["api.resourcelist",{"_index":563,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["api.resourcelist(relation",{"_index":4023,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["api.signup(email",{"_index":790,"title":{},"body":{"injectables/AuthService.html":{}}}],["apiactionbarcomponent",{"_index":206,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["apikey",{"_index":3088,"title":{},"body":{"modules/LocationModule.html":{}}}],["apiresolved",{"_index":4180,"title":{},"body":{"injectables/SdkService.html":{}}}],["apis",{"_index":710,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["app",{"_index":3648,"title":{},"body":{"components/NotificationsComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["app.component",{"_index":5270,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["app.component.html",{"_index":4401,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/stackblitz.html":{}}}],["app.module",{"_index":5438,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["appcomponent",{"_index":4402,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["appear",{"_index":1866,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/UploadComponent.html":{}}}],["appears",{"_index":3948,"title":{},"body":{"components/PopComponent.html":{}}}],["append",{"_index":1575,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["appended",{"_index":3622,"title":{},"body":{"classes/Notification.html":{}}}],["appletree",{"_index":2713,"title":{},"body":{"components/ListComponent.html":{}}}],["application",{"_index":4547,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["applicationref",{"_index":4545,"title":{},"body":{"components/TinymceComponent.html":{}}}],["applications",{"_index":5072,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["apply",{"_index":1311,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ModalComponent.html":{}}}],["applyconfig",{"_index":2791,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["applyconfig(list",{"_index":2795,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["appmodule",{"_index":5257,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["approutingmodule",{"_index":5255,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["arbitrary",{"_index":3808,"title":{},"body":{"classes/Pagination.html":{},"classes/Sorter.html":{}}}],["architect",{"_index":5206,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["area",{"_index":3928,"title":{},"body":{"components/PopComponent.html":{}}}],["argument",{"_index":1792,"title":{},"body":{"injectables/EntryService.html":{},"components/ListComponent.html":{}}}],["arguments",{"_index":1502,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["around",{"_index":3860,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["array",{"_index":747,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["array(42",{"_index":1390,"title":{},"body":{"interfaces/Day.html":{}}}],["array(math.ceil(this.total",{"_index":3827,"title":{},"body":{"classes/Pagination.html":{}}}],["array.from(new",{"_index":3814,"title":{},"body":{"classes/Pagination.html":{}}}],["array.isarray(asset",{"_index":2004,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["array.isarray(pattern",{"_index":1282,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["array.slice(start",{"_index":3268,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["artifacts",{"_index":5130,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["asking",{"_index":3722,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asks",{"_index":3729,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["asobservable",{"_index":4593,"title":{},"body":{"components/TinymceComponent.html":{}}}],["asset",{"_index":212,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["asset.assetid",{"_index":2008,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.file.resolution",{"_index":2493,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getfilevariant(this.size",{"_index":2436,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimagethumburl(this.size",{"_index":2438,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getimageurl(size",{"_index":2474,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.getimageurl(this.size",{"_index":2439,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.getoriginalfile",{"_index":2488,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.id",{"_index":2434,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset.reduce",{"_index":2005,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["asset.title",{"_index":2491,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["asset.type",{"_index":2432,"title":{},"body":{"directives/ImageDirective.html":{}}}],["asset/asset.directive",{"_index":2092,"title":{},"body":{"modules/FilesModule.html":{},"directives/ImageDirective.html":{}}}],["assetdirective",{"_index":324,"title":{"directives/AssetDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetgroup",{"_index":209,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["assetgroupid",{"_index":607,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["assetgroupids",{"_index":1986,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist",{"_index":1977,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplist(forcereload",{"_index":2068,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgrouplistpromise",{"_index":1978,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetgroups",{"_index":608,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["assetgroupselectcomponent",{"_index":208,"title":{"components/AssetgroupSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetid",{"_index":468,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{}}}],["assetids",{"_index":2042,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlist.getallitems",{"_index":2026,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetlistcomponent",{"_index":211,"title":{"components/AssetListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assetlistpopcomponent",{"_index":214,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assets",{"_index":630,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["assets.map((asset",{"_index":2065,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.map(asset",{"_index":2029,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets.reduce((ids",{"_index":2051,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assets/asset",{"_index":464,"title":{},"body":{"directives/AssetDirective.html":{}}}],["assets[0",{"_index":2027,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["assetselectcomponent",{"_index":217,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["assign",{"_index":1796,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["assigning",{"_index":1855,"title":{},"body":{"classes/Field.html":{}}}],["assigns",{"_index":2417,"title":{},"body":{"directives/ImageDirective.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{}}}],["associated",{"_index":1871,"title":{},"body":{"classes/Field.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["assumes",{"_index":5265,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["async",{"_index":1734,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["attempt",{"_index":3679,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["attributes",{"_index":1549,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["audio",{"_index":1991,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["auth",{"_index":685,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["auth.service",{"_index":697,"title":{},"body":{"modules/AuthModule.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["auth/auth.module",{"_index":1211,"title":{},"body":{"modules/DataModule.html":{}}}],["auth/auth.service",{"_index":1073,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["authentication",{"_index":724,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["authguard",{"_index":632,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authmodule",{"_index":676,"title":{"modules/AuthModule.html":{}},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":5261,"title":{"additional-documentation/project-setup-tutorial/authorization.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["authservice",{"_index":683,"title":{"injectables/AuthService.html":{}},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"coverage.html":{},"overview.html":{}}}],["auto",{"_index":2403,"title":{},"body":{"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{}}}],["autocomplete",{"_index":2241,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["autocomplete.addlistener('place_changed",{"_index":2261,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocomplete.getplace",{"_index":2264,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress",{"_index":2230,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autocompleteaddress(el",{"_index":2239,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["autofocus",{"_index":1839,"title":{},"body":{"classes/Field.html":{},"directives/FocusDirective.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["autofocused",{"_index":2880,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["autofocusfirst",{"_index":2664,"title":{},"body":{"components/ListComponent.html":{}}}],["autoload",{"_index":469,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{}}}],["autoload=false",{"_index":492,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["automatic",{"_index":5309,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["automatically",{"_index":1939,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Notification.html":{},"injectables/SdkService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["availabe",{"_index":79,"title":{},"body":{"components/AceComponent.html":{}}}],["available",{"_index":809,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["available.validator.ts",{"_index":4903,"title":{},"body":{"coverage.html":{}}}],["availablesizes",{"_index":2763,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["avatar",{"_index":4657,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["avatars",{"_index":4659,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["await",{"_index":3589,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["b",{"_index":824,"title":{},"body":{"injectables/AuthService.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{},"additional-documentation/readme/style-readme.html":{}}}],["b(r",{"_index":826,"title":{},"body":{"injectables/AuthService.html":{}}}],["b.resolve",{"_index":4384,"title":{},"body":{"classes/Sorter.html":{}}}],["b.sort(property",{"_index":4386,"title":{},"body":{"classes/Sorter.html":{}}}],["b2cf446",{"_index":5510,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b365847",{"_index":5789,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["b3e8115",{"_index":5719,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["b4d03eb",{"_index":5589,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["b5a578d",{"_index":5495,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["b7460e6",{"_index":5685,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b760780",{"_index":5698,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["b7d33e2",{"_index":5490,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ba52443",{"_index":5544,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["back",{"_index":1172,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"components/ModalComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["backdrop",{"_index":1693,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["backend",{"_index":5336,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["backenderrorcodes",{"_index":4905,"title":{},"body":{"coverage.html":{}}}],["background",{"_index":1313,"title":{},"body":{"interfaces/Day.html":{}}}],["bake",{"_index":3670,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baken",{"_index":3672,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bakery:bakeryservice",{"_index":3669,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["baking",{"_index":3674,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["ball",{"_index":3661,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["bar",{"_index":4006,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["barrel",{"_index":5677,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["base",{"_index":4363,"title":{},"body":{"classes/Sorter.html":{},"injectables/TypeConfigService.html":{}}}],["based",{"_index":1894,"title":{},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["basic",{"_index":1455,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/ListComponent.html":{}}}],["basis",{"_index":1429,"title":{},"body":{"interfaces/Day.html":{}}}],["bc9bb53",{"_index":5489,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bcbbc51",{"_index":5629,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["bcbefd1",{"_index":5582,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["before",{"_index":560,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["beforehand",{"_index":5326,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["begin",{"_index":1387,"title":{},"body":{"interfaces/Day.html":{}}}],["begin.clone().add(index",{"_index":1393,"title":{},"body":{"interfaces/Day.html":{}}}],["behaviour",{"_index":3482,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["beim",{"_index":3923,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["being",{"_index":3780,"title":{},"body":{"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["belonging",{"_index":2526,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["below",{"_index":3628,"title":{},"body":{"classes/Notification.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["beneath",{"_index":2606,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["beschreibung",{"_index":3655,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["beta.5",{"_index":5044,"title":{},"body":{"dependencies.html":{}}}],["better",{"_index":3015,"title":{},"body":{"components/LoaderComponent.html":{}}}],["between",{"_index":2158,"title":{},"body":{"injectables/FormService.html":{}}}],["bilder",{"_index":5294,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["bind",{"_index":5219,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["binding",{"_index":5683,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["birch",{"_index":2717,"title":{},"body":{"components/ListComponent.html":{}}}],["blur",{"_index":2207,"title":{},"body":{"injectables/FormService.html":{}}}],["bobby",{"_index":1927,"title":{},"body":{"classes/Field.html":{}}}],["body",{"_index":1910,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor",{"_index":5328,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.amazement_factor*body.flavour/body.price",{"_index":5333,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["body.value.name",{"_index":1921,"title":{},"body":{"classes/Field.html":{}}}],["boolean",{"_index":375,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithNotifications.html":{}}}],["booleans",{"_index":4368,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["bootstrap",{"_index":348,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["both",{"_index":761,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/adding-new-packages.html":{}}}],["bound",{"_index":1500,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["box",{"_index":1010,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["breaking",{"_index":5155,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["breaks",{"_index":4554,"title":{},"body":{"components/TinymceComponent.html":{}}}],["broadcast",{"_index":4134,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["broken",{"_index":5604,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["browse",{"_index":4782,"title":{},"body":{"components/UploadSelectComponent.html":{},"modules.html":{}}}],["browser",{"_index":2089,"title":{},"body":{"modules/FilesModule.html":{},"injectables/NotificationsService.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"dependencies.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["browsermodule",{"_index":2087,"title":{},"body":{"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["btn._clear",{"_index":5732,"title":{},"body":{"additional-documentation/changelog/style-changelog.html":{}}}],["bubbling",{"_index":5606,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["buchstaben",{"_index":1924,"title":{},"body":{"classes/Field.html":{}}}],["bug",{"_index":5459,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["bugged",{"_index":5568,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["bugs",{"_index":5463,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["build",{"_index":5129,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["builder",{"_index":5207,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders",{"_index":5198,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/custom",{"_index":5199,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builders/dev",{"_index":5200,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["builds",{"_index":5049,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/blob/master/src/ext",{"_index":168,"title":{},"body":{"components/AceComponent.html":{}}}],["builds/src",{"_index":155,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["builds/webpack",{"_index":157,"title":{},"body":{"components/AceComponent.html":{}}}],["built",{"_index":5077,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["bump",{"_index":5451,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["button",{"_index":1144,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["buttonclasses",{"_index":3190,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["buttonlabel",{"_index":3191,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["c",{"_index":5379,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["c0c7f17",{"_index":5632,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c483625",{"_index":5520,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["c89591a",{"_index":5611,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["c950461",{"_index":5678,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["c9c8d4",{"_index":3341,"title":{},"body":{"components/MenuComponent.html":{}}}],["cache",{"_index":5477,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["caches",{"_index":4196,"title":{},"body":{"injectables/SdkService.html":{}}}],["calculcates",{"_index":3801,"title":{},"body":{"classes/Pagination.html":{}}}],["calendar",{"_index":855,"title":{"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/calendar-changelog.html":{}},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["calendar'},{'name",{"_index":219,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["calendar/calendar.component",{"_index":863,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendar/month.component",{"_index":866,"title":{},"body":{"modules/CalendarModule.html":{}}}],["calendarcomponent",{"_index":218,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["calendarish",{"_index":1302,"title":{},"body":{"interfaces/Day.html":{}}}],["calendarmodule",{"_index":849,"title":{"modules/CalendarModule.html":{}},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["calendarmoduleconfig",{"_index":867,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["calendars",{"_index":1407,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["call",{"_index":1596,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["callback",{"_index":98,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["called",{"_index":490,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/publishing.html":{}}}],["calling",{"_index":1574,"title":{},"body":{"directives/EntriesDirective.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["calls",{"_index":737,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TinymceComponent.html":{}}}],["can't",{"_index":5187,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["canactivate",{"_index":645,"title":{},"body":{"guards/AuthGuard.html":{}}}],["canalter(value",{"_index":1432,"title":{},"body":{"interfaces/Day.html":{}}}],["cancels",{"_index":3356,"title":{},"body":{"components/MenuComponent.html":{}}}],["canceltimeout",{"_index":3325,"title":{},"body":{"components/MenuComponent.html":{}}}],["cand",{"_index":3061,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["caption",{"_index":4563,"title":{},"body":{"components/TinymceComponent.html":{}}}],["case",{"_index":2563,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["catch",{"_index":792,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch((err",{"_index":797,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{}}}],["catch((error",{"_index":3175,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["catch(err",{"_index":822,"title":{},"body":{"injectables/AuthService.html":{}}}],["catch(error",{"_index":1612,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{}}}],["catched",{"_index":2983,"title":{},"body":{"components/LoaderComponent.html":{}}}],["caution",{"_index":4133,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cbe9627",{"_index":5466,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ccc",{"_index":1319,"title":{},"body":{"interfaces/Day.html":{}}}],["cd",{"_index":5235,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["cd90ef7",{"_index":5759,"title":{},"body":{"additional-documentation/changelog/ace-changelog.html":{}}}],["cdn",{"_index":5437,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["cdr",{"_index":390,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["cea52fc",{"_index":5640,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["cell",{"_index":1298,"title":{},"body":{"interfaces/Day.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cells",{"_index":1307,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["center",{"_index":3046,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["certain",{"_index":2634,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/TypeConfigService.html":{}}}],["change",{"_index":97,"title":{},"body":{"components/AceComponent.html":{},"classes/Collection.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["change(e",{"_index":4720,"title":{},"body":{"components/UploadComponent.html":{}}}],["change(filter",{"_index":1736,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change)=\"updatesize($event.target.value",{"_index":3876,"title":{},"body":{"components/PaginationComponent.html":{}}}],["change.broadcast",{"_index":4137,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["change.colors",{"_index":1382,"title":{},"body":{"interfaces/Day.html":{}}}],["change.date",{"_index":1379,"title":{},"body":{"interfaces/Day.html":{}}}],["change.heatmap",{"_index":1383,"title":{},"body":{"interfaces/Day.html":{}}}],["change.selected",{"_index":1377,"title":{},"body":{"interfaces/Day.html":{}}}],["change.timespan",{"_index":1381,"title":{},"body":{"interfaces/Day.html":{}}}],["change[key",{"_index":4140,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["changed",{"_index":1043,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["changedetection",{"_index":2356,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy",{"_index":2377,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":2357,"title":{},"body":{"components/IconComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{}}}],["changedetectorref",{"_index":376,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["changelog",{"_index":4844,"title":{"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"changelog.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["changelog.md",{"_index":5824,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["changelogging",{"_index":5117,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["changes",{"_index":585,"title":{},"body":{"components/AssetListComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["changes.field",{"_index":2569,"title":{},"body":{"components/InputComponent.html":{}}}],["changes.list",{"_index":2893,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["changesenvironment",{"_index":4181,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["changespan",{"_index":1328,"title":{},"body":{"interfaces/Day.html":{}}}],["changing",{"_index":584,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["check",{"_index":657,"title":{},"body":{"guards/AuthGuard.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["checkbox",{"_index":2853,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ToggleComponent.html":{}}}],["checkboxes",{"_index":2778,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["checkpermission",{"_index":726,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkpermission(permission",{"_index":739,"title":{},"body":{"injectables/AuthService.html":{}}}],["checks",{"_index":650,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"interfaces/Upload.html":{}}}],["child",{"_index":3371,"title":{},"body":{"components/MenuComponent.html":{},"components/UploadComponent.html":{}}}],["child.data?.title",{"_index":3411,"title":{},"body":{"components/MenuComponent.html":{}}}],["child.path",{"_index":3412,"title":{},"body":{"components/MenuComponent.html":{}}}],["children",{"_index":5281,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["circular",{"_index":5469,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["class",{"_index":166,"title":{"classes/Collection.html":{},"classes/Config.html":{},"classes/Field.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"classes/Sorter.html":{}},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"directives/FocusDirective.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["class.is",{"_index":1487,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["class=\"input",{"_index":3877,"title":{},"body":{"components/PaginationComponent.html":{}}}],["classes",{"_index":883,"title":{},"body":{"classes/Collection.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["clean",{"_index":1730,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["clean(value",{"_index":1739,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["cleanreadonly",{"_index":1741,"title":{},"body":{"injectables/EntryService.html":{}}}],["clear",{"_index":1806,"title":{},"body":{"injectables/EntryService.html":{},"components/LocationSearchComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["cleared",{"_index":2883,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clearer",{"_index":5323,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clearfilter",{"_index":2841,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clears",{"_index":1427,"title":{},"body":{"interfaces/Day.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["clearselection",{"_index":1428,"title":{},"body":{"interfaces/Day.html":{}}}],["cleartimeout(this.timeout",{"_index":3406,"title":{},"body":{"components/MenuComponent.html":{}}}],["cli",{"_index":5118,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["cli/issues/11041",{"_index":5788,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["click",{"_index":1667,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clickeable",{"_index":2878,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["clicked",{"_index":1041,"title":{},"body":{"components/CrudComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["clickedoutside($event",{"_index":3954,"title":{},"body":{"components/PopComponent.html":{}}}],["clickevent",{"_index":1652,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["clicking",{"_index":2879,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["clicks",{"_index":5315,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["client",{"_index":845,"title":{},"body":{"injectables/AuthService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["clientid",{"_index":717,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["clone",{"_index":5100,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["close",{"_index":1671,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["closed",{"_index":2882,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["closes",{"_index":2309,"title":{},"body":{"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{}}}],["clubapp",{"_index":5382,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["clunky",{"_index":5346,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cluster_acemodule",{"_index":350,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_acecomponent_providers",{"_index":352,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_declarations",{"_index":351,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_exports",{"_index":354,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_acemodule_imports",{"_index":353,"title":{},"body":{"modules/AceModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":677,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_declarations",{"_index":678,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":680,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":679,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":681,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_calendarmodule",{"_index":850,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_declarations",{"_index":851,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_calendarmodule_exports",{"_index":852,"title":{},"body":{"modules/CalendarModule.html":{},"overview.html":{}}}],["cluster_datamodule",{"_index":1192,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_declarations",{"_index":1193,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_exports",{"_index":1195,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_imports",{"_index":1194,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_datamodule_providers",{"_index":1196,"title":{},"body":{"modules/DataModule.html":{},"overview.html":{}}}],["cluster_filesmodule",{"_index":2081,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_declarations",{"_index":2082,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_exports",{"_index":2084,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_filesmodule_imports",{"_index":2083,"title":{},"body":{"modules/FilesModule.html":{}}}],["cluster_filesmodule_providers",{"_index":2085,"title":{},"body":{"modules/FilesModule.html":{},"overview.html":{}}}],["cluster_formmodule",{"_index":2127,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_declarations",{"_index":2128,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_exports",{"_index":2130,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_imports",{"_index":2129,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_formmodule_providers",{"_index":2131,"title":{},"body":{"modules/FormModule.html":{},"overview.html":{}}}],["cluster_iconmodule",{"_index":2388,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_declarations",{"_index":2389,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_exports",{"_index":2390,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iconmodule_providers",{"_index":2391,"title":{},"body":{"modules/IconModule.html":{},"overview.html":{}}}],["cluster_iomodule",{"_index":2624,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_declarations",{"_index":2625,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_iomodule_exports",{"_index":2626,"title":{},"body":{"modules/IoModule.html":{},"overview.html":{}}}],["cluster_listmodule",{"_index":2950,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_declarations",{"_index":2951,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_exports",{"_index":2953,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_listmodule_imports",{"_index":2952,"title":{},"body":{"modules/ListModule.html":{}}}],["cluster_listmodule_providers",{"_index":2954,"title":{},"body":{"modules/ListModule.html":{},"overview.html":{}}}],["cluster_loadermodule",{"_index":3027,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_declarations",{"_index":3028,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_exports",{"_index":3029,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_loadermodule_providers",{"_index":3030,"title":{},"body":{"modules/LoaderModule.html":{},"overview.html":{}}}],["cluster_locationmodule",{"_index":3071,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_declarations",{"_index":3072,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_exports",{"_index":3074,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_locationmodule_imports",{"_index":3073,"title":{},"body":{"modules/LocationModule.html":{}}}],["cluster_locationmodule_providers",{"_index":3075,"title":{},"body":{"modules/LocationModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule",{"_index":3310,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_declarations",{"_index":3311,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_exports",{"_index":3313,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_mediumeditormodule_mediumeditorcomponent_providers",{"_index":3312,"title":{},"body":{"modules/MediumEditorModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule",{"_index":3701,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_declarations",{"_index":3702,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_exports",{"_index":3704,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_notificationsmodule_imports",{"_index":3703,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["cluster_notificationsmodule_providers",{"_index":3705,"title":{},"body":{"modules/NotificationsModule.html":{},"overview.html":{}}}],["cluster_popmodule",{"_index":3968,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_declarations",{"_index":3969,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_exports",{"_index":3971,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_popmodule_imports",{"_index":3970,"title":{},"body":{"modules/PopModule.html":{}}}],["cluster_popmodule_providers",{"_index":3972,"title":{},"body":{"modules/PopModule.html":{},"overview.html":{}}}],["cluster_resourcemodule",{"_index":4095,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_declarations",{"_index":4096,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_exports",{"_index":4098,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_resourcemodule_imports",{"_index":4097,"title":{},"body":{"modules/ResourceModule.html":{}}}],["cluster_resourcemodule_providers",{"_index":4099,"title":{},"body":{"modules/ResourceModule.html":{},"overview.html":{}}}],["cluster_sdkmodule",{"_index":4170,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_sdkmodule_providers",{"_index":4171,"title":{},"body":{"modules/SdkModule.html":{},"overview.html":{}}}],["cluster_selectmodule",{"_index":4266,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_declarations",{"_index":4267,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_exports",{"_index":4270,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_selectmodule_imports",{"_index":4269,"title":{},"body":{"modules/SelectModule.html":{}}}],["cluster_selectmodule_selectcomponent_providers",{"_index":4268,"title":{},"body":{"modules/SelectModule.html":{},"overview.html":{}}}],["cluster_symbolmodule",{"_index":4392,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_declarations",{"_index":4393,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_exports",{"_index":4394,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_symbolmodule_providers",{"_index":4395,"title":{},"body":{"modules/SymbolModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule",{"_index":4620,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_declarations",{"_index":4621,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_tinymcemodule_exports",{"_index":4622,"title":{},"body":{"modules/TinymceModule.html":{},"overview.html":{}}}],["cluster_uimodule",{"_index":4693,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_exports",{"_index":4695,"title":{},"body":{"modules/UiModule.html":{},"overview.html":{}}}],["cluster_uimodule_imports",{"_index":4694,"title":{},"body":{"modules/UiModule.html":{}}}],["cluster_utilitymodule",{"_index":4815,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_declarations",{"_index":4816,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_exports",{"_index":4818,"title":{},"body":{"modules/UtilityModule.html":{},"overview.html":{}}}],["cluster_utilitymodule_imports",{"_index":4817,"title":{},"body":{"modules/UtilityModule.html":{}}}],["cmd+click",{"_index":5385,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["code",{"_index":4281,"title":{},"body":{"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["coded",{"_index":5374,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["col",{"_index":1893,"title":{},"body":{"classes/Field.html":{},"components/ModalComponent.html":{}}}],["collator",{"_index":4359,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["collator.compare(a",{"_index":4366,"title":{},"body":{"classes/Sorter.html":{}}}],["collection",{"_index":882,"title":{"classes/Collection.html":{}},"body":{"classes/Collection.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"coverage.html":{}}}],["collection([1",{"_index":901,"title":{},"body":{"classes/Collection.html":{}}}],["collection.add(4",{"_index":950,"title":{},"body":{"classes/Collection.html":{}}}],["collection.addall([10,11,12",{"_index":954,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(1",{"_index":948,"title":{},"body":{"classes/Collection.html":{}}}],["collection.has(4",{"_index":949,"title":{},"body":{"classes/Collection.html":{}}}],["collection.hasall([1,10,11",{"_index":955,"title":{},"body":{"classes/Collection.html":{}}}],["collection.index(1",{"_index":952,"title":{},"body":{"classes/Collection.html":{}}}],["collection.remove(4",{"_index":951,"title":{},"body":{"classes/Collection.html":{}}}],["collection.removeall();it",{"_index":956,"title":{},"body":{"classes/Collection.html":{}}}],["collections",{"_index":2710,"title":{},"body":{"components/ListComponent.html":{}}}],["collects",{"_index":4216,"title":{},"body":{"injectables/SdkService.html":{},"modules/SymbolModule.html":{}}}],["color",{"_index":1305,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["colors",{"_index":1310,"title":{},"body":{"interfaces/Day.html":{},"components/MenuComponent.html":{}}}],["column",{"_index":1182,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columnclick",{"_index":2658,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclick(item",{"_index":2681,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["columnclicked",{"_index":1022,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["columns",{"_index":1895,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/PopService.html":{},"interfaces/SdkField.html":{}}}],["com",{"_index":5493,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["combination",{"_index":3646,"title":{},"body":{"components/NotificationsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["combined",{"_index":5335,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["come",{"_index":442,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["comes",{"_index":1988,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["coming",{"_index":459,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["command",{"_index":5802,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["commented",{"_index":3010,"title":{},"body":{"components/LoaderComponent.html":{}}}],["commit",{"_index":5445,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commits",{"_index":5115,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["commonmodule",{"_index":688,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UtilityModule.html":{}}}],["communicate",{"_index":3224,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["communicates",{"_index":3164,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupComponent.html":{}}}],["complaining",{"_index":3736,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["complete",{"_index":4719,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["complex",{"_index":5366,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["compliant",{"_index":5801,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["component",{"_index":0,"title":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["component(s",{"_index":5830,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["component_template",{"_index":201,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["componentfactory",{"_index":1557,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["componentfactoryresolver",{"_index":1531,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentinstance",{"_index":2517,"title":{},"body":{"components/InputComponent.html":{}}}],["componentref",{"_index":1551,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["componentref.instance",{"_index":2584,"title":{},"body":{"components/InputComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["components.entrecode.de",{"_index":5084,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["concat",{"_index":5579,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["concat(this.config.availablesizes",{"_index":3816,"title":{},"body":{"classes/Pagination.html":{}}}],["concat(this.getresourcelistactions(list",{"_index":4018,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concat(this.timespan",{"_index":1348,"title":{},"body":{"interfaces/Day.html":{}}}],["concatted",{"_index":4012,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["concept",{"_index":1936,"title":{},"body":{"classes/Field.html":{}}}],["conceptualizes",{"_index":2877,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["config",{"_index":383,"title":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["config.fields",{"_index":1809,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key",{"_index":1810,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].immutable",{"_index":1811,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.fields[key].readonly",{"_index":1812,"title":{},"body":{"injectables/EntryService.html":{}}}],["config.filter",{"_index":2001,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["config.input",{"_index":4685,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.interface",{"_index":1071,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["config.interface.ts",{"_index":1117,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["config.interface.ts:11",{"_index":3883,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:6",{"_index":1952,"title":{},"body":{"interfaces/FieldConfig.html":{}}}],["config.interface.ts:7",{"_index":3886,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.interface.ts:9",{"_index":3884,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["config.output",{"_index":4686,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service",{"_index":776,"title":{},"body":{"injectables/AuthService.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["config.service.ts",{"_index":2789,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["config.service.ts:101",{"_index":3525,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:122",{"_index":3514,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:14",{"_index":2802,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:15",{"_index":4653,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:17",{"_index":3536,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:179",{"_index":4644,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:18",{"_index":2804,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:183",{"_index":4650,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:192",{"_index":3497,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:199",{"_index":4652,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:209",{"_index":4647,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:217",{"_index":4645,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config.service.ts:223",{"_index":3521,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:23",{"_index":2798,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["config.service.ts:35",{"_index":2806,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:40",{"_index":3509,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:44",{"_index":2796,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:55",{"_index":3530,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:60",{"_index":3526,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["config.service.ts:7",{"_index":2807,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.service.ts:9",{"_index":2800,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["config.view",{"_index":4684,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["config/field",{"_index":1940,"title":{},"body":{"classes/Field.html":{},"interfaces/ItemConfig.html":{}}}],["config/model",{"_index":1076,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["config/resource",{"_index":775,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config/resource.service",{"_index":1764,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"interfaces/Upload.html":{}}}],["config/resource.service.ts",{"_index":4106,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["config/resource.service.ts:103",{"_index":4112,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:121",{"_index":4114,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:132",{"_index":4116,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:35",{"_index":4108,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:38",{"_index":4127,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:47",{"_index":4119,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:53",{"_index":4109,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:64",{"_index":4123,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:82",{"_index":4126,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/resource.service.ts:97",{"_index":4117,"title":{},"body":{"injectables/ResourceService.html":{}}}],["config/sdk",{"_index":4161,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["config/type",{"_index":1224,"title":{},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["config?.createlabel",{"_index":1115,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["configinput",{"_index":2728,"title":{},"body":{"components/ListComponent.html":{}}}],["configuration",{"_index":994,"title":{},"body":{"classes/Config.html":{},"interfaces/FieldConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configuration.interface.ts",{"_index":3615,"title":{},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["configurations",{"_index":983,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["configure",{"_index":984,"title":{},"body":{"classes/Config.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["configure(key",{"_index":986,"title":{},"body":{"classes/Config.html":{}}}],["configure?(key",{"_index":1001,"title":{},"body":{"classes/Config.html":{}}}],["configured",{"_index":1049,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["configuring",{"_index":3483,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["confirmation",{"_index":1188,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["connect",{"_index":2595,"title":{},"body":{"components/InputComponent.html":{}}}],["connectcontrol",{"_index":2518,"title":{},"body":{"components/InputComponent.html":{}}}],["connector",{"_index":547,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["connectors",{"_index":551,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["considered",{"_index":5156,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["consistent",{"_index":1414,"title":{},"body":{"interfaces/Day.html":{}}}],["console.error('cannot",{"_index":4687,"title":{},"body":{"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["console.error('missing",{"_index":4682,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["console.error(err",{"_index":4764,"title":{},"body":{"components/UploadComponent.html":{}}}],["console.error(notification.error",{"_index":3742,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.log('cannot",{"_index":2817,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.log('could",{"_index":3178,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["console.log('entry',item.getbody(),item.id",{"_index":5316,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["console.log('error",{"_index":1105,"title":{},"body":{"components/CrudComponent.html":{}}}],["console.log('no",{"_index":4008,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["console.log('raw",{"_index":1278,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["console.log('received",{"_index":5415,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["console.log('routes",{"_index":3392,"title":{},"body":{"components/MenuComponent.html":{}}}],["console.log('should",{"_index":2506,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["console.warn('addfield",{"_index":2212,"title":{},"body":{"injectables/FormService.html":{}}}],["console.warn('cannot",{"_index":1605,"title":{},"body":{"directives/EntriesDirective.html":{},"injectables/LoaderService.html":{},"classes/Sorter.html":{}}}],["console.warn('could",{"_index":2572,"title":{},"body":{"components/InputComponent.html":{}}}],["console.warn('field",{"_index":2831,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["console.warn('fileservice#resolveassets",{"_index":2045,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn('has",{"_index":966,"title":{},"body":{"classes/Collection.html":{}}}],["console.warn('no",{"_index":2077,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"interfaces/Upload.html":{}}}],["console.warn('notification.time",{"_index":3698,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["console.warn('this",{"_index":3749,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["console.warn('to",{"_index":3965,"title":{},"body":{"components/PopComponent.html":{}}}],["console.warn('tried",{"_index":2736,"title":{},"body":{"components/ListComponent.html":{},"components/NotificationsComponent.html":{}}}],["console.warn('wont",{"_index":2057,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["console.warn(`ec",{"_index":3469,"title":{},"body":{"components/ModalComponent.html":{}}}],["console.warn(`entryservice.change",{"_index":1768,"title":{},"body":{"injectables/EntryService.html":{}}}],["console.warn(`icon",{"_index":2382,"title":{},"body":{"components/IconComponent.html":{}}}],["console.warn(`relation",{"_index":808,"title":{},"body":{"injectables/AuthService.html":{}}}],["const",{"_index":164,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/readme/core-readme.html":{}}}],["constructed",{"_index":1854,"title":{},"body":{"classes/Field.html":{}}}],["constructor",{"_index":389,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(@inject('environment",{"_index":4239,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(@inject('moment.format.date",{"_index":1275,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["constructor(@inject('usedesktopnotifications",{"_index":3737,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(app",{"_index":4544,"title":{},"body":{"components/TinymceComponent.html":{}}}],["constructor(auth",{"_index":3153,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{}}}],["constructor(cdr",{"_index":2926,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["constructor(componentfactoryresolver",{"_index":1530,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["constructor(config",{"_index":3771,"title":{},"body":{"classes/Pagination.html":{},"classes/PaginationConfig.html":{}}}],["constructor(el",{"_index":1491,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/TabComponent.html":{}}}],["constructor(element",{"_index":2103,"title":{},"body":{"directives/FocusDirective.html":{}}}],["constructor(entryservice",{"_index":3494,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["constructor(environment",{"_index":4189,"title":{},"body":{"injectables/SdkService.html":{}}}],["constructor(fb",{"_index":3197,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["constructor(fileservice",{"_index":613,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["constructor(formservice",{"_index":1457,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["constructor(geocodeservice",{"_index":3100,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["constructor(host",{"_index":2973,"title":{},"body":{"components/LoaderComponent.html":{}}}],["constructor(iconservice",{"_index":2359,"title":{},"body":{"components/IconComponent.html":{}}}],["constructor(items",{"_index":896,"title":{},"body":{"classes/Collection.html":{}}}],["constructor(listconfig",{"_index":2667,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["constructor(maploader",{"_index":2234,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["constructor(modelconfig",{"_index":1659,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["constructor(notification",{"_index":3618,"title":{},"body":{"classes/Notification.html":{}}}],["constructor(notificationservice",{"_index":2305,"title":{},"body":{"injectables/HistoryService.html":{},"components/NotificationsComponent.html":{}}}],["constructor(popservice",{"_index":2450,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["constructor(private",{"_index":662,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme/location-readme.html":{}}}],["constructor(property",{"_index":1852,"title":{},"body":{"classes/Field.html":{}}}],["constructor(protected",{"_index":3243,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PopComponent.html":{}}}],["constructor(public",{"_index":453,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["constructor(resourceconfig",{"_index":735,"title":{},"body":{"injectables/AuthService.html":{},"components/ResourceListPopComponent.html":{}}}],["constructor(router",{"_index":3336,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["constructor(sdk",{"_index":447,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"directives/ImageDirective.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"components/UploadComponent.html":{}}}],["constructor(symbol",{"_index":1819,"title":{},"body":{"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/InputErrorsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["constructor(usedesktopnotifications",{"_index":3717,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructor(viewcontainerref",{"_index":4337,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["constructors",{"_index":3719,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["constructs",{"_index":898,"title":{},"body":{"classes/Collection.html":{},"components/ModalComponent.html":{}}}],["consume",{"_index":5313,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["contacted",{"_index":4838,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["contain",{"_index":1906,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"classes/Sorter.html":{}}}],["contained",{"_index":916,"title":{},"body":{"classes/Collection.html":{}}}],["container",{"_index":41,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["containing",{"_index":1323,"title":{},"body":{"interfaces/Day.html":{},"components/ListComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["contains",{"_index":651,"title":{},"body":{"guards/AuthGuard.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["content",{"_index":2353,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["contentchildren",{"_index":3463,"title":{},"body":{"components/ModalComponent.html":{},"components/TabsComponent.html":{}}}],["contentchildren(tabcomponent",{"_index":4512,"title":{},"body":{"components/TabsComponent.html":{}}}],["contentchildren(templateref",{"_index":3456,"title":{},"body":{"components/ModalComponent.html":{}}}],["contents",{"_index":2637,"title":{},"body":{"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["context",{"_index":4860,"title":{},"body":{"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["contexts",{"_index":2648,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["control",{"_index":47,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Pagination.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["control's",{"_index":2604,"title":{},"body":{"components/InputErrorsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls",{"_index":2198,"title":{},"body":{"injectables/FormService.html":{},"classes/PaginationConfig.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["controls[field.property",{"_index":2204,"title":{},"body":{"injectables/FormService.html":{}}}],["controlvalueaccessor",{"_index":18,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["conventional",{"_index":5114,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["cookie",{"_index":695,"title":{},"body":{"modules/AuthModule.html":{},"dependencies.html":{}}}],["cookiefactory",{"_index":682,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["cookiemodule",{"_index":693,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/functions.html":{}}}],["cookiemodule.forroot",{"_index":704,"title":{},"body":{"modules/AuthModule.html":{}}}],["coords",{"_index":2267,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{}}}],["coords.lat",{"_index":3065,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["coords.lng",{"_index":3064,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["core",{"_index":545,"title":{"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/core-changelog.html":{}},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/FormService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["correct",{"_index":5807,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["correctly",{"_index":5371,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["count",{"_index":3802,"title":{},"body":{"classes/Pagination.html":{}}}],["counter",{"_index":5409,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["counter.component.html",{"_index":5410,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["countercomponent",{"_index":5411,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["course",{"_index":1934,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["coverage",{"_index":4852,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":571,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["create(model",{"_index":1744,"title":{},"body":{"injectables/EntryService.html":{}}}],["create(relation",{"_index":4113,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["create/edit/delete",{"_index":1008,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["create/read/update/delete",{"_index":4129,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createclicked",{"_index":4056,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["created",{"_index":505,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["created.otherwise",{"_index":4124,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["createlabel",{"_index":1121,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["createlist",{"_index":536,"title":{},"body":{"components/AssetListComponent.html":{}}}],["createnew",{"_index":4048,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["creates",{"_index":82,"title":{},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["creates/updates",{"_index":587,"title":{},"body":{"components/AssetListComponent.html":{}}}],["creating",{"_index":4168,"title":{},"body":{"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["creator",{"_index":3534,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["credentials",{"_index":3183,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["crud",{"_index":1014,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["crud'ed",{"_index":1037,"title":{},"body":{"components/CrudComponent.html":{}}}],["crud's",{"_index":1034,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud'},{'name",{"_index":221,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["crud.component",{"_index":4102,"title":{},"body":{"modules/ResourceModule.html":{}}}],["crud.component.html",{"_index":1015,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["crud.component.ts",{"_index":4054,"title":{},"body":{"components/ResourceCrudComponent.html":{},"coverage.html":{}}}],["crud.component.ts:29",{"_index":4058,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:31",{"_index":4060,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:33",{"_index":4059,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:35",{"_index":4061,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:37",{"_index":4072,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:39",{"_index":4075,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:41",{"_index":4073,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:43",{"_index":4062,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:45",{"_index":4064,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:47",{"_index":4057,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:53",{"_index":4077,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:54",{"_index":4076,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:57",{"_index":4069,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:61",{"_index":4068,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:72",{"_index":4067,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:77",{"_index":4070,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud.component.ts:90",{"_index":4065,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crud/crud",{"_index":1710,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{}}}],["crud/crud.component",{"_index":1212,"title":{},"body":{"modules/DataModule.html":{}}}],["crud/resource",{"_index":4053,"title":{},"body":{"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["crudcomponent",{"_index":220,"title":{"components/CrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["crudcomponent#loadentry",{"_index":4083,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["crudconfig",{"_index":1031,"title":{"interfaces/CrudConfig.html":{}},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["crypto",{"_index":5216,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["css",{"_index":5431,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["current",{"_index":137,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["currentactions",{"_index":417,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currentid",{"_index":409,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["currently",{"_index":438,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"interfaces/Day.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"classes/Pagination.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["cursor",{"_index":5648,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["custom",{"_index":1147,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["customfieldcomponent",{"_index":1538,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["customfieldconfig",{"_index":3496,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["customfieldscomponent",{"_index":5406,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["custominputcomponent",{"_index":5384,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customization",{"_index":1033,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["customizations",{"_index":5311,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customize",{"_index":3505,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["customizing",{"_index":5343,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["customupload",{"_index":1122,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["customwebpackconfig",{"_index":5209,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["d5dc292",{"_index":5564,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d7fa72b",{"_index":5552,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["d8ad11d",{"_index":5471,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["d8c67be",{"_index":5480,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["darf",{"_index":5306,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["dark",{"_index":3436,"title":{},"body":{"components/ModalComponent.html":{}}}],["das",{"_index":3651,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["data",{"_index":370,"title":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["data.entryid",{"_index":2347,"title":{},"body":{"injectables/HistoryService.html":{}}}],["data.module",{"_index":5598,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["datamanager",{"_index":846,"title":{},"body":{"injectables/AuthService.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamanager(environment.environment",{"_index":4252,"title":{},"body":{"injectables/SdkService.html":{}}}],["datamanager.enablehistoryevents(eventsource",{"_index":2344,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamanagerid",{"_index":714,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["datamanagerresource",{"_index":437,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["datamanagers",{"_index":2300,"title":{},"body":{"injectables/HistoryService.html":{}}}],["datamodule",{"_index":1191,"title":{"modules/DataModule.html":{}},"body":{"modules/DataModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{}}}],["datamodule.forenvironment(environment",{"_index":5256,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["datamoduleconfig",{"_index":1228,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["datarun",{"_index":5821,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["date",{"_index":876,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"modules/SymbolModule.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["date()).format",{"_index":4671,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date(0",{"_index":4672,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["date.clone",{"_index":1418,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[0].clone().startof('day",{"_index":1396,"title":{},"body":{"interfaces/Day.html":{}}}],["date.clone().startof('day').issame(this.timespan[1].clone().startof('day",{"_index":1398,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('dd",{"_index":1405,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format('mm",{"_index":1399,"title":{},"body":{"interfaces/Day.html":{}}}],["date.format(this.monthformat",{"_index":1420,"title":{},"body":{"interfaces/Day.html":{}}}],["date.isbetween(this.timespan[0",{"_index":1401,"title":{},"body":{"interfaces/Day.html":{}}}],["date.now",{"_index":3023,"title":{},"body":{"components/LoaderComponent.html":{},"interfaces/ResourceActionbarState.html":{}}}],["dateformat",{"_index":1276,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["datenschutz",{"_index":5144,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["datepickers",{"_index":4407,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["daterange'},{'name",{"_index":223,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["daterange/daterange.component",{"_index":865,"title":{},"body":{"modules/CalendarModule.html":{}}}],["daterangecomponent",{"_index":222,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetime",{"_index":1231,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["datetime'},{'name",{"_index":225,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["datetime.component.html",{"_index":1233,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["datetime.pipe",{"_index":862,"title":{},"body":{"modules/CalendarModule.html":{}}}],["datetime/datetime.component",{"_index":2144,"title":{},"body":{"modules/FormModule.html":{}}}],["datetimecomponent",{"_index":224,"title":{"components/DatetimeComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["datetimepipe",{"_index":853,"title":{"pipes/DatetimePipe.html":{}},"body":{"modules/CalendarModule.html":{},"pipes/DatetimePipe.html":{},"coverage.html":{},"overview.html":{}}}],["datum",{"_index":4668,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["day",{"_index":1285,"title":{"interfaces/Day.html":{}},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["day.clone().startof('month').startof('week",{"_index":1388,"title":{},"body":{"interfaces/Day.html":{}}}],["day.date.clone",{"_index":1350,"title":{},"body":{"interfaces/Day.html":{}}}],["day.first",{"_index":1343,"title":{},"body":{"interfaces/Day.html":{}}}],["day.format('mm",{"_index":1400,"title":{},"body":{"interfaces/Day.html":{}}}],["day.last",{"_index":1345,"title":{},"body":{"interfaces/Day.html":{}}}],["dayclicked",{"_index":1326,"title":{},"body":{"interfaces/Day.html":{}}}],["days",{"_index":1254,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["dd.mm.yyyy",{"_index":869,"title":{},"body":{"modules/CalendarModule.html":{}}}],["dd83e20",{"_index":5476,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["de",{"_index":4415,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["de51159",{"_index":5578,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["deactivate",{"_index":4477,"title":{},"body":{"components/TabComponent.html":{}}}],["deactivated",{"_index":4478,"title":{},"body":{"components/TabComponent.html":{}}}],["death",{"_index":5651,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["debounce",{"_index":2519,"title":{},"body":{"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime",{"_index":1299,"title":{},"body":{"interfaces/Day.html":{},"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["debouncetime(this.debounce",{"_index":2589,"title":{},"body":{"components/InputComponent.html":{}}}],["decide",{"_index":5386,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["decides",{"_index":2186,"title":{},"body":{"injectables/FormService.html":{},"components/ListComponent.html":{}}}],["decimal",{"_index":4656,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["deck",{"_index":3459,"title":{},"body":{"components/ModalComponent.html":{}}}],["declarations",{"_index":347,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["declare",{"_index":163,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["declares",{"_index":2257,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["decoration",{"_index":3415,"title":{},"body":{"components/MenuComponent.html":{}}}],["decorators",{"_index":123,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["decrement",{"_index":5414,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["deduplicate",{"_index":1954,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["def9084",{"_index":5562,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["default",{"_index":120,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultcolumns",{"_index":3982,"title":{},"body":{"injectables/PopService.html":{}}}],["defaultentryinputcomponent",{"_index":226,"title":{"components/DefaultEntryInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultentryinputcomponent#autofocus",{"_index":5639,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["defaultentryoutputcomponent",{"_index":227,"title":{"components/DefaultEntryOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultfilter",{"_index":2764,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["defaulting",{"_index":719,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["defaultinputcomponent",{"_index":21,"title":{"components/DefaultInputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaultinputcomponent:13",{"_index":140,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:15",{"_index":148,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:17",{"_index":147,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:19",{"_index":139,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:21",{"_index":143,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:24",{"_index":145,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:26",{"_index":121,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultinputcomponent:32",{"_index":119,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["defaultmonthformat",{"_index":1330,"title":{},"body":{"interfaces/Day.html":{}}}],["defaultoptions",{"_index":1980,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["defaultoutputcomponent",{"_index":230,"title":{"components/DefaultOutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["defaults",{"_index":478,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["defaultsize",{"_index":2449,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["defaulttime",{"_index":3714,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["define",{"_index":5331,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["defined",{"_index":69,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["defines",{"_index":1181,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"injectables/TypeConfigService.html":{}}}],["del",{"_index":1731,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["del(model",{"_index":1746,"title":{},"body":{"injectables/EntryService.html":{}}}],["del(relation",{"_index":4115,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["delay",{"_index":3346,"title":{},"body":{"components/MenuComponent.html":{}}}],["delete",{"_index":296,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["deletenullproperties",{"_index":4111,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deleteonremove",{"_index":1123,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["deletes",{"_index":1748,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["deliver",{"_index":3518,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["demo",{"_index":625,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["demonstrates",{"_index":5271,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["demos",{"_index":5827,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["denied",{"_index":3748,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dependencies",{"_index":346,"title":{"dependencies.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dependency",{"_index":5470,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["depending",{"_index":74,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["depends",{"_index":4169,"title":{},"body":{"interfaces/SdkField.html":{},"injectables/SymbolPipe.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["deprecated",{"_index":1769,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["der",{"_index":3653,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["desc",{"_index":2765,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["desc/asc",{"_index":5625,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["descending",{"_index":2775,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["describe",{"_index":1902,"title":{},"body":{"classes/Field.html":{}}}],["describes",{"_index":2633,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["description",{"_index":12,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}}}],["deselects",{"_index":4488,"title":{},"body":{"components/TabComponent.html":{}}}],["desired",{"_index":3050,"title":{},"body":{"components/LocationMapComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["desktop",{"_index":3712,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification",{"_index":3715,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["desktopnotification(notification",{"_index":3720,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["dest",{"_index":5813,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["destroy",{"_index":4543,"title":{},"body":{"components/TinymceComponent.html":{}}}],["destroys",{"_index":3286,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["details",{"_index":5433,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["determine",{"_index":3855,"title":{},"body":{"components/PaginationComponent.html":{}}}],["determines",{"_index":1294,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ItemConfig.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{}}}],["dev",{"_index":5098,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["develop",{"_index":1124,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["developer",{"_index":3504,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{}}}],["developing",{"_index":5085,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["development",{"_index":5121,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["devkit/build",{"_index":5201,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["devthe",{"_index":5202,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["dialog",{"_index":2455,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["die",{"_index":3654,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["diese",{"_index":666,"title":{},"body":{"guards/AuthGuard.html":{}}}],["differ",{"_index":1054,"title":{},"body":{"components/CrudComponent.html":{}}}],["different",{"_index":1312,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"interfaces/ItemConfig.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["direct",{"_index":3012,"title":{},"body":{"components/LoaderComponent.html":{}}}],["directive",{"_index":198,"title":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["directives",{"_index":323,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"overview.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":5128,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["directly",{"_index":500,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["directory",{"_index":5132,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["disable",{"_index":3008,"title":{},"body":{"components/LoaderComponent.html":{}}}],["disablecolumnfilter",{"_index":2119,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{}}}],["disablecreatepop",{"_index":1125,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabled",{"_index":1485,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["disabledrag",{"_index":2766,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["disabledragend",{"_index":1322,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledragstart",{"_index":1320,"title":{},"body":{"interfaces/Day.html":{}}}],["disabledrop",{"_index":4781,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["disabledropdown",{"_index":2767,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["disableheader",{"_index":1716,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["disablelegacy",{"_index":609,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["disablelistpop",{"_index":1126,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disableremove",{"_index":1127,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["disables",{"_index":3437,"title":{},"body":{"components/ModalComponent.html":{}}}],["disablesearchbar",{"_index":1128,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["disableselectswitch",{"_index":1129,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["disabletime",{"_index":1235,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["disableupdates",{"_index":2303,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableupdates(key",{"_index":2307,"title":{},"body":{"injectables/HistoryService.html":{}}}],["disableurlupload",{"_index":1130,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["display",{"_index":1375,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["displayaccount",{"_index":4641,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate",{"_index":4642,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displaydate(time",{"_index":4646,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["displayed",{"_index":1238,"title":{},"body":{"components/DatetimeComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ErrorComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{},"injectables/TypeConfigService.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["displays",{"_index":1301,"title":{},"body":{"interfaces/Day.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["dist",{"_index":5092,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["dist/data",{"_index":5822,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["div",{"_index":3849,"title":{},"body":{"components/PaginationComponent.html":{}}}],["dma",{"_index":3579,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["dmasset",{"_index":2033,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{}}}],["dmassetconfig",{"_index":1981,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist",{"_index":1968,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetlist.getallitems",{"_index":2062,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["dmassetresource",{"_index":1970,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["dmassets",{"_index":4662,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["dnddraggable",{"_index":5574,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dndmodule",{"_index":1208,"title":{},"body":{"modules/DataModule.html":{},"modules/SelectModule.html":{}}}],["doc",{"_index":626,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["docs",{"_index":3424,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["document",{"_index":1993,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ListHeaderComponent.html":{},"interfaces/Upload.html":{}}}],["document:click",{"_index":1658,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["document:click($event",{"_index":1678,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["documentation",{"_index":4853,"title":{},"body":{"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["documented",{"_index":5444,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["done",{"_index":5798,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["dont",{"_index":5364,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dosomethingrisky",{"_index":3656,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["doubt",{"_index":2046,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["drag",{"_index":1209,"title":{},"body":{"modules/DataModule.html":{},"interfaces/Day.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["dragend",{"_index":3058,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["draggable",{"_index":1287,"title":{},"body":{"interfaces/Day.html":{}}}],["dragged",{"_index":1295,"title":{},"body":{"interfaces/Day.html":{},"interfaces/ListConfig.html":{}}}],["dragging",{"_index":1357,"title":{},"body":{"interfaces/Day.html":{}}}],["dragleave",{"_index":1489,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragleave(e",{"_index":1503,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover",{"_index":1490,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragover(e",{"_index":1506,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dragstart(day",{"_index":1361,"title":{},"body":{"interfaces/Day.html":{}}}],["drawer",{"_index":3931,"title":{},"body":{"components/PopComponent.html":{}}}],["driven",{"_index":5071,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["drop",{"_index":1210,"title":{},"body":{"modules/DataModule.html":{},"directives/DropzoneDirective.html":{},"modules/SelectModule.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{}}}],["drop(e",{"_index":1508,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropday(day",{"_index":1341,"title":{},"body":{"interfaces/Day.html":{}}}],["dropdown",{"_index":1156,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["dropdownfields",{"_index":1131,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["dropdowns",{"_index":1161,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ListHeaderComponent.html":{}}}],["dropped",{"_index":1498,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["dropzone/dropzone.directive",{"_index":2093,"title":{},"body":{"modules/FilesModule.html":{}}}],["dropzonedirective",{"_index":326,"title":{"directives/DropzoneDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["due",{"_index":5787,"title":{},"body":{"additional-documentation/changelog/tinymce-changelog.html":{}}}],["duplicates",{"_index":1964,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{}}}],["during",{"_index":3211,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["dynamic",{"_index":233,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["dynamically",{"_index":3756,"title":{},"body":{"components/OutputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["dynamicrackcomponent",{"_index":231,"title":{"components/DynamicRackComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent",{"_index":232,"title":{"components/DynamicSlotComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["dynamicslotcomponent:11",{"_index":2565,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:14",{"_index":2564,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["dynamicslotcomponent:18",{"_index":2548,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["e",{"_index":184,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["e).then",{"_index":4807,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["e.datatransfer.files",{"_index":1520,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.datatransfer.files.length",{"_index":1521,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["e.g",{"_index":72,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Symbol.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["e.preventdefault",{"_index":1364,"title":{},"body":{"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{}}}],["e.stopimmediatepropagation",{"_index":2948,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["e.stoppropagation",{"_index":1516,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListItemsComponent.html":{},"components/UploadComponent.html":{}}}],["e.target",{"_index":4743,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files",{"_index":4744,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.files.length",{"_index":4745,"title":{},"body":{"components/UploadComponent.html":{}}}],["e.target.localname",{"_index":4612,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e.toelement",{"_index":4614,"title":{},"body":{"components/TinymceComponent.html":{}}}],["e2bbf1a",{"_index":5634,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["e2e",{"_index":5139,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["e8b0e49",{"_index":5717,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["ea24c06",{"_index":5635,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["ea4ba17",{"_index":5461,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["each",{"_index":1726,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"changelog.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog.html":{}}}],["easy",{"_index":5796,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["eb506da",{"_index":5590,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ec",{"_index":34,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.api",{"_index":443,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["ec.components",{"_index":2159,"title":{},"body":{"injectables/FormService.html":{},"modules/SymbolModule.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["ec.components/ace",{"_index":4848,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ec.components/ace@0.6.0",{"_index":5157,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/calendar",{"_index":1258,"title":{},"body":{"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["ec.components/calendar@0.2.0",{"_index":5158,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/core",{"_index":379,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["ec.components/core@0.19.0",{"_index":5159,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/coreimport",{"_index":5428,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["ec.components/data",{"_index":4846,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ec.components/data/src/entry",{"_index":5169,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/data@0.42.0",{"_index":5160,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/location",{"_index":4849,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["ec.components/location@0.18.0",{"_index":5161,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/medium",{"_index":4850,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["ec.components/style",{"_index":4847,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ec.components/style/components';new",{"_index":5182,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style/components.scss\";5",{"_index":5242,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ec.components/style/scss/components",{"_index":5435,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["ec.components/style/scss/components';3",{"_index":5183,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/style@0.21.0",{"_index":5163,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/tinymce",{"_index":4851,"title":{},"body":{"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["ec.components/tinymce@0.5.0",{"_index":5164,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.components/ui",{"_index":154,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"modules/FilesModule.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ec.components/ui';8",{"_index":5817,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ec.components/ui/src/icon/emoji",{"_index":2371,"title":{},"body":{"components/IconComponent.html":{}}}],["ec.components/ui@0.36.0",{"_index":5165,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["ec.datamanager",{"_index":5416,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["ec.sdk",{"_index":709,"title":{},"body":{"injectables/AuthService.html":{},"classes/Field.html":{},"injectables/SdkService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ec.sdk/lib/accounts",{"_index":4227,"title":{},"body":{"injectables/SdkService.html":{}}}],["ec.sdk/lib/core",{"_index":774,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/datamanager",{"_index":2329,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/publicapi",{"_index":513,"title":{},"body":{"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["ec.sdk/lib/resources/accounts/accountresource",{"_index":3170,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["ec.sdk/lib/resources/datamanager/datamanagerresource",{"_index":452,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{}}}],["ec.sdk/lib/resources/datamanager/modelresource",{"_index":2328,"title":{},"body":{"injectables/HistoryService.html":{}}}],["ec.sdk/lib/resources/listresource",{"_index":1601,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetlist",{"_index":1969,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/dmassetresource",{"_index":1971,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/publicapi/entrylist",{"_index":1599,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["ec.sdk/lib/resources/publicapi/entryresource",{"_index":1600,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetlist",{"_index":1973,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ec.sdk/lib/resources/publicapi/publicassetresource",{"_index":512,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["ec.sdk/lib/resources/resource",{"_index":4093,"title":{},"body":{"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["ec.sdk/lib/session",{"_index":4228,"title":{},"body":{"injectables/SdkService.html":{}}}],["ecasset",{"_index":466,"title":{},"body":{"directives/AssetDirective.html":{}}}],["ecasset]'},{'name",{"_index":325,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecdropzone",{"_index":1484,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ecdropzone]'},{'name",{"_index":327,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentries",{"_index":1565,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["ecentries]'},{'name",{"_index":329,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecentry",{"_index":1626,"title":{},"body":{"directives/EntryDirective.html":{}}}],["ecentry]'},{'name",{"_index":331,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecfocus",{"_index":2102,"title":{},"body":{"directives/FocusDirective.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ecfocus]'},{'name",{"_index":333,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecicons",{"_index":2398,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["ecimage",{"_index":2405,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ecimage]'},{'name",{"_index":336,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecslothost",{"_index":338,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ecthis",{"_index":5804,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["edge",{"_index":1358,"title":{},"body":{"interfaces/Day.html":{}}}],["edit",{"_index":1106,"title":{},"body":{"components/CrudComponent.html":{},"injectables/FormService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["edit/create",{"_index":5353,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["editable",{"_index":1241,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["edited",{"_index":2537,"title":{},"body":{"components/InputComponent.html":{},"interfaces/ItemConfig.html":{}}}],["edititem",{"_index":5508,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["editor",{"_index":15,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"injectables/EntryService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"changelog.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}}}],["editor#mediumeditor",{"_index":3298,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor'},{'name",{"_index":275,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["editor.component",{"_index":3315,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["editor.component.html",{"_index":3277,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.scss",{"_index":3276,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts",{"_index":3271,"title":{},"body":{"components/MediumEditorComponent.html":{},"coverage.html":{}}}],["editor.component.ts:35",{"_index":3280,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:37",{"_index":3281,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:39",{"_index":3283,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:41",{"_index":3284,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:43",{"_index":3291,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:45",{"_index":3295,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:47",{"_index":3292,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:49",{"_index":3294,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:52",{"_index":3287,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:63",{"_index":3285,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:68",{"_index":3290,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:75",{"_index":3293,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:78",{"_index":3288,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.component.ts:82",{"_index":3289,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.getcontent",{"_index":4596,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editor.module.ts",{"_index":3314,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor.on('change",{"_index":183,"title":{},"body":{"components/AceComponent.html":{}}}],["editor.scss",{"_index":3308,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setcontent(this.value",{"_index":3306,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor.setvalue(this.value",{"_index":190,"title":{},"body":{"components/AceComponent.html":{}}}],["editor/dist/js/medium",{"_index":3296,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/lib/medium",{"_index":3270,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["editor/src/sass/medium",{"_index":3307,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor/src/test.ts",{"_index":4989,"title":{},"body":{"coverage.html":{}}}],["editor?e=1",{"_index":3274,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["editor@0.4.0",{"_index":5162,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["editor[0",{"_index":4609,"title":{},"body":{"components/TinymceComponent.html":{}}}],["editorsettings",{"_index":4592,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["editorsettings.setup(editor",{"_index":4603,"title":{},"body":{"components/TinymceComponent.html":{}}}],["efb984e",{"_index":5703,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["eine",{"_index":3916,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["eingeloggt",{"_index":674,"title":{},"body":{"guards/AuthGuard.html":{}}}],["eject",{"_index":5197,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["el",{"_index":1493,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{},"components/TabComponent.html":{}}}],["element",{"_index":126,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["elementref",{"_index":122,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"directives/FocusDirective.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{}}}],["elements",{"_index":3854,"title":{},"body":{"components/PaginationComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["email",{"_index":758,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{}}}],["emailavailable",{"_index":3248,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["emaillabel",{"_index":3192,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailplaceholder",{"_index":3193,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["emailvalidator",{"_index":5038,"title":{},"body":{"coverage.html":{}}}],["embedd",{"_index":2368,"title":{},"body":{"components/IconComponent.html":{}}}],["embedded",{"_index":1536,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{}}}],["emit",{"_index":1423,"title":{},"body":{"interfaces/Day.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["emit(host",{"_index":3662,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["emit(notification",{"_index":3725,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["emits",{"_index":1040,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["emitted",{"_index":1068,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithNotifications.html":{}}}],["emitter",{"_index":144,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["emojiicons",{"_index":2370,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["empty",{"_index":932,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/MediumEditorComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["empty=true",{"_index":5362,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["en",{"_index":4400,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["enable",{"_index":843,"title":{},"body":{"injectables/AuthService.html":{}}}],["enables",{"_index":2315,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["enableupdates",{"_index":2304,"title":{},"body":{"injectables/HistoryService.html":{}}}],["enableupdates(resource",{"_index":2312,"title":{},"body":{"injectables/HistoryService.html":{}}}],["encapsulation",{"_index":2653,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["end",{"_index":1321,"title":{},"body":{"interfaces/Day.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["endless",{"_index":1570,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["enforces",{"_index":5263,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["enhance",{"_index":4440,"title":{},"body":{"injectables/SymbolService.html":{}}}],["enough",{"_index":5244,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ensure",{"_index":3909,"title":{},"body":{"components/PasswordResetComponent.html":{},"components/PopComponent.html":{}}}],["enters",{"_index":5389,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entities",{"_index":1180,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["entity",{"_index":1189,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ItemConfig.html":{}}}],["entrecode",{"_index":5074,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entrecode.github.io/ec.components",{"_index":5081,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["entries",{"_index":1150,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entries/entries.directive",{"_index":1214,"title":{},"body":{"modules/DataModule.html":{}}}],["entriesdirective",{"_index":328,"title":{"directives/EntriesDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entry",{"_index":228,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["entry.del().then((res",{"_index":1816,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.getimagethumburl(property",{"_index":4658,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.gettitle(property",{"_index":4673,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["entry.save",{"_index":1781,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.save(safeput).then((_entry",{"_index":1797,"title":{},"body":{"injectables/EntryService.html":{}}}],["entry.saved",{"_index":4420,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["entry/entry.directive",{"_index":1222,"title":{},"body":{"modules/DataModule.html":{}}}],["entry/entry.service",{"_index":1213,"title":{},"body":{"modules/DataModule.html":{},"injectables/ModelConfigService.html":{}}}],["entry[key",{"_index":1790,"title":{},"body":{"injectables/EntryService.html":{}}}],["entrycomponent",{"_index":5390,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrycomponents",{"_index":360,"title":{},"body":{"modules/AceModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/TinymceModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["entrydirective",{"_index":330,"title":{"directives/EntryDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryform",{"_index":5168,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["entryformcomponent",{"_index":235,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryid",{"_index":1627,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["entryitem",{"_index":1754,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.config",{"_index":1795,"title":{},"body":{"injectables/EntryService.html":{}}}],["entryitem.getbody",{"_index":1780,"title":{},"body":{"injectables/EntryService.html":{}}}],["entrylist",{"_index":592,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["entrylist.model",{"_index":1720,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["entrylistcomponent",{"_index":237,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistpopcomponent",{"_index":238,"title":{"components/EntryListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrylistselectcomponent",{"_index":239,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entrypop",{"_index":1016,"title":{},"body":{"components/CrudComponent.html":{}}}],["entrypopcomponent",{"_index":240,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryresource",{"_index":1593,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["entryselectcomponent",{"_index":241,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice",{"_index":1200,"title":{"injectables/EntryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{}}}],["entryservice#change",{"_index":1776,"title":{},"body":{"injectables/EntryService.html":{}}}],["env",{"_index":4210,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["environment",{"_index":711,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["environment.clientid",{"_index":4244,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.datamanagerid",{"_index":4247,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.environment",{"_index":4254,"title":{},"body":{"injectables/SdkService.html":{}}}],["environment.init",{"_index":4240,"title":{},"body":{"injectables/SdkService.html":{}}}],["environments",{"_index":5246,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["environments/environment",{"_index":5254,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["equal",{"_index":1088,"title":{},"body":{"components/CrudComponent.html":{}}}],["equally",{"_index":1903,"title":{},"body":{"classes/Field.html":{}}}],["erhalten",{"_index":3920,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["err",{"_index":1107,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["err.message",{"_index":3250,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["error",{"_index":640,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["error'},{'name",{"_index":243,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["error('cannot",{"_index":523,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{}}}],["error('get",{"_index":4234,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('no",{"_index":4229,"title":{},"body":{"injectables/SdkService.html":{}}}],["error('the",{"_index":4467,"title":{},"body":{"injectables/SymbolService.html":{}}}],["error(`cannot",{"_index":3828,"title":{},"body":{"classes/Pagination.html":{}}}],["error.code",{"_index":1831,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.code}}{{error.datapath}}{{error?.message}}{{error.detail}}{{error.verbose",{"_index":1836,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.component.html",{"_index":1818,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.datapath",{"_index":1832,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.detail}}{{error.verbose",{"_index":1834,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error.message",{"_index":2623,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["error.verbose",{"_index":1835,"title":{},"body":{"components/ErrorComponent.html":{}}}],["error/error.component",{"_index":3707,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["error?.message",{"_index":1833,"title":{},"body":{"components/ErrorComponent.html":{}}}],["errorcomponent",{"_index":242,"title":{"components/ErrorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["errormessage",{"_index":3186,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["errors",{"_index":2605,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["errors'},{'name",{"_index":254,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["errors.component",{"_index":2630,"title":{},"body":{"modules/IoModule.html":{}}}],["errors.component.html",{"_index":2607,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts",{"_index":2603,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["errors.component.ts:12",{"_index":2609,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:14",{"_index":2616,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors.component.ts:18",{"_index":2612,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errors/input",{"_index":2602,"title":{},"body":{"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["errs",{"_index":2622,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["errs.push",{"_index":2621,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["erstellen",{"_index":4047,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["erstellt",{"_index":5297,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["es6",{"_index":1257,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{}}}],["esc",{"_index":1670,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["escape",{"_index":3978,"title":{},"body":{"injectables/PopService.html":{}}}],["etc",{"_index":1862,"title":{},"body":{"classes/Field.html":{},"components/ListItemsComponent.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["even",{"_index":1142,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event",{"_index":912,"title":{},"body":{"classes/Collection.html":{},"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["event.key",{"_index":3989,"title":{},"body":{"injectables/PopService.html":{}}}],["event.keycode",{"_index":3987,"title":{},"body":{"injectables/PopService.html":{}}}],["eventemitter",{"_index":142,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["eventemitter.ts",{"_index":1000,"title":{},"body":{"classes/Config.html":{}}}],["events",{"_index":3980,"title":{},"body":{"injectables/PopService.html":{}}}],["eventsource",{"_index":2330,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsource/lib/eventsource",{"_index":2331,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventsources",{"_index":2301,"title":{},"body":{"injectables/HistoryService.html":{}}}],["eventually",{"_index":4748,"title":{},"body":{"components/UploadComponent.html":{}}}],["everything",{"_index":3484,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["everytime",{"_index":1979,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["exact",{"_index":1265,"title":{},"body":{"pipes/DatetimePipe.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{}}}],["exactly",{"_index":5348,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["example",{"_index":899,"title":{},"body":{"classes/Collection.html":{},"classes/Field.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/adding-new-packages.html":{}}}],["examples",{"_index":9,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["execute",{"_index":5137,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["exist",{"_index":4468,"title":{},"body":{"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["existing",{"_index":1757,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ListConfigService.html":{},"injectables/ResourceService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{}}}],["existing.hide",{"_index":2826,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["existing.hide.foreach(property",{"_index":2829,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["exists",{"_index":5174,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["expected",{"_index":2354,"title":{},"body":{"components/IconComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["expects",{"_index":160,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/ModalComponent.html":{}}}],["experimental",{"_index":2213,"title":{},"body":{"injectables/FormService.html":{},"interfaces/ListConfig.html":{}}}],["export",{"_index":165,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/stackblitz.html":{}}}],["exportas",{"_index":514,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["exporting",{"_index":5673,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["exports",{"_index":349,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["expose",{"_index":4380,"title":{},"body":{"classes/Sorter.html":{}}}],["exposes",{"_index":707,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{}}}],["extend",{"_index":5381,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["extended",{"_index":3236,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["extends",{"_index":20,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/FormConfig.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["extension",{"_index":2118,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["extensions/modes/themes",{"_index":5440,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["external",{"_index":1170,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Pagination.html":{}}}],["extra",{"_index":1152,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["extracts",{"_index":2178,"title":{},"body":{"injectables/FormService.html":{}}}],["f.hideinlist).map(f",{"_index":2823,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.name",{"_index":4773,"title":{},"body":{"components/UploadComponent.html":{}}}],["f.property",{"_index":2824,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["f.url",{"_index":2022,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["f3590a7",{"_index":5613,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["f7b65f4",{"_index":5691,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["factor",{"_index":5361,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fadein",{"_index":3431,"title":{},"body":{"components/ModalComponent.html":{}}}],["fail",{"_index":967,"title":{},"body":{"classes/Collection.html":{}}}],["failiure",{"_index":3678,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["fails",{"_index":658,"title":{},"body":{"guards/AuthGuard.html":{}}}],["faktor",{"_index":5301,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["fall",{"_index":1801,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fallback",{"_index":2686,"title":{},"body":{"components/ListComponent.html":{},"components/ModalComponent.html":{}}}],["falling",{"_index":3472,"title":{},"body":{"components/ModalComponent.html":{}}}],["falls",{"_index":1171,"title":{},"body":{"interfaces/CrudConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["false",{"_index":394,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"modules/NotificationsModule.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["false).then((actions",{"_index":4044,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["fancier",{"_index":4628,"title":{},"body":{"components/ToggleComponent.html":{}}}],["fb",{"_index":3200,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["fcfdf32",{"_index":5599,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fd41ccc",{"_index":5684,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["features",{"_index":3666,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["fed2c52",{"_index":5580,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["fehler",{"_index":3658,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["ffnungszeiten",{"_index":5393,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field",{"_index":48,"title":{"classes/Field.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"interfaces/CrudConfig.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["field#autofocus",{"_index":5641,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["field's",{"_index":1883,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{}}}],["field('name",{"_index":1920,"title":{},"body":{"classes/Field.html":{}}}],["field(this.property",{"_index":2575,"title":{},"body":{"components/InputComponent.html":{}}}],["field.component",{"_index":1539,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["field.create",{"_index":2194,"title":{},"body":{"injectables/FormService.html":{}}}],["field.display(name",{"_index":1928,"title":{},"body":{"classes/Field.html":{}}}],["field.edit",{"_index":2196,"title":{},"body":{"injectables/FormService.html":{}}}],["field.form",{"_index":2197,"title":{},"body":{"injectables/FormService.html":{}}}],["field.getlabel",{"_index":2917,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.getplaceholder",{"_index":1473,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.group(name",{"_index":1929,"title":{},"body":{"classes/Field.html":{}}}],["field.hideinform",{"_index":4835,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["field.hideinlist",{"_index":2828,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["field.immutable",{"_index":2219,"title":{},"body":{"injectables/FormService.html":{}}}],["field.maxitems||10",{"_index":1476,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["field.nestedcrudconfig",{"_index":2900,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.placeholder",{"_index":1472,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["field.property",{"_index":2887,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["field.readonly",{"_index":2220,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["field.required",{"_index":2215,"title":{},"body":{"injectables/FormService.html":{}}}],["field.resolve({value:{name:'bobby",{"_index":1926,"title":{},"body":{"classes/Field.html":{}}}],["field.sort(name",{"_index":1931,"title":{},"body":{"classes/Field.html":{}}}],["field.ts",{"_index":4162,"title":{},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["field.type",{"_index":458,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["field.validate",{"_index":2189,"title":{},"body":{"injectables/FormService.html":{}}}],["field.validate(control.value",{"_index":2218,"title":{},"body":{"injectables/FormService.html":{}}}],["fieldconfig",{"_index":1160,"title":{"interfaces/FieldConfig.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FieldConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldconfig[field].inputview",{"_index":3561,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[field].type",{"_index":3559,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[key",{"_index":3609,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfig[property",{"_index":3573,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["fieldconfigproperty",{"_index":1838,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{},"components/InputComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["fieldfilter",{"_index":580,"title":{},"body":{"components/AssetListComponent.html":{}}}],["fieldhost",{"_index":1545,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldhostdirective",{"_index":1554,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["fieldname",{"_index":1955,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fields",{"_index":386,"title":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{}}}],["fields.filter((field",{"_index":4833,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe",{"_index":2142,"title":{},"body":{"modules/FormModule.html":{}}}],["fields.pipe.ts",{"_index":4825,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["fields.pipe.ts:10",{"_index":4832,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fields.pipe.ts:12",{"_index":4830,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["fieldvalidators",{"_index":3241,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["fieldvalidators.email",{"_index":3247,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["fieldvalidators.uuid",{"_index":4332,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["file",{"_index":10,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["file.service",{"_index":622,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["fileinput",{"_index":4703,"title":{},"body":{"components/UploadComponent.html":{}}}],["filelist",{"_index":2015,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filename",{"_index":1956,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["filenames",{"_index":1967,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["fileoptions",{"_index":1132,"title":{"interfaces/FileOptions.html":{}},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["files",{"_index":508,"title":{},"body":{"directives/AssetDirective.html":{},"directives/DropzoneDirective.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["files.length",{"_index":2019,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.map(f",{"_index":2021,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["files.split('\\n').map(url",{"_index":4749,"title":{},"body":{"components/UploadComponent.html":{}}}],["files/file.service",{"_index":1190,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["files/files.module",{"_index":1223,"title":{},"body":{"modules/DataModule.html":{}}}],["files[0].url",{"_index":2020,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["fileservice",{"_index":606,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["filesmodule",{"_index":1197,"title":{"modules/FilesModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules.html":{},"overview.html":{}}}],["filestoupload",{"_index":4704,"title":{},"body":{"components/UploadComponent.html":{}}}],["fill(0",{"_index":1391,"title":{},"body":{"interfaces/Day.html":{}}}],["filter",{"_index":537,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["filter((field",{"_index":2200,"title":{},"body":{"injectables/FormService.html":{}}}],["filter((item",{"_index":4373,"title":{},"body":{"classes/Sorter.html":{}}}],["filter((value",{"_index":4036,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(field",{"_index":3558,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["filter(i",{"_index":4016,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter(property",{"_index":573,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["filter(route",{"_index":3387,"title":{},"body":{"components/MenuComponent.html":{}}}],["filter(v",{"_index":4039,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filter.model",{"_index":1765,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter.relation",{"_index":1766,"title":{},"body":{"injectables/EntryService.html":{}}}],["filter[key",{"_index":4141,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["filterable",{"_index":1840,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filterdropdownlist(listcomponent",{"_index":4031,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["filteredfield",{"_index":2836,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteredfield.getlabel",{"_index":2916,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield",{"_index":2842,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterfield(property",{"_index":2855,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterform",{"_index":2837,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterformconfig",{"_index":2838,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filtering",{"_index":1860,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filterinput",{"_index":2839,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filteroperator",{"_index":1841,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["filteroperators",{"_index":5583,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filteroptions",{"_index":1581,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["filterpop",{"_index":2840,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["filterpopclass",{"_index":1842,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["filters",{"_index":1264,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["find",{"_index":5082,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["finds",{"_index":4432,"title":{},"body":{"injectables/SymbolService.html":{}}}],["finished",{"_index":738,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["fire",{"_index":3732,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["fires",{"_index":487,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["first",{"_index":1288,"title":{},"body":{"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fits",{"_index":4121,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["fix",{"_index":2507,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["fixed",{"_index":3441,"title":{},"body":{"components/ModalComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["fixes",{"_index":5460,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["flag",{"_index":558,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"injectables/NotificationsService.html":{},"classes/Sorter.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["flags",{"_index":4712,"title":{},"body":{"components/UploadComponent.html":{}}}],["flexible",{"_index":2711,"title":{},"body":{"components/ListComponent.html":{}}}],["flip",{"_index":1706,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["flips",{"_index":1505,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{}}}],["flow",{"_index":5284,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["fn",{"_index":102,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["focus",{"_index":62,"title":{"interfaces/Focus.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["focus(focus",{"_index":117,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["focus/focus.directive",{"_index":4820,"title":{},"body":{"modules/UtilityModule.html":{}}}],["focusdirective",{"_index":332,"title":{"directives/FocusDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["focused",{"_index":2670,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focuses",{"_index":4799,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["focusevent",{"_index":49,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/UploadSelectComponent.html":{}}}],["focusfirst",{"_index":2659,"title":{},"body":{"components/ListComponent.html":{}}}],["focusitem",{"_index":2656,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["focusnext",{"_index":2660,"title":{},"body":{"components/ListComponent.html":{}}}],["focusprev",{"_index":2661,"title":{},"body":{"components/ListComponent.html":{}}}],["focussed",{"_index":2940,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["folder",{"_index":5172,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/adding-new-packages.html":{}}}],["folders",{"_index":5091,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["following",{"_index":2384,"title":{},"body":{"components/IconComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["follows",{"_index":5286,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["font",{"_index":4390,"title":{},"body":{"interfaces/Symbol.html":{}}}],["footer",{"_index":3429,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{}}}],["forcegroup",{"_index":1985,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["forcereload",{"_index":2069,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["foreach",{"_index":3574,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["foreach((field",{"_index":2202,"title":{},"body":{"injectables/FormService.html":{}}}],["forenvironment",{"_index":1204,"title":{},"body":{"modules/DataModule.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["forenvironment(environment",{"_index":1205,"title":{},"body":{"modules/DataModule.html":{}}}],["forever",{"_index":3632,"title":{},"body":{"classes/Notification.html":{}}}],["form",{"_index":130,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["form's",{"_index":2556,"title":{},"body":{"components/InputComponent.html":{}}}],["form'},{'name",{"_index":236,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["form.component",{"_index":1219,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/ResourceModule.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{}}}],["form.component'new",{"_index":5170,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form.component.html",{"_index":3185,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts",{"_index":3182,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:17",{"_index":4304,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:18",{"_index":3231,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:19",{"_index":4307,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:20",{"_index":3234,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:21",{"_index":4305,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:22",{"_index":3230,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:23",{"_index":4320,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:24",{"_index":3218,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:26",{"_index":3217,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:28",{"_index":3210,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["form.component.ts:30",{"_index":3216,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:32",{"_index":3206,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:34",{"_index":3209,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:36",{"_index":3213,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:37",{"_index":4318,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["form.component.ts:38",{"_index":3215,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":3204,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:42",{"_index":3201,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":3199,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:47",{"_index":3235,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:51",{"_index":3225,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":3229,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:67",{"_index":3221,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.component.ts:72",{"_index":3226,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["form.create",{"_index":5689,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["form.display('amazement_factor",{"_index":5370,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["form.fields",{"_index":2199,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form",{"_index":2221,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.display",{"_index":2224,"title":{},"body":{"injectables/FormService.html":{}}}],["form.form.isediting",{"_index":2223,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getbody",{"_index":2195,"title":{},"body":{"injectables/FormService.html":{}}}],["form.getvalue('keepratio",{"_index":2511,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.getvalue('ratio",{"_index":2510,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.alt.setvalue(title",{"_index":2498,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.height.setvalue(math.round(value",{"_index":2512,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.ratio.setvalue(ratio",{"_index":2499,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(math.round(value",{"_index":2514,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.group.controls.width.setvalue(width",{"_index":2497,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["form.service",{"_index":1466,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["form.ts",{"_index":4970,"title":{},"body":{"coverage.html":{}}}],["form/admin",{"_index":430,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"modules/DataModule.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/default",{"_index":1216,"title":{},"body":{"modules/DataModule.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["form/entry",{"_index":1218,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["form/form.component",{"_index":2193,"title":{},"body":{"injectables/FormService.html":{},"components/ListHeaderComponent.html":{}}}],["form/form.module",{"_index":2956,"title":{},"body":{"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["form/login",{"_index":3181,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["form/resource",{"_index":4101,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["form/signup",{"_index":4301,"title":{},"body":{"components/SignupFormComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{}}}],["format",{"_index":1289,"title":{},"body":{"interfaces/Day.html":{},"injectables/TypeConfigService.html":{}}}],["formats",{"_index":861,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.date",{"_index":879,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.month",{"_index":881,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formats.time",{"_index":880,"title":{},"body":{"modules/CalendarModule.html":{}}}],["formatted",{"_index":1297,"title":{},"body":{"interfaces/Day.html":{}}}],["formattedtext",{"_index":4654,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["formbuilder",{"_index":3198,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["formcomponent",{"_index":244,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["formcomponent#inputs",{"_index":2558,"title":{},"body":{"components/InputComponent.html":{}}}],["formconfig",{"_index":2116,"title":{"interfaces/FormConfig.html":{}},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["formcontrol",{"_index":138,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["formcontrol(form.getvalue(field.property",{"_index":2205,"title":{},"body":{"injectables/FormService.html":{}}}],["formdata",{"_index":2013,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formdata.append(key",{"_index":2016,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["formgroup",{"_index":146,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["formgroup(controls",{"_index":2211,"title":{},"body":{"injectables/FormService.html":{}}}],["formmodule",{"_index":2126,"title":{"modules/FormModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["formmoduleconfig",{"_index":2152,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["forms",{"_index":1867,"title":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}},"body":{"classes/Field.html":{},"injectables/FormService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["formservice",{"_index":50,"title":{"injectables/FormService.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"components/LocationPickerComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{}}}],["formsmodule",{"_index":692,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ListModule.html":{},"modules/ResourceModule.html":{},"modules/UtilityModule.html":{}}}],["formtemplate",{"_index":5001,"title":{},"body":{"coverage.html":{}}}],["forroot",{"_index":857,"title":{},"body":{"modules/CalendarModule.html":{},"modules/LocationModule.html":{}}}],["forroot(formats",{"_index":858,"title":{},"body":{"modules/CalendarModule.html":{}}}],["forroot(undefined",{"_index":3079,"title":{},"body":{"modules/LocationModule.html":{}}}],["forwardref",{"_index":30,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["found",{"_index":639,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme/style-readme.html":{}}}],["framework",{"_index":5417,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["freedom",{"_index":5359,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["fresh",{"_index":5099,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["from(this.maploader.load",{"_index":2274,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["fromsearch",{"_index":3107,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["fruit",{"_index":5420,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["fruits",{"_index":2714,"title":{},"body":{"components/ListComponent.html":{}}}],["fs",{"_index":5217,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["full",{"_index":3368,"title":{},"body":{"components/MenuComponent.html":{}}}],["fun",{"_index":5266,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["function",{"_index":581,"title":{},"body":{"components/AssetListComponent.html":{},"modules/AuthModule.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["functionalities",{"_index":844,"title":{},"body":{"injectables/AuthService.html":{}}}],["functionality",{"_index":1009,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["functions",{"_index":5067,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["fundamental",{"_index":886,"title":{},"body":{"classes/Collection.html":{}}}],["further",{"_index":3629,"title":{},"body":{"classes/Notification.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["future",{"_index":1777,"title":{},"body":{"injectables/EntryService.html":{}}}],["g",{"_index":5225,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generally",{"_index":5372,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["generate",{"_index":2615,"title":{},"body":{"components/InputErrorsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["generateconfig",{"_index":3489,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generateconfig(model",{"_index":3495,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generated",{"_index":3485,"title":{},"body":{"injectables/ModelConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["generates",{"_index":3498,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["generation",{"_index":5351,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["generic",{"_index":562,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["geo",{"_index":3111,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["geocode",{"_index":2229,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocode.service",{"_index":3082,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{}}}],["geocodelatlng",{"_index":2231,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodelatlng(geocoder",{"_index":2242,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder",{"_index":2247,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocoder.geocode",{"_index":2279,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["geocodeservice",{"_index":2225,"title":{"injectables/GeocodeService.html":{}},"body":{"injectables/GeocodeService.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"overview.html":{}}}],["get(name",{"_index":4430,"title":{},"body":{"injectables/SymbolService.html":{}}}],["get(property",{"_index":3508,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["get(type",{"_index":4649,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["getaccount",{"_index":727,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getaccount(api",{"_index":743,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getalgorithm",{"_index":4346,"title":{},"body":{"classes/Sorter.html":{}}}],["getalgorithm(items",{"_index":4351,"title":{},"body":{"classes/Sorter.html":{}}}],["getallowedmodelmethods",{"_index":728,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedmodelmethods(model",{"_index":745,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods",{"_index":729,"title":{},"body":{"injectables/AuthService.html":{}}}],["getallowedresourcemethods(relation",{"_index":749,"title":{},"body":{"injectables/AuthService.html":{}}}],["getapi",{"_index":730,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["getapi(email",{"_index":756,"title":{},"body":{"injectables/AuthService.html":{}}}],["getassetconfig(assetgroupid",{"_index":1997,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getcolor",{"_index":3326,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolor(level",{"_index":3357,"title":{},"body":{"components/MenuComponent.html":{}}}],["getcolumns",{"_index":1849,"title":{},"body":{"classes/Field.html":{}}}],["getdaycolor(_moment",{"_index":1368,"title":{},"body":{"interfaces/Day.html":{}}}],["getdayheat(_moment",{"_index":1371,"title":{},"body":{"interfaces/Day.html":{}}}],["geterrors",{"_index":2608,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["getfieldconfig",{"_index":3490,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getfieldconfig(model",{"_index":3513,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getformdata(files",{"_index":2014,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["getformlabel",{"_index":2161,"title":{},"body":{"injectables/FormService.html":{}}}],["getformlabel(form",{"_index":2171,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup",{"_index":2162,"title":{},"body":{"injectables/FormService.html":{}}}],["getgroup(form",{"_index":2174,"title":{},"body":{"injectables/FormService.html":{}}}],["getheader",{"_index":1653,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getheader(entrylist",{"_index":1681,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["getitemcolor",{"_index":3327,"title":{},"body":{"components/MenuComponent.html":{}}}],["getitemcolor(item",{"_index":3360,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlabel",{"_index":1850,"title":{},"body":{"classes/Field.html":{}}}],["getlevel",{"_index":3328,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlevel(level",{"_index":3362,"title":{},"body":{"components/MenuComponent.html":{}}}],["getlightmodel",{"_index":3491,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getlightmodel(model",{"_index":3520,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel",{"_index":3492,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getminlevel(model",{"_index":3524,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getmonth(day",{"_index":1386,"title":{},"body":{"interfaces/Day.html":{}}}],["getnearestaddress",{"_index":2232,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getnearestaddress(location",{"_index":2248,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["getpage",{"_index":3765,"title":{},"body":{"classes/Pagination.html":{}}}],["getpages",{"_index":3766,"title":{},"body":{"classes/Pagination.html":{}}}],["getpath",{"_index":427,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/MenuComponent.html":{}}}],["getpath(item",{"_index":3366,"title":{},"body":{"components/MenuComponent.html":{}}}],["getpermission",{"_index":3716,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["getplaceholder",{"_index":1851,"title":{},"body":{"classes/Field.html":{}}}],["getresourcelistactions(listresource",{"_index":4001,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["getroot",{"_index":4222,"title":{},"body":{"injectables/SdkService.html":{}}}],["gets",{"_index":3625,"title":{},"body":{"classes/Notification.html":{}}}],["getschema",{"_index":4185,"title":{},"body":{"injectables/SdkService.html":{}}}],["getschema(model",{"_index":4194,"title":{},"body":{"injectables/SdkService.html":{}}}],["getstoragekey",{"_index":2792,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getstoragekey(list",{"_index":2797,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["getsystemfields",{"_index":3493,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["getter",{"_index":988,"title":{},"body":{"classes/Config.html":{},"injectables/SdkService.html":{}}}],["getting",{"_index":4842,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["getvalidators",{"_index":2163,"title":{},"body":{"injectables/FormService.html":{}}}],["getvalidators(field",{"_index":2176,"title":{},"body":{"injectables/FormService.html":{}}}],["ghost",{"_index":5367,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["give",{"_index":4826,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["given",{"_index":87,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["gives",{"_index":4120,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["giving",{"_index":5340,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["global",{"_index":2990,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["globalloader",{"_index":2996,"title":{},"body":{"components/LoaderComponent.html":{}}}],["globally",{"_index":5224,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["glyph",{"_index":4391,"title":{},"body":{"interfaces/Symbol.html":{}}}],["go",{"_index":5142,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["google",{"_index":2227,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["google.maps.geocoder",{"_index":2286,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["google.maps.places.autocomplete(el",{"_index":2260,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["googlemaps",{"_index":3141,"title":{},"body":{"components/LocationSearchComponent.html":{},"dependencies.html":{}}}],["googlemaps.apikey",{"_index":3093,"title":{},"body":{"modules/LocationModule.html":{}}}],["granted",{"_index":3724,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["group",{"_index":51,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/SignupFormComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["group.addcontrol(field.property",{"_index":2214,"title":{},"body":{"injectables/FormService.html":{}}}],["group.pipe",{"_index":2957,"title":{},"body":{"modules/ListModule.html":{}}}],["group.value",{"_index":600,"title":{},"body":{"components/AssetListComponent.html":{}}}],["groupchanged",{"_index":612,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["groupdate",{"_index":4643,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["grouping",{"_index":1917,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["grouppipe",{"_index":1263,"title":{"pipes/GroupPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["grow",{"_index":1577,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["größer",{"_index":5302,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["guard",{"_index":631,"title":{"guards/AuthGuard.html":{}},"body":{"guards/AuthGuard.html":{},"coverage.html":{},"overview.html":{}}}],["guard.service",{"_index":696,"title":{},"body":{"modules/AuthModule.html":{}}}],["guard.service.ts",{"_index":635,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["guard.service.ts:12",{"_index":648,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guard.service.ts:17",{"_index":649,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guards",{"_index":633,"title":{},"body":{"guards/AuthGuard.html":{}}}],["guide",{"_index":5083,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["guidelines",{"_index":5446,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["h",{"_index":2720,"title":{},"body":{"components/ListComponent.html":{}}}],["haben",{"_index":3914,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["hacks",{"_index":5591,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["handle",{"_index":2228,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["handler",{"_index":2683,"title":{},"body":{"components/ListComponent.html":{}}}],["handles",{"_index":2170,"title":{},"body":{"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handling",{"_index":3383,"title":{},"body":{"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["handy",{"_index":5334,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["happened",{"_index":1976,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["happens",{"_index":1668,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hard",{"_index":5373,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["has(item",{"_index":923,"title":{},"body":{"classes/Collection.html":{}}}],["hasactivepath",{"_index":3329,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasactivepath(item",{"_index":3369,"title":{},"body":{"components/MenuComponent.html":{}}}],["hasall",{"_index":889,"title":{},"body":{"classes/Collection.html":{}}}],["hasall(items",{"_index":926,"title":{},"body":{"classes/Collection.html":{}}}],["hasfocus",{"_index":2924,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasfocus(item",{"_index":2938,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["hasmethod",{"_index":1018,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["hasmethod(method",{"_index":1044,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["hassle",{"_index":5432,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["having",{"_index":436,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/LoaderService.html":{}}}],["header",{"_index":1324,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["header'},{'name",{"_index":257,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["header.component",{"_index":2958,"title":{},"body":{"modules/ListModule.html":{}}}],["header.component.html",{"_index":2835,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts",{"_index":2833,"title":{},"body":{"components/ListHeaderComponent.html":{},"coverage.html":{}}}],["header.component.ts:104",{"_index":2864,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:112",{"_index":2854,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:121",{"_index":2868,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:131",{"_index":2870,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:16",{"_index":2850,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:18",{"_index":2851,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:20",{"_index":2876,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:22",{"_index":2874,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:23",{"_index":2872,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:24",{"_index":2873,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:25",{"_index":2849,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:27",{"_index":2871,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:30",{"_index":2866,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:34",{"_index":2862,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:39",{"_index":2860,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:47",{"_index":2863,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header.component.ts:82",{"_index":2856,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["header/items/pagination",{"_index":5318,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["header/list",{"_index":2832,"title":{},"body":{"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["headers",{"_index":5296,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["headline",{"_index":3636,"title":{},"body":{"classes/Notification.html":{}}}],["heat",{"_index":1290,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap",{"_index":1309,"title":{},"body":{"interfaces/Day.html":{}}}],["heatmap'},{'name",{"_index":246,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["heatmap/heatmap.component",{"_index":864,"title":{},"body":{"modules/CalendarModule.html":{}}}],["heatmapcomponent",{"_index":245,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["height",{"_index":194,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/LocationMapComponent.html":{}}}],["hellip",{"_index":1477,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["help",{"_index":5141,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["helper",{"_index":1583,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{}}}],["helpful",{"_index":2551,"title":{},"body":{"components/InputComponent.html":{}}}],["here",{"_index":2992,"title":{},"body":{"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["hh:mm",{"_index":871,"title":{},"body":{"modules/CalendarModule.html":{}}}],["hidden",{"_index":1843,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/WithNotifications.html":{}}}],["hide",{"_index":1103,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ListConfigService.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["hideassetgroupselect",{"_index":1133,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["hidefirstlast",{"_index":3880,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hideinform",{"_index":2502,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{}}}],["hideinlist",{"_index":3527,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonclickoutside",{"_index":1656,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hideoncreate",{"_index":3581,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonedit",{"_index":3582,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["hideonescape",{"_index":1657,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["hidepages",{"_index":3881,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["hidepagination",{"_index":1715,"title":{},"body":{"components/EntryListPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceListPopComponent.html":{}}}],["hides",{"_index":1163,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["hidesubmitbutton",{"_index":2120,"title":{},"body":{"interfaces/FormConfig.html":{}}}],["hiding",{"_index":3663,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["higher",{"_index":2721,"title":{},"body":{"components/ListComponent.html":{}}}],["highest",{"_index":5425,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["histories",{"_index":2325,"title":{},"body":{"injectables/HistoryService.html":{}}}],["history",{"_index":2342,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["historyservice",{"_index":1201,"title":{"injectables/HistoryService.html":{}},"body":{"modules/DataModule.html":{},"injectables/HistoryService.html":{},"coverage.html":{},"overview.html":{}}}],["holds",{"_index":432,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"injectables/PopService.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{}}}],["host",{"_index":1501,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{}}}],["host.directive",{"_index":1556,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{}}}],["host.directive.ts",{"_index":4335,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["host.directive.ts:11",{"_index":4340,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["host.directive.ts:9",{"_index":4338,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["hostbinding",{"_index":1510,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class",{"_index":1711,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostbinding('class.is",{"_index":1512,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostbindings",{"_index":1486,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hostlistener",{"_index":1511,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["hostlistener('document:click",{"_index":3953,"title":{},"body":{"components/PopComponent.html":{}}}],["hostlistener('dragleave",{"_index":1523,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('dragover",{"_index":1513,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlistener('drop",{"_index":1518,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["hostlisteners",{"_index":1488,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["hosts",{"_index":5344,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["hours",{"_index":5397,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.html",{"_index":5398,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hours.component.scss",{"_index":5399,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["hover",{"_index":3323,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverdelay",{"_index":3334,"title":{},"body":{"components/MenuComponent.html":{}}}],["hovered",{"_index":3382,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem",{"_index":3330,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoveritem(item",{"_index":3372,"title":{},"body":{"components/MenuComponent.html":{}}}],["hoverout",{"_index":3331,"title":{},"body":{"components/MenuComponent.html":{}}}],["hovers",{"_index":3374,"title":{},"body":{"components/MenuComponent.html":{}}}],["html",{"_index":197,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["http",{"_index":5188,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["http://localhost:1337",{"_index":5126,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["https",{"_index":5190,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://angular.io/guide/dynamic",{"_index":4336,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["https://blog.thoughtram.io/angular/2016/07/27/custom",{"_index":5403,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["https://components.entrecode.de/assets/asset?e=1",{"_index":465,"title":{},"body":{"directives/AssetDirective.html":{}}}],["https://components.entrecode.de/auth/auth?e=1",{"_index":3151,"title":{},"body":{"components/LoginComponent.html":{}}}],["https://components.entrecode.de/auth/password",{"_index":3895,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["https://components.entrecode.de/auth/signup?e=1",{"_index":4277,"title":{},"body":{"components/SignupComponent.html":{}}}],["https://components.entrecode.de/entries/crud?e=1",{"_index":1011,"title":{},"body":{"components/CrudComponent.html":{}}}],["https://components.entrecode.de/entries/entries?e=1",{"_index":1564,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["https://components.entrecode.de/misc/ace?e=1",{"_index":19,"title":{},"body":{"components/AceComponent.html":{}}}],["https://components.entrecode.de/misc/medium",{"_index":3273,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["https://components.entrecode.de/misc/tinymce?e=1",{"_index":4539,"title":{},"body":{"components/TinymceComponent.html":{}}}],["https://components.entrecode.de/ui/datetime?e=1",{"_index":1232,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["https://components.entrecode.de/ui/icons?e=1",{"_index":2355,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["https://components.entrecode.de/ui/list/basic?e=1",{"_index":2651,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/list/transforms?e=1",{"_index":2652,"title":{},"body":{"components/ListComponent.html":{}}}],["https://components.entrecode.de/ui/loader?e=1",{"_index":2969,"title":{},"body":{"components/LoaderComponent.html":{}}}],["https://components.entrecode.de/ui/login?e=1",{"_index":3184,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["https://components.entrecode.de/ui/modal?e=1",{"_index":3422,"title":{},"body":{"components/ModalComponent.html":{}}}],["https://components.entrecode.de/ui/notifications?e=1",{"_index":3642,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["https://components.entrecode.de/ui/pop?e=1",{"_index":3932,"title":{},"body":{"components/PopComponent.html":{}}}],["https://components.entrecode.de/ui/symbols?e=1",{"_index":4427,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://components.entrecode.de/ui/tabs?e=1",{"_index":4495,"title":{},"body":{"components/TabsComponent.html":{}}}],["https://doc.entrecode.de/data_manager/#field",{"_index":4163,"title":{},"body":{"interfaces/SdkField.html":{}}}],["https://entrecode.github.io/ec.sdk/#api",{"_index":550,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["https://entrecode.github.io/ec.sdk/#environment",{"_index":721,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["https://github.com/ajaxorg/ace",{"_index":167,"title":{},"body":{"components/AceComponent.html":{}}}],["https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4",{"_index":2210,"title":{},"body":{"injectables/FormService.html":{}}}],["https://github.com/auth0/angular2",{"_index":702,"title":{},"body":{"modules/AuthModule.html":{}}}],["https://github.com/ng",{"_index":4452,"title":{},"body":{"injectables/SymbolService.html":{}}}],["https://localhost:4200",{"_index":5269,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["https://localhost:4200/muffins",{"_index":5283,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["https://medium.com/claritydesignsystem/ng",{"_index":3423,"title":{},"body":{"components/ModalComponent.html":{}}}],["human",{"_index":1914,"title":{},"body":{"classes/Field.html":{}}}],["humans",{"_index":2641,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["i+1",{"_index":3868,"title":{},"body":{"components/PaginationComponent.html":{}}}],["i.getbody",{"_index":4015,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["i.id",{"_index":4017,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["icon",{"_index":1844,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["icon'},{'name",{"_index":248,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["icon.component",{"_index":2393,"title":{},"body":{"modules/IconModule.html":{}}}],["icon.component.html",{"_index":2358,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.content",{"_index":2387,"title":{},"body":{"components/IconComponent.html":{}}}],["icon.service",{"_index":2378,"title":{},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{}}}],["icon/icon.module",{"_index":2147,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{}}}],["iconcomponent",{"_index":247,"title":{"components/IconComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["iconmodule",{"_index":2137,"title":{"modules/IconModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/ListModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["icons",{"_index":2351,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListHeaderComponent.html":{}}}],["icons.ts",{"_index":5006,"title":{},"body":{"coverage.html":{}}}],["iconservice",{"_index":2360,"title":{"injectables/IconService.html":{}},"body":{"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"coverage.html":{},"overview.html":{}}}],["id",{"_index":371,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["idea",{"_index":2709,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["identifier",{"_index":385,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["identifierpattern",{"_index":2635,"title":{},"body":{"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["identify",{"_index":2639,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["ids",{"_index":2053,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ids.push(asset",{"_index":2052,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["if(body.amazement_factor",{"_index":5327,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value",{"_index":5322,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["if(value===10",{"_index":5320,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["iframes",{"_index":199,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["ignored",{"_index":2779,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["ignoreduplicates",{"_index":1957,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ignores",{"_index":1963,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["ignoring",{"_index":4132,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["image",{"_index":250,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["image/image.directive",{"_index":2094,"title":{},"body":{"modules/FilesModule.html":{}}}],["imagedirective",{"_index":334,"title":{"directives/ImageDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["imageform",{"_index":2447,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageloader",{"_index":2448,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["images",{"_index":2444,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["imageselectpopcomponent",{"_index":249,"title":{"components/ImageSelectPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["img",{"_index":335,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["img's",{"_index":2402,"title":{},"body":{"directives/ImageDirective.html":{}}}],["immediately",{"_index":482,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/PopComponent.html":{}}}],["immutable",{"_index":1751,"title":{},"body":{"injectables/EntryService.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["implement",{"_index":5401,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["implementation",{"_index":1246,"title":{},"body":{"components/DatetimeComponent.html":{},"components/NotificationsComponent.html":{}}}],["implemented",{"_index":4166,"title":{},"body":{"interfaces/SdkField.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolPipe.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["import",{"_index":150,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["imported",{"_index":161,"title":{},"body":{"components/AceComponent.html":{},"components/InputErrorsComponent.html":{}}}],["importing",{"_index":76,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["imports",{"_index":361,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{}}}],["impressum",{"_index":5143,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["improved",{"_index":5473,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["include",{"_index":4408,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["includeassetidinpath",{"_index":1958,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["included",{"_index":2185,"title":{},"body":{"injectables/FormService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["includes",{"_index":1965,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{}}}],["including",{"_index":2397,"title":{},"body":{"injectables/IconService.html":{}}}],["incoming",{"_index":4636,"title":{},"body":{"components/ToggleComponent.html":{}}}],["increment",{"_index":5412,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["index",{"_index":39,"title":{"index.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["index(item",{"_index":929,"title":{},"body":{"classes/Collection.html":{}}}],["index.html",{"_index":2369,"title":{},"body":{"components/IconComponent.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["indexable",{"_index":1898,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["indicate",{"_index":2987,"title":{},"body":{"components/LoaderComponent.html":{}}}],["indices",{"_index":1962,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["information",{"_index":3523,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["infos",{"_index":3794,"title":{},"body":{"classes/Pagination.html":{}}}],["inhabits",{"_index":2643,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["inherit",{"_index":5339,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["inherited",{"_index":118,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["init",{"_index":54,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["init(environment",{"_index":4198,"title":{},"body":{"injectables/SdkService.html":{}}}],["init(list",{"_index":2693,"title":{},"body":{"components/ListComponent.html":{}}}],["inital",{"_index":5522,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["initfilterform",{"_index":2843,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterform(filterform",{"_index":2859,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["initfilterquery",{"_index":538,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initfilterquery(fieldfilter",{"_index":577,"title":{},"body":{"components/AssetListComponent.html":{}}}],["initial",{"_index":1823,"title":{},"body":{"components/ErrorComponent.html":{},"components/MenuComponent.html":{}}}],["initialized",{"_index":135,"title":{},"body":{"components/AceComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["initializes",{"_index":1374,"title":{},"body":{"interfaces/Day.html":{},"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{}}}],["initially",{"_index":4503,"title":{},"body":{"components/TabsComponent.html":{}}}],["initing",{"_index":4176,"title":{},"body":{"injectables/SdkService.html":{}}}],["initmethods",{"_index":4055,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["initmode",{"_index":3427,"title":{},"body":{"components/ModalComponent.html":{}}}],["inits",{"_index":92,"title":{},"body":{"components/AceComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["inittabs",{"_index":4499,"title":{},"body":{"components/TabsComponent.html":{}}}],["inject",{"_index":1273,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inject('environment",{"_index":4212,"title":{},"body":{"injectables/SdkService.html":{}}}],["inject('moment.format.month",{"_index":1329,"title":{},"body":{"interfaces/Day.html":{}}}],["injectable",{"_index":652,"title":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["injectables",{"_index":705,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"injectables/ListConfigService.html":{},"injectables/LoaderService.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/PopService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"overview.html":{}}}],["injects",{"_index":474,"title":{},"body":{"directives/AssetDirective.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["input",{"_index":42,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["input's",{"_index":1244,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["input'},{'name",{"_index":252,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["input('config",{"_index":2727,"title":{},"body":{"components/ListComponent.html":{}}}],["input.component",{"_index":1215,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["input.component.html",{"_index":445,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.scss",{"_index":5383,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts",{"_index":431,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input.component.ts:10",{"_index":1447,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.component.ts:13",{"_index":449,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultInputComponent.html":{}}}],["input.component.ts:14",{"_index":450,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["input.component.ts:15",{"_index":1464,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:17",{"_index":1463,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:19",{"_index":1461,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:21",{"_index":1458,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:24",{"_index":1462,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:26",{"_index":1460,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:32",{"_index":1459,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["input.component.ts:9",{"_index":1446,"title":{},"body":{"components/DefaultEntryInputComponent.html":{}}}],["input.focus(true",{"_index":2889,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["input/default",{"_index":1454,"title":{},"body":{"components/DefaultInputComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"coverage.html":{}}}],["input/ec",{"_index":5356,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input/form",{"_index":5654,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["input/input.component",{"_index":2629,"title":{},"body":{"modules/IoModule.html":{}}}],["input/output",{"_index":5368,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["input[type=file",{"_index":4734,"title":{},"body":{"components/UploadComponent.html":{}}}],["inputcomponent",{"_index":128,"title":{"components/InputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputcomponent#focus",{"_index":5642,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["inputcomponents",{"_index":2557,"title":{},"body":{"components/InputComponent.html":{}}}],["inputerrorscomponent",{"_index":253,"title":{"components/InputErrorsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["inputready",{"_index":2844,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputready(input",{"_index":2861,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["inputs",{"_index":64,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["inputthis",{"_index":5380,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["inputview",{"_index":2483,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["inputviews",{"_index":4675,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["inside",{"_index":1061,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/ResourceCrudComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{}}}],["inspiration",{"_index":4084,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["install",{"_index":5103,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["installation",{"_index":5421,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["instance",{"_index":84,"title":{},"body":{"components/AceComponent.html":{},"components/AssetListComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["instanceof",{"_index":2435,"title":{},"body":{"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/TabsComponent.html":{}}}],["instances",{"_index":708,"title":{},"body":{"injectables/AuthService.html":{},"pipes/DatetimePipe.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["instead",{"_index":1771,"title":{},"body":{"injectables/EntryService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["intended",{"_index":4561,"title":{},"body":{"components/TinymceComponent.html":{}}}],["interaction",{"_index":3710,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["interface",{"_index":366,"title":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["interfaces",{"_index":368,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"overview.html":{}}}],["interfere",{"_index":3017,"title":{},"body":{"components/LoaderComponent.html":{}}}],["internal",{"_index":1173,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["interpreted",{"_index":1987,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["intialization",{"_index":2554,"title":{},"body":{"components/InputComponent.html":{}}}],["intl.collator(undefined",{"_index":4360,"title":{},"body":{"classes/Sorter.html":{}}}],["invalid",{"_index":4665,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["invite",{"_index":789,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["inviteplaceholder",{"_index":4302,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["invoked",{"_index":2642,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ResourceCrudComponent.html":{}}}],["io/input/input.component",{"_index":2885,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["io/io.module",{"_index":2143,"title":{},"body":{"modules/FormModule.html":{},"modules/UtilityModule.html":{}}}],["iomodule",{"_index":2134,"title":{"modules/IoModule.html":{}},"body":{"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["isactive",{"_index":3332,"title":{},"body":{"components/MenuComponent.html":{},"classes/Pagination.html":{}}}],["isactive(page",{"_index":3785,"title":{},"body":{"classes/Pagination.html":{}}}],["isactive(path",{"_index":3376,"title":{},"body":{"components/MenuComponent.html":{}}}],["isclickable",{"_index":2925,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["isempty",{"_index":890,"title":{},"body":{"classes/Collection.html":{}}}],["isend",{"_index":1397,"title":{},"body":{"interfaces/Day.html":{}}}],["isfirst",{"_index":1566,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isimmutableproperty",{"_index":1732,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{}}}],["isimmutableproperty(key",{"_index":1749,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["islast",{"_index":1567,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["isloading",{"_index":2657,"title":{},"body":{"components/ListComponent.html":{}}}],["isn't",{"_index":5221,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["isnewasset(asset",{"_index":2003,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isnewassetgroupid(assetgroupid",{"_index":2074,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoldassetgroupid",{"_index":2463,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["isoldassetgroupid(assetgroupid",{"_index":2072,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["isoutside",{"_index":1654,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isoutside(element",{"_index":1689,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["isreadonly",{"_index":2164,"title":{},"body":{"injectables/FormService.html":{}}}],["isreadonly(field",{"_index":2181,"title":{},"body":{"injectables/FormService.html":{}}}],["isselected",{"_index":3333,"title":{},"body":{"components/MenuComponent.html":{}}}],["isselected(_moment",{"_index":1430,"title":{},"body":{"interfaces/Day.html":{}}}],["isselected(item",{"_index":3378,"title":{},"body":{"components/MenuComponent.html":{}}}],["isstart",{"_index":1395,"title":{},"body":{"interfaces/Day.html":{}}}],["issue",{"_index":5650,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["ist",{"_index":3652,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["isvisible",{"_index":3838,"title":{},"body":{"components/PaginationComponent.html":{}}}],["isvisible(page",{"_index":3841,"title":{},"body":{"components/PaginationComponent.html":{}}}],["item",{"_index":52,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["item's",{"_index":2930,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["item('a",{"_index":5429,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["item(asset",{"_index":2030,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(assets[0",{"_index":2028,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item(s",{"_index":2075,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["item.config.fields[property].form",{"_index":1090,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.fields[property].list",{"_index":1089,"title":{},"body":{"components/CrudComponent.html":{}}}],["item.config.onsave",{"_index":4146,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.data?.title",{"_index":3410,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.deleteimmutableproperties(value",{"_index":4148,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody",{"_index":601,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["item.getbody().action",{"_index":396,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().action(item",{"_index":397,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().children",{"_index":398,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.getbody().select",{"_index":393,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["item.group(property",{"_index":2295,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["item.id",{"_index":1099,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{}}}],["item.path",{"_index":3408,"title":{},"body":{"components/MenuComponent.html":{}}}],["item.resolve(field.property",{"_index":5342,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["item.sort(property",{"_index":4371,"title":{},"body":{"classes/Sorter.html":{}}}],["item/item",{"_index":2125,"title":{},"body":{"interfaces/FormConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["item?.display(field.property",{"_index":1452,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["item?.resolve(field.property)?.length",{"_index":1479,"title":{},"body":{"components/DefaultOutputComponent.html":{}}}],["itemclick",{"_index":5530,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["itemconfig",{"_index":1740,"title":{"interfaces/ItemConfig.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FormConfig.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["items",{"_index":887,"title":{},"body":{"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["items'},{'name",{"_index":259,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["items.component",{"_index":2959,"title":{},"body":{"modules/ListModule.html":{}}}],["items.component.html",{"_index":2923,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts",{"_index":2920,"title":{},"body":{"components/ListItemsComponent.html":{},"coverage.html":{}}}],["items.component.ts:14",{"_index":2933,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:16",{"_index":2934,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:18",{"_index":2929,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:20",{"_index":2935,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:22",{"_index":2928,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:24",{"_index":2927,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:27",{"_index":2943,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:29",{"_index":2942,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:45",{"_index":2939,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:49",{"_index":2941,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.component.ts:54",{"_index":2936,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["items.filter((item",{"_index":2294,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["items.foreach((item",{"_index":961,"title":{},"body":{"classes/Collection.html":{}}}],["items.length",{"_index":977,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{}}}],["items.pipe",{"_index":2149,"title":{},"body":{"modules/FormModule.html":{}}}],["items.pipe.ts",{"_index":3263,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["items.pipe.ts:8",{"_index":3267,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["items.reduce((has",{"_index":968,"title":{},"body":{"classes/Collection.html":{}}}],["items.reverse",{"_index":4387,"title":{},"body":{"classes/Sorter.html":{}}}],["items.slice((this.config.page",{"_index":3830,"title":{},"body":{"classes/Pagination.html":{}}}],["items.sort((a",{"_index":4382,"title":{},"body":{"classes/Sorter.html":{}}}],["items/list",{"_index":2919,"title":{},"body":{"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"coverage.html":{}}}],["iterate",{"_index":2613,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["itself",{"_index":1692,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabComponent.html":{}}}],["javascript",{"_index":73,"title":{},"body":{"components/AceComponent.html":{}}}],["js",{"_index":5051,"title":{},"body":{"dependencies.html":{}}}],["json",{"_index":777,"title":{},"body":{"injectables/AuthService.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"injectables/TypeConfigService.html":{}}}],["json.parse(config",{"_index":2809,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.parse(e.data",{"_index":2346,"title":{},"body":{"injectables/HistoryService.html":{}}}],["json.stringify(object.assign(existing",{"_index":2813,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["json.stringify(value",{"_index":2811,"title":{},"body":{"injectables/ListConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["jump",{"_index":5649,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["jwt/issues/305",{"_index":703,"title":{},"body":{"modules/AuthModule.html":{}}}],["kann",{"_index":668,"title":{},"body":{"guards/AuthGuard.html":{}}}],["karma",{"_index":5138,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["keep",{"_index":1412,"title":{},"body":{"interfaces/Day.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["keeppopopen",{"_index":1134,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["keepratio",{"_index":2503,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["keeps",{"_index":2297,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{}}}],["key",{"_index":990,"title":{},"body":{"classes/Config.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["key[0",{"_index":1802,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["keydown",{"_index":3979,"title":{},"body":{"injectables/PopService.html":{}}}],["keys",{"_index":3984,"title":{},"body":{"injectables/PopService.html":{}}}],["keyup",{"_index":4616,"title":{},"body":{"components/TinymceComponent.html":{}}}],["kind",{"_index":2988,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/WithLoader.html":{}}}],["kinds",{"_index":4344,"title":{},"body":{"classes/Sorter.html":{}}}],["kleiner",{"_index":5304,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["know",{"_index":5378,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["knowing",{"_index":2058,"title":{},"body":{"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{}}}],["known",{"_index":495,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["label",{"_index":384,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["labels",{"_index":1873,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["language",{"_index":107,"title":{},"body":{"components/AceComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["languages",{"_index":5674,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["last",{"_index":1291,"title":{},"body":{"interfaces/Day.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["lat",{"_index":2287,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["later",{"_index":1535,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"interfaces/WithNotifications.html":{}}}],["latest",{"_index":3981,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop",{"_index":3991,"title":{},"body":{"injectables/PopService.html":{}}}],["latestpop.hide",{"_index":3993,"title":{},"body":{"injectables/PopService.html":{}}}],["latitude",{"_index":2268,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["layer",{"_index":3711,"title":{},"body":{"injectables/NotificationsService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["layout",{"_index":1413,"title":{},"body":{"interfaces/Day.html":{}}}],["lazy",{"_index":2520,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["left",{"_index":3447,"title":{},"body":{"components/ModalComponent.html":{}}}],["legacy",{"_index":629,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legacyasset",{"_index":1995,"title":{},"body":{"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["legacyassetconfig",{"_index":1983,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["legend",{"_index":196,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["lemontree",{"_index":2715,"title":{},"body":{"components/ListComponent.html":{}}}],["length",{"_index":971,"title":{},"body":{"classes/Collection.html":{}}}],["lerna",{"_index":5055,"title":{},"body":{"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["let's",{"_index":3746,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["letters",{"_index":1724,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["level",{"_index":3359,"title":{},"body":{"components/MenuComponent.html":{}}}],["leveled",{"_index":1814,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{}}}],["levels",{"_index":470,"title":{},"body":{"directives/AssetDirective.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntryDirective.html":{},"injectables/TypeConfigService.html":{}}}],["li",{"_index":3853,"title":{},"body":{"components/PaginationComponent.html":{}}}],["li.is",{"_index":3413,"title":{},"body":{"components/MenuComponent.html":{}}}],["lib",{"_index":5811,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["libraries",{"_index":3091,"title":{},"body":{"modules/LocationModule.html":{}}}],["library",{"_index":5799,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["light",{"_index":3522,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lightmodel",{"_index":1649,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{}}}],["lightmodel.titlefield",{"_index":3598,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["line",{"_index":3011,"title":{},"body":{"components/LoaderComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["line:directive",{"_index":2109,"title":{},"body":{"directives/FocusDirective.html":{}}}],["line:no",{"_index":2726,"title":{},"body":{"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["link",{"_index":3885,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/adding-new-packages.html":{}}}],["links",{"_index":5289,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["lint",{"_index":5693,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["linter",{"_index":5588,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["list",{"_index":215,"title":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["list'},{'name",{"_index":213,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["list(actions",{"_index":421,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["list(this.collection.items",{"_index":2735,"title":{},"body":{"components/ListComponent.html":{}}}],["list(this.items",{"_index":2732,"title":{},"body":{"components/ListComponent.html":{}}}],["list.component",{"_index":599,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"components/ListComponent.html":{},"modules/ListModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["list.component.html",{"_index":532,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{}}}],["list.component.ts",{"_index":531,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["list.component.ts:10",{"_index":568,"title":{},"body":{"components/AssetListComponent.html":{}}}],["list.config",{"_index":2815,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.config.storagekey",{"_index":2816,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields",{"_index":2814,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.filter(f",{"_index":2822,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.find(f",{"_index":2830,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.fields.foreach(field",{"_index":2827,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["list.load",{"_index":5347,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["list.ts",{"_index":4926,"title":{},"body":{"coverage.html":{}}}],["list.ts/list.component",{"_index":3813,"title":{},"body":{"classes/Pagination.html":{}}}],["list/asset",{"_index":530,"title":{},"body":{"components/AssetListComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["list/entry",{"_index":1072,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"coverage.html":{}}}],["list/list",{"_index":2787,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Pagination.html":{}}}],["list/list.module",{"_index":4272,"title":{},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["list/resource",{"_index":598,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["listcomponent",{"_index":255,"title":{"components/ListComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listconfig",{"_index":378,"title":{"interfaces/ListConfig.html":{}},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"classes/Pagination.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["listconfigservice",{"_index":593,"title":{"injectables/ListConfigService.html":{}},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"modules/ListModule.html":{},"coverage.html":{},"overview.html":{}}}],["listens",{"_index":1680,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{}}}],["listheadercomponent",{"_index":256,"title":{"components/ListHeaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listitemscomponent",{"_index":258,"title":{"components/ListItemsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["listmodule",{"_index":2949,"title":{"modules/ListModule.html":{}},"body":{"modules/ListModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["listmoduleconfig",{"_index":2962,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["listresource",{"_index":540,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{}}}],["listresource.follownextlink().then((list",{"_index":4011,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.getallitems",{"_index":4002,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["listresource.hasnextlink",{"_index":4009,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["lists",{"_index":1066,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/ListConfig.html":{},"components/ResourceCrudComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["lists/forms",{"_index":3507,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["listtemplate",{"_index":2655,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["literal",{"_index":859,"title":{},"body":{"modules/CalendarModule.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{}}}],["live",{"_index":720,"title":{},"body":{"injectables/AuthService.html":{},"modules/DataModule.html":{},"injectables/HistoryService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lng",{"_index":2289,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["load",{"_index":467,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"directives/SlotHostDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["load(config",{"_index":3790,"title":{},"body":{"classes/Pagination.html":{}}}],["load(id",{"_index":488,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["loadactions(actions",{"_index":418,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadactionsbefore",{"_index":404,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["loadcomponent",{"_index":1546,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loadcomponent(component",{"_index":1548,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["loade",{"_index":3760,"title":{},"body":{"components/OutputComponent.html":{}}}],["loaded",{"_index":472,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loadentry",{"_index":1019,"title":{},"body":{"components/CrudComponent.html":{}}}],["loadentry(item",{"_index":1047,"title":{},"body":{"components/CrudComponent.html":{}}}],["loader",{"_index":541,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["loader's",{"_index":2986,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader'},{'name",{"_index":261,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["loader.component",{"_index":3032,"title":{},"body":{"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"interfaces/WithLoader.html":{}}}],["loader.component.html",{"_index":2970,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loader.interface",{"_index":3240,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loader.interface.ts",{"_index":4837,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["loader.service",{"_index":3033,"title":{},"body":{"modules/LoaderModule.html":{}}}],["loader.wait(promise",{"_index":3039,"title":{},"body":{"injectables/LoaderService.html":{}}}],["loader/loader.component",{"_index":3238,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["loader/loader.module",{"_index":2146,"title":{},"body":{"modules/FormModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{}}}],["loader/with",{"_index":3239,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["loadercomponent",{"_index":260,"title":{"components/LoaderComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{},"overview.html":{}}}],["loadermodule",{"_index":2138,"title":{"modules/LoaderModule.html":{}},"body":{"modules/FormModule.html":{},"modules/LoaderModule.html":{},"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["loaders",{"_index":2993,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loaderservice",{"_index":1024,"title":{"injectables/LoaderService.html":{}},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loaderthe",{"_index":2991,"title":{},"body":{"components/LoaderComponent.html":{}}}],["loadimage",{"_index":2479,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loadimg",{"_index":2485,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["loading",{"_index":497,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"interfaces/WithLoader.html":{}}}],["loadresourcelistactions(state",{"_index":4022,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["loads",{"_index":463,"title":{},"body":{"directives/AssetDirective.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"miscellaneous/functions.html":{}}}],["loadwhen",{"_index":542,"title":{},"body":{"components/AssetListComponent.html":{}}}],["local",{"_index":2784,"title":{},"body":{"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["locale",{"_index":5291,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["localizable",{"_index":3576,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["localization",{"_index":4398,"title":{"additional-documentation/project-setup-tutorial/localization.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["localloader",{"_index":2998,"title":{},"body":{"components/LoaderComponent.html":{}}}],["localstorage.getitem(key",{"_index":2808,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["localstorage.setitem(key",{"_index":2810,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["located",{"_index":5080,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["location",{"_index":263,"title":{"additional-documentation/readme/location-readme.html":{},"additional-documentation/changelog/location-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/location-readme.html":{}}}],["location.latitude",{"_index":2288,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location.longitude",{"_index":2290,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["location/map",{"_index":3077,"title":{},"body":{"modules/LocationModule.html":{}}}],["location_components",{"_index":3078,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationmapcomponent",{"_index":262,"title":{"components/LocationMapComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locationmodule",{"_index":3070,"title":{"modules/LocationModule.html":{}},"body":{"modules/LocationModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationmoduleconfig",{"_index":3086,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["locationpickercomponent",{"_index":265,"title":{"components/LocationPickerComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["locationsearchcomponent",{"_index":267,"title":{"components/LocationSearchComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["locked",{"_index":3910,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["lockform",{"_index":3898,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["log",{"_index":3677,"title":{},"body":{"components/NotificationsComponent.html":{},"changelog.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["logged",{"_index":2367,"title":{},"body":{"components/IconComponent.html":{}}}],["logic",{"_index":5402,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["login",{"_index":272,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login's",{"_index":3232,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login'},{'name",{"_index":270,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["login(undefined",{"_index":759,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["login(value",{"_index":3220,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["login.component.html",{"_index":3152,"title":{},"body":{"components/LoginComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login.component.ts",{"_index":5287,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["login/login.component",{"_index":698,"title":{},"body":{"modules/AuthModule.html":{},"components/SignupComponent.html":{}}}],["logincomponent",{"_index":269,"title":{"components/LoginComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["logincomponent:24",{"_index":4282,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:26",{"_index":4285,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:28",{"_index":4284,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:30",{"_index":4291,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:32",{"_index":4292,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:34",{"_index":4290,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:35",{"_index":4293,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:36",{"_index":4294,"title":{},"body":{"components/SignupComponent.html":{}}}],["logincomponent:39",{"_index":4287,"title":{},"body":{"components/SignupComponent.html":{}}}],["loginformcomponent",{"_index":271,"title":{"components/LoginFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["loginformcomponent:18",{"_index":4326,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:20",{"_index":4328,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:22",{"_index":4325,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:24",{"_index":4317,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:26",{"_index":4316,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:28",{"_index":4312,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:30",{"_index":4315,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:32",{"_index":4310,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:34",{"_index":4311,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:36",{"_index":4313,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:38",{"_index":4314,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:40",{"_index":4309,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:42",{"_index":4308,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:44",{"_index":4327,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:47",{"_index":4329,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:51",{"_index":4322,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:59",{"_index":4324,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:67",{"_index":4321,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["loginformcomponent:72",{"_index":4323,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["logout",{"_index":731,"title":{},"body":{"injectables/AuthService.html":{}}}],["logout(api",{"_index":762,"title":{},"body":{"injectables/AuthService.html":{}}}],["long",{"_index":2780,"title":{},"body":{"interfaces/ListConfig.html":{},"components/NotificationsComponent.html":{}}}],["longer",{"_index":5173,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["longitude",{"_index":2270,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{}}}],["look",{"_index":5247,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["looked",{"_index":3659,"title":{},"body":{"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["looks",{"_index":3620,"title":{},"body":{"classes/Notification.html":{}}}],["lookup",{"_index":2246,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["lower",{"_index":2723,"title":{},"body":{"components/ListComponent.html":{}}}],["lowest",{"_index":5419,"title":{},"body":{"additional-documentation/readme/data-readme.html":{}}}],["lvl",{"_index":3567,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["lvl1",{"_index":1143,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["made",{"_index":4559,"title":{},"body":{"components/TinymceComponent.html":{}}}],["mail",{"_index":3207,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["main",{"_index":2707,"title":{},"body":{"components/ListComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["mainly",{"_index":5073,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["make",{"_index":77,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["makes",{"_index":5388,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["making",{"_index":1576,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["managed",{"_index":5090,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["mandatory",{"_index":3446,"title":{},"body":{"components/ModalComponent.html":{}}}],["manually",{"_index":4549,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["many",{"_index":1167,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["map",{"_index":998,"title":{},"body":{"classes/Config.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{}}}],["map'},{'name",{"_index":264,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["map((d",{"_index":1392,"title":{},"body":{"interfaces/Day.html":{}}}],["map((date",{"_index":1394,"title":{},"body":{"interfaces/Day.html":{}}}],["map((method",{"_index":814,"title":{},"body":{"injectables/AuthService.html":{}}}],["map((resource",{"_index":4003,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map(a",{"_index":4034,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map(field",{"_index":3560,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["map(i",{"_index":4014,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["map(item",{"_index":4372,"title":{},"body":{"classes/Sorter.html":{}}}],["map.component",{"_index":3083,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["map.component.html",{"_index":3043,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.scss",{"_index":3042,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts",{"_index":3041,"title":{},"body":{"components/LocationMapComponent.html":{},"coverage.html":{}}}],["map.component.ts:12",{"_index":3049,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:14",{"_index":3051,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:16",{"_index":3054,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:18",{"_index":3053,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:24",{"_index":3060,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.component.ts:31",{"_index":3057,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["map.value",{"_index":3130,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["maploader",{"_index":2238,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["mapped",{"_index":1961,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["mapping",{"_index":1306,"title":{},"body":{"interfaces/Day.html":{}}}],["maps",{"_index":1178,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{}}}],["mapsapiloader",{"_index":2235,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["marker",{"_index":3055,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend",{"_index":3044,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markerdragend(coords",{"_index":3056,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["markers",{"_index":3052,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["marks",{"_index":1315,"title":{},"body":{"interfaces/Day.html":{}}}],["markup",{"_index":3421,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["match",{"_index":1738,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LocationSearchComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["match.levels",{"_index":3565,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["matches",{"_index":4107,"title":{},"body":{"injectables/ResourceService.html":{}}}],["matches(change",{"_index":4118,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["matching",{"_index":341,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["math.abs(current",{"_index":3864,"title":{},"body":{"components/PaginationComponent.html":{}}}],["math.max(max",{"_index":3568,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["math.max(minlevel",{"_index":1094,"title":{},"body":{"components/CrudComponent.html":{}}}],["math.max(value.width",{"_index":2470,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.defaultsize",{"_index":2496,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["math.min(this.getpage",{"_index":3833,"title":{},"body":{"classes/Pagination.html":{}}}],["matter",{"_index":5252,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["max",{"_index":2148,"title":{},"body":{"modules/FormModule.html":{}}}],["maxcolumns",{"_index":2768,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["maximal",{"_index":2776,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["maximum",{"_index":1877,"title":{},"body":{"classes/Field.html":{}}}],["maxitems",{"_index":1845,"title":{},"body":{"classes/Field.html":{},"pipes/MaxItemsPipe.html":{}}}],["maxitemspipe",{"_index":2132,"title":{"pipes/MaxItemsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/MaxItemsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["meaning",{"_index":2073,"title":{},"body":{"interfaces/FileOptions.html":{},"modules/SymbolModule.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["means",{"_index":5427,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["meant",{"_index":141,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"guards/AuthGuard.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["meantioned",{"_index":5363,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["medium",{"_index":274,"title":{"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediumeditor",{"_index":3282,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditor(this.container.nativeelement",{"_index":3301,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["mediumeditorcomponent",{"_index":273,"title":{"components/MediumEditorComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mediumeditormodule",{"_index":3309,"title":{"modules/MediumEditorModule.html":{}},"body":{"modules/MediumEditorModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["mediummodule",{"_index":5184,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/medium-editor-readme.html":{}}}],["mediummoduleconfig",{"_index":3316,"title":{},"body":{"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["menu",{"_index":3319,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu,[ec",{"_index":277,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menu.component.html",{"_index":3322,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu.component.scss",{"_index":3321,"title":{},"body":{"components/MenuComponent.html":{}}}],["menu/menu.component",{"_index":4821,"title":{},"body":{"modules/UtilityModule.html":{}}}],["menu]'},{'name",{"_index":278,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["menucomponent",{"_index":276,"title":{"components/MenuComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["merge",{"_index":3584,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merge(route.data",{"_index":1077,"title":{},"body":{"components/CrudComponent.html":{}}}],["merged",{"_index":995,"title":{},"body":{"classes/Config.html":{},"injectables/ModelConfigService.html":{}}}],["merged[title",{"_index":3585,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields",{"_index":3605,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["mergedfields[key",{"_index":3608,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["merges",{"_index":3499,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["merging",{"_index":5518,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["message",{"_index":641,"title":{},"body":{"guards/AuthGuard.html":{},"components/ErrorComponent.html":{},"components/InputErrorsComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{}}}],["message.close",{"_index":3752,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["messages",{"_index":2610,"title":{},"body":{"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["met",{"_index":5394,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["metadata",{"_index":24,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"pipes/GroupPipe.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["method",{"_index":570,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["methods",{"_index":53,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["middle",{"_index":5424,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{}}}],["mimetypes",{"_index":4952,"title":{},"body":{"coverage.html":{}}}],["min",{"_index":193,"title":{},"body":{"components/AceComponent.html":{}}}],["minimum",{"_index":3890,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["miscellaneous",{"_index":5066,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["missing",{"_index":5551,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["mit",{"_index":3917,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["mmmm",{"_index":873,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["modal",{"_index":3418,"title":{},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["modal'},{'name",{"_index":280,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["modal.component.html",{"_index":3426,"title":{},"body":{"components/ModalComponent.html":{}}}],["modal/modal.component",{"_index":3974,"title":{},"body":{"modules/PopModule.html":{}}}],["modalcomponent",{"_index":279,"title":{"components/ModalComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["mode",{"_index":65,"title":{},"body":{"components/AceComponent.html":{},"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["model",{"_index":116,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["model's",{"_index":3481,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{}}}],["model.${filter.model",{"_index":1767,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.${model",{"_index":1799,"title":{},"body":{"injectables/EntryService.html":{}}}],["model.fields",{"_index":993,"title":{},"body":{"classes/Config.html":{}}}],["model/schema",{"_index":5314,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["modelchange",{"_index":3279,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["modelconfig",{"_index":1025,"title":{"interfaces/ModelConfig.html":{}},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["modelconfig.fields",{"_index":3556,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get(&#39;muffin&#39",{"_index":3511,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.get('muffin",{"_index":3539,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set(&#39;muffin&#39",{"_index":3531,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfig.set('muffin",{"_index":3541,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields",{"_index":3602,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigfields[key",{"_index":3610,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modelconfigservice",{"_index":1026,"title":{"injectables/ModelConfigService.html":{}},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["modelconfiguration",{"_index":3614,"title":{"interfaces/ModelConfiguration.html":{}},"body":{"interfaces/ModelConfiguration.html":{},"coverage.html":{}}}],["modelist.js",{"_index":169,"title":{},"body":{"components/AceComponent.html":{}}}],["modelresource",{"_index":2313,"title":{},"body":{"injectables/HistoryService.html":{}}}],["models",{"_index":2299,"title":{},"body":{"injectables/HistoryService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["models[model",{"_index":3613,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modes",{"_index":3462,"title":{},"body":{"components/ModalComponent.html":{}}}],["modified",{"_index":3535,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["modified'].indexof(key",{"_index":1803,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["modify",{"_index":2553,"title":{},"body":{"components/InputComponent.html":{}}}],["modifying",{"_index":1723,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["module",{"_index":343,"title":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["module's",{"_index":712,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["module(s",{"_index":5829,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["module.exports",{"_index":5214,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["modules",{"_index":345,"title":{"modules.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["modulewithproviders",{"_index":690,"title":{},"body":{"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"miscellaneous/functions.html":{}}}],["moment",{"_index":1256,"title":{},"body":{"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"injectables/TypeConfigService.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{}}}],["moment's",{"_index":1409,"title":{},"body":{"interfaces/Day.html":{}}}],["moment().startof('day').diff(date",{"_index":1406,"title":{},"body":{"interfaces/Day.html":{}}}],["moment(new",{"_index":4670,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value",{"_index":1280,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format('yyyy",{"_index":5298,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment(value).format(format",{"_index":4690,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).format(pattern",{"_index":1284,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["moment(value).format(this.symbol.resolve('moment.format.month",{"_index":4692,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment(value).isvalid",{"_index":4666,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["moment.format.date",{"_index":868,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.month",{"_index":872,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.format.time",{"_index":870,"title":{},"body":{"modules/CalendarModule.html":{},"modules/FormModule.html":{},"injectables/TypeConfigService.html":{}}}],["moment.locale('de",{"_index":5290,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["moment.locale(this.symbols.resolve('moment.locale'));using",{"_index":4409,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["moment.moment",{"_index":1236,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{}}}],["monorepo",{"_index":5089,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["month",{"_index":878,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["month'},{'name",{"_index":282,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["month.component.html",{"_index":1304,"title":{},"body":{"interfaces/Day.html":{}}}],["monthcomponent",{"_index":281,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/CalendarModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["monthformat",{"_index":1325,"title":{},"body":{"interfaces/Day.html":{}}}],["months",{"_index":1436,"title":{},"body":{"interfaces/Day.html":{}}}],["more",{"_index":722,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"injectables/SymbolPipe.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["mouseout",{"_index":3354,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover",{"_index":3347,"title":{},"body":{"components/MenuComponent.html":{}}}],["mouseover(day",{"_index":1366,"title":{},"body":{"interfaces/Day.html":{}}}],["mouseup(day",{"_index":1365,"title":{},"body":{"interfaces/Day.html":{}}}],["move",{"_index":891,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/adding-new-packages.html":{}}}],["move(item",{"_index":933,"title":{},"body":{"classes/Collection.html":{}}}],["moves",{"_index":935,"title":{},"body":{"classes/Collection.html":{}}}],["ms",{"_index":2529,"title":{},"body":{"components/InputComponent.html":{},"classes/Notification.html":{}}}],["muffin",{"_index":3512,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffin.entry?.name",{"_index":1640,"title":{},"body":{"directives/EntryDirective.html":{}}}],["muffin.name",{"_index":1598,"title":{},"body":{"directives/EntriesDirective.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffincomponent",{"_index":3668,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["muffinconfiguration",{"_index":5354,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["muffins",{"_index":5282,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["muffins/muffins.component",{"_index":5280,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinsadd",{"_index":5275,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["muffinscomponent",{"_index":5279,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["multi",{"_index":31,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["multiple",{"_index":1179,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["mustreload",{"_index":1020,"title":{},"body":{"components/CrudComponent.html":{}}}],["mustreload(item",{"_index":1051,"title":{},"body":{"components/CrudComponent.html":{}}}],["mutable",{"_index":3575,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["myapp",{"_index":2994,"title":{},"body":{"components/LoaderComponent.html":{}}}],["myasset.asset?.assetid",{"_index":501,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.created",{"_index":506,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.files?.length",{"_index":509,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.tags",{"_index":504,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.title",{"_index":502,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myasset.asset?.type",{"_index":507,"title":{},"body":{"directives/AssetDirective.html":{}}}],["myclient",{"_index":848,"title":{},"body":{"injectables/AuthService.html":{}}}],["mycomponent",{"_index":3649,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["myimage.asset?.assetid",{"_index":2426,"title":{},"body":{"directives/ImageDirective.html":{}}}],["name",{"_index":100,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["name[0].touppercase",{"_index":5295,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["names",{"_index":1960,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["namespace",{"_index":2258,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["native",{"_index":2418,"title":{},"body":{"directives/ImageDirective.html":{}}}],["natural",{"_index":4358,"title":{},"body":{"classes/Sorter.html":{}}}],["naturally",{"_index":4364,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["navigate",{"_index":5125,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["navigationend",{"_index":4515,"title":{},"body":{"components/TabsComponent.html":{}}}],["nearest",{"_index":2250,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["need",{"_index":1187,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["needed",{"_index":2524,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needing",{"_index":5405,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["needs",{"_index":2562,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["nest",{"_index":1555,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["nested",{"_index":1176,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["nestedcrudconfig",{"_index":2899,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/TypeConfigService.html":{}}}],["nestedpopactive",{"_index":1135,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["nesting",{"_index":3364,"title":{},"body":{"components/MenuComponent.html":{}}}],["never",{"_index":2534,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["new",{"_index":83,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["newdate",{"_index":1433,"title":{},"body":{"interfaces/Day.html":{}}}],["newdate.isbetween(this.timespan[0",{"_index":1435,"title":{},"body":{"interfaces/Day.html":{}}}],["newhistory",{"_index":2343,"title":{},"body":{"injectables/HistoryService.html":{}}}],["newly",{"_index":4164,"title":{},"body":{"interfaces/SdkField.html":{}}}],["newprojectroot",{"_index":5805,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["newtimespan",{"_index":1347,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan.reverse",{"_index":1352,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[0].isafter(newtimespan[1",{"_index":1351,"title":{},"body":{"interfaces/Day.html":{}}}],["newtimespan[this.dragged.first",{"_index":1349,"title":{},"body":{"interfaces/Day.html":{}}}],["next",{"_index":567,"title":{},"body":{"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["nexted",{"_index":656,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{}}}],["nexts",{"_index":3148,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{}}}],["ng",{"_index":5123,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["ng_value_accessor",{"_index":28,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngaftercontentinit",{"_index":4500,"title":{},"body":{"components/TabsComponent.html":{}}}],["ngafterviewinit",{"_index":63,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["ngif",{"_index":1665,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/TabsComponent.html":{}}}],["ngmodel",{"_index":5220,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ngmodule",{"_index":362,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["ngmodule(acemoduleconfig",{"_index":365,"title":{},"body":{"modules/AceModule.html":{}}}],["ngmodule(calendarmoduleconfig",{"_index":875,"title":{},"body":{"modules/CalendarModule.html":{}}}],["ngmodule(datamoduleconfig",{"_index":1229,"title":{},"body":{"modules/DataModule.html":{}}}],["ngmodule(formmoduleconfig",{"_index":2156,"title":{},"body":{"modules/FormModule.html":{}}}],["ngmodule(listmoduleconfig",{"_index":2963,"title":{},"body":{"modules/ListModule.html":{}}}],["ngmodule(locationmoduleconfig",{"_index":3092,"title":{},"body":{"modules/LocationModule.html":{}}}],["ngmodule(mediummoduleconfig",{"_index":3317,"title":{},"body":{"modules/MediumEditorModule.html":{}}}],["ngmodule(popmoduleconfig",{"_index":3976,"title":{},"body":{"modules/PopModule.html":{}}}],["ngmodule(selectmoduleconfig",{"_index":4275,"title":{},"body":{"modules/SelectModule.html":{}}}],["ngmodule(tinymcemoduleconfig",{"_index":4626,"title":{},"body":{"modules/TinymceModule.html":{}}}],["ngmodule(uimoduleconfig",{"_index":4700,"title":{},"body":{"modules/UiModule.html":{}}}],["ngmodule(utilitymoduleconfig",{"_index":4823,"title":{},"body":{"modules/UtilityModule.html":{}}}],["ngonchanges",{"_index":55,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ngonchanges(change",{"_index":1376,"title":{},"body":{"interfaces/Day.html":{}}}],["ngonchanges(changes",{"_index":582,"title":{},"body":{"components/AssetListComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["ngondestroy",{"_index":3278,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ngoninit",{"_index":56,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{}}}],["ngx",{"_index":694,"title":{},"body":{"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/SelectModule.html":{},"dependencies.html":{}}}],["ngzone",{"_index":2236,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationSearchComponent.html":{}}}],["nicht",{"_index":669,"title":{},"body":{"guards/AuthGuard.html":{}}}],["noapi",{"_index":4186,"title":{},"body":{"injectables/SdkService.html":{}}}],["noapi(api",{"_index":4201,"title":{},"body":{"injectables/SdkService.html":{}}}],["noclientid",{"_index":732,"title":{},"body":{"injectables/AuthService.html":{}}}],["noconflict/ace",{"_index":156,"title":{},"body":{"components/AceComponent.html":{}}}],["noconflict/ace.js';when",{"_index":5439,"title":{},"body":{"additional-documentation/readme/ace-readme.html":{}}}],["node",{"_index":5215,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules",{"_index":5107,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["node_modules/@ec.components",{"_index":5095,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["node_modules/eventsource/lib/eventsource.js",{"_index":5186,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/jsonpath",{"_index":5191,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["node_modules/tinymce/skins/lightgray/content.min.css",{"_index":5442,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["node_modules/tinymce/skins/lightgray/skin.min.css",{"_index":5441,"title":{},"body":{"additional-documentation/readme/tinymce-readme.html":{}}}],["non",{"_index":3445,"title":{},"body":{"components/ModalComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{}}}],["none",{"_index":2931,"title":{},"body":{"components/ListItemsComponent.html":{},"components/NotificationsComponent.html":{}}}],["normal",{"_index":1496,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["notable",{"_index":5443,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["note",{"_index":3887,"title":{},"body":{"classes/PaginationConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["nothing",{"_index":3519,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notification",{"_index":1067,"title":{"classes/Notification.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["notification(notification",{"_index":3738,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["notification.append",{"_index":3689,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.append.push(notification",{"_index":3690,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.component.ts",{"_index":3680,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.error",{"_index":3639,"title":{},"body":{"classes/Notification.html":{},"injectables/NotificationsService.html":{}}}],["notification.hide",{"_index":3685,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.host",{"_index":3694,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.message",{"_index":3688,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.replace",{"_index":3691,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.length",{"_index":3692,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.replace.push(notification",{"_index":3693,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notification.sticky",{"_index":3696,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.time",{"_index":3697,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{}}}],["notification.title",{"_index":3687,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationcomponent",{"_index":3617,"title":{},"body":{"classes/Notification.html":{}}}],["notifications",{"_index":646,"title":{},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["notifications'},{'name",{"_index":284,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["notifications.component",{"_index":3638,"title":{},"body":{"classes/Notification.html":{},"modules/NotificationsModule.html":{}}}],["notifications.component.html",{"_index":3643,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notifications.interface",{"_index":5816,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["notifications.interface.ts",{"_index":4841,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["notifications.service",{"_index":3681,"title":{},"body":{"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{}}}],["notifications/notifications.module",{"_index":4697,"title":{},"body":{"modules/UiModule.html":{}}}],["notificationscomponent",{"_index":283,"title":{"components/NotificationsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["notificationservice",{"_index":1027,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["notificationservice.$emitter",{"_index":3641,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["notificationsmodule",{"_index":3700,"title":{"modules/NotificationsModule.html":{}},"body":{"modules/NotificationsModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["notificationsservice",{"_index":647,"title":{"injectables/NotificationsService.html":{}},"body":{"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["now",{"_index":2508,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["npm",{"_index":5104,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["nth",{"_index":3265,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["null",{"_index":965,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"interfaces/Update.html":{}}}],["number",{"_index":484,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/GeocodeService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/LocationMapComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"classes/PaginationConfig.html":{},"injectables/PopService.html":{},"classes/Sorter.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["numbers",{"_index":900,"title":{},"body":{"classes/Collection.html":{},"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["numbers.add(4",{"_index":917,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.addall([5",{"_index":920,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has(2",{"_index":925,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.has([1,2",{"_index":928,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.remove(4",{"_index":939,"title":{},"body":{"classes/Collection.html":{}}}],["numbers.removeall",{"_index":942,"title":{},"body":{"classes/Collection.html":{}}}],["numeric",{"_index":4361,"title":{},"body":{"classes/Sorter.html":{}}}],["object",{"_index":751,"title":{},"body":{"injectables/AuthService.html":{},"classes/Config.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["object.assign",{"_index":996,"title":{},"body":{"classes/Config.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"components/ResourceListPopComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["object.assign(componentref.instance",{"_index":1562,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["object.assign(config",{"_index":4683,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assign(entry",{"_index":1793,"title":{},"body":{"injectables/EntryService.html":{}}}],["object.assign(merged",{"_index":3570,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(resource",{"_index":4155,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.assign(this",{"_index":1942,"title":{},"body":{"classes/Field.html":{},"classes/Notification.html":{},"classes/PaginationConfig.html":{}}}],["object.assign(this.config",{"_index":2729,"title":{},"body":{"components/ListComponent.html":{},"classes/Pagination.html":{}}}],["object.assign(this.config[key][property",{"_index":1004,"title":{},"body":{"classes/Config.html":{}}}],["object.assign(this.get(model",{"_index":3592,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.assign(this.types[type",{"_index":4688,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["object.assigned",{"_index":4556,"title":{},"body":{"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["object.keys(customfieldconfig",{"_index":3604,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig",{"_index":3557,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(fieldconfig).map(property",{"_index":3572,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["object.keys(filter",{"_index":4138,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(item.config.fields).reduce((equal",{"_index":1087,"title":{},"body":{"components/CrudComponent.html":{}}}],["object.keys(permissions",{"_index":813,"title":{},"body":{"injectables/AuthService.html":{}}}],["object.keys(symbolservice.sets).length",{"_index":4446,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(this.control.errors).reduce((errs",{"_index":2617,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["object.keys(this.sets).length",{"_index":4464,"title":{},"body":{"injectables/SymbolService.html":{}}}],["object.keys(value).foreach((key",{"_index":1788,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["object.keys(variables).foreach((key",{"_index":802,"title":{},"body":{"injectables/AuthService.html":{}}}],["objects",{"_index":1905,"title":{},"body":{"classes/Field.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"classes/Sorter.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["observable",{"_index":908,"title":{},"body":{"classes/Collection.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["observable(observer",{"_index":2259,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observables",{"_index":589,"title":{},"body":{"components/AssetListComponent.html":{}}}],["observeelement",{"_index":2233,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observeelement(el",{"_index":2251,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.complete",{"_index":2273,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observer.next(coords",{"_index":2272,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["observers",{"_index":1686,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["observes",{"_index":2253,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["obsolete",{"_index":3676,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["obtained",{"_index":3501,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["occur",{"_index":5407,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["occurs",{"_index":3160,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["ok",{"_index":2281,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["old",{"_index":1774,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["oldassetgroupids",{"_index":1989,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["oldvalues",{"_index":1787,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["oldvalues[key",{"_index":1789,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["omit",{"_index":5078,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["omits",{"_index":4191,"title":{},"body":{"injectables/SdkService.html":{}}}],["omitted",{"_index":3537,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["omittedfields",{"_index":3488,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["once",{"_index":5484,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["onchanges",{"_index":23,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"interfaces/Day.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["ondestroy",{"_index":3275,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["ondragleave(e",{"_index":1524,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondragover(e",{"_index":1514,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["ondrop(e",{"_index":1519,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["one",{"_index":565,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["onedit",{"_index":2636,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["oneline",{"_index":5519,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["ones",{"_index":4827,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["oninit",{"_index":22,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["onsave",{"_index":2468,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{}}}],["onsubmit",{"_index":3188,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["open",{"_index":1145,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"injectables/PopService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["opened",{"_index":1141,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/PopService.html":{}}}],["opening",{"_index":4066,"title":{},"body":{"components/ResourceCrudComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghours",{"_index":5392,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["openinghourscomponent",{"_index":5400,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["opens",{"_index":2857,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/UploadComponent.html":{}}}],["operation",{"_index":4839,"title":{},"body":{"interfaces/WithLoader.html":{}}}],["operations",{"_index":1186,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/GeocodeService.html":{},"classes/Sorter.html":{}}}],["operator",{"_index":576,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Field.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["operators",{"_index":5349,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["option",{"_index":755,"title":{},"body":{"injectables/AuthService.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["option.label?option.label:option",{"_index":1474,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["optional",{"_index":101,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithNotifications.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["optionally",{"_index":3156,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["options",{"_index":1148,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["options[key",{"_index":2017,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["options](https://github.com/yabwe/medium",{"_index":3297,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["original",{"_index":2487,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["original.resolution",{"_index":2490,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["others",{"_index":2858,"title":{},"body":{"components/ListHeaderComponent.html":{},"classes/Notification.html":{},"additional-documentation/adding-new-packages.html":{}}}],["otherwise",{"_index":1758,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["ouput",{"_index":2454,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{}}}],["out",{"_index":358,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"index.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["outline",{"_index":5324,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["output",{"_index":510,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["output'},{'name",{"_index":229,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["output('toggle",{"_index":3951,"title":{},"body":{"components/PopComponent.html":{}}}],["output.component",{"_index":1217,"title":{},"body":{"modules/DataModule.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["output.component.html",{"_index":1449,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts",{"_index":1448,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["output.component.ts:11",{"_index":1450,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output.component.ts:13",{"_index":1451,"title":{},"body":{"components/DefaultEntryOutputComponent.html":{},"components/DefaultOutputComponent.html":{}}}],["output/default",{"_index":1475,"title":{},"body":{"components/DefaultOutputComponent.html":{},"modules/FormModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["output/output.component",{"_index":2628,"title":{},"body":{"modules/IoModule.html":{}}}],["outputcomponent",{"_index":285,"title":{"components/OutputComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["outputs",{"_index":471,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/OutputComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["outside",{"_index":115,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"directives/SlotHostDirective.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["over",{"_index":2614,"title":{},"body":{"components/InputErrorsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["overlay",{"_index":3458,"title":{},"body":{"components/ModalComponent.html":{}}}],["overridden",{"_index":3254,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["override",{"_index":2375,"title":{},"body":{"components/IconComponent.html":{}}}],["overriden",{"_index":3487,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SymbolService.html":{}}}],["overrides",{"_index":2522,"title":{},"body":{"components/InputComponent.html":{}}}],["overriding",{"_index":2374,"title":{},"body":{"components/IconComponent.html":{}}}],["overview",{"_index":5146,"title":{"overview.html":{}},"body":{"overview.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["overwrite",{"_index":4413,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwriting",{"_index":4411,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["overwritten",{"_index":3222,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["p",{"_index":5803,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["package",{"_index":4845,"title":{"dependencies.html":{}},"body":{"changelog.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["package(s",{"_index":5828,"title":{},"body":{"additional-documentation/stackblitz.html":{}}}],["package.json",{"_index":5166,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages",{"_index":5075,"title":{"additional-documentation/adding-new-packages.html":{}},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["packages/.../actionbar.component.ts",{"_index":5152,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["packages/.../auth.module.ts",{"_index":5068,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/.../sorter.ts",{"_index":5069,"title":{},"body":{"miscellaneous/functions.html":{}}}],["packages/ace/src/lib/ace.component.ts",{"_index":11,"title":{},"body":{"components/AceComponent.html":{},"coverage.html":{}}}],["packages/ace/src/lib/ace.component.ts:102",{"_index":113,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:112",{"_index":131,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:116",{"_index":95,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:120",{"_index":103,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:29",{"_index":127,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:33",{"_index":136,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:37",{"_index":133,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:39",{"_index":129,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:43",{"_index":125,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:47",{"_index":70,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:51",{"_index":80,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:54",{"_index":81,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:75",{"_index":105,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:84",{"_index":110,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:93",{"_index":93,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.component.ts:97",{"_index":90,"title":{},"body":{"components/AceComponent.html":{}}}],["packages/ace/src/lib/ace.module.ts",{"_index":359,"title":{},"body":{"modules/AceModule.html":{},"coverage.html":{}}}],["packages/ace/src/test.ts",{"_index":4859,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts",{"_index":854,"title":{},"body":{"modules/CalendarModule.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/calendar.module.ts:46",{"_index":860,"title":{},"body":{"modules/CalendarModule.html":{}}}],["packages/calendar/src/lib/calendar/calendar.component.ts",{"_index":4861,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/calendar/month.component.ts",{"_index":1286,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/daterange/daterange.component.ts",{"_index":4867,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts",{"_index":1262,"title":{},"body":{"pipes/DatetimePipe.html":{},"coverage.html":{}}}],["packages/calendar/src/lib/datetime.pipe.ts:12",{"_index":1270,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["packages/calendar/src/lib/heatmap/heatmap.component.ts",{"_index":4870,"title":{},"body":{"coverage.html":{}}}],["packages/calendar/src/test.ts",{"_index":4872,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts",{"_index":884,"title":{},"body":{"classes/Collection.html":{},"coverage.html":{}}}],["packages/core/src/lib/collection/collection.ts:10",{"_index":904,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:106",{"_index":937,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:12",{"_index":907,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:123",{"_index":941,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:138",{"_index":946,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:14",{"_index":897,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:147",{"_index":944,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:160",{"_index":931,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:165",{"_index":934,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:31",{"_index":930,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:42",{"_index":924,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:53",{"_index":927,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:71",{"_index":913,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/collection/collection.ts:89",{"_index":919,"title":{},"body":{"classes/Collection.html":{}}}],["packages/core/src/lib/config/config.ts",{"_index":982,"title":{},"body":{"classes/Config.html":{},"coverage.html":{}}}],["packages/core/src/lib/config/config.ts:13",{"_index":987,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/config.ts:5",{"_index":985,"title":{},"body":{"classes/Config.html":{}}}],["packages/core/src/lib/config/field",{"_index":1951,"title":{},"body":{"interfaces/FieldConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts",{"_index":1837,"title":{},"body":{"classes/Field.html":{},"coverage.html":{}}}],["packages/core/src/lib/field/field.ts:11",{"_index":1868,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:13",{"_index":1856,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:15",{"_index":1887,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:17",{"_index":1891,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:19",{"_index":1888,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:21",{"_index":1874,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:23",{"_index":1880,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:25",{"_index":1881,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:27",{"_index":1875,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:29",{"_index":1859,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:31",{"_index":1863,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:33",{"_index":1864,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:35",{"_index":1890,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:37",{"_index":1857,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:39",{"_index":1872,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:41",{"_index":1886,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:43",{"_index":1858,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:45",{"_index":1876,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:47",{"_index":1870,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:49",{"_index":1853,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:61",{"_index":1897,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:65",{"_index":1892,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:69",{"_index":1896,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:7",{"_index":1884,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/field/field.ts:9",{"_index":1882,"title":{},"body":{"classes/Field.html":{}}}],["packages/core/src/lib/form/form",{"_index":2117,"title":{},"body":{"interfaces/FormConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/form/form.ts",{"_index":4880,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/item/item",{"_index":2632,"title":{},"body":{"interfaces/ItemConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/item/item.ts",{"_index":4884,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/list/list",{"_index":2761,"title":{},"body":{"interfaces/ListConfig.html":{},"coverage.html":{}}}],["packages/core/src/lib/list/list.ts",{"_index":4888,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts",{"_index":3762,"title":{},"body":{"classes/Pagination.html":{},"coverage.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:107",{"_index":3786,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:11",{"_index":3778,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:112",{"_index":3787,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:117",{"_index":3788,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:125",{"_index":3804,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:13",{"_index":3774,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:130",{"_index":3793,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:142",{"_index":3807,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:15",{"_index":3772,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:33",{"_index":3783,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:38",{"_index":3784,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:43",{"_index":3792,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:52",{"_index":3795,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:63",{"_index":3800,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:7",{"_index":3779,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:76",{"_index":3791,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:84",{"_index":3798,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:9",{"_index":3777,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:93",{"_index":3782,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/pagination/pagination.ts:98",{"_index":3789,"title":{},"body":{"classes/Pagination.html":{}}}],["packages/core/src/lib/selection/selection.ts",{"_index":4892,"title":{},"body":{"coverage.html":{}}}],["packages/core/src/lib/sorter/sorter.ts",{"_index":4342,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:25",{"_index":4350,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:32",{"_index":4352,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/lib/sorter/sorter.ts:62",{"_index":4355,"title":{},"body":{"classes/Sorter.html":{}}}],["packages/core/src/test.ts",{"_index":4895,"title":{},"body":{"coverage.html":{}}}],["packages/data/dist",{"_index":5809,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/lib",{"_index":5810,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/package.json#name",{"_index":5806,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["packages/data/src/lib/asset",{"_index":529,"title":{},"body":{"components/AssetListComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth",{"_index":634,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.module.ts",{"_index":684,"title":{},"body":{"modules/AuthModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["packages/data/src/lib/auth/auth.service.ts",{"_index":706,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:113",{"_index":746,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:135",{"_index":766,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:147",{"_index":763,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:157",{"_index":757,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:171",{"_index":764,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:24",{"_index":736,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:31",{"_index":760,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:45",{"_index":772,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:58",{"_index":744,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:67",{"_index":740,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:74",{"_index":768,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/auth.service.ts:82",{"_index":752,"title":{},"body":{"injectables/AuthService.html":{}}}],["packages/data/src/lib/auth/email",{"_index":4902,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/errors.ts",{"_index":4904,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts",{"_index":3146,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:24",{"_index":3155,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:26",{"_index":3162,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:28",{"_index":3159,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:30",{"_index":3166,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:32",{"_index":3154,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:34",{"_index":3165,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:35",{"_index":3167,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:36",{"_index":3168,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/login/login.component.ts:39",{"_index":3163,"title":{},"body":{"components/LoginComponent.html":{}}}],["packages/data/src/lib/auth/password",{"_index":3891,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts",{"_index":4276,"title":{},"body":{"components/SignupComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:17",{"_index":4279,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:19",{"_index":4280,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:21",{"_index":4283,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:23",{"_index":4288,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:25",{"_index":4289,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/auth/signup/signup.component.ts:28",{"_index":4286,"title":{},"body":{"components/SignupComponent.html":{}}}],["packages/data/src/lib/crud/crud",{"_index":1116,"title":{},"body":{"interfaces/CrudConfig.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts",{"_index":1005,"title":{},"body":{"components/CrudComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:115",{"_index":1057,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:33",{"_index":1036,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:35",{"_index":1032,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:37",{"_index":1038,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:39",{"_index":1063,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:41",{"_index":1059,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:43",{"_index":1065,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:45",{"_index":1039,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:47",{"_index":1042,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:49",{"_index":1030,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:58",{"_index":1070,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:59",{"_index":1069,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:70",{"_index":1055,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:79",{"_index":1045,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:84",{"_index":1052,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/crud/crud.component.ts:91",{"_index":1048,"title":{},"body":{"components/CrudComponent.html":{}}}],["packages/data/src/lib/data.module.ts",{"_index":1203,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["packages/data/src/lib/data.module.ts:95",{"_index":1206,"title":{},"body":{"modules/DataModule.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts",{"_index":1563,"title":{},"body":{"directives/EntriesDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:100",{"_index":1584,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:108",{"_index":1582,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:22",{"_index":1595,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:24",{"_index":1579,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:26",{"_index":1580,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:28",{"_index":1573,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:30",{"_index":1572,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:32",{"_index":1578,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:34",{"_index":1592,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:35",{"_index":1571,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:40",{"_index":1597,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:41",{"_index":1594,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:45",{"_index":1588,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:58",{"_index":1586,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:71",{"_index":1591,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:82",{"_index":1587,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:89",{"_index":1589,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entries/entries.directive.ts:96",{"_index":1585,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["packages/data/src/lib/entry",{"_index":429,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts",{"_index":1625,"title":{},"body":{"directives/EntryDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:19",{"_index":1638,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:21",{"_index":1630,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:23",{"_index":1633,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:25",{"_index":1629,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:27",{"_index":1631,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:29",{"_index":1634,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:31",{"_index":1632,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:33",{"_index":1628,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:37",{"_index":1639,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:38",{"_index":1637,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:42",{"_index":1636,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.directive.ts:50",{"_index":1635,"title":{},"body":{"directives/EntryDirective.html":{}}}],["packages/data/src/lib/entry/entry.service.ts",{"_index":1721,"title":{},"body":{"injectables/EntryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:106",{"_index":1747,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:14",{"_index":1735,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:17",{"_index":1763,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:21",{"_index":1737,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:39",{"_index":1755,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:53",{"_index":1762,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:69",{"_index":1750,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:75",{"_index":1742,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/entry/entry.service.ts:94",{"_index":1745,"title":{},"body":{"injectables/EntryService.html":{}}}],["packages/data/src/lib/files/asset",{"_index":4935,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts",{"_index":462,"title":{},"body":{"directives/AssetDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:16",{"_index":496,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:18",{"_index":480,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:20",{"_index":483,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:22",{"_index":481,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:24",{"_index":485,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:26",{"_index":476,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:28",{"_index":486,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:30",{"_index":473,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:33",{"_index":498,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:37",{"_index":494,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/asset/asset.directive.ts:48",{"_index":489,"title":{},"body":{"directives/AssetDirective.html":{}}}],["packages/data/src/lib/files/assetgroup",{"_index":602,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts",{"_index":1481,"title":{},"body":{"directives/DropzoneDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:11",{"_index":1494,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:13",{"_index":1507,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:24",{"_index":1509,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:37",{"_index":1504,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:46",{"_index":1492,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:7",{"_index":1499,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/dropzone/dropzone.directive.ts:9",{"_index":1497,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["packages/data/src/lib/files/file.service.ts",{"_index":1953,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/files.module.ts",{"_index":2086,"title":{},"body":{"modules/FilesModule.html":{}}}],["packages/data/src/lib/files/image",{"_index":2443,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts",{"_index":2401,"title":{},"body":{"directives/ImageDirective.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:14",{"_index":2413,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:16",{"_index":2411,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:18",{"_index":2409,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:20",{"_index":2408,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:22",{"_index":2425,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:27",{"_index":2419,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:39",{"_index":2415,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:43",{"_index":2424,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/image/image.directive.ts:60",{"_index":2422,"title":{},"body":{"directives/ImageDirective.html":{}}}],["packages/data/src/lib/files/mime",{"_index":4950,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/tag",{"_index":4953,"title":{},"body":{"coverage.html":{}}}],["packages/data/src/lib/files/upload",{"_index":4774,"title":{},"body":{"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts",{"_index":4701,"title":{},"body":{"components/UploadComponent.html":{},"coverage.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:16",{"_index":4731,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:17",{"_index":4738,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:18",{"_index":4735,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:20",{"_index":4716,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:22",{"_index":4713,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:24",{"_index":4710,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:26",{"_index":4711,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:28",{"_index":4715,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:30",{"_index":4709,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:32",{"_index":4718,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:34",{"_index":4717,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:36",{"_index":4733,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:38",{"_index":4737,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:40",{"_index":4708,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:49",{"_index":4726,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:59",{"_index":4724,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:65",{"_index":4721,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:73",{"_index":4722,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:80",{"_index":4730,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/files/upload/upload.component.ts:99",{"_index":4729,"title":{},"body":{"components/UploadComponent.html":{}}}],["packages/data/src/lib/model",{"_index":3480,"title":{},"body":{"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"interfaces/SdkField.html":{},"injectables/TypeConfigService.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource",{"_index":3996,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"coverage.html":{}}}],["packages/data/src/lib/resource/resource.module.ts",{"_index":4100,"title":{},"body":{"modules/ResourceModule.html":{}}}],["packages/data/src/lib/sdk/history.service.ts",{"_index":2296,"title":{},"body":{"injectables/HistoryService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:15",{"_index":2324,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:17",{"_index":2306,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:20",{"_index":2323,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:21",{"_index":2322,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:22",{"_index":2327,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:23",{"_index":2326,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:26",{"_index":2319,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:42",{"_index":2308,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/history.service.ts:52",{"_index":2314,"title":{},"body":{"injectables/HistoryService.html":{}}}],["packages/data/src/lib/sdk/sdk.module.ts",{"_index":4172,"title":{},"body":{"modules/SdkModule.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts",{"_index":4174,"title":{},"body":{"injectables/SdkService.html":{},"coverage.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:111",{"_index":4204,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:124",{"_index":4195,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:135",{"_index":4192,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:147",{"_index":4202,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:34",{"_index":4207,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:36",{"_index":4215,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:37",{"_index":4223,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:47",{"_index":4220,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:49",{"_index":4206,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:51",{"_index":4205,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:53",{"_index":4209,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:55",{"_index":4224,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:62",{"_index":4226,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:67",{"_index":4211,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:69",{"_index":4221,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:71",{"_index":4217,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:78",{"_index":4190,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:81",{"_index":4213,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/lib/sdk/sdk.service.ts:88",{"_index":4199,"title":{},"body":{"injectables/SdkService.html":{}}}],["packages/data/src/test.ts",{"_index":4981,"title":{},"body":{"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts",{"_index":2226,"title":{},"body":{"injectables/GeocodeService.html":{},"coverage.html":{}}}],["packages/location/src/lib/geocode.service.ts:12",{"_index":2237,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:18",{"_index":2252,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:43",{"_index":2240,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:49",{"_index":2243,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/geocode.service.ts:62",{"_index":2249,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["packages/location/src/lib/location",{"_index":3040,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts",{"_index":3076,"title":{},"body":{"modules/LocationModule.html":{},"coverage.html":{}}}],["packages/location/src/lib/location.module.ts:34",{"_index":3080,"title":{},"body":{"modules/LocationModule.html":{}}}],["packages/location/src/test.ts",{"_index":4987,"title":{},"body":{"coverage.html":{}}}],["packages/medium",{"_index":3269,"title":{},"body":{"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"coverage.html":{}}}],["packages/style",{"_index":5093,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["packages/tinymce/src/lib/tinymce.module.ts",{"_index":4623,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce",{"_index":4990,"title":{},"body":{"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts",{"_index":4537,"title":{},"body":{"components/TinymceComponent.html":{},"coverage.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:103",{"_index":4566,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:133",{"_index":4564,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:138",{"_index":4571,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:145",{"_index":4574,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:147",{"_index":4569,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:151",{"_index":4570,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:48",{"_index":4575,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:50",{"_index":4573,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:52",{"_index":4572,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:54",{"_index":4576,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:56",{"_index":4550,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:58",{"_index":4555,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:60",{"_index":4552,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:62",{"_index":4557,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:65",{"_index":4558,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:67",{"_index":4546,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:85",{"_index":4567,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:91",{"_index":4565,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/lib/tinymce/tinymce.component.ts:98",{"_index":4568,"title":{},"body":{"components/TinymceComponent.html":{}}}],["packages/tinymce/src/test.ts",{"_index":4993,"title":{},"body":{"coverage.html":{}}}],["packages/ui",{"_index":5408,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["packages/ui/src/lib/actionbar/actionbar.component.ts",{"_index":369,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts",{"_index":1230,"title":{},"body":{"components/DatetimeComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:24",{"_index":1237,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:26",{"_index":1242,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:28",{"_index":1250,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:30",{"_index":1253,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:32",{"_index":1240,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:34",{"_index":1243,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:37",{"_index":1248,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:42",{"_index":1251,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:46",{"_index":1245,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/datetime/datetime.component.ts:51",{"_index":1247,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["packages/ui/src/lib/form/default",{"_index":1453,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.html.ts",{"_index":5000,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.component.ts",{"_index":5002,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/form/form.module.ts",{"_index":2140,"title":{},"body":{"modules/FormModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts",{"_index":2157,"title":{},"body":{"injectables/FormService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/form.service.ts:10",{"_index":2191,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:14",{"_index":2184,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:25",{"_index":2175,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:39",{"_index":2169,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:47",{"_index":2177,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:59",{"_index":2188,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:74",{"_index":2182,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:79",{"_index":2172,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/form.service.ts:9",{"_index":2167,"title":{},"body":{"injectables/FormService.html":{}}}],["packages/ui/src/lib/form/max",{"_index":3262,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts",{"_index":4627,"title":{},"body":{"components/ToggleComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:19",{"_index":4638,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:21",{"_index":4630,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:24",{"_index":4634,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:29",{"_index":4635,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:33",{"_index":4637,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:36",{"_index":4631,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/toggle/toggle.component.ts:40",{"_index":4632,"title":{},"body":{"components/ToggleComponent.html":{}}}],["packages/ui/src/lib/form/visible",{"_index":4824,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/ec",{"_index":5005,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/emoji",{"_index":5007,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts",{"_index":2350,"title":{},"body":{"components/IconComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:17",{"_index":2362,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:19",{"_index":2361,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:23",{"_index":2365,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:29",{"_index":2364,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.component.ts:32",{"_index":2363,"title":{},"body":{"components/IconComponent.html":{}}}],["packages/ui/src/lib/icon/icon.module.ts",{"_index":2392,"title":{},"body":{"modules/IconModule.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts",{"_index":2394,"title":{},"body":{"injectables/IconService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/icon/icon.service.ts:11",{"_index":2399,"title":{},"body":{"injectables/IconService.html":{}}}],["packages/ui/src/lib/io/dynamic",{"_index":1525,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input",{"_index":2601,"title":{},"body":{"components/InputErrorsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts",{"_index":2516,"title":{},"body":{"components/InputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:110",{"_index":2541,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:124",{"_index":2547,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:131",{"_index":2560,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:135",{"_index":2545,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:140",{"_index":2546,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:23",{"_index":2531,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:25",{"_index":2525,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:27",{"_index":2538,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:29",{"_index":2540,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:31",{"_index":2528,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:33",{"_index":2530,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:35",{"_index":2536,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:37",{"_index":2532,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:39",{"_index":2523,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:41",{"_index":2521,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:43",{"_index":2533,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:46",{"_index":2549,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:48",{"_index":2561,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:50",{"_index":2559,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:52",{"_index":2544,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:58",{"_index":2542,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/input/input.component.ts:66",{"_index":2543,"title":{},"body":{"components/InputComponent.html":{}}}],["packages/ui/src/lib/io/io.module.ts",{"_index":2627,"title":{},"body":{"modules/IoModule.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts",{"_index":3754,"title":{},"body":{"components/OutputComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:14",{"_index":3757,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:16",{"_index":3758,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/output/output.component.ts:20",{"_index":3759,"title":{},"body":{"components/OutputComponent.html":{}}}],["packages/ui/src/lib/io/slot",{"_index":4334,"title":{},"body":{"directives/SlotHostDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts",{"_index":2291,"title":{},"body":{"pipes/GroupPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/group.pipe.ts:10",{"_index":2293,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["packages/ui/src/lib/list/list",{"_index":2788,"title":{},"body":{"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.html.ts",{"_index":5017,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts",{"_index":2650,"title":{},"body":{"components/ListComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/list.component.ts:102",{"_index":2682,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:110",{"_index":2701,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:116",{"_index":2700,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:123",{"_index":2689,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:129",{"_index":2690,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:142",{"_index":2691,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:155",{"_index":2688,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:27",{"_index":2703,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:30",{"_index":2705,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:32",{"_index":2672,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:34",{"_index":2673,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:36",{"_index":2671,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:38",{"_index":2677,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:40",{"_index":2678,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:42",{"_index":2679,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:44",{"_index":2680,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:46",{"_index":2674,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:48",{"_index":2675,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:50",{"_index":2676,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:52",{"_index":2669,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:54",{"_index":2704,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:56",{"_index":2668,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:59",{"_index":2706,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:60",{"_index":2702,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:66",{"_index":2695,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.component.ts:75",{"_index":2694,"title":{},"body":{"components/ListComponent.html":{}}}],["packages/ui/src/lib/list/list.module.ts",{"_index":2955,"title":{},"body":{"modules/ListModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination",{"_index":3879,"title":{},"body":{"classes/PaginationConfig.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts",{"_index":3835,"title":{},"body":{"components/PaginationComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:15",{"_index":3840,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:17",{"_index":3848,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:19",{"_index":3858,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:21",{"_index":3852,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:23",{"_index":3839,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:26",{"_index":3845,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:31",{"_index":3843,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:39",{"_index":3842,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/pagination/pagination.component.ts:45",{"_index":3847,"title":{},"body":{"components/PaginationComponent.html":{}}}],["packages/ui/src/lib/list/searchbar/searchbar.component.ts",{"_index":5021,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts",{"_index":2964,"title":{},"body":{"components/LoaderComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:14",{"_index":2984,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:16",{"_index":2985,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:18",{"_index":2974,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:25",{"_index":2977,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:31",{"_index":2975,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.component.ts:38",{"_index":2980,"title":{},"body":{"components/LoaderComponent.html":{}}}],["packages/ui/src/lib/loader/loader.module.ts",{"_index":3031,"title":{},"body":{"modules/LoaderModule.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts",{"_index":3034,"title":{},"body":{"injectables/LoaderService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:11",{"_index":3036,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:16",{"_index":3037,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/loader.service.ts:8",{"_index":3038,"title":{},"body":{"injectables/LoaderService.html":{}}}],["packages/ui/src/lib/loader/with",{"_index":4836,"title":{},"body":{"interfaces/WithLoader.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts",{"_index":3417,"title":{},"body":{"components/ModalComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:18",{"_index":3461,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:27",{"_index":3444,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:29",{"_index":3435,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:31",{"_index":3433,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:33",{"_index":3443,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:35",{"_index":3439,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:37",{"_index":3442,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:39",{"_index":3457,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:41",{"_index":3440,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:43",{"_index":3430,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:46",{"_index":3455,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:47",{"_index":3454,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:48",{"_index":3453,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:52",{"_index":3449,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:72",{"_index":3452,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/modal/modal.component.ts:76",{"_index":3451,"title":{},"body":{"components/ModalComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts",{"_index":1817,"title":{},"body":{"components/ErrorComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:12",{"_index":1820,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:18",{"_index":1822,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:22",{"_index":1821,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/error/error.component.ts:26",{"_index":1824,"title":{},"body":{"components/ErrorComponent.html":{}}}],["packages/ui/src/lib/notifications/notification.ts",{"_index":3616,"title":{},"body":{"classes/Notification.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:10",{"_index":3626,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:12",{"_index":3633,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:14",{"_index":3630,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:16",{"_index":3637,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:18",{"_index":3623,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:20",{"_index":3624,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:22",{"_index":3621,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:24",{"_index":3619,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:6",{"_index":3635,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notification.ts:8",{"_index":3627,"title":{},"body":{"classes/Notification.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts",{"_index":3640,"title":{},"body":{"components/NotificationsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:19",{"_index":3645,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.component.ts:21",{"_index":3644,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["packages/ui/src/lib/notifications/notifications.module.ts",{"_index":3706,"title":{},"body":{"modules/NotificationsModule.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts",{"_index":3709,"title":{},"body":{"injectables/NotificationsService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:22",{"_index":3731,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:24",{"_index":3734,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:26",{"_index":3718,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:34",{"_index":3726,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:48",{"_index":3728,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/notifications.service.ts:61",{"_index":3721,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["packages/ui/src/lib/notifications/with",{"_index":4840,"title":{},"body":{"interfaces/WithNotifications.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts",{"_index":3927,"title":{},"body":{"components/PopComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:28",{"_index":3934,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:30",{"_index":3944,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:32",{"_index":3937,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:34",{"_index":3935,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:36",{"_index":3936,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:38",{"_index":3938,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:40",{"_index":3945,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:43",{"_index":3939,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:52",{"_index":3933,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:55",{"_index":3946,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:61",{"_index":3941,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:67",{"_index":3943,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:76",{"_index":3942,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.component.ts:92",{"_index":3940,"title":{},"body":{"components/PopComponent.html":{}}}],["packages/ui/src/lib/pop/pop.module.ts",{"_index":3973,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts",{"_index":3977,"title":{},"body":{"injectables/PopService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:11",{"_index":3983,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/pop/pop.service.ts:9",{"_index":3985,"title":{},"body":{"injectables/PopService.html":{}}}],["packages/ui/src/lib/select/select.component.html.ts",{"_index":5026,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.component.ts",{"_index":5027,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/select/select.module.ts",{"_index":4271,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/de.ts",{"_index":5029,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/en.ts",{"_index":5030,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.interface.ts",{"_index":4388,"title":{},"body":{"interfaces/Symbol.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.module.ts",{"_index":4397,"title":{},"body":{"modules/SymbolModule.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts",{"_index":4418,"title":{},"body":{"injectables/SymbolPipe.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.pipe.ts:21",{"_index":4422,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts",{"_index":4426,"title":{},"body":{"injectables/SymbolService.html":{},"coverage.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:12",{"_index":4450,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:15",{"_index":4448,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:17",{"_index":4449,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:18",{"_index":4451,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:23",{"_index":4431,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:28",{"_index":4436,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:37",{"_index":4439,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:46",{"_index":4429,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:53",{"_index":4443,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:58",{"_index":4445,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:66",{"_index":4434,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:71",{"_index":4437,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/symbol/symbol.service.ts:77",{"_index":4441,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packages/ui/src/lib/ui.module.ts",{"_index":4696,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts",{"_index":2101,"title":{},"body":{"directives/FocusDirective.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:14",{"_index":2106,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:20",{"_index":2107,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:8",{"_index":2105,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.directive.ts:9",{"_index":2104,"title":{},"body":{"directives/FocusDirective.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts",{"_index":2099,"title":{},"body":{"interfaces/Focus.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/focus/focus.interface.ts:6",{"_index":2100,"title":{},"body":{"interfaces/Focus.html":{}}}],["packages/ui/src/lib/utility/login",{"_index":3180,"title":{},"body":{"components/LoginFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts",{"_index":3318,"title":{},"body":{"components/MenuComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:106",{"_index":3377,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:15",{"_index":3350,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:17",{"_index":3349,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:19",{"_index":3351,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:21",{"_index":3348,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:23",{"_index":3342,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:25",{"_index":3353,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:27",{"_index":3345,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:29",{"_index":3381,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:31",{"_index":3337,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:38",{"_index":3380,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:48",{"_index":3370,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:53",{"_index":3379,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:59",{"_index":3363,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:64",{"_index":3358,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:69",{"_index":3361,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:74",{"_index":3373,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:84",{"_index":3355,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:91",{"_index":3375,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/menu/menu.component.ts:98",{"_index":3367,"title":{},"body":{"components/MenuComponent.html":{}}}],["packages/ui/src/lib/utility/signup",{"_index":4300,"title":{},"body":{"components/SignupFormComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts",{"_index":4472,"title":{},"body":{"components/TabComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:11",{"_index":4480,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:13",{"_index":4483,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:15",{"_index":4482,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:17",{"_index":4484,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:19",{"_index":4485,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:21",{"_index":4479,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:24",{"_index":4489,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:27",{"_index":4486,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tab/tab.component.ts:32",{"_index":4487,"title":{},"body":{"components/TabComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts",{"_index":4493,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:14",{"_index":4513,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:16",{"_index":4502,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:27",{"_index":4511,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:38",{"_index":4505,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:48",{"_index":4506,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/tabs/tabs.component.ts:53",{"_index":4509,"title":{},"body":{"components/TabsComponent.html":{}}}],["packages/ui/src/lib/utility/utility.module.ts",{"_index":4819,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/email.validator.ts",{"_index":5037,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/lib/utility/validators/field",{"_index":5039,"title":{},"body":{"coverage.html":{}}}],["packages/ui/src/test.ts",{"_index":5041,"title":{},"body":{"coverage.html":{}}}],["packagr/issues/696",{"_index":4454,"title":{},"body":{"injectables/SymbolService.html":{}}}],["packagr/ng",{"_index":4453,"title":{},"body":{"injectables/SymbolService.html":{}}}],["page",{"_index":661,"title":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}},"body":{"guards/AuthGuard.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/LoginComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["page!==1",{"_index":1606,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["pagecontainer",{"_index":3837,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pages",{"_index":3763,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{}}}],["paginate",{"_index":3810,"title":{},"body":{"classes/Pagination.html":{}}}],["paginated",{"_index":3781,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination",{"_index":2665,"title":{"classes/Pagination.html":{}},"body":{"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["pagination'},{'name",{"_index":287,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pagination.component.html",{"_index":3836,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.first",{"_index":3866,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.getpages",{"_index":3811,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.last",{"_index":3871,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.next",{"_index":3870,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.of",{"_index":3874,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.prev",{"_index":3867,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination.settotal(50",{"_index":3809,"title":{},"body":{"classes/Pagination.html":{}}}],["pagination.size",{"_index":3878,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination/pagination",{"_index":2725,"title":{},"body":{"components/ListComponent.html":{}}}],["pagination/pagination.component",{"_index":2960,"title":{},"body":{"modules/ListModule.html":{}}}],["pagination?.params()?.from",{"_index":3872,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.to",{"_index":3873,"title":{},"body":{"components/PaginationComponent.html":{}}}],["pagination?.params()?.total",{"_index":3875,"title":{},"body":{"components/PaginationComponent.html":{}}}],["paginationcomponent",{"_index":286,"title":{"components/PaginationComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["paginationconfig",{"_index":2666,"title":{"classes/PaginationConfig.html":{}},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"coverage.html":{}}}],["paginationconfig(this.config",{"_index":3862,"title":{},"body":{"components/PaginationComponent.html":{}}}],["param",{"_index":4379,"title":{},"body":{"classes/Sorter.html":{}}}],["parameters",{"_index":99,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["params",{"_index":3767,"title":{},"body":{"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["parent",{"_index":957,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{},"components/ListItemsComponent.html":{},"components/MenuComponent.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parent.getpath(item",{"_index":3394,"title":{},"body":{"components/MenuComponent.html":{}}}],["parent=0",{"_index":3365,"title":{},"body":{"components/MenuComponent.html":{}}}],["parse",{"_index":3580,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["parses",{"_index":3450,"title":{},"body":{"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{}}}],["parsetype",{"_index":5593,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["part",{"_index":1046,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["pass",{"_index":2527,"title":{},"body":{"components/InputComponent.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["passed",{"_index":2316,"title":{},"body":{"injectables/HistoryService.html":{},"injectables/LoaderService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["passes",{"_index":4560,"title":{},"body":{"components/TinymceComponent.html":{}}}],["passing",{"_index":3000,"title":{},"body":{"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["password",{"_index":289,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["passwordlabel",{"_index":3194,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordplaceholder",{"_index":3195,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["passwordreset.button",{"_index":3926,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["passwordresetcomponent",{"_index":288,"title":{"components/PasswordResetComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["passwort",{"_index":3261,"title":{},"body":{"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{}}}],["pasted",{"_index":4089,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["patch",{"_index":2905,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["path",{"_index":372,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["paths",{"_index":4032,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"components/TabsComponent.html":{},"additional-documentation/adding-new-packages.html":{}}}],["paths.length",{"_index":4041,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["paths[paths.length",{"_index":4522,"title":{},"body":{"components/TabsComponent.html":{}}}],["pattern",{"_index":1268,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/ItemConfig.html":{},"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["pattern[0",{"_index":1283,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["pending",{"_index":4218,"title":{},"body":{"injectables/SdkService.html":{}}}],["per",{"_index":2781,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["peripherals",{"_index":2922,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["permission",{"_index":741,"title":{},"body":{"injectables/AuthService.html":{},"injectables/NotificationsService.html":{}}}],["permissions",{"_index":754,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{}}}],["permissions[method",{"_index":815,"title":{},"body":{"injectables/AuthService.html":{}}}],["phone",{"_index":4663,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["pick",{"_index":2451,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LocationPickerComponent.html":{}}}],["picker",{"_index":3095,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker'},{'name",{"_index":266,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["picker.component",{"_index":3084,"title":{},"body":{"modules/LocationModule.html":{}}}],["picker.component.html",{"_index":3097,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.scss",{"_index":3096,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts",{"_index":3094,"title":{},"body":{"components/LocationPickerComponent.html":{},"coverage.html":{}}}],["picker.component.ts:24",{"_index":3102,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:26",{"_index":3104,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:28",{"_index":3103,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:30",{"_index":3116,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:32",{"_index":3119,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:34",{"_index":3101,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:37",{"_index":3114,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:38",{"_index":3113,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:44",{"_index":3108,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:56",{"_index":3112,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:62",{"_index":3110,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:78",{"_index":3117,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:80",{"_index":3105,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["picker.component.ts:84",{"_index":3106,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["pickers",{"_index":5167,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["pictures",{"_index":5293,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["pipe",{"_index":1260,"title":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{}},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"pipes/MaxItemsPipe.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["pipe(debouncetime(100",{"_index":1335,"title":{},"body":{"interfaces/Day.html":{}}}],["pipe(debouncetime(this.debounce",{"_index":4594,"title":{},"body":{"components/TinymceComponent.html":{}}}],["pipe(switchmap",{"_index":2275,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["pipes",{"_index":1261,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"overview.html":{}}}],["pipetransform",{"_index":1272,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{}}}],["place",{"_index":2263,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["place.geometry",{"_index":2266,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lat",{"_index":2269,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["place.geometry.location.lng",{"_index":2271,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["placed",{"_index":4474,"title":{},"body":{"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["placeholder",{"_index":610,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"classes/Field.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"components/PasswordResetComponent.html":{},"components/SignupFormComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["placeholders",{"_index":4165,"title":{},"body":{"interfaces/SdkField.html":{}}}],["places",{"_index":3007,"title":{},"body":{"components/LoaderComponent.html":{},"modules/LocationModule.html":{},"components/NotificationsComponent.html":{}}}],["plain",{"_index":1992,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plan",{"_index":723,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["play",{"_index":5360,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["please",{"_index":2049,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["plugged",{"_index":2965,"title":{},"body":{"components/LoaderComponent.html":{}}}],["plurallabel",{"_index":1136,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["plus/lib'to",{"_index":5195,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["plus/lib/jsonpath.js",{"_index":5192,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["polyfill",{"_index":2332,"title":{},"body":{"injectables/HistoryService.html":{}}}],["pop",{"_index":1060,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["pop'},{'name",{"_index":216,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["pop.alt",{"_index":2501,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component",{"_index":1075,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"modules/ResourceModule.html":{}}}],["pop.component.html",{"_index":1648,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts",{"_index":1647,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{}}}],["pop.component.ts:15",{"_index":1662,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:16",{"_index":1661,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:17",{"_index":1663,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:18",{"_index":1673,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:19",{"_index":1704,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:20",{"_index":2453,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:21",{"_index":1677,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:22",{"_index":1660,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:23",{"_index":4090,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:24",{"_index":2460,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:25",{"_index":1701,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:26",{"_index":1702,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:27",{"_index":1700,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:28",{"_index":1699,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:29",{"_index":2461,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:30",{"_index":2462,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:31",{"_index":2458,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:32",{"_index":2457,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:33",{"_index":1683,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:35",{"_index":4091,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:37",{"_index":2456,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.component.ts:41",{"_index":1685,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.component.ts:45",{"_index":4092,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["pop.component.ts:50",{"_index":1682,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["pop.header",{"_index":2515,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.height",{"_index":2513,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.keepratio",{"_index":2504,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.service",{"_index":3950,"title":{},"body":{"components/PopComponent.html":{},"modules/PopModule.html":{}}}],["pop.submitbuttonlabel",{"_index":2467,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop.width",{"_index":2509,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["pop/asset",{"_index":2090,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["pop/entry",{"_index":1074,"title":{},"body":{"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/EntryListPopComponent.html":{},"coverage.html":{}}}],["pop/image",{"_index":2097,"title":{},"body":{"modules/FilesModule.html":{},"components/ImageSelectPopComponent.html":{},"coverage.html":{}}}],["pop/pop.component",{"_index":2884,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{}}}],["pop/pop.module",{"_index":2141,"title":{},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/UiModule.html":{}}}],["pop/pop.service",{"_index":3464,"title":{},"body":{"components/ModalComponent.html":{}}}],["pop/resource",{"_index":4078,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"coverage.html":{}}}],["pop_dialog",{"_index":4669,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["popcolumns",{"_index":1137,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["popcomponent",{"_index":291,"title":{"components/PopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popcomponent:28",{"_index":1664,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:30",{"_index":1705,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:32",{"_index":1672,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:34",{"_index":1666,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:36",{"_index":1669,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:38",{"_index":1674,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:40",{"_index":1708,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:43",{"_index":1679,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:55",{"_index":1709,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:61",{"_index":1690,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:67",{"_index":1698,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:76",{"_index":1695,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popcomponent:92",{"_index":1687,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popmodule",{"_index":2135,"title":{"modules/PopModule.html":{}},"body":{"modules/FormModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["popmoduleconfig",{"_index":3975,"title":{},"body":{"modules/PopModule.html":{},"coverage.html":{}}}],["pops",{"_index":1184,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/TinymceComponent.html":{}}}],["popservice",{"_index":1650,"title":{"injectables/PopService.html":{}},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"coverage.html":{},"overview.html":{}}}],["popservice.defaultcolumns",{"_index":1185,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["popservice.stack",{"_index":1688,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["popthe",{"_index":3949,"title":{},"body":{"components/PopComponent.html":{}}}],["populated",{"_index":2786,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["position",{"_index":3063,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["possesses",{"_index":548,"title":{},"body":{"components/AssetListComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["possible",{"_index":1155,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["post",{"_index":811,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["prebuilt",{"_index":5430,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["preceding",{"_index":3673,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["preexisting",{"_index":4414,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["prefill",{"_index":2505,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefilled",{"_index":5610,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["prefix",{"_index":1772,"title":{},"body":{"injectables/EntryService.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["prequisites",{"_index":5223,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["present",{"_index":85,"title":{},"body":{"components/AceComponent.html":{},"guards/AuthGuard.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["preservefilenames",{"_index":1959,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["preserves",{"_index":1966,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["pressing",{"_index":4063,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["pretty",{"_index":5345,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["prev",{"_index":1568,"title":{},"body":{"directives/EntriesDirective.html":{},"classes/Pagination.html":{}}}],["prevent",{"_index":4175,"title":{},"body":{"injectables/SdkService.html":{}}}],["previous",{"_index":2692,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{}}}],["primitive",{"_index":2647,"title":{},"body":{"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/readme/core-readme.html":{}}}],["primitve",{"_index":5396,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["private",{"_index":663,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"directives/EntriesDirective.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"components/LocationSearchComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"injectables/SdkService.html":{},"classes/Sorter.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["pro",{"_index":5175,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["problems",{"_index":5218,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["processing",{"_index":4551,"title":{},"body":{"components/TinymceComponent.html":{}}}],["prod",{"_index":5133,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["production",{"_index":5134,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["programmatically",{"_index":2644,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["project",{"_index":5070,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["project/node_modules/eventsource/lib",{"_index":5189,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["project/node_modules/jsonpath",{"_index":5194,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["promise",{"_index":132,"title":{},"body":{"components/AceComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"interfaces/ItemConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MediumEditorComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["promise((resolve",{"_index":2277,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{},"components/TinymceComponent.html":{}}}],["promise.all(this.stack.items",{"_index":3025,"title":{},"body":{"components/LoaderComponent.html":{}}}],["promise.reject('api_not_found",{"_index":786,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject('cannot",{"_index":519,"title":{},"body":{"directives/AssetDirective.html":{}}}],["promise.reject('desktop",{"_index":3747,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["promise.reject('fehler",{"_index":3657,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["promise.reject('getaccount",{"_index":4263,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('getschema",{"_index":4258,"title":{},"body":{"injectables/SdkService.html":{}}}],["promise.reject('no_api_found",{"_index":838,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.reject(`ecimage",{"_index":2433,"title":{},"body":{"directives/ImageDirective.html":{}}}],["promise.reject(err",{"_index":1786,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.reject(this.noclientid",{"_index":779,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve",{"_index":827,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["promise.resolve().then",{"_index":2035,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(>assets",{"_index":2055,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["promise.resolve(['get",{"_index":810,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(api",{"_index":780,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(item.config.onsave(item",{"_index":4147,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["promise.resolve(methods",{"_index":805,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results",{"_index":816,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(results.concat(method",{"_index":817,"title":{},"body":{"injectables/AuthService.html":{}}}],["promise.resolve(this.editor",{"_index":174,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["promise.resolve(value",{"_index":3255,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["promises",{"_index":2302,"title":{},"body":{"injectables/HistoryService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["propagate",{"_index":2937,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["propagatechange",{"_index":43,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["propagates",{"_index":3109,"title":{},"body":{"components/LocationPickerComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["propagation",{"_index":1252,"title":{},"body":{"components/DatetimeComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["proper",{"_index":5116,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["properly",{"_index":5285,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["properties",{"_index":40,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property",{"_index":575,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"pipes/GroupPipe.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["property.interface",{"_index":1941,"title":{},"body":{"classes/Field.html":{},"interfaces/FieldConfig.html":{}}}],["property.interface.ts",{"_index":4875,"title":{},"body":{"coverage.html":{}}}],["protected",{"_index":535,"title":{},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginFormComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{}}}],["protractor",{"_index":5140,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["provded",{"_index":2932,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["provide",{"_index":27,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FormModule.html":{},"components/InputComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provided",{"_index":2852,"title":{},"body":{"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"classes/Pagination.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["providers",{"_index":25,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["provides",{"_index":1533,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"additional-documentation/readme/calendar-readme.html":{}}}],["providing",{"_index":3713,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["pseudo",{"_index":5330,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["public",{"_index":46,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["public_api",{"_index":5499,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["publicapi",{"_index":475,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["publicapi#getfieldconfig",{"_index":3516,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{}}}],["publicapi(shortid",{"_index":4253,"title":{},"body":{"injectables/SdkService.html":{}}}],["publicassetlist",{"_index":1972,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publicassetresource",{"_index":511,"title":{},"body":{"directives/AssetDirective.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["publicassetresources",{"_index":2043,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["publish",{"_index":5112,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["publishing",{"_index":5831,"title":{"additional-documentation/publishing.html":{}},"body":{}}],["pushed",{"_index":3727,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["put",{"_index":812,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["puttable",{"_index":5509,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["qb1mro56u5katpx9j8o4",{"_index":3090,"title":{},"body":{"modules/LocationModule.html":{}}}],["query",{"_index":2769,"title":{},"body":{"interfaces/ListConfig.html":{},"interfaces/ResourceActionbarState.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["queryfilter",{"_index":4660,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["querylist",{"_index":3850,"title":{},"body":{"components/PaginationComponent.html":{},"components/TabsComponent.html":{}}}],["quick",{"_index":1119,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["quickly",{"_index":5272,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["rack",{"_index":1540,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component",{"_index":2631,"title":{},"body":{"modules/IoModule.html":{}}}],["rack.component.html",{"_index":1529,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack.component.ts",{"_index":1527,"title":{},"body":{"components/DynamicRackComponent.html":{},"coverage.html":{}}}],["rack.component.ts:10",{"_index":1532,"title":{},"body":{"components/DynamicRackComponent.html":{}}}],["rack/dynamic",{"_index":1526,"title":{},"body":{"components/DynamicRackComponent.html":{},"modules/IoModule.html":{},"coverage.html":{}}}],["range",{"_index":3882,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["ranking",{"_index":5332,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["ratio",{"_index":2446,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["raw",{"_index":1269,"title":{},"body":{"pipes/DatetimePipe.html":{},"components/LocationPickerComponent.html":{}}}],["rawfilter",{"_index":3548,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["re",{"_index":91,"title":{},"body":{"components/AceComponent.html":{}}}],["reach",{"_index":4130,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["react",{"_index":642,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reactions",{"_index":3161,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reactive",{"_index":3272,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["reactiveformsmodule",{"_index":691,"title":{},"body":{"modules/AuthModule.html":{},"modules/FormModule.html":{},"modules/IoModule.html":{},"modules/LocationModule.html":{},"modules/UtilityModule.html":{}}}],["read",{"_index":1175,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["readable",{"_index":1915,"title":{},"body":{"classes/Field.html":{}}}],["readme",{"_index":461,"title":{"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}},"body":{"directives/AssetDirective.html":{},"classes/Collection.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["readonly",{"_index":611,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"components/ListHeaderComponent.html":{},"components/LocationMapComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["reads",{"_index":2420,"title":{},"body":{"directives/ImageDirective.html":{}}}],["ready",{"_index":44,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["really",{"_index":5537,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recent",{"_index":3233,"title":{},"body":{"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["recognize",{"_index":5594,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["recommended",{"_index":3667,"title":{},"body":{"components/NotificationsComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["reconstruct",{"_index":2698,"title":{},"body":{"components/ListComponent.html":{}}}],["reconstructing",{"_index":2697,"title":{},"body":{"components/ListComponent.html":{}}}],["redirect",{"_index":644,"title":{},"body":{"guards/AuthGuard.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["redirecting",{"_index":659,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["reduce((a",{"_index":823,"title":{},"body":{"injectables/AuthService.html":{}}}],["reduce((has",{"_index":4370,"title":{},"body":{"classes/Sorter.html":{}}}],["reduce((match",{"_index":4139,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["reduce((max",{"_index":3566,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["refer",{"_index":5274,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["reference",{"_index":2550,"title":{},"body":{"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["referenced",{"_index":5387,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["references",{"_index":5423,"title":{},"body":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["reflect",{"_index":1438,"title":{},"body":{"interfaces/Day.html":{}}}],["reflected",{"_index":1314,"title":{},"body":{"interfaces/Day.html":{}}}],["regex",{"_index":5178,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["regexp",{"_index":2640,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["register",{"_index":2395,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{},"components/ToggleComponent.html":{}}}],["registered",{"_index":2400,"title":{},"body":{"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registeronchange",{"_index":57,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["registeronchange(fn",{"_index":94,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registerontouched",{"_index":58,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["registers",{"_index":96,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/ToggleComponent.html":{}}}],["registration",{"_index":4295,"title":{},"body":{"components/SignupComponent.html":{}}}],["registry",{"_index":2352,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{},"injectables/SymbolService.html":{}}}],["registry.find(s",{"_index":4455,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.indexof(this.get(symbol.name",{"_index":4460,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry.push(symbol",{"_index":4461,"title":{},"body":{"injectables/SymbolService.html":{}}}],["registry[index",{"_index":4462,"title":{},"body":{"injectables/SymbolService.html":{}}}],["regular",{"_index":4831,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["reinit/reload",{"_index":2535,"title":{},"body":{"components/InputComponent.html":{}}}],["reinstantiate",{"_index":5690,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["reject",{"_index":2278,"title":{},"body":{"injectables/GeocodeService.html":{},"components/TinymceComponent.html":{}}}],["reject(status",{"_index":2283,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["related",{"_index":686,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/LocationModule.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/data-readme.html":{}}}],["relation",{"_index":543,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relations",{"_index":4208,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["relative",{"_index":1439,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["relativeto",{"_index":4535,"title":{},"body":{"components/TabsComponent.html":{}}}],["release",{"_index":1778,"title":{},"body":{"injectables/EntryService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["releaseto",{"_index":5111,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["releasing",{"_index":5108,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["relevant",{"_index":439,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["relevantkeys",{"_index":3603,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.foreach(key",{"_index":3607,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["relevantkeys.length",{"_index":3606,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["reload",{"_index":4020,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["reloading",{"_index":5310,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["reloads",{"_index":1050,"title":{},"body":{"components/CrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rely",{"_index":5395,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["remain",{"_index":1164,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["removal",{"_index":1153,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{}}}],["remove",{"_index":892,"title":{},"body":{"classes/Collection.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["remove(item",{"_index":936,"title":{},"body":{"classes/Collection.html":{}}}],["removeall",{"_index":893,"title":{},"body":{"classes/Collection.html":{}}}],["removeall(items",{"_index":940,"title":{},"body":{"classes/Collection.html":{}}}],["removed",{"_index":1151,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["removeitem",{"_index":5600,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["removes",{"_index":938,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["removing",{"_index":2976,"title":{},"body":{"components/LoaderComponent.html":{}}}],["rename",{"_index":2649,"title":{},"body":{"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{},"components/UploadComponent.html":{}}}],["renamed",{"_index":5185,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["render",{"_index":1007,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ListComponent.html":{},"components/ResourceCrudComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendered",{"_index":2124,"title":{},"body":{"interfaces/FormConfig.html":{},"components/OutputComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["rendering",{"_index":3755,"title":{},"body":{"components/OutputComponent.html":{}}}],["renders",{"_index":1410,"title":{},"body":{"interfaces/Day.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{}}}],["replace",{"_index":1110,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/adding-new-packages.html":{}}}],["replaces",{"_index":769,"title":{},"body":{"injectables/AuthService.html":{},"classes/Collection.html":{},"injectables/SymbolService.html":{}}}],["replacewith",{"_index":894,"title":{},"body":{"classes/Collection.html":{}}}],["replacewith(items",{"_index":943,"title":{},"body":{"classes/Collection.html":{}}}],["repo",{"_index":5101,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["repository",{"_index":5088,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["represented",{"_index":1293,"title":{},"body":{"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["represents",{"_index":1900,"title":{},"body":{"classes/Field.html":{}}}],["request",{"_index":3894,"title":{},"body":{"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{}}}],["requested",{"_index":2412,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["requests",{"_index":4219,"title":{},"body":{"injectables/SdkService.html":{}}}],["require",{"_index":435,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/ModelConfigService.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["require(\"path",{"_index":5213,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["required",{"_index":1846,"title":{},"body":{"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"interfaces/SdkField.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["requires",{"_index":2396,"title":{},"body":{"injectables/IconService.html":{}}}],["res",{"_index":820,"title":{},"body":{"injectables/AuthService.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["reset",{"_index":357,"title":{},"body":{"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"components/PasswordResetComponent.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["reset'},{'name",{"_index":290,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["reset.component",{"_index":700,"title":{},"body":{"modules/AuthModule.html":{}}}],["reset.component.html",{"_index":3897,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts",{"_index":3892,"title":{},"body":{"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset.component.ts:17",{"_index":3908,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:19",{"_index":3907,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:21",{"_index":3900,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:23",{"_index":3902,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:25",{"_index":3903,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:27",{"_index":3899,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:29",{"_index":3906,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset.component.ts:32",{"_index":3904,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["reset/password",{"_index":699,"title":{},"body":{"modules/AuthModule.html":{},"components/PasswordResetComponent.html":{},"coverage.html":{}}}],["reset?e=1",{"_index":3896,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["resetfilter",{"_index":2845,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["resetpassword",{"_index":733,"title":{},"body":{"injectables/AuthService.html":{}}}],["resetpassword(email",{"_index":765,"title":{},"body":{"injectables/AuthService.html":{}}}],["resets",{"_index":3227,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["resolution",{"_index":2489,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.height",{"_index":2495,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolution.width",{"_index":2494,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["resolve",{"_index":1909,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"interfaces/ItemConfig.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Upload.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["resolve(name",{"_index":4435,"title":{},"body":{"injectables/SymbolService.html":{}}}],["resolve(results",{"_index":2282,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["resolve(tinymce.init(settings",{"_index":4607,"title":{},"body":{"components/TinymceComponent.html":{}}}],["resolveassets(assets",{"_index":2044,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolved",{"_index":1913,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"interfaces/Upload.html":{}}}],["resolved.find((resource",{"_index":2066,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resolvedapi",{"_index":784,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvefn",{"_index":2818,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolvefn(list",{"_index":2820,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["resolver",{"_index":158,"title":{},"body":{"components/AceComponent.html":{}}}],["resolves",{"_index":134,"title":{},"body":{"components/AceComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"interfaces/Upload.html":{}}}],["resolvevariables",{"_index":734,"title":{},"body":{"injectables/AuthService.html":{}}}],["resolvevariables(string",{"_index":767,"title":{},"body":{"injectables/AuthService.html":{}}}],["resouce",{"_index":5531,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resource",{"_index":293,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["resource.assetid",{"_index":2067,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["resource.del().then((res",{"_index":4159,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.newhistory",{"_index":2341,"title":{},"body":{"injectables/HistoryService.html":{}}}],["resource.save",{"_index":4149,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource.save().then((_resource",{"_index":4156,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource/resource.module",{"_index":1225,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{}}}],["resource[identifier",{"_index":4004,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resource[key",{"_index":4154,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["resource[label",{"_index":4005,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceaction",{"_index":4030,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceactionbarcomponent",{"_index":292,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceactionbarstate",{"_index":3995,"title":{"interfaces/ResourceActionbarState.html":{}},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["resourceconfig",{"_index":533,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceconfig#set",{"_index":5543,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["resourcecrudcomponent",{"_index":294,"title":{"components/ResourceCrudComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcedeletepopcomponent",{"_index":295,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceform",{"_index":4971,"title":{},"body":{"coverage.html":{}}}],["resourceformcomponent",{"_index":297,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelist",{"_index":572,"title":{},"body":{"components/AssetListComponent.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{}}}],["resourcelistcomponent",{"_index":298,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcelistcomponent:119",{"_index":583,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:128",{"_index":574,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:132",{"_index":579,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:25",{"_index":595,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:27",{"_index":552,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:29",{"_index":564,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:31",{"_index":556,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:33",{"_index":591,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:35",{"_index":546,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:37",{"_index":561,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:39",{"_index":554,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:48",{"_index":594,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:49",{"_index":590,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:50",{"_index":597,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:62",{"_index":569,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistcomponent:83",{"_index":586,"title":{},"body":{"components/AssetListComponent.html":{}}}],["resourcelistpopcomponent",{"_index":299,"title":{"components/ResourceListPopComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourcemodule",{"_index":1198,"title":{"modules/ResourceModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules.html":{},"overview.html":{}}}],["resourcepopcomponent",{"_index":300,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resources",{"_index":4027,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["resourceselectcomponent",{"_index":301,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice",{"_index":1729,"title":{"injectables/ResourceService.html":{}},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{}}}],["resourceservice.change",{"_index":1770,"title":{},"body":{"injectables/EntryService.html":{}}}],["response",{"_index":2040,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["response['getallitems",{"_index":2039,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["rest",{"_index":718,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"injectables/SdkService.html":{}}}],["result",{"_index":340,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results",{"_index":342,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/core-readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["results.length",{"_index":3128,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["results.push(method",{"_index":821,"title":{},"body":{"injectables/AuthService.html":{}}}],["results[0].formatted_address",{"_index":3129,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["retoggle",{"_index":5630,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["retrieve",{"_index":2793,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieve(key",{"_index":2799,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["retrieves",{"_index":3510,"title":{},"body":{"injectables/ModelConfigService.html":{},"classes/Pagination.html":{}}}],["return",{"_index":186,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["returned",{"_index":1815,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/SdkField.html":{}}}],["returns",{"_index":88,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"miscellaneous/functions.html":{}}}],["reverse",{"_index":2244,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LocationPickerComponent.html":{},"classes/Sorter.html":{}}}],["reversed",{"_index":5626,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["revert",{"_index":5465,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["reworked",{"_index":5504,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["role",{"_index":441,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"injectables/TypeConfigService.html":{}}}],["root",{"_index":412,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"classes/Config.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["roots",{"_index":4182,"title":{},"body":{"injectables/SdkService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["route",{"_index":534,"title":{},"body":{"components/AssetListComponent.html":{},"components/CrudComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["route.data",{"_index":3390,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.data.hidden",{"_index":3391,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.params",{"_index":1078,"title":{},"body":{"components/CrudComponent.html":{}}}],["route.path",{"_index":3388,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.path.indexof",{"_index":3389,"title":{},"body":{"components/MenuComponent.html":{}}}],["route.queryparams",{"_index":1079,"title":{},"body":{"components/CrudComponent.html":{}}}],["router",{"_index":1017,"title":{},"body":{"components/CrudComponent.html":{},"injectables/HistoryService.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routermodule",{"_index":1207,"title":{},"body":{"modules/DataModule.html":{},"modules/UtilityModule.html":{}}}],["routes",{"_index":636,"title":{"additional-documentation/project-setup-tutorial/routes.html":{}},"body":{"guards/AuthGuard.html":{},"components/MenuComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["routing",{"_index":3320,"title":{},"body":{"components/MenuComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["routing.module.ts",{"_index":5278,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["row",{"_index":2638,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["run",{"_index":5102,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["running",{"_index":5096,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/publishing.html":{}}}],["runs",{"_index":1911,"title":{},"body":{"classes/Field.html":{}}}],["runtime",{"_index":4179,"title":{},"body":{"injectables/SdkService.html":{}}}],["rxfilter",{"_index":4128,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxfilter((change",{"_index":4144,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["rxjs",{"_index":655,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"components/LoginFormComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"dependencies.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["rxjs';9",{"_index":5819,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["rxjs/operators",{"_index":1300,"title":{},"body":{"interfaces/Day.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{}}}],["rxjs/subject",{"_index":5818,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["s.name",{"_index":4456,"title":{},"body":{"injectables/SymbolService.html":{}}}],["safari",{"_index":5647,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{}}}],["safedelete",{"_index":1138,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["safeput",{"_index":1761,"title":{},"body":{"injectables/EntryService.html":{}}}],["same",{"_index":905,"title":{},"body":{"classes/Collection.html":{},"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"components/MenuComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sandbox.scss",{"_index":5241,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["save",{"_index":1733,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/ItemConfig.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["save(item",{"_index":4122,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["save(model",{"_index":1753,"title":{},"body":{"injectables/EntryService.html":{}}}],["save2",{"_index":5422,"title":{},"body":{"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["saved",{"_index":1166,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["saves",{"_index":1756,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["savethis",{"_index":5236,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scaffolding",{"_index":5127,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["scale",{"_index":3506,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["schema",{"_index":3486,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["schemarequests",{"_index":4183,"title":{},"body":{"injectables/SdkService.html":{}}}],["script",{"_index":5106,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["scss",{"_index":5181,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/style-readme.html":{}}}],["scssmake",{"_index":5233,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["sdk",{"_index":446,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["sdk.api",{"_index":479,"title":{},"body":{"directives/AssetDirective.html":{},"components/PasswordResetComponent.html":{},"components/UploadComponent.html":{}}}],["sdk.init",{"_index":4177,"title":{},"body":{"injectables/SdkService.html":{}}}],["sdk.service",{"_index":4173,"title":{},"body":{"modules/SdkModule.html":{}}}],["sdk/history.service",{"_index":1226,"title":{},"body":{"modules/DataModule.html":{}}}],["sdk/sdk.module",{"_index":1227,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{}}}],["sdk/sdk.service",{"_index":451,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["sdkfield",{"_index":4160,"title":{"interfaces/SdkField.html":{}},"body":{"interfaces/SdkField.html":{},"coverage.html":{}}}],["sdkmodule",{"_index":1199,"title":{"modules/SdkModule.html":{}},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules.html":{},"overview.html":{}}}],["sdkservice",{"_index":448,"title":{"injectables/SdkService.html":{}},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DefaultEntryInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"injectables/ResourceService.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sdkservice#api",{"_index":3158,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["search",{"_index":1861,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["search'},{'name",{"_index":268,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["search.component",{"_index":3085,"title":{},"body":{"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{}}}],["search.component.html",{"_index":3132,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts",{"_index":3131,"title":{},"body":{"components/LocationSearchComponent.html":{},"coverage.html":{}}}],["search.component.ts:16",{"_index":3135,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:18",{"_index":3140,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:20",{"_index":3134,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:28",{"_index":3137,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["search.component.ts:34",{"_index":3138,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["searchbar",{"_index":1651,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/GeocodeService.html":{},"interfaces/ItemConfig.html":{},"components/LocationSearchComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["searchbar'},{'name",{"_index":303,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["searchbar/searchbar.component",{"_index":2961,"title":{},"body":{"modules/ListModule.html":{}}}],["searchbarcomponent",{"_index":302,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["searchinput",{"_index":3133,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["second",{"_index":2719,"title":{},"body":{"components/ListComponent.html":{}}}],["section",{"_index":3947,"title":{},"body":{"components/PopComponent.html":{}}}],["see",{"_index":549,"title":{},"body":{"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"components/ResourceCrudComponent.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolPipe.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["sein",{"_index":5307,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["seite",{"_index":667,"title":{},"body":{"guards/AuthGuard.html":{}}}],["select",{"_index":251,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["select#togglepop",{"_index":5536,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["select'},{'name",{"_index":210,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select(item",{"_index":1684,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["select(page",{"_index":3796,"title":{},"body":{"classes/Pagination.html":{}}}],["select(tab",{"_index":4507,"title":{},"body":{"components/TabsComponent.html":{}}}],["select.component",{"_index":1221,"title":{},"body":{"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/ResourceModule.html":{},"modules/SelectModule.html":{}}}],["select.component.html",{"_index":605,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts",{"_index":604,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["select.component.ts:12",{"_index":618,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:13",{"_index":615,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:14",{"_index":616,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:15",{"_index":617,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["select.component.ts:16",{"_index":619,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:17",{"_index":614,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:18",{"_index":4786,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:19",{"_index":4784,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:20",{"_index":621,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:21",{"_index":4787,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:23",{"_index":620,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"components/UploadSelectComponent.html":{}}}],["select.component.ts:25",{"_index":4789,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:26",{"_index":4788,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:27",{"_index":4785,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:29",{"_index":4802,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:31",{"_index":4803,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:33",{"_index":4800,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:35",{"_index":4783,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:37",{"_index":4798,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:39",{"_index":4790,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:42",{"_index":4791,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:47",{"_index":4792,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:54",{"_index":4796,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.component.ts:60",{"_index":4794,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["select.emit(item",{"_index":2685,"title":{},"body":{"components/ListComponent.html":{}}}],["select/asset",{"_index":2091,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/assetgroup",{"_index":603,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"modules/FilesModule.html":{},"coverage.html":{}}}],["select/entry",{"_index":1220,"title":{},"body":{"modules/DataModule.html":{},"coverage.html":{}}}],["select/resource",{"_index":4103,"title":{},"body":{"modules/ResourceModule.html":{},"coverage.html":{}}}],["select/select.component",{"_index":377,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.component.html",{"_index":382,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["select/select.module",{"_index":4698,"title":{},"body":{"modules/UiModule.html":{}}}],["select/tag",{"_index":2098,"title":{},"body":{"modules/FilesModule.html":{},"coverage.html":{}}}],["select/upload",{"_index":2096,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{}}}],["selectable",{"_index":566,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["selectbyurl",{"_index":4501,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectbyurl(url",{"_index":4510,"title":{},"body":{"components/TabsComponent.html":{}}}],["selectcomponent",{"_index":304,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["selectday(_moment",{"_index":1422,"title":{},"body":{"interfaces/Day.html":{}}}],["selected",{"_index":1023,"title":{},"body":{"components/CrudComponent.html":{},"interfaces/Day.html":{},"components/ImageSelectPopComponent.html":{},"components/ListComponent.html":{},"components/MenuComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/UploadComponent.html":{}}}],["selectentry",{"_index":1021,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectentry(item",{"_index":1056,"title":{},"body":{"components/CrudComponent.html":{}}}],["selectindex",{"_index":2662,"title":{},"body":{"components/ListComponent.html":{}}}],["selectindex(index",{"_index":2699,"title":{},"body":{"components/ListComponent.html":{}}}],["selecting",{"_index":3136,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["selection",{"_index":958,"title":{},"body":{"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"interfaces/FileOptions.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"interfaces/Upload.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.config.solo",{"_index":2078,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.select(upload.item",{"_index":2079,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selection.toggle",{"_index":2687,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["selection.toggleall(upload.items",{"_index":2080,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["selectmode",{"_index":2770,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["selectmodule",{"_index":4265,"title":{"modules/SelectModule.html":{}},"body":{"modules/SelectModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["selectmoduleconfig",{"_index":4274,"title":{},"body":{"modules/SelectModule.html":{},"coverage.html":{}}}],["selector",{"_index":33,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["selects",{"_index":1149,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["selecttemplate",{"_index":3999,"title":{},"body":{"interfaces/ResourceActionbarState.html":{},"coverage.html":{}}}],["selectupload(upload",{"_index":2076,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["self",{"_index":4037,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["self.indexof(value",{"_index":4038,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["semicolon",{"_index":5820,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["send",{"_index":3893,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sends",{"_index":3905,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["sensitivity",{"_index":4362,"title":{},"body":{"classes/Sorter.html":{}}}],["sent",{"_index":3911,"title":{},"body":{"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["seperated",{"_index":5317,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["seperately",{"_index":5571,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["seperation",{"_index":5319,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["serve",{"_index":5124,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["server",{"_index":5122,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{}}}],["server:generic\",now",{"_index":5211,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["serveral",{"_index":4494,"title":{},"body":{"components/TabsComponent.html":{}}}],["service",{"_index":1722,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"injectables/ResourceService.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["services",{"_index":687,"title":{},"body":{"modules/AuthModule.html":{},"components/DefaultInputComponent.html":{},"modules/LocationModule.html":{},"modules/SymbolModule.html":{}}}],["session",{"_index":4184,"title":{},"body":{"injectables/SdkService.html":{}}}],["session(environment.environment",{"_index":4243,"title":{},"body":{"injectables/SdkService.html":{}}}],["set",{"_index":520,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/EntryListPopComponent.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["set([this.config.size",{"_index":3815,"title":{},"body":{"classes/Pagination.html":{}}}],["set(key",{"_index":2801,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["set(property",{"_index":3529,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["set(symbols",{"_index":4438,"title":{},"body":{"injectables/SymbolService.html":{}}}],["set(type",{"_index":4651,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["setapi(api",{"_index":4225,"title":{},"body":{"injectables/SdkService.html":{}}}],["setclientid",{"_index":725,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{}}}],["setdate(date",{"_index":1415,"title":{},"body":{"interfaces/Day.html":{}}}],["setemptystringstonull",{"_index":4110,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["setfilter",{"_index":2846,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setfilter(field",{"_index":2865,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["setgroup",{"_index":4706,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setgroup(group",{"_index":4723,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setmode",{"_index":59,"title":{},"body":{"components/AceComponent.html":{}}}],["setmode(mode",{"_index":104,"title":{},"body":{"components/AceComponent.html":{}}}],["sets",{"_index":86,"title":{},"body":{"components/AceComponent.html":{},"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["setter",{"_index":989,"title":{},"body":{"classes/Config.html":{}}}],["settheme",{"_index":60,"title":{},"body":{"components/AceComponent.html":{}}}],["settheme(theme",{"_index":109,"title":{},"body":{"components/AceComponent.html":{}}}],["settimeout",{"_index":424,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/DefaultInputComponent.html":{},"components/ListHeaderComponent.html":{},"components/MenuComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"components/UploadSelectComponent.html":{}}}],["settimeout(resolve",{"_index":3002,"title":{},"body":{"components/LoaderComponent.html":{}}}],["setting",{"_index":2978,"title":{},"body":{"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["settings",{"_index":847,"title":{},"body":{"injectables/AuthService.html":{},"components/TinymceComponent.html":{}}}],["settings.ts",{"_index":4991,"title":{},"body":{"coverage.html":{}}}],["settoday",{"_index":1444,"title":{},"body":{"interfaces/Day.html":{}}}],["settotal",{"_index":3768,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(itemcount",{"_index":3829,"title":{},"body":{"classes/Pagination.html":{}}}],["settotal(total",{"_index":3799,"title":{},"body":{"classes/Pagination.html":{}}}],["setup",{"_index":4399,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/publishing.html":{}}}],["seturl",{"_index":2406,"title":{},"body":{"directives/ImageDirective.html":{}}}],["seturl(url",{"_index":2421,"title":{},"body":{"directives/ImageDirective.html":{}}}],["setvalue",{"_index":3045,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["setvalue(value",{"_index":3059,"title":{},"body":{"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{}}}],["short",{"_index":2881,"title":{},"body":{"components/ListHeaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/routes.html":{}}}],["shorthand",{"_index":5234,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["shortid",{"_index":3596,"title":{},"body":{"injectables/ModelConfigService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["shouldbepartofform",{"_index":2165,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldbepartofform(field",{"_index":2183,"title":{},"body":{"injectables/FormService.html":{}}}],["shouldn't",{"_index":5376,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["show",{"_index":1655,"title":{},"body":{"components/EntryListPopComponent.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["show(e",{"_index":1694,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["showerror",{"_index":3189,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showerror(err",{"_index":3228,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["showheader",{"_index":2663,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["showing",{"_index":1317,"title":{},"body":{"interfaces/Day.html":{}}}],["showlabels",{"_index":3196,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["shown",{"_index":555,"title":{},"body":{"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"interfaces/CrudConfig.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginFormComponent.html":{},"components/MenuComponent.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["shownotification",{"_index":3650,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["showrawvalue",{"_index":3099,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["shows",{"_index":1696,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{}}}],["showurlinput",{"_index":4775,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["sie",{"_index":672,"title":{},"body":{"guards/AuthGuard.html":{},"components/PasswordResetComponent.html":{}}}],["signup",{"_index":308,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{}}}],["signup'},{'name",{"_index":306,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["signup(undefined",{"_index":771,"title":{},"body":{"injectables/AuthService.html":{},"components/SignupComponent.html":{}}}],["signup(value",{"_index":4319,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["signup.component.html",{"_index":4278,"title":{},"body":{"components/SignupComponent.html":{}}}],["signup/signup.component",{"_index":701,"title":{},"body":{"modules/AuthModule.html":{}}}],["signupcomponent",{"_index":305,"title":{"components/SignupComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"modules/AuthModule.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["signupformcomponent",{"_index":307,"title":{"components/SignupFormComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["silent",{"_index":3797,"title":{},"body":{"classes/Pagination.html":{},"interfaces/WithNotifications.html":{}}}],["simi",{"_index":999,"title":{},"body":{"classes/Config.html":{}}}],["simibug",{"_index":1602,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["similar",{"_index":1878,"title":{},"body":{"classes/Field.html":{},"components/IconComponent.html":{},"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["simple",{"_index":3647,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["sind",{"_index":673,"title":{},"body":{"guards/AuthGuard.html":{}}}],["single",{"_index":499,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{}}}],["singleton",{"_index":4343,"title":{},"body":{"classes/Sorter.html":{}}}],["singularlabel",{"_index":1139,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["site",{"_index":3009,"title":{},"body":{"components/LoaderComponent.html":{}}}],["situations",{"_index":4640,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["size",{"_index":2060,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["sizes",{"_index":2773,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["skipped",{"_index":553,"title":{},"body":{"components/AssetListComponent.html":{}}}],["skiproute",{"_index":4508,"title":{},"body":{"components/TabsComponent.html":{}}}],["slice",{"_index":3769,"title":{},"body":{"classes/Pagination.html":{}}}],["slice(items",{"_index":3803,"title":{},"body":{"classes/Pagination.html":{}}}],["slices",{"_index":3264,"title":{},"body":{"pipes/MaxItemsPipe.html":{},"classes/Pagination.html":{}}}],["slot",{"_index":1543,"title":{},"body":{"components/DynamicSlotComponent.html":{},"modules/IoModule.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["slot'},{'name",{"_index":234,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["slot.component",{"_index":2566,"title":{},"body":{"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{}}}],["slot.component.html",{"_index":1544,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["slot.component.ts",{"_index":1542,"title":{},"body":{"components/DynamicSlotComponent.html":{},"coverage.html":{}}}],["slot.component.ts:11",{"_index":1547,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:14",{"_index":1552,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot.component.ts:18",{"_index":1550,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["slot/dynamic",{"_index":1541,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"modules/IoModule.html":{},"components/OutputComponent.html":{},"coverage.html":{}}}],["slothostdirective",{"_index":337,"title":{"directives/SlotHostDirective.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sm",{"_index":1950,"title":{},"body":{"classes/Field.html":{}}}],["smoother",{"_index":3888,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["snackbar",{"_index":3460,"title":{},"body":{"components/ModalComponent.html":{}}}],["snippet",{"_index":5312,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["soeben",{"_index":3915,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["solo",{"_index":544,"title":{},"body":{"components/AssetListComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListItemsComponent.html":{}}}],["somebody",{"_index":2047,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["somemodule",{"_index":2372,"title":{},"body":{"components/IconComponent.html":{}}}],["sometimes",{"_index":5718,"title":{},"body":{"additional-documentation/changelog/core-changelog.html":{}}}],["somewhere",{"_index":162,"title":{},"body":{"components/AceComponent.html":{},"components/NotificationsComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["soon",{"_index":460,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"directives/EntryDirective.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sophisticated",{"_index":885,"title":{},"body":{"classes/Collection.html":{}}}],["sort",{"_index":1925,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"classes/Sorter.html":{}}}],["sort(((a",{"_index":3818,"title":{},"body":{"classes/Pagination.html":{}}}],["sort(items",{"_index":4354,"title":{},"body":{"classes/Sorter.html":{}}}],["sortable",{"_index":1847,"title":{},"body":{"classes/Field.html":{},"components/ListHeaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{}}}],["sortboolean",{"_index":4349,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortboolean(a",{"_index":4369,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sortby",{"_index":2771,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["sorted",{"_index":2782,"title":{},"body":{"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sorter",{"_index":4341,"title":{"classes/Sorter.html":{}},"body":{"classes/Sorter.html":{},"coverage.html":{}}}],["sorting",{"_index":2774,"title":{},"body":{"interfaces/ListConfig.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sortnumber",{"_index":4348,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortnumber(a",{"_index":4367,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorts",{"_index":4356,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["sortstring",{"_index":4347,"title":{},"body":{"classes/Sorter.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["sortstring(a",{"_index":4365,"title":{},"body":{"classes/Sorter.html":{},"miscellaneous/functions.html":{}}}],["sorttype",{"_index":4345,"title":{},"body":{"classes/Sorter.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"modules/DataModule.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"modules/IconModule.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"modules/IoModule.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"modules/ListModule.html":{},"components/LoaderComponent.html":{},"modules/LoaderModule.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"modules/LocationModule.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"modules/PopModule.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"modules/ResourceModule.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"modules/SdkModule.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"modules/UiModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{}}}],["source.addeventlistener('entrycreated",{"_index":2348,"title":{},"body":{"injectables/HistoryService.html":{}}}],["source.addeventlistener('entryupdated",{"_index":2345,"title":{},"body":{"injectables/HistoryService.html":{}}}],["span",{"_index":1316,"title":{},"body":{"interfaces/Day.html":{}}}],["spanchanged",{"_index":1327,"title":{},"body":{"interfaces/Day.html":{}}}],["spancolor",{"_index":1318,"title":{},"body":{"interfaces/Day.html":{}}}],["speakingurl",{"_index":5391,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["specific",{"_index":1901,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["specified",{"_index":106,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Symbol.html":{},"injectables/SymbolService.html":{}}}],["specify",{"_index":3157,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["splice(1).join",{"_index":3474,"title":{},"body":{"components/ModalComponent.html":{}}}],["spreadsheet",{"_index":1994,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["square",{"_index":2414,"title":{},"body":{"directives/ImageDirective.html":{}}}],["src",{"_index":2404,"title":{},"body":{"directives/ImageDirective.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["src/app/app",{"_index":5277,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/app/app.component.html",{"_index":5264,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/app.module",{"_index":5253,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/app/muffins/muffins.component.html",{"_index":5276,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["src/environments",{"_index":5243,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.prod.ts",{"_index":5250,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["src/environments/environment.ts",{"_index":5248,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl",{"_index":5259,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["ssl\",without",{"_index":5260,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["stack",{"_index":2971,"title":{},"body":{"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["stackblitz",{"_index":5826,"title":{"additional-documentation/stackblitz.html":{}},"body":{"additional-documentation/stackblitz.html":{}}}],["stage",{"_index":716,"title":{},"body":{"injectables/AuthService.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["staging",{"_index":5245,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["standards",{"_index":5800,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["stands",{"_index":991,"title":{},"body":{"classes/Config.html":{}}}],["start",{"_index":1239,"title":{},"body":{"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"pipes/MaxItemsPipe.html":{},"components/TabComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["started",{"_index":4843,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["startnow",{"_index":5268,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["startthe",{"_index":5105,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["state",{"_index":1725,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"classes/Pagination.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["statement",{"_index":5566,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["statements",{"_index":4854,"title":{},"body":{"coverage.html":{}}}],["states",{"_index":2834,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["static",{"_index":856,"title":{},"body":{"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/LocationModule.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{}}}],["status",{"_index":2280,"title":{},"body":{"injectables/GeocodeService.html":{},"components/LoaderComponent.html":{}}}],["stay",{"_index":3631,"title":{},"body":{"classes/Notification.html":{},"injectables/SymbolService.html":{}}}],["stays",{"_index":1707,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["step",{"_index":3591,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["steps",{"_index":5797,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["sticky",{"_index":1109,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["still",{"_index":4680,"title":{},"body":{"injectables/TypeConfigService.html":{},"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["stop",{"_index":2048,"title":{},"body":{"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["storage",{"_index":2785,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["storagekey",{"_index":2772,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["storagekeyresolver",{"_index":2790,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["store",{"_index":2783,"title":{},"body":{"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{}}}],["store(key",{"_index":2803,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig",{"_index":2794,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["storeconfig(list",{"_index":2805,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["stored",{"_index":5131,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["stores",{"_index":2320,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/WithNotifications.html":{}}}],["strategy=endless",{"_index":1607,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["stream",{"_index":2310,"title":{},"body":{"injectables/HistoryService.html":{}}}],["string",{"_index":68,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FieldConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/LocationPickerComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["string,value",{"_index":578,"title":{},"body":{"components/AssetListComponent.html":{}}}],["string.replace",{"_index":803,"title":{},"body":{"injectables/AuthService.html":{}}}],["stringify",{"_index":5575,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["strings",{"_index":1807,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"interfaces/Update.html":{},"miscellaneous/functions.html":{}}}],["strong",{"_index":5341,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strong.component.ts",{"_index":5338,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["strongcomponent",{"_index":5337,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["structured",{"_index":1904,"title":{},"body":{"classes/Field.html":{},"components/ListComponent.html":{}}}],["stuff",{"_index":2968,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/SdkService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/adding-new-packages.html":{}}}],["style",{"_index":3419,"title":{"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/style-changelog.html":{}},"body":{"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{}}}],["styles.scss",{"_index":5237,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["styleurls",{"_index":35,"title":{},"body":{"components/AceComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["sub",{"_index":992,"title":{},"body":{"classes/Config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["subbranches",{"_index":2646,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["subclass",{"_index":3223,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["subject",{"_index":654,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Collection.html":{},"interfaces/Day.html":{},"components/LoginComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"additional-documentation/adding-new-packages.html":{}}}],["submenus",{"_index":3343,"title":{},"body":{"components/MenuComponent.html":{}}}],["submit",{"_index":2123,"title":{},"body":{"interfaces/FormConfig.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["submitbuttonlabel",{"_index":2121,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ImageSelectPopComponent.html":{}}}],["submitted",{"_index":3187,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["submitting",{"_index":5352,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["subscribe",{"_index":1080,"title":{},"body":{"components/CrudComponent.html":{},"components/LocationSearchComponent.html":{}}}],["subscribe((change",{"_index":2590,"title":{},"body":{"components/InputComponent.html":{}}}],["subscribe((day",{"_index":1336,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribe((event",{"_index":2113,"title":{},"body":{"directives/FocusDirective.html":{}}}],["subscribe(editor",{"_index":4595,"title":{},"body":{"components/TinymceComponent.html":{}}}],["subscribe(timespan",{"_index":1339,"title":{},"body":{"interfaces/Day.html":{}}}],["subscribed",{"_index":1727,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/PaginationComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["subscribers",{"_index":4131,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["subscribes",{"_index":588,"title":{},"body":{"components/AssetListComponent.html":{},"components/LocationSearchComponent.html":{},"components/TinymceComponent.html":{}}}],["subtract(weeksbefore",{"_index":1389,"title":{},"body":{"interfaces/Day.html":{}}}],["succesful",{"_index":3219,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["success",{"_index":3149,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["success/error",{"_index":3665,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["successful",{"_index":3150,"title":{},"body":{"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["successfully",{"_index":1165,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoginFormComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupFormComponent.html":{}}}],["such",{"_index":1908,"title":{},"body":{"classes/Field.html":{}}}],["suitable",{"_index":1916,"title":{},"body":{"classes/Field.html":{},"additional-documentation/readme/location-readme.html":{}}}],["summary.json",{"_index":5825,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["super",{"_index":3538,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["super(elementref",{"_index":391,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["super(formservice",{"_index":454,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["super(popservice",{"_index":1712,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["super(sdk",{"_index":2427,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.filterdropdownlist(listcomponent",{"_index":4042,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["super.load",{"_index":2416,"title":{},"body":{"directives/ImageDirective.html":{}}}],["super.load(id).then(this.use.bind(this",{"_index":2431,"title":{},"body":{"directives/ImageDirective.html":{}}}],["support",{"_index":3470,"title":{},"body":{"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"modules.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["supported",{"_index":1174,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ModalComponent.html":{}}}],["supports",{"_index":5308,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["sure",{"_index":78,"title":{},"body":{"components/AceComponent.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/ResourceListPopComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{},"additional-documentation/publishing.html":{}}}],["svg",{"_index":5145,"title":{},"body":{"modules.html":{}}}],["switch",{"_index":1158,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/LoaderComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["switchmap",{"_index":2256,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["symbol",{"_index":1028,"title":{"interfaces/Symbol.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol's",{"_index":4405,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.content",{"_index":4458,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbol.interface",{"_index":4424,"title":{},"body":{"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{}}}],["symbol.language",{"_index":4410,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbol.pipe",{"_index":4417,"title":{},"body":{"modules/SymbolModule.html":{}}}],["symbol.service",{"_index":4416,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{}}}],["symbol/symbol.interface",{"_index":2379,"title":{},"body":{"components/IconComponent.html":{},"injectables/IconService.html":{}}}],["symbol/symbol.module",{"_index":2150,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["symbol/symbol.service",{"_index":1274,"title":{},"body":{"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/InputErrorsComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{}}}],["symbolmodule",{"_index":2139,"title":{"modules/SymbolModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/SymbolModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{}}}],["symbolpipe",{"_index":4396,"title":{"injectables/SymbolPipe.html":{}},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"coverage.html":{},"overview.html":{}}}],["symbols",{"_index":4403,"title":{},"body":{"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbols.map(symbol",{"_index":4459,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice",{"_index":1029,"title":{"injectables/SymbolService.html":{}},"body":{"components/CrudComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/ErrorComponent.html":{},"injectables/FormService.html":{},"injectables/IconService.html":{},"components/ImageSelectPopComponent.html":{},"components/InputErrorsComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"classes/PaginationConfig.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice#set",{"_index":4406,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["symbolservice.get(name",{"_index":4457,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.registry",{"_index":4433,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.resolve",{"_index":4423,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["symbolservice.resolve('moment.format.date",{"_index":2153,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.month",{"_index":2155,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve('moment.format.time",{"_index":2154,"title":{},"body":{"modules/FormModule.html":{}}}],["symbolservice.resolve(name",{"_index":4470,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.set(symbols",{"_index":4471,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symbolservice.sets[object.keys(symbolservice.sets)[0",{"_index":4447,"title":{},"body":{"injectables/SymbolService.html":{}}}],["symlinks",{"_index":5094,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["syntax",{"_index":5325,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["system",{"_index":1752,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["t",{"_index":906,"title":{},"body":{"classes/Collection.html":{},"interfaces/ItemConfig.html":{}}}],["tab",{"_index":4473,"title":{},"body":{"components/TabComponent.html":{},"components/TabsComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["tab's",{"_index":4481,"title":{},"body":{"components/TabComponent.html":{}}}],["tab'},{'name",{"_index":310,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tab.activate",{"_index":4532,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.component.html",{"_index":4475,"title":{},"body":{"components/TabComponent.html":{}}}],["tab.el.nativeelement.getattribute('selected",{"_index":4527,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.label",{"_index":4536,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.parent",{"_index":4526,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab.route",{"_index":4533,"title":{},"body":{"components/TabsComponent.html":{}}}],["tab/tab.component",{"_index":4516,"title":{},"body":{"components/TabsComponent.html":{},"modules/UtilityModule.html":{}}}],["tabcomponent",{"_index":309,"title":{"components/TabComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["table",{"_index":1303,"title":{},"body":{"interfaces/Day.html":{},"coverage.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":5042,"title":{},"body":{"coverage.html":{}}}],["tabs",{"_index":4497,"title":{},"body":{"components/TabsComponent.html":{},"components/TinymceComponent.html":{}}}],["tabs'},{'name",{"_index":312,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tabs.component.html",{"_index":4498,"title":{},"body":{"components/TabsComponent.html":{}}}],["tabs/tabs.component",{"_index":4490,"title":{},"body":{"components/TabComponent.html":{},"modules/UtilityModule.html":{}}}],["tabscomponent",{"_index":311,"title":{"components/TabsComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"modules/UtilityModule.html":{},"coverage.html":{},"overview.html":{}}}],["tag",{"_index":314,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["tags",{"_index":503,"title":{},"body":{"directives/AssetDirective.html":{},"classes/Field.html":{},"interfaces/ResourceActionbarState.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{}}}],["tagselectcomponent",{"_index":313,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["takes",{"_index":1006,"title":{},"body":{"components/CrudComponent.html":{},"components/ErrorComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["taking",{"_index":1168,"title":{},"body":{"interfaces/CrudConfig.html":{}}}],["target",{"_index":3013,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/ModelConfigService.html":{},"components/TinymceComponent.html":{}}}],["targeted",{"_index":149,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/LocationPickerComponent.html":{}}}],["task",{"_index":5109,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tell",{"_index":5375,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["tells",{"_index":1885,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"classes/Pagination.html":{},"interfaces/SdkField.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/publishing.html":{}}}],["templated",{"_index":4514,"title":{},"body":{"components/TabsComponent.html":{}}}],["templateref",{"_index":3438,"title":{},"body":{"components/ModalComponent.html":{}}}],["templates",{"_index":433,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/ModalComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["templateurl",{"_index":37,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"modules/SymbolModule.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["test",{"_index":5136,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tests",{"_index":4357,"title":{},"body":{"classes/Sorter.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["text",{"_index":1480,"title":{},"body":{"components/DefaultOutputComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/MenuComponent.html":{},"interfaces/Symbol.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["textarea",{"_index":4655,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["thats",{"_index":5267,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["theme",{"_index":66,"title":{},"body":{"components/AceComponent.html":{}}}],["themelist.js",{"_index":170,"title":{},"body":{"components/AceComponent.html":{}}}],["then((_entry",{"_index":1784,"title":{},"body":{"injectables/EntryService.html":{}}}],["then((_resource",{"_index":4152,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((_upload",{"_index":4759,"title":{},"body":{"components/UploadComponent.html":{}}}],["then((asset",{"_index":526,"title":{},"body":{"directives/AssetDirective.html":{}}}],["then((assetlist",{"_index":2025,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((assets",{"_index":2041,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((available",{"_index":840,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((entry",{"_index":1643,"title":{},"body":{"directives/EntryDirective.html":{},"injectables/EntryService.html":{}}}],["then((fieldconfig",{"_index":3601,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((loadedentry",{"_index":1100,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((methods",{"_index":1084,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["then((minlevel",{"_index":1093,"title":{},"body":{"components/CrudComponent.html":{}}}],["then((modelconfig",{"_index":3555,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["then((res",{"_index":794,"title":{},"body":{"injectables/AuthService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["then((resolvedapi",{"_index":782,"title":{},"body":{"injectables/AuthService.html":{}}}],["then((resource",{"_index":4158,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["then((response",{"_index":2038,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((upload",{"_index":2031,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then((user",{"_index":3172,"title":{},"body":{"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{}}}],["then(_methods",{"_index":828,"title":{},"body":{"injectables/AuthService.html":{}}}],["then(actions",{"_index":4025,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["then(asset",{"_index":2473,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["then(dmassetlist",{"_index":2061,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then(list",{"_index":1610,"title":{},"body":{"directives/EntriesDirective.html":{},"interfaces/ResourceActionbarState.html":{}}}],["then(res",{"_index":819,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["then(results",{"_index":3127,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["then(source",{"_index":2337,"title":{},"body":{"injectables/HistoryService.html":{}}}],["then(this.seturl.bind(this",{"_index":2440,"title":{},"body":{"directives/ImageDirective.html":{}}}],["then(url",{"_index":2475,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["therefor",{"_index":5426,"title":{},"body":{"additional-documentation/readme/core-readme.html":{}}}],["therefore",{"_index":2645,"title":{},"body":{"interfaces/ItemConfig.html":{}}}],["this._api",{"_index":4197,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.me",{"_index":4264,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then",{"_index":4236,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.resolve().then(api",{"_index":4256,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._api.setclientid(environment.clientid",{"_index":4255,"title":{},"body":{"injectables/SdkService.html":{}}}],["this._toggle.emit(this.active",{"_index":3966,"title":{},"body":{"components/PopComponent.html":{}}}],["this.accounts",{"_index":4193,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.actionstack[this.currentid",{"_index":406,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.activated",{"_index":3962,"title":{},"body":{"components/PopComponent.html":{}}}],["this.activated.next",{"_index":4491,"title":{},"body":{"components/TabComponent.html":{}}}],["this.active",{"_index":1517,"title":{},"body":{"directives/DropzoneDirective.html":{},"components/PopComponent.html":{}}}],["this.add(item",{"_index":973,"title":{},"body":{"classes/Collection.html":{}}}],["this.add.subscribe((item",{"_index":392,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.addall(items",{"_index":978,"title":{},"body":{"classes/Collection.html":{}}}],["this.additem(item",{"_index":4051,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.api",{"_index":456,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/SignupComponent.html":{}}}],["this.apiresolved",{"_index":4237,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.app.tick",{"_index":4598,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.asset",{"_index":527,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.assetgroupid",{"_index":2484,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.assetgrouplistpromise",{"_index":2070,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.assetgroups",{"_index":628,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.assetid",{"_index":516,"title":{},"body":{"directives/AssetDirective.html":{},"directives/ImageDirective.html":{}}}],["this.auth.getallowedmodelmethods(this.model",{"_index":1082,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.auth.getallowedresourcemethods(this.relation",{"_index":4081,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.auth.login",{"_index":3171,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.auth.resetpassword(this.email",{"_index":3912,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.auth.signup",{"_index":4296,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.autofocus",{"_index":2110,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.autofocusfirst",{"_index":2739,"title":{},"body":{"components/ListComponent.html":{}}}],["this.autoload",{"_index":517,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{}}}],["this.backdrop",{"_index":3477,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.bakery.bake().then",{"_index":3671,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.calendar.writevalue(value",{"_index":1259,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["this.canalter(value",{"_index":1441,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cdr.markforcheck",{"_index":1085,"title":{},"body":{"components/CrudComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/PopComponent.html":{}}}],["this.cells",{"_index":1384,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[0",{"_index":1355,"title":{},"body":{"interfaces/Day.html":{}}}],["this.cells[this.cells.length",{"_index":1356,"title":{},"body":{"interfaces/Day.html":{}}}],["this.center",{"_index":3062,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.change.asobservable",{"_index":3776,"title":{},"body":{"classes/Pagination.html":{}}}],["this.change.next(this.config",{"_index":3826,"title":{},"body":{"classes/Pagination.html":{}}}],["this.changed.emit",{"_index":2477,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.changed.emit(change",{"_index":2591,"title":{},"body":{"components/InputComponent.html":{}}}],["this.changed.emit(coords",{"_index":3145,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.changed.emit(position",{"_index":3067,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.changed.emit(this.list",{"_index":2743,"title":{},"body":{"components/ListComponent.html":{}}}],["this.changed.emit(this.value",{"_index":4597,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.changes.asobservable",{"_index":4142,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.asobservable().pipe",{"_index":4143,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changes.next",{"_index":4136,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.changesenvironment.next(environment",{"_index":4241,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.changespan.asobservable().pipe(debouncetime(800",{"_index":1338,"title":{},"body":{"interfaces/Day.html":{}}}],["this.changespan.next(this.timespan",{"_index":1354,"title":{},"body":{"interfaces/Day.html":{}}}],["this.checkpermission(`${model}:${method",{"_index":832,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.checkpermission(`${this.resolvevariables(permissions[method",{"_index":818,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.classes",{"_index":3473,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.clean(oldvalues",{"_index":1800,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clean(value",{"_index":1794,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.clear",{"_index":4740,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.clearfilter",{"_index":2904,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.clickevent",{"_index":3956,"title":{},"body":{"components/PopComponent.html":{}}}],["this.collection",{"_index":2734,"title":{},"body":{"components/ListComponent.html":{}}}],["this.colors",{"_index":1369,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors.length",{"_index":3400,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.colors[_moment.toisostring",{"_index":1370,"title":{},"body":{"interfaces/Day.html":{}}}],["this.colors[this.getlevel(level",{"_index":3399,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.columnclicked.emit(item",{"_index":1112,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columnclicked.observers.length",{"_index":1111,"title":{},"body":{"components/CrudComponent.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.columns",{"_index":1948,"title":{},"body":{"classes/Field.html":{}}}],["this.componentfactoryresolver.resolvecomponentfactory(component",{"_index":1558,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.componentinstance",{"_index":2568,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control",{"_index":2587,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.control.valuechanges",{"_index":2588,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent",{"_index":2570,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.focusevent.emit(focus",{"_index":2571,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange",{"_index":2596,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.registeronchange(this.propagatechange",{"_index":2597,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue",{"_index":2599,"title":{},"body":{"components/InputComponent.html":{}}}],["this.componentinstance.writevalue(value",{"_index":2600,"title":{},"body":{"components/InputComponent.html":{}}}],["this.config",{"_index":422,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceListPopComponent.html":{}}}],["this.config.alwaysloadentry",{"_index":1096,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.availablesizes",{"_index":3834,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.fields",{"_index":1092,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.levels",{"_index":1095,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.config.methods",{"_index":1083,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.methods.indexof(method",{"_index":1086,"title":{},"body":{"components/CrudComponent.html":{},"components/ResourceCrudComponent.html":{}}}],["this.config.page",{"_index":3820,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config.singularlabel",{"_index":1719,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.config.size",{"_index":3817,"title":{},"body":{"classes/Pagination.html":{}}}],["this.config[key",{"_index":1002,"title":{},"body":{"classes/Config.html":{}}}],["this.config[key][property",{"_index":1003,"title":{},"body":{"classes/Config.html":{}}}],["this.configinput",{"_index":2730,"title":{},"body":{"components/ListComponent.html":{}}}],["this.configure('model",{"_index":3540,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.connectcontrol",{"_index":2585,"title":{},"body":{"components/InputComponent.html":{}}}],["this.container.nativeelement",{"_index":4602,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.container.nativeelement.innerhtml",{"_index":3299,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.control",{"_index":2576,"title":{},"body":{"components/InputComponent.html":{}}}],["this.control.errors[key",{"_index":2618,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.create(model",{"_index":1783,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.create(relation",{"_index":4151,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.create.emit(query",{"_index":4050,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.create.observers.length",{"_index":4049,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.createclicked.next",{"_index":4086,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.createclicked.observers.length",{"_index":4085,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.currentactions",{"_index":4033,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.custom",{"_index":4751,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.datamanager",{"_index":4251,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.datamanager.datamanager(this._api.datamanagerid",{"_index":4232,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.date",{"_index":1417,"title":{},"body":{"interfaces/Day.html":{}}}],["this.date.clone().add(value",{"_index":1434,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dateformat",{"_index":1271,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["this.dayclicked.emit(_moment",{"_index":1426,"title":{},"body":{"interfaces/Day.html":{}}}],["this.deactivated.next",{"_index":4492,"title":{},"body":{"components/TabComponent.html":{}}}],["this.defaultmonthformat",{"_index":1333,"title":{},"body":{"interfaces/Day.html":{}}}],["this.defaulttime",{"_index":3753,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.desktopnotification(instance",{"_index":3740,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.destroy",{"_index":4600,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.disabled",{"_index":1515,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.disabledragend",{"_index":1363,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disabledragstart",{"_index":1362,"title":{},"body":{"interfaces/Day.html":{}}}],["this.disableupdates(key",{"_index":2335,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.displaydate(true",{"_index":4664,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.dmassetconfig",{"_index":2002,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.drag.asobservable",{"_index":1334,"title":{},"body":{"interfaces/Day.html":{}}}],["this.drag.next(day",{"_index":1367,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged",{"_index":1342,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.first",{"_index":1344,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dragged.last",{"_index":1346,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropday(day",{"_index":1337,"title":{},"body":{"interfaces/Day.html":{}}}],["this.dropdownlist",{"_index":425,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.dropdownlist.focusfirst",{"_index":426,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.ecasset",{"_index":515,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.ecdropzone.emit(e",{"_index":1522,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["this.ecfocus",{"_index":2112,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecfocus.emit(true",{"_index":2111,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.ecimage",{"_index":2428,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.ecimage.assetid",{"_index":2429,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.editor",{"_index":171,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.editor.buttons.image.onclick(true",{"_index":4613,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.destroy",{"_index":3305,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.execcommand('mceinsertcontent",{"_index":4618,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.getcontent",{"_index":3303,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.editor.on('change",{"_index":4615,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.on('dblclick",{"_index":4611,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.remove",{"_index":4599,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.session.setmode('ace/mode",{"_index":187,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setcontent(this.value",{"_index":4610,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.editor.settheme('ace/theme",{"_index":188,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.setvalue(this.value",{"_index":180,"title":{},"body":{"components/AceComponent.html":{}}}],["this.editor.subscribe('editableinput",{"_index":3302,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.element.nativeelement.blur",{"_index":2115,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.element.nativeelement.focus",{"_index":2114,"title":{},"body":{"directives/FocusDirective.html":{}}}],["this.elementref",{"_index":3957,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement",{"_index":3960,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.classlist.add(`${this.type",{"_index":3478,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.classlist.remove(`${type",{"_index":3476,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.elementref.nativeelement.contains(element",{"_index":3959,"title":{},"body":{"components/PopComponent.html":{}}}],["this.elementref.nativeelement.src",{"_index":2442,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.emitter.asobservable",{"_index":3733,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.emitter.next(instance",{"_index":3741,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.enableupdates(resource",{"_index":2336,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.endless",{"_index":1603,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entry",{"_index":1644,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entryid",{"_index":1641,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.entrylist",{"_index":1615,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.follownextlink().then(list",{"_index":1621,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.followprevlink().then(list",{"_index":1622,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.getallitems",{"_index":1616,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasfirstlink",{"_index":1624,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrylist.hasnextlink",{"_index":1623,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.entrypop.edit(loadedentry",{"_index":1101,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.entryservice.change({model:'muffin",{"_index":1773,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.entryservice.save(model",{"_index":3599,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.environment",{"_index":4200,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.error",{"_index":1827,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.code",{"_index":1829,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.emit(err",{"_index":3252,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.error.message",{"_index":1830,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.error.next(error",{"_index":3177,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.errormessage",{"_index":3249,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.event",{"_index":4752,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.eventsources[key",{"_index":2338,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[key].close",{"_index":2340,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.eventsources[relation",{"_index":2334,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.fb.group",{"_index":3245,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.field",{"_index":1467,"title":{},"body":{"components/DefaultInputComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.field.autofocus",{"_index":1468,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.field.config",{"_index":2580,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init",{"_index":2593,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.init(this.componentinstance",{"_index":2594,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.input",{"_index":2583,"title":{},"body":{"components/InputComponent.html":{}}}],["this.field.property",{"_index":2579,"title":{},"body":{"components/InputComponent.html":{}}}],["this.fieldhost.viewcontainerref",{"_index":1559,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["this.fileinput",{"_index":4739,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.click",{"_index":4741,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileinput.nativeelement.value",{"_index":4747,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.assetgrouplist().then(assetgroups",{"_index":627,"title":{},"body":{"components/AssetgroupSelectComponent.html":{}}}],["this.fileservice.defaultoptions",{"_index":4714,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.fileservice.isnewassetgroupid(this.assetgroupid",{"_index":4756,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.isoldassetgroupid(this.assetgroupid",{"_index":2464,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/UploadComponent.html":{}}}],["this.fileservice.uploadassets(files",{"_index":4757,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.fileservice.uploadfiles(files",{"_index":4758,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filestoupload",{"_index":4750,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.filteredfield",{"_index":2901,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filteredfield.property",{"_index":2902,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterfield(this.list.config.defaultfilter",{"_index":2892,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform",{"_index":2890,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.form.getfield(property",{"_index":2908,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property",{"_index":2906,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(property).patchvalue(this.list.getfiltervalue(property",{"_index":2907,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterform.group.get(this.filteredfield.property).reset",{"_index":2911,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterformconfig",{"_index":2896,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput",{"_index":2888,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterinput.focus(true",{"_index":2895,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.hide",{"_index":2903,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.filterpop.show",{"_index":2909,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.focus",{"_index":1469,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent",{"_index":2581,"title":{},"body":{"components/InputComponent.html":{}}}],["this.focusevent.emit(focus",{"_index":1470,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["this.focusevent.emit(true",{"_index":4805,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.focusfirst",{"_index":2741,"title":{},"body":{"components/ListComponent.html":{}}}],["this.focusitem",{"_index":2742,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.focusnext",{"_index":2756,"title":{},"body":{"components/ListComponent.html":{}}}],["this.form",{"_index":3244,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.get('password').setvalue",{"_index":3251,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.form.reset",{"_index":3259,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.form.valid",{"_index":3257,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.formatted",{"_index":1419,"title":{},"body":{"interfaces/Day.html":{}}}],["this.formservice.shouldbepartofform(field",{"_index":4834,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["this.generateconfig(model",{"_index":3554,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.geocodelatlng",{"_index":2285,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.geocodeservice.autocompleteaddress(this.searchinput.nativeelement",{"_index":3144,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.geocodeservice.getnearestaddress(value",{"_index":3126,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.getaccount",{"_index":4249,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.getalgorithm(items",{"_index":4381,"title":{},"body":{"classes/Sorter.html":{}}}],["this.getapi(email",{"_index":781,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.getcolor(1",{"_index":3402,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getdaycolor(date",{"_index":1403,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getdayheat(date",{"_index":1404,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getfieldconfig(model",{"_index":3600,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getformdata(files",{"_index":2023,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.getlightmodel(model",{"_index":3590,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getmonth(date.clone",{"_index":1421,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getmonth(this.date.clone",{"_index":1385,"title":{},"body":{"interfaces/Day.html":{}}}],["this.getpage",{"_index":3831,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpages",{"_index":3832,"title":{},"body":{"classes/Pagination.html":{}}}],["this.getpath(item",{"_index":3396,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.getpermission().then",{"_index":3750,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.getresourcelistactions(list",{"_index":4024,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.getstoragekey(list",{"_index":2821,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.getsystemfields",{"_index":3571,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.getvalidators(field",{"_index":2203,"title":{},"body":{"injectables/FormService.html":{}}}],["this.group",{"_index":2577,"title":{},"body":{"components/InputComponent.html":{}}}],["this.group.get(this.field.property",{"_index":2578,"title":{},"body":{"components/InputComponent.html":{}}}],["this.groupchanged.emit(group",{"_index":4742,"title":{},"body":{"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["this.has(item",{"_index":969,"title":{},"body":{"classes/Collection.html":{}}}],["this.heatmap",{"_index":1372,"title":{},"body":{"interfaces/Day.html":{}}}],["this.heatmap[_moment.toisostring",{"_index":1373,"title":{},"body":{"interfaces/Day.html":{}}}],["this.hide",{"_index":2476,"title":{},"body":{"components/ImageSelectPopComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["this.hideonclickoutside",{"_index":3955,"title":{},"body":{"components/PopComponent.html":{}}}],["this.hideonescape",{"_index":3963,"title":{},"body":{"components/PopComponent.html":{}}}],["this.host.nativeelement.classlist.add('is",{"_index":3019,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.host.nativeelement.classlist.remove('is",{"_index":3020,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.hover",{"_index":3403,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.hoverdelay",{"_index":3405,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.icon",{"_index":2380,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.get(this.name",{"_index":2381,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.registry",{"_index":2385,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.set(emojiicons",{"_index":2376,"title":{},"body":{"components/IconComponent.html":{}}}],["this.iconservice.use(emojiicons",{"_index":2373,"title":{},"body":{"components/IconComponent.html":{}}}],["this.id",{"_index":1943,"title":{},"body":{"classes/Field.html":{}}}],["this.imageform",{"_index":2465,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimage",{"_index":2482,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.imageloader.wait(loadimg",{"_index":2500,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.index(item",{"_index":964,"title":{},"body":{"classes/Collection.html":{}}}],["this.init",{"_index":189,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.init(new",{"_index":2731,"title":{},"body":{"components/ListComponent.html":{}}}],["this.initmethods",{"_index":4079,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.initmode",{"_index":3479,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.initselection",{"_index":423,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.inittabs",{"_index":4530,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.invite",{"_index":4331,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.isactive(item",{"_index":3401,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.isfirst",{"_index":3824,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isimmutableproperty(key",{"_index":1808,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.islast",{"_index":3823,"title":{},"body":{"classes/Pagination.html":{}}}],["this.isnewasset(a",{"_index":2006,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isnewasset(unresolved",{"_index":2056,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoldassetgroupid(assetgroupid",{"_index":1998,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.isoutside($event.target",{"_index":3958,"title":{},"body":{"components/PopComponent.html":{}}}],["this.item",{"_index":2573,"title":{},"body":{"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["this.item.getfield(this.property",{"_index":2574,"title":{},"body":{"components/InputComponent.html":{}}}],["this.items",{"_index":960,"title":{},"body":{"classes/Collection.html":{},"directives/EntriesDirective.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.items.concat(items",{"_index":1617,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.filter((item",{"_index":1618,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.find((_item",{"_index":1619,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.items.indexof(item",{"_index":963,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.length",{"_index":972,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.push(item",{"_index":962,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(index",{"_index":979,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.index(item",{"_index":974,"title":{},"body":{"classes/Collection.html":{}}}],["this.items.splice(this.items.indexof(item",{"_index":980,"title":{},"body":{"classes/Collection.html":{}}}],["this.label",{"_index":1946,"title":{},"body":{"classes/Field.html":{}}}],["this.lazy",{"_index":2567,"title":{},"body":{"components/InputComponent.html":{},"components/TinymceComponent.html":{}}}],["this.legacyassetconfig",{"_index":1999,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.levels",{"_index":1642,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.lightmodel",{"_index":1714,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.list",{"_index":420,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.change$.subscribe",{"_index":2738,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.change$.subscribe(newlist",{"_index":2946,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.clearfilter",{"_index":2912,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config",{"_index":2744,"title":{},"body":{"components/ListComponent.html":{},"components/ListHeaderComponent.html":{}}}],["this.list.config.alwaysshowheader",{"_index":2752,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.defaultfilter",{"_index":2891,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.disableheader",{"_index":2749,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.config.fields",{"_index":2894,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.fields[field.property",{"_index":2898,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.config.selectmode",{"_index":2747,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.list.config.title",{"_index":2751,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.fields.length",{"_index":2750,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filter(property",{"_index":2760,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.filterablefields().reduce((fields",{"_index":2897,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.isempty",{"_index":2753,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered",{"_index":2740,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.isfiltered(this.filteredfield.property",{"_index":2910,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.items",{"_index":4013,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.list.items[index",{"_index":2754,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page",{"_index":2945,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.list.page.indexof(this.focusitem",{"_index":2757,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page.length",{"_index":2759,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.page[index",{"_index":2758,"title":{},"body":{"components/ListComponent.html":{}}}],["this.list.setfilter",{"_index":2886,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.list.togglevisibility(field",{"_index":2914,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.listconfig.applyconfig(this.list",{"_index":2737,"title":{},"body":{"components/ListComponent.html":{}}}],["this.listconfig.storeconfig(this.list",{"_index":2915,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.load",{"_index":518,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"directives/ImageDirective.html":{},"classes/Pagination.html":{}}}],["this.loadactions",{"_index":4046,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(actionsbefore",{"_index":407,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(concatted",{"_index":4019,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.loadactions(item.getbody().children",{"_index":399,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actions",{"_index":408,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactions(this.actionstack[this.currentid",{"_index":416,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadactionsbefore",{"_index":403,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.loadcomponent(this.component",{"_index":2582,"title":{},"body":{"components/InputComponent.html":{}}}],["this.loadcomponent(this.field.output",{"_index":3761,"title":{},"body":{"components/OutputComponent.html":{}}}],["this.loaded.emit(asset",{"_index":528,"title":{},"body":{"directives/AssetDirective.html":{}}}],["this.loaded.emit(entry",{"_index":1645,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.loader",{"_index":1114,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/LoaderService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{}}}],["this.loader.wait(login",{"_index":3179,"title":{},"body":{"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.loader.wait(registration",{"_index":4299,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.loader.wait(reset",{"_index":3925,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.loader.wait(this.promise",{"_index":1614,"title":{},"body":{"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.loaderservice.use(this.globalloader",{"_index":2999,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(loading",{"_index":2349,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(new",{"_index":3001,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.loaderservice.wait(this.loadentry(item",{"_index":1113,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.loaderservice.wait(this.promises[key",{"_index":2339,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.loaderservice.wait(this.uploadpromise",{"_index":4766,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.loadresourcelistactions",{"_index":4000,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.localloader",{"_index":3004,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.localloader.wait(new",{"_index":3005,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.lockform",{"_index":3921,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.login(this.form.value",{"_index":3258,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["this.map.setvalue(value",{"_index":3121,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.map.value",{"_index":3124,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.maploader.load().then",{"_index":2284,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.matches(change",{"_index":4145,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.mode",{"_index":175,"title":{},"body":{"components/AceComponent.html":{},"components/ModalComponent.html":{}}}],["this.mode.replace(this.type",{"_index":3468,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.mode.split",{"_index":3466,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.model",{"_index":1081,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.modelconfig.getlightmodel(this.model).then(model",{"_index":1713,"title":{},"body":{"components/EntryListPopComponent.html":{}}}],["this.modelconfig.getminlevel(this.model",{"_index":1091,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.modelconfig.set('muffin",{"_index":5292,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.monthformat",{"_index":1331,"title":{},"body":{"interfaces/Day.html":{}}}],["this.mustreload(item",{"_index":1097,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.name",{"_index":2383,"title":{},"body":{"components/IconComponent.html":{}}}],["this.nestedcrudconfig",{"_index":4674,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.ngzone.run",{"_index":2262,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.noapi",{"_index":4233,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noapi(api",{"_index":4257,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.noclientid",{"_index":778,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.notifications",{"_index":1104,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notifications.add(notification",{"_index":3695,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.emit",{"_index":665,"title":{},"body":{"guards/AuthGuard.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{}}}],["this.notifications.remove(notification",{"_index":3699,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notifications.removeall(notification.hide",{"_index":3686,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.defaulttime",{"_index":3683,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.notificationservice.emit",{"_index":1102,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{}}}],["this.notificationservice.emitter$.subscribe((notification",{"_index":3684,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.observeelement(el",{"_index":2276,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["this.oldassetgroupids.includes(assetgroupid",{"_index":2000,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.options",{"_index":1609,"title":{},"body":{"directives/EntriesDirective.html":{},"components/MediumEditorComponent.html":{},"components/UploadComponent.html":{}}}],["this.options.page",{"_index":1604,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.options.placeholder",{"_index":3300,"title":{},"body":{"components/MediumEditorComponent.html":{}}}],["this.pages",{"_index":3821,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pages.length",{"_index":3822,"title":{},"body":{"classes/Pagination.html":{}}}],["this.pagination",{"_index":2733,"title":{},"body":{"components/ListComponent.html":{},"components/PaginationComponent.html":{}}}],["this.pagination.getpage",{"_index":3863,"title":{},"body":{"components/PaginationComponent.html":{}}}],["this.parent",{"_index":3393,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getlevel(++level",{"_index":3398,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.parent.getpath(this.route",{"_index":3409,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.placeholder",{"_index":1945,"title":{},"body":{"classes/Field.html":{},"components/MediumEditorComponent.html":{}}}],["this.pop",{"_index":4087,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.create",{"_index":4088,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.edit(item.getbody",{"_index":4082,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["this.pop.hide",{"_index":4762,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.pop.show",{"_index":4753,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.popservice.stack.add(this",{"_index":3964,"title":{},"body":{"components/PopComponent.html":{}}}],["this.popservice.stack.remove(this",{"_index":3967,"title":{},"body":{"components/PopComponent.html":{}}}],["this.promise",{"_index":524,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{}}}],["this.promises[key",{"_index":2333,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.propagatechange",{"_index":192,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(++this.value",{"_index":5413,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.propagatechange(change",{"_index":2592,"title":{},"body":{"components/InputComponent.html":{}}}],["this.propagatechange(this.editor.getvalue",{"_index":185,"title":{},"body":{"components/AceComponent.html":{}}}],["this.propagatechange(this.value",{"_index":3304,"title":{},"body":{"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["this.propagatechange(value",{"_index":3123,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.property",{"_index":1947,"title":{},"body":{"classes/Field.html":{},"components/InputComponent.html":{}}}],["this.property}_${date.now",{"_index":1944,"title":{},"body":{"classes/Field.html":{}}}],["this.ready",{"_index":173,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["this.ready.emit(this",{"_index":2586,"title":{},"body":{"components/InputComponent.html":{}}}],["this.ready.then",{"_index":4231,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.ready.then((editor",{"_index":182,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{}}}],["this.ready.then(editor",{"_index":4608,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.redirect.next",{"_index":675,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.registry",{"_index":4463,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.relation",{"_index":4080,"title":{},"body":{"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.reload",{"_index":4052,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.remove(item",{"_index":975,"title":{},"body":{"classes/Collection.html":{}}}],["this.remove.subscribe((item",{"_index":401,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.removeall(undefined",{"_index":976,"title":{},"body":{"classes/Collection.html":{}}}],["this.resetfilter",{"_index":2913,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["this.resolve",{"_index":2386,"title":{},"body":{"components/IconComponent.html":{}}}],["this.resourceconfig.get('dmasset",{"_index":1982,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get('legacyasset",{"_index":1984,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.resourceconfig.get(relation",{"_index":806,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.resourceconfig.get(relation).permissions",{"_index":807,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.resourceconfig.get(this.relation",{"_index":4094,"title":{},"body":{"components/ResourceListPopComponent.html":{}}}],["this.resourceconfig.get(this.state.relation",{"_index":4043,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.resourceservice.change(filter",{"_index":1779,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.change({relation:'model.muffin",{"_index":1775,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.resourceservice.changes.next",{"_index":1798,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"interfaces/Upload.html":{}}}],["this.retrieve(key",{"_index":2812,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.roots[this._api.datamanagerid",{"_index":4230,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.route",{"_index":3384,"title":{},"body":{"components/MenuComponent.html":{},"components/TabsComponent.html":{}}}],["this.route.children",{"_index":3386,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.events.subscribe((event",{"_index":4517,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate",{"_index":4534,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.router.navigate(['profile",{"_index":5288,"title":{},"body":{"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["this.router.url",{"_index":3395,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.indexof(path",{"_index":3397,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.router.url.split('?')[0",{"_index":2311,"title":{},"body":{"injectables/HistoryService.html":{}}}],["this.routes",{"_index":3385,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.schemarequests[model",{"_index":4259,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].api",{"_index":4260,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.schemarequests[model].request",{"_index":4262,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.accounts",{"_index":833,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.me",{"_index":796,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.accounts.signup(email",{"_index":793,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api",{"_index":521,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"interfaces/FileOptions.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["this.sdk.api.asset(unresolved[0]).then(asset",{"_index":2063,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.asset(value).then(asset",{"_index":2486,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.asset(value.img",{"_index":2472,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.assetgrouplist",{"_index":2071,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.assetlist",{"_index":2064,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createasset(data",{"_index":2036,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createassets(data",{"_index":2037,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.createentry(model",{"_index":1813,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.sdk.api.dmasset(this.assetgroupid",{"_index":2480,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.sdk.api.dmassetlist(assetgroupid",{"_index":2059,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.sdk.api.emailavailable(email",{"_index":839,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.entry(this.model",{"_index":1098,"title":{},"body":{"components/CrudComponent.html":{},"directives/EntryDirective.html":{}}}],["this.sdk.api.entrylist(this.model",{"_index":1608,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.sdk.api.getfieldconfig(model).then((fieldconfig",{"_index":3569,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.logout",{"_index":837,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.me",{"_index":798,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.api.modellist()).then((models",{"_index":3612,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.sdk.api.signup(email",{"_index":791,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.changesenvironment.subscribe(env",{"_index":4135,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.sdk.environment",{"_index":841,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.environment.clientid",{"_index":842,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.init",{"_index":788,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then",{"_index":3611,"title":{},"body":{"injectables/ModelConfigService.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.sdk.ready.then((user",{"_index":799,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.ready.then(account",{"_index":4214,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.sdk.ready.then(user",{"_index":664,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this.sdk.root.then((root",{"_index":455,"title":{},"body":{"components/AdminEntryInputComponent.html":{}}}],["this.sdk.session",{"_index":785,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.session.logout().catch",{"_index":836,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.sdk.user",{"_index":800,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.search.clear",{"_index":3120,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.search.searchinput.nativeelement.value",{"_index":3125,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.searchbar.clear",{"_index":400,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"interfaces/ResourceActionbarState.html":{}}}],["this.searchbar.focusevent.emit(true",{"_index":1718,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.searchinput",{"_index":3142,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.searchinput.nativeelement.value",{"_index":3143,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["this.select(match",{"_index":4524,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.select(tab",{"_index":4528,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(event.url",{"_index":4518,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectbyurl(this.router.url",{"_index":4529,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selectday(moment",{"_index":1445,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selected",{"_index":1416,"title":{},"body":{"interfaces/Day.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{}}}],["this.selected.deactivate",{"_index":4531,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.selected.emit(selection",{"_index":2746,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selected.startof('day').diff(_moment",{"_index":1431,"title":{},"body":{"interfaces/Day.html":{}}}],["this.selection",{"_index":410,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.add(item",{"_index":395,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.getvalue",{"_index":428,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.isempty",{"_index":411,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.items[this.selection.items.length",{"_index":413,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.remove(item",{"_index":402,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.removeall",{"_index":415,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{}}}],["this.selection.select(this.list.items[index",{"_index":2755,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.toggle(item",{"_index":1717,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ListComponent.html":{},"components/ListItemsComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["this.selection.update$.subscribe((selection",{"_index":2745,"title":{},"body":{"components/ListComponent.html":{}}}],["this.selection.update$.subscribe(newlist",{"_index":2947,"title":{},"body":{"components/ListItemsComponent.html":{}}}],["this.session",{"_index":4242,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.session.setclientid(environment.clientid",{"_index":4245,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.setdate",{"_index":1360,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(_moment",{"_index":1424,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(day.date.clone().subtract(1",{"_index":1359,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(moment",{"_index":1443,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date",{"_index":1380,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.date.clone().add(value",{"_index":1442,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setdate(this.selected",{"_index":1378,"title":{},"body":{"interfaces/Day.html":{}}}],["this.setmode(this.mode",{"_index":176,"title":{},"body":{"components/AceComponent.html":{}}}],["this.sets[key",{"_index":4466,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.sets[object.keys(this.sets)[0",{"_index":4465,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.settheme(this.theme",{"_index":178,"title":{},"body":{"components/AceComponent.html":{}}}],["this.settings",{"_index":4601,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup",{"_index":4604,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settings.setup(editor",{"_index":4605,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.settotal(total",{"_index":3819,"title":{},"body":{"classes/Pagination.html":{}}}],["this.setup.emit(editor",{"_index":4606,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.setvalue(position",{"_index":3066,"title":{},"body":{"components/LocationMapComponent.html":{}}}],["this.shouldbepartofform(field",{"_index":2201,"title":{},"body":{"injectables/FormService.html":{}}}],["this.show",{"_index":3022,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.show(e",{"_index":3961,"title":{},"body":{"components/PopComponent.html":{}}}],["this.showurlinput",{"_index":4804,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.signup(this.form.value",{"_index":4333,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.solo",{"_index":2748,"title":{},"body":{"components/ListComponent.html":{},"components/ListItemsComponent.html":{}}}],["this.sorttype[types[0",{"_index":4377,"title":{},"body":{"classes/Sorter.html":{}}}],["this.spanchanged.emit(this.timespan",{"_index":1340,"title":{},"body":{"interfaces/Day.html":{}}}],["this.stack.add(promise",{"_index":3021,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.stack.items.length",{"_index":3990,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.items[this.stack.items.length",{"_index":3992,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.remove(latestpop",{"_index":3994,"title":{},"body":{"injectables/PopService.html":{}}}],["this.stack.removeall",{"_index":3026,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.state",{"_index":4021,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["this.storagekeyresolver",{"_index":2819,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.store(key",{"_index":2825,"title":{},"body":{"injectables/ListConfigService.html":{}}}],["this.submitted",{"_index":3256,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit",{"_index":3922,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["this.success.emit(_upload",{"_index":4760,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.success.emit(res",{"_index":3260,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.success.emit(user",{"_index":3174,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["this.symbol.resolve('datetime.local",{"_index":3586,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('entries.load.error",{"_index":1613,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.symbol.resolve('entry.load.error",{"_index":1646,"title":{},"body":{"directives/EntryDirective.html":{}}}],["this.symbol.resolve('error",{"_index":1828,"title":{},"body":{"components/ErrorComponent.html":{}}}],["this.symbol.resolve('error.input",{"_index":2619,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.input.invalid",{"_index":2620,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["this.symbol.resolve('error.load",{"_index":1108,"title":{},"body":{"components/CrudComponent.html":{}}}],["this.symbol.resolve('error.upload",{"_index":4765,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve('field.creator.ecuser",{"_index":4691,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('field.label.created",{"_index":3545,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.creator",{"_index":3552,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.id",{"_index":3543,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('field.label.modified",{"_index":3550,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.symbol.resolve('image",{"_index":2466,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["this.symbol.resolve('login.button.label",{"_index":3203,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.label",{"_index":3205,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.email.placeholder",{"_index":3208,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.error",{"_index":3176,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('login.password.label",{"_index":3212,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.password.placeholder",{"_index":3214,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('login.success",{"_index":3173,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.symbol.resolve('moment.format.date",{"_index":1277,"title":{},"body":{"pipes/DatetimePipe.html":{},"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('moment.format.month",{"_index":1332,"title":{},"body":{"interfaces/Day.html":{}}}],["this.symbol.resolve('moment.format.time",{"_index":4689,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.symbol.resolve('resource",{"_index":2222,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('resource.generic",{"_index":2173,"title":{},"body":{"injectables/FormService.html":{}}}],["this.symbol.resolve('signup.button.label",{"_index":4303,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.error",{"_index":4298,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('signup.invite.placeholder",{"_index":4306,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["this.symbol.resolve('signup.success",{"_index":4297,"title":{},"body":{"components/SignupComponent.html":{}}}],["this.symbol.resolve('success.upload",{"_index":4761,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.symbol.resolve(name",{"_index":4425,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["this.symbols.set(en",{"_index":4404,"title":{},"body":{"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["this.tabs",{"_index":4519,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.find((tab",{"_index":4521,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.tabs.foreach((tab",{"_index":4525,"title":{},"body":{"components/TabsComponent.html":{}}}],["this.theme",{"_index":177,"title":{},"body":{"components/AceComponent.html":{}}}],["this.thumb",{"_index":2437,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.time",{"_index":3682,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["this.timeout",{"_index":3404,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.timespan",{"_index":1353,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timespan[1",{"_index":1402,"title":{},"body":{"interfaces/Day.html":{}}}],["this.timestamp",{"_index":3024,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.total",{"_index":3825,"title":{},"body":{"classes/Pagination.html":{}}}],["this.trees",{"_index":2712,"title":{},"body":{"components/ListComponent.html":{}}}],["this.type",{"_index":3465,"title":{},"body":{"components/ModalComponent.html":{},"classes/Notification.html":{}}}],["this.typeconfig.displayaccount",{"_index":3553,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.displaydate",{"_index":3546,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(fieldconfig[field].type).inputviews",{"_index":3562,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.get(type",{"_index":3583,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.groupdate",{"_index":3547,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["this.typeconfig.set('location",{"_index":5436,"title":{},"body":{"additional-documentation/readme/location-readme.html":{}}}],["this.types.foreach(type",{"_index":3475,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.includes(this.type",{"_index":3467,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types.join",{"_index":3471,"title":{},"body":{"components/ModalComponent.html":{}}}],["this.types[type",{"_index":4681,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["this.update",{"_index":1826,"title":{},"body":{"components/ErrorComponent.html":{},"components/TinymceComponent.html":{}}}],["this.update(model",{"_index":1782,"title":{},"body":{"injectables/EntryService.html":{}}}],["this.update(relation",{"_index":4150,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["this.update.asobservable",{"_index":909,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this",{"_index":970,"title":{},"body":{"classes/Collection.html":{}}}],["this.update.next(this.editor",{"_index":4617,"title":{},"body":{"components/TinymceComponent.html":{}}}],["this.updateaddress",{"_index":3122,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["this.upload(files",{"_index":4754,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploader.trigger(e",{"_index":4809,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploader.uploadfiles(urls",{"_index":4806,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.uploadfiles(e.target.files",{"_index":4746,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise",{"_index":4755,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploadpromise.then",{"_index":4767,"title":{},"body":{"components/UploadComponent.html":{}}}],["this.uploads.emit(upload",{"_index":2032,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["this.url",{"_index":2441,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.urlstoupload",{"_index":4808,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["this.use(this.ecimage",{"_index":2430,"title":{},"body":{"directives/ImageDirective.html":{}}}],["this.use(this.sets[key",{"_index":4469,"title":{},"body":{"injectables/SymbolService.html":{}}}],["this.usedatamanager(environment.datamanagerid",{"_index":4248,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.usedesktopnotifications",{"_index":3739,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["this.uselist(list",{"_index":1611,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["this.user",{"_index":4250,"title":{},"body":{"injectables/SdkService.html":{}}}],["this.value",{"_index":179,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationMapComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["this.vanishdelay",{"_index":3407,"title":{},"body":{"components/MenuComponent.html":{}}}],["this.visible",{"_index":3018,"title":{},"body":{"components/LoaderComponent.html":{}}}],["this.writevalue(this.value",{"_index":2598,"title":{},"body":{"components/InputComponent.html":{}}}],["those",{"_index":1938,"title":{},"body":{"classes/Field.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["three",{"_index":3500,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["through",{"_index":2317,"title":{},"body":{"injectables/HistoryService.html":{},"components/PasswordResetComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["throw",{"_index":522,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/HistoryService.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{},"injectables/SymbolService.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["throwerror",{"_index":3237,"title":{},"body":{"components/LoginFormComponent.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["throwerror(err",{"_index":3253,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["throwing",{"_index":5687,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["thrown",{"_index":1825,"title":{},"body":{"components/ErrorComponent.html":{}}}],["throws",{"_index":3014,"title":{},"body":{"components/LoaderComponent.html":{},"components/ModalComponent.html":{},"classes/Pagination.html":{},"injectables/SdkService.html":{}}}],["thumb",{"_index":2407,"title":{},"body":{"directives/ImageDirective.html":{}}}],["tick",{"_index":4548,"title":{},"body":{"components/TinymceComponent.html":{}}}],["time",{"_index":877,"title":{},"body":{"modules/CalendarModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LoaderComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["timeout",{"_index":3324,"title":{},"body":{"components/MenuComponent.html":{}}}],["times",{"_index":5357,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["timespan",{"_index":1296,"title":{},"body":{"interfaces/Day.html":{}}}],["timestamp",{"_index":2972,"title":{},"body":{"components/LoaderComponent.html":{}}}],["tiny",{"_index":4553,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce",{"_index":4538,"title":{"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}},"body":{"components/TinymceComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["tinymce'},{'name",{"_index":316,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["tinymce.component.html",{"_index":4541,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce.component.scss",{"_index":4540,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autolink",{"_index":4578,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/autoresize",{"_index":4579,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/code",{"_index":4580,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/colorpicker",{"_index":4581,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/contextmenu",{"_index":4582,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/fullscreen",{"_index":4583,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/link",{"_index":4584,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/lists",{"_index":4585,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/paste",{"_index":4586,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/table",{"_index":4587,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/template",{"_index":4588,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/textcolor",{"_index":4589,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/plugins/visualblocks",{"_index":4590,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/themes/modern",{"_index":4591,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce",{"_index":4577,"title":{},"body":{"components/TinymceComponent.html":{}}}],["tinymce/tinymce.component",{"_index":4624,"title":{},"body":{"modules/TinymceModule.html":{}}}],["tinymcecomponent",{"_index":315,"title":{"components/TinymceComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"modules/TinymceModule.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["tinymcemodule",{"_index":4619,"title":{"modules/TinymceModule.html":{}},"body":{"modules/TinymceModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["tinymcemoduleconfig",{"_index":4625,"title":{},"body":{"modules/TinymceModule.html":{},"coverage.html":{}}}],["tip",{"_index":5176,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["titel",{"_index":3542,"title":{},"body":{"injectables/ModelConfigService.html":{},"components/NotificationsComponent.html":{}}}],["titel&#39",{"_index":3533,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["title",{"_index":373,"title":{},"body":{"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"directives/AssetDirective.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PasswordResetComponent.html":{},"interfaces/ResourceActionbarState.html":{},"interfaces/SdkField.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["titles",{"_index":5618,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["toast",{"_index":1675,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ModalComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["today",{"_index":1292,"title":{},"body":{"interfaces/Day.html":{}}}],["todo",{"_index":623,"title":{},"body":{"components/AssetgroupSelectComponent.html":{},"classes/Config.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"components/MenuComponent.html":{},"components/PaginationComponent.html":{},"components/ResourceCrudComponent.html":{},"components/TabsComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{}}}],["todos",{"_index":5608,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["together",{"_index":1918,"title":{},"body":{"classes/Field.html":{}}}],["toggle",{"_index":895,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggle'},{'name",{"_index":318,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["toggle(e",{"_index":1697,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["toggle(item",{"_index":945,"title":{},"body":{"classes/Collection.html":{}}}],["toggle(resource",{"_index":2318,"title":{},"body":{"injectables/HistoryService.html":{}}}],["toggle.component.html",{"_index":4629,"title":{},"body":{"components/ToggleComponent.html":{}}}],["toggle/toggle.component",{"_index":2145,"title":{},"body":{"modules/FormModule.html":{}}}],["togglecomponent",{"_index":317,"title":{"components/ToggleComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FormModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toggled",{"_index":3930,"title":{},"body":{"components/PopComponent.html":{}}}],["toggledfilterpop",{"_index":2847,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggledfilterpop(active",{"_index":2867,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["toggles",{"_index":947,"title":{},"body":{"classes/Collection.html":{},"components/EntryListPopComponent.html":{},"injectables/HistoryService.html":{},"components/ListHeaderComponent.html":{},"components/ResourceListPopComponent.html":{},"components/ToggleComponent.html":{}}}],["toggleurlinput",{"_index":4778,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["togglevisibility",{"_index":2848,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["togglevisibility(field",{"_index":2869,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["token",{"_index":5251,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["top",{"_index":3502,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["total",{"_index":3764,"title":{},"body":{"classes/Pagination.html":{}}}],["total>0",{"_index":5696,"title":{},"body":{"additional-documentation/changelog/ui-changelog.html":{}}}],["touch",{"_index":4633,"title":{},"body":{"components/ToggleComponent.html":{}}}],["track",{"_index":2298,"title":{},"body":{"injectables/HistoryService.html":{},"components/InputErrorsComponent.html":{},"classes/Pagination.html":{}}}],["tracked",{"_index":2611,"title":{},"body":{"components/InputErrorsComponent.html":{}}}],["tracking",{"_index":3775,"title":{},"body":{"classes/Pagination.html":{}}}],["transform",{"_index":1266,"title":{},"body":{"pipes/DatetimePipe.html":{},"pipes/GroupPipe.html":{},"pipes/MaxItemsPipe.html":{},"injectables/SymbolPipe.html":{},"pipes/VisibleFieldsPipe.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["transform(array",{"_index":3266,"title":{},"body":{"pipes/MaxItemsPipe.html":{}}}],["transform(fields",{"_index":4829,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["transform(items",{"_index":2292,"title":{},"body":{"pipes/GroupPipe.html":{}}}],["transform(name",{"_index":4421,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["transform(value",{"_index":1267,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["transformation",{"_index":1907,"title":{},"body":{"classes/Field.html":{}}}],["transforming",{"_index":2254,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["transforms",{"_index":1912,"title":{},"body":{"classes/Field.html":{},"interfaces/ListConfig.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["translate",{"_index":3844,"title":{},"body":{"components/PaginationComponent.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["translates",{"_index":4419,"title":{},"body":{"injectables/SymbolPipe.html":{}}}],["translation",{"_index":3856,"title":{},"body":{"components/PaginationComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["tries",{"_index":3147,"title":{},"body":{"components/LoginComponent.html":{},"components/SignupComponent.html":{}}}],["trigger",{"_index":2696,"title":{},"body":{"components/ListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/UploadComponent.html":{}}}],["trigger(e",{"_index":4725,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggered",{"_index":2967,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["triggering",{"_index":4727,"title":{},"body":{"components/UploadComponent.html":{}}}],["triggers",{"_index":2684,"title":{},"body":{"components/ListComponent.html":{},"components/UploadComponent.html":{}}}],["triggerupload",{"_index":4779,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["triggerupload(e",{"_index":4793,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["true",{"_index":32,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"modules/SelectModule.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["ts",{"_index":4238,"title":{},"body":{"injectables/SdkService.html":{}}}],["tsconfig.json",{"_index":5808,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["tslib",{"_index":5062,"title":{},"body":{"dependencies.html":{}}}],["tslint:disable",{"_index":2108,"title":{},"body":{"directives/FocusDirective.html":{},"components/ListComponent.html":{},"components/PopComponent.html":{}}}],["turn",{"_index":559,"title":{},"body":{"components/AssetListComponent.html":{}}}],["turned",{"_index":2777,"title":{},"body":{"interfaces/ListConfig.html":{}}}],["turns",{"_index":1482,"title":{},"body":{"directives/DropzoneDirective.html":{},"injectables/GeocodeService.html":{}}}],["tutorial",{"_index":5222,"title":{"additional-documentation/project-setup-tutorial.html":{}},"body":{"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/routes.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/publishing.html":{}}}],["tutorials",{"_index":5273,"title":{},"body":{"additional-documentation/project-setup-tutorial/routes.html":{}}}],["twice",{"_index":5563,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["two",{"_index":3503,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["type",{"_index":67,"title":{},"body":{"components/AceComponent.html":{},"interfaces/Action.html":{},"interfaces/ActionbarConfig.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"interfaces/Focus.html":{},"directives/FocusDirective.html":{},"interfaces/FormConfig.html":{},"injectables/FormService.html":{},"injectables/GeocodeService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"interfaces/ModelConfig.html":{},"injectables/ModelConfigService.html":{},"interfaces/ModelConfiguration.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"interfaces/ResourceActionbarState.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"interfaces/Symbol.html":{},"injectables/SymbolPipe.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"pipes/VisibleFieldsPipe.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["type's",{"_index":4639,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["type.includes('asset",{"_index":3577,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["type.replace('a",{"_index":3578,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typealiases",{"_index":5150,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeconfig",{"_index":1996,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfig.inputview",{"_index":3588,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfig.placeholder",{"_index":3587,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typeconfigservice",{"_index":1202,"title":{"injectables/TypeConfigService.html":{}},"body":{"modules/DataModule.html":{},"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"coverage.html":{},"overview.html":{},"additional-documentation/readme/location-readme.html":{}}}],["typeconfigservice#get",{"_index":3517,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["typed",{"_index":1279,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typed.isvalid",{"_index":1281,"title":{},"body":{"pipes/DatetimePipe.html":{}}}],["typeof",{"_index":2007,"title":{},"body":{"interfaces/FileOptions.html":{},"directives/ImageDirective.html":{},"components/InputComponent.html":{},"injectables/ListConfigService.html":{},"classes/Sorter.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["types",{"_index":434,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"interfaces/FileOptions.html":{},"injectables/GeocodeService.html":{},"components/ModalComponent.html":{},"interfaces/SdkField.html":{},"classes/Sorter.html":{},"injectables/TypeConfigService.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["types.length",{"_index":4376,"title":{},"body":{"classes/Sorter.html":{}}}],["types.ts",{"_index":4951,"title":{},"body":{"coverage.html":{}}}],["types[0",{"_index":4378,"title":{},"body":{"classes/Sorter.html":{}}}],["typescript",{"_index":959,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/core-readme.html":{}}}],["typical",{"_index":3664,"title":{},"body":{"components/NotificationsComponent.html":{}}}],["typing",{"_index":5596,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["typo",{"_index":5512,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{}}}],["ui",{"_index":1035,"title":{"additional-documentation/readme/ui-readme.html":{},"additional-documentation/changelog/ui-changelog.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginFormComponent.html":{},"classes/PaginationConfig.html":{},"components/ResourceCrudComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{}}}],["ui/src/notifications/notification",{"_index":5814,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["ui/src/notifications/with",{"_index":5815,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["uimodule",{"_index":355,"title":{"modules/UiModule.html":{}},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/LocationModule.html":{},"modules/ResourceModule.html":{},"modules/UiModule.html":{},"modules.html":{},"overview.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["uimoduleconfig",{"_index":4699,"title":{},"body":{"modules/UiModule.html":{},"coverage.html":{}}}],["ul",{"_index":3859,"title":{},"body":{"components/PaginationComponent.html":{}}}],["undefined",{"_index":1743,"title":{},"body":{"injectables/EntryService.html":{},"injectables/GeocodeService.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{},"interfaces/Update.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["under",{"_index":2321,"title":{},"body":{"injectables/HistoryService.html":{},"interfaces/Symbol.html":{},"additional-documentation/adding-new-packages.html":{}}}],["underline",{"_index":3416,"title":{},"body":{"components/MenuComponent.html":{}}}],["ungültiges",{"_index":4667,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["unique",{"_index":911,"title":{},"body":{"classes/Collection.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"interfaces/Symbol.html":{},"modules/SymbolModule.html":{},"additional-documentation/project-setup-tutorial/localization.html":{}}}],["unit",{"_index":5135,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["unresolved",{"_index":2050,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["unresolved.length",{"_index":2054,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["until",{"_index":2981,"title":{},"body":{"components/LoaderComponent.html":{}}}],["up",{"_index":1146,"title":{},"body":{"interfaces/CrudConfig.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"interfaces/ModelConfig.html":{},"interfaces/ModelConfiguration.html":{},"components/NotificationsComponent.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"modules/SymbolModule.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/readme.html":{},"additional-documentation/publishing.html":{}}}],["update",{"_index":539,"title":{"interfaces/Update.html":{}},"body":{"components/AssetListComponent.html":{},"classes/Collection.html":{},"interfaces/CrudConfig.html":{},"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"injectables/HistoryService.html":{},"injectables/ResourceService.html":{},"components/TinymceComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"coverage.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["update(model",{"_index":1760,"title":{},"body":{"injectables/EntryService.html":{}}}],["update(relation",{"_index":4125,"title":{},"body":{"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updateaddress",{"_index":3098,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["updated",{"_index":1759,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["updateon",{"_index":2206,"title":{},"body":{"injectables/FormService.html":{}}}],["updates",{"_index":1437,"title":{},"body":{"interfaces/Day.html":{},"injectables/EntryService.html":{},"components/ErrorComponent.html":{},"injectables/HistoryService.html":{},"components/LocationPickerComponent.html":{},"components/MenuComponent.html":{},"classes/Pagination.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["updatesize",{"_index":3770,"title":{},"body":{"classes/Pagination.html":{},"components/PaginationComponent.html":{}}}],["updatesize(size",{"_index":3806,"title":{},"body":{"classes/Pagination.html":{}}}],["updatesize(value",{"_index":3846,"title":{},"body":{"components/PaginationComponent.html":{}}}],["updating",{"_index":2208,"title":{},"body":{"injectables/FormService.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["upgrade",{"_index":5153,"title":{"additional-documentation/angular-7-upgrade-guide.html":{}},"body":{}}],["upload",{"_index":322,"title":{"interfaces/Upload.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"interfaces/FileOptions.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["upload'},{'name",{"_index":320,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["upload(files",{"_index":4728,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.assetgroup",{"_index":4768,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.browse",{"_index":4813,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.component.html",{"_index":4702,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.deduplicate",{"_index":4772,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.ignoreduplicates",{"_index":4771,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.includeassetidinpath",{"_index":4770,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.link",{"_index":4810,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.or",{"_index":4811,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.preservefilenames",{"_index":4769,"title":{},"body":{"components/UploadComponent.html":{}}}],["upload.url",{"_index":4812,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload.url.start",{"_index":4814,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["upload/upload.component",{"_index":2095,"title":{},"body":{"modules/FilesModule.html":{},"components/UploadSelectComponent.html":{}}}],["uploadassets(files",{"_index":2018,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["uploadcomponent",{"_index":319,"title":{"components/UploadComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uploaded",{"_index":1975,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadSelectComponent.html":{}}}],["uploader",{"_index":4776,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfiles",{"_index":4707,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploadfiles(files",{"_index":2034,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadfromurls",{"_index":4780,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploadfromurls(urls",{"_index":4795,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["uploading",{"_index":1974,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadpromise",{"_index":4705,"title":{},"body":{"components/UploadComponent.html":{}}}],["uploads",{"_index":1162,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/FileOptions.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{}}}],["uploadselectcomponent",{"_index":321,"title":{"components/UploadSelectComponent.html":{}},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"modules/FilesModule.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"coverage.html":{},"overview.html":{}}}],["upon",{"_index":1728,"title":{},"body":{"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/LoaderComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["url",{"_index":1159,"title":{},"body":{"interfaces/CrudConfig.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["url.split",{"_index":4520,"title":{},"body":{"components/TabsComponent.html":{}}}],["urls",{"_index":4797,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["urlstoupload",{"_index":4777,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["usage",{"_index":1919,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"classes/Sorter.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["use",{"_index":477,"title":{},"body":{"directives/AssetDirective.html":{},"injectables/AuthService.html":{},"classes/Config.html":{},"directives/EntryDirective.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/PopComponent.html":{},"injectables/ResourceService.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/authorization.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/calendar-readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{},"additional-documentation/stackblitz.html":{},"additional-documentation/publishing.html":{}}}],["use(asset",{"_index":2423,"title":{},"body":{"directives/ImageDirective.html":{}}}],["use(loader",{"_index":3035,"title":{},"body":{"injectables/LoaderService.html":{}}}],["use(symbols",{"_index":4442,"title":{},"body":{"injectables/SymbolService.html":{}}}],["used",{"_index":71,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"guards/AuthGuard.html":{},"components/CrudComponent.html":{},"interfaces/CrudConfig.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"pipes/GroupPipe.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationPickerComponent.html":{},"components/LoginComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"classes/Notification.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"directives/SlotHostDirective.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/data-readme.html":{}}}],["usedatamanager",{"_index":4187,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedatamanager(shortid",{"_index":4203,"title":{},"body":{"injectables/SdkService.html":{}}}],["usedesktopnotifications",{"_index":3708,"title":{},"body":{"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{}}}],["useexisting",{"_index":29,"title":{},"body":{"components/AceComponent.html":{},"modules/AceModule.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"modules/MediumEditorModule.html":{},"modules/SelectModule.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"overview.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["useful",{"_index":3675,"title":{},"body":{"components/NotificationsComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["uselist",{"_index":1569,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["uselist(entrylist",{"_index":1590,"title":{},"body":{"directives/EntriesDirective.html":{}}}],["user",{"_index":638,"title":{},"body":{"guards/AuthGuard.html":{},"injectables/AuthService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"components/TinymceComponent.html":{}}}],["uses",{"_index":753,"title":{},"body":{"injectables/AuthService.html":{},"components/IconComponent.html":{},"components/ListItemsComponent.html":{},"components/LoginComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"injectables/SymbolService.html":{},"injectables/TypeConfigService.html":{},"interfaces/WithLoader.html":{},"interfaces/WithNotifications.html":{},"index.html":{},"additional-documentation/readme.html":{}}}],["usese",{"_index":4648,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["useset",{"_index":4428,"title":{},"body":{"injectables/SymbolService.html":{}}}],["useset(key",{"_index":4444,"title":{},"body":{"injectables/SymbolService.html":{}}}],["usevalue",{"_index":713,"title":{},"body":{"injectables/AuthService.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FormModule.html":{},"modules/LocationModule.html":{},"modules/NotificationsModule.html":{},"injectables/NotificationsService.html":{},"injectables/SdkService.html":{}}}],["using",{"_index":491,"title":{},"body":{"directives/AssetDirective.html":{},"directives/EntryDirective.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"components/IconComponent.html":{},"components/InputComponent.html":{},"components/LocationSearchComponent.html":{},"components/PasswordResetComponent.html":{},"injectables/SdkService.html":{},"modules/SymbolModule.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{}}}],["utility/focus/focus.interface",{"_index":1465,"title":{},"body":{"components/DefaultInputComponent.html":{}}}],["utility/utility.module",{"_index":2151,"title":{},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{}}}],["utility/validators/field",{"_index":4330,"title":{},"body":{"components/SignupFormComponent.html":{}}}],["utilitymodule",{"_index":2136,"title":{"modules/UtilityModule.html":{}},"body":{"modules/FormModule.html":{},"modules/ListModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"modules.html":{},"overview.html":{}}}],["utilitymoduleconfig",{"_index":4822,"title":{},"body":{"modules/UtilityModule.html":{},"coverage.html":{}}}],["utilizes",{"_index":3515,"title":{},"body":{"injectables/ModelConfigService.html":{},"additional-documentation/readme/ui-readme.html":{}}}],["ux",{"_index":3889,"title":{},"body":{"classes/PaginationConfig.html":{}}}],["v",{"_index":4040,"title":{},"body":{"interfaces/ResourceActionbarState.html":{}}}],["v.name",{"_index":3564,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["valid",{"_index":4389,"title":{},"body":{"interfaces/Symbol.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validate",{"_index":1848,"title":{},"body":{"classes/Field.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validatefactory",{"_index":2166,"title":{},"body":{"injectables/FormService.html":{}}}],["validatefactory(field",{"_index":2187,"title":{},"body":{"injectables/FormService.html":{}}}],["validating",{"_index":5305,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-fields-config.html":{}}}],["validation",{"_index":1889,"title":{},"body":{"classes/Field.html":{},"interfaces/FileOptions.html":{},"injectables/FormService.html":{},"components/ListHeaderComponent.html":{},"components/LoginFormComponent.html":{},"injectables/ModelConfigService.html":{},"interfaces/SdkField.html":{},"components/SignupFormComponent.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["validationerrors",{"_index":2190,"title":{},"body":{"injectables/FormService.html":{}}}],["validatorfn",{"_index":2180,"title":{},"body":{"injectables/FormService.html":{}}}],["validators",{"_index":2179,"title":{},"body":{"injectables/FormService.html":{},"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.push(this.validatefactory(field",{"_index":2217,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.push(validators.required",{"_index":2216,"title":{},"body":{"injectables/FormService.html":{}}}],["validators.required",{"_index":3246,"title":{},"body":{"components/LoginFormComponent.html":{},"components/SignupFormComponent.html":{}}}],["validators.ts",{"_index":5040,"title":{},"body":{"coverage.html":{}}}],["validators/field",{"_index":3242,"title":{},"body":{"components/LoginFormComponent.html":{}}}],["value",{"_index":45,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"pipes/DatetimePipe.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/DropzoneDirective.html":{},"components/DynamicSlotComponent.html":{},"directives/EntriesDirective.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"pipes/GroupPipe.html":{},"injectables/HistoryService.html":{},"injectables/IconService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"interfaces/ItemConfig.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"pipes/MaxItemsPipe.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"injectables/PopService.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/SdkField.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"classes/Sorter.html":{},"injectables/SymbolService.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"interfaces/Update.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["value).then(asset",{"_index":2492,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.alt",{"_index":2478,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.hasownproperty(key",{"_index":1804,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["value.height",{"_index":2471,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.img",{"_index":2481,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["value.latitude",{"_index":4677,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.length",{"_index":1923,"title":{},"body":{"classes/Field.html":{}}}],["value.longitude",{"_index":4676,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.name",{"_index":4679,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.split",{"_index":4661,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.title",{"_index":4678,"title":{},"body":{"injectables/TypeConfigService.html":{}}}],["value.touppercase",{"_index":1922,"title":{},"body":{"classes/Field.html":{}}}],["value[key",{"_index":1805,"title":{},"body":{"injectables/EntryService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{}}}],["values",{"_index":770,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/CrudConfig.html":{},"components/DefaultOutputComponent.html":{},"injectables/EntryService.html":{},"classes/Field.html":{},"injectables/FormService.html":{},"interfaces/ItemConfig.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{}}}],["vanishdelay",{"_index":3335,"title":{},"body":{"components/MenuComponent.html":{}}}],["var",{"_index":200,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{},"components/DefaultInputComponent.html":{},"components/DefaultOutputComponent.html":{},"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"injectables/GeocodeService.html":{},"components/IconComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/InputErrorsComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"components/NotificationsComponent.html":{},"components/OutputComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["variable",{"_index":4504,"title":{},"body":{"components/TabsComponent.html":{},"coverage.html":{}}}],["variables",{"_index":750,"title":{},"body":{"injectables/AuthService.html":{}}}],["variables[key",{"_index":804,"title":{},"body":{"injectables/AuthService.html":{}}}],["various",{"_index":2966,"title":{},"body":{"components/LoaderComponent.html":{}}}],["verify",{"_index":2265,"title":{},"body":{"injectables/GeocodeService.html":{}}}],["versendet",{"_index":3913,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["version",{"_index":5119,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{},"additional-documentation/changelog/core-changelog.html":{},"additional-documentation/changelog/style-changelog.html":{},"additional-documentation/changelog/calendar-changelog.html":{},"additional-documentation/changelog/location-changelog.html":{},"additional-documentation/changelog/ace-changelog.html":{},"additional-documentation/changelog/medium-editor-changelog.html":{},"additional-documentation/changelog/tinymce-changelog.html":{},"additional-documentation/adding-new-packages.html":{}}}],["versions",{"_index":5110,"title":{},"body":{"index.html":{},"additional-documentation/angular-7-upgrade-guide.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{}}}],["via",{"_index":643,"title":{},"body":{"guards/AuthGuard.html":{},"classes/Config.html":{},"interfaces/CrudConfig.html":{},"components/InputComponent.html":{},"components/LoginComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"classes/Pagination.html":{},"components/SignupComponent.html":{},"modules/SymbolModule.html":{},"components/TabsComponent.html":{},"index.html":{},"additional-documentation/project-setup-tutorial/localization.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme.html":{}}}],["viable",{"_index":1935,"title":{},"body":{"classes/Field.html":{}}}],["video",{"_index":1990,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["view",{"_index":1308,"title":{},"body":{"interfaces/Day.html":{},"classes/Field.html":{},"components/ImageSelectPopComponent.html":{},"interfaces/ListConfig.html":{},"injectables/ModelConfigService.html":{},"injectables/NotificationsService.html":{},"directives/SlotHostDirective.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["viewchild",{"_index":151,"title":{},"body":{"components/AceComponent.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"components/DynamicSlotComponent.html":{},"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"components/SignupComponent.html":{},"components/TinymceComponent.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["viewchild('container",{"_index":124,"title":{},"body":{"components/AceComponent.html":{},"components/MediumEditorComponent.html":{},"components/PaginationComponent.html":{},"components/TinymceComponent.html":{}}}],["viewchild('fileinput",{"_index":4732,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild('filterpop",{"_index":2875,"title":{},"body":{"components/ListHeaderComponent.html":{}}}],["viewchild('globalloader",{"_index":2995,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('imageloader",{"_index":2459,"title":{},"body":{"components/ImageSelectPopComponent.html":{}}}],["viewchild('localloader",{"_index":2997,"title":{},"body":{"components/LoaderComponent.html":{}}}],["viewchild('pagecontainer",{"_index":3857,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchild('search",{"_index":3139,"title":{},"body":{"components/LocationSearchComponent.html":{}}}],["viewchild(calendarcomponent",{"_index":1249,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["viewchild(entrylistcomponent",{"_index":1062,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(entrypopcomponent",{"_index":1058,"title":{},"body":{"components/CrudComponent.html":{}}}],["viewchild(loadercomponent",{"_index":1064,"title":{},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{}}}],["viewchild(locationmapcomponent",{"_index":3115,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(locationsearchcomponent",{"_index":3118,"title":{},"body":{"components/LocationPickerComponent.html":{}}}],["viewchild(popcomponent",{"_index":4736,"title":{},"body":{"components/UploadComponent.html":{}}}],["viewchild(resourcelistcomponent",{"_index":4071,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(resourcepopcomponent",{"_index":4074,"title":{},"body":{"components/ResourceCrudComponent.html":{}}}],["viewchild(searchbarcomponent",{"_index":1703,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ResourceListPopComponent.html":{}}}],["viewchild(slothostdirective",{"_index":1553,"title":{},"body":{"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{},"components/OutputComponent.html":{}}}],["viewchild(uploadcomponent",{"_index":4801,"title":{},"body":{"components/UploadSelectComponent.html":{}}}],["viewchildren",{"_index":3861,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewchildren('page",{"_index":3851,"title":{},"body":{"components/PaginationComponent.html":{}}}],["viewcontainer",{"_index":4339,"title":{},"body":{"directives/SlotHostDirective.html":{}}}],["viewcontainerref",{"_index":1534,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"directives/SlotHostDirective.html":{}}}],["viewcontainerref.clear",{"_index":1560,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewcontainerref.createcomponent(componentfactory",{"_index":1561,"title":{},"body":{"components/DynamicSlotComponent.html":{}}}],["viewed",{"_index":1408,"title":{},"body":{"interfaces/Day.html":{}}}],["viewencapsulation",{"_index":2724,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["viewencapsulation.none",{"_index":2654,"title":{},"body":{"components/ListComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{}}}],["views",{"_index":1537,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"injectables/ModelConfigService.html":{}}}],["views.find(v",{"_index":3563,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["visibility",{"_index":2122,"title":{},"body":{"interfaces/FormConfig.html":{},"components/ListHeaderComponent.html":{},"components/LoaderComponent.html":{},"components/PopComponent.html":{}}}],["visible",{"_index":1053,"title":{},"body":{"components/CrudComponent.html":{},"classes/Field.html":{},"interfaces/FormConfig.html":{},"modules/FormModule.html":{},"components/ListComponent.html":{},"interfaces/ListConfig.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"components/LocationPickerComponent.html":{},"classes/Notification.html":{},"components/NotificationsComponent.html":{},"components/PaginationComponent.html":{},"classes/PaginationConfig.html":{},"components/UploadSelectComponent.html":{}}}],["visiblefields",{"_index":4828,"title":{},"body":{"pipes/VisibleFieldsPipe.html":{}}}],["visiblefieldspipe",{"_index":2133,"title":{"pipes/VisibleFieldsPipe.html":{}},"body":{"modules/FormModule.html":{},"pipes/VisibleFieldsPipe.html":{},"coverage.html":{},"overview.html":{}}}],["vm",{"_index":5193,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["void",{"_index":89,"title":{},"body":{"components/AceComponent.html":{},"components/AdminEntryInputComponent.html":{},"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"components/AssetgroupSelectComponent.html":{},"classes/Collection.html":{},"components/CrudComponent.html":{},"components/DatetimeComponent.html":{},"interfaces/Day.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultInputComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/EntryListPopComponent.html":{},"components/ErrorComponent.html":{},"directives/FocusDirective.html":{},"injectables/FormService.html":{},"injectables/HistoryService.html":{},"components/IconComponent.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"injectables/ListConfigService.html":{},"components/ListHeaderComponent.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/LocationMapComponent.html":{},"components/LocationPickerComponent.html":{},"components/LocationSearchComponent.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/MediumEditorComponent.html":{},"components/MenuComponent.html":{},"components/ModalComponent.html":{},"injectables/NotificationsService.html":{},"components/OutputComponent.html":{},"classes/Pagination.html":{},"components/PaginationComponent.html":{},"components/PasswordResetComponent.html":{},"components/PopComponent.html":{},"components/ResourceCrudComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/SdkService.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"injectables/SymbolService.html":{},"components/TabComponent.html":{},"components/TabsComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"injectables/TypeConfigService.html":{},"components/UploadComponent.html":{},"components/UploadSelectComponent.html":{}}}],["vscode",{"_index":5177,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["wait",{"_index":557,"title":{},"body":{"components/AssetListComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["wait(promise",{"_index":2979,"title":{},"body":{"components/LoaderComponent.html":{},"injectables/LoaderService.html":{}}}],["waited",{"_index":2982,"title":{},"body":{"components/LoaderComponent.html":{}}}],["want",{"_index":2552,"title":{},"body":{"components/InputComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/readme/ace-readme.html":{}}}],["warning",{"_index":2366,"title":{},"body":{"components/IconComponent.html":{},"components/ModalComponent.html":{}}}],["way",{"_index":75,"title":{},"body":{"components/AceComponent.html":{},"components/ListComponent.html":{},"components/LoaderComponent.html":{}}}],["webpack",{"_index":5196,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js",{"_index":5212,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack.config.js\"},notice",{"_index":5210,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["webpack:browser",{"_index":5208,"title":{},"body":{"additional-documentation/angular-7-upgrade-guide.html":{}}}],["week",{"_index":1255,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weekdays",{"_index":1234,"title":{},"body":{"components/DatetimeComponent.html":{}}}],["weiteren",{"_index":3918,"title":{},"body":{"components/PasswordResetComponent.html":{}}}],["well",{"_index":1528,"title":{},"body":{"components/DynamicRackComponent.html":{},"components/DynamicSlotComponent.html":{},"components/InputComponent.html":{}}}],["werden",{"_index":671,"title":{},"body":{"guards/AuthGuard.html":{}}}],["wether",{"_index":1865,"title":{},"body":{"classes/Field.html":{},"components/UploadSelectComponent.html":{},"additional-documentation/readme/data-readme.html":{}}}],["whenever",{"_index":2539,"title":{},"body":{"components/InputComponent.html":{}}}],["whitelistednonpeerdependencies",{"_index":5812,"title":{},"body":{"additional-documentation/adding-new-packages.html":{}}}],["whole",{"_index":1937,"title":{},"body":{"classes/Field.html":{},"components/LoaderComponent.html":{},"additional-documentation/angular-7-upgrade-guide.html":{}}}],["whose",{"_index":3929,"title":{},"body":{"components/PopComponent.html":{}}}],["width",{"_index":1183,"title":{},"body":{"interfaces/CrudConfig.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{}}}],["wildcard",{"_index":1899,"title":{},"body":{"classes/Field.html":{}}}],["window",{"_index":3735,"title":{},"body":{"injectables/NotificationsService.html":{},"components/UploadComponent.html":{},"coverage.html":{}}}],["window.addeventlistener('keydown",{"_index":3986,"title":{},"body":{"injectables/PopService.html":{}}}],["window.notification(notification.title",{"_index":3751,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.permission",{"_index":3743,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["window.notification.requestpermission().then((permission",{"_index":3744,"title":{},"body":{"injectables/NotificationsService.html":{}}}],["withloader",{"_index":1012,"title":{"interfaces/WithLoader.html":{}},"body":{"components/CrudComponent.html":{},"directives/EntriesDirective.html":{},"directives/EntryDirective.html":{},"components/LoginComponent.html":{},"components/LoginFormComponent.html":{},"components/PasswordResetComponent.html":{},"components/ResourceCrudComponent.html":{},"components/SignupComponent.html":{},"components/SignupFormComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithLoader.html":{},"coverage.html":{}}}],["withnotifications",{"_index":1013,"title":{"interfaces/WithNotifications.html":{}},"body":{"components/CrudComponent.html":{},"components/LoginComponent.html":{},"components/NotificationsComponent.html":{},"components/SignupComponent.html":{},"components/UploadComponent.html":{},"interfaces/WithNotifications.html":{},"coverage.html":{},"additional-documentation/adding-new-packages.html":{}}}],["without",{"_index":1169,"title":{},"body":{"interfaces/CrudConfig.html":{},"classes/Field.html":{},"interfaces/FileOptions.html":{},"components/ListItemsComponent.html":{},"components/LoaderComponent.html":{},"injectables/LoaderService.html":{},"components/NotificationsComponent.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"interfaces/Upload.html":{},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/readme/style-readme.html":{},"additional-documentation/changelog/data-changelog.html":{}}}],["won't",{"_index":5262,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["wont",{"_index":1154,"title":{},"body":{"interfaces/CrudConfig.html":{},"interfaces/ListConfig.html":{},"components/LoginFormComponent.html":{},"components/PopComponent.html":{},"components/SignupFormComponent.html":{},"components/TinymceComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["work",{"_index":2708,"title":{},"body":{"components/ListComponent.html":{},"additional-documentation/project-setup-tutorial.html":{}}}],["workaround",{"_index":159,"title":{},"body":{"components/AceComponent.html":{},"injectables/NotificationsService.html":{}}}],["works",{"_index":742,"title":{},"body":{"injectables/AuthService.html":{},"directives/ImageDirective.html":{},"components/LoaderComponent.html":{},"injectables/SdkService.html":{}}}],["workspaces",{"_index":5087,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["wrap",{"_index":5365,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrapper",{"_index":1676,"title":{},"body":{"components/EntryListPopComponent.html":{},"components/ImageSelectPopComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wraps",{"_index":13,"title":{},"body":{"components/AceComponent.html":{},"injectables/GeocodeService.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/location-readme.html":{},"additional-documentation/readme/ace-readme.html":{},"additional-documentation/readme/medium-editor-readme.html":{},"additional-documentation/readme/tinymce-readme.html":{}}}],["writes",{"_index":114,"title":{},"body":{"components/AceComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{}}}],["writevalue",{"_index":61,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{},"additional-documentation/changelog/tinymce-changelog.html":{}}}],["writevalue(value",{"_index":112,"title":{},"body":{"components/AceComponent.html":{},"components/DatetimeComponent.html":{},"components/InputComponent.html":{},"components/LocationPickerComponent.html":{},"components/MediumEditorComponent.html":{},"components/TinymceComponent.html":{},"components/ToggleComponent.html":{},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["wrong",{"_index":5612,"title":{},"body":{"additional-documentation/changelog/data-changelog.html":{},"additional-documentation/changelog/ui-changelog.html":{}}}],["wysiwyg",{"_index":5079,"title":{},"body":{"index.html":{},"additional-documentation/readme.html":{}}}],["x",{"_index":830,"title":{},"body":{"injectables/AuthService.html":{}}}],["x.ui",{"_index":3420,"title":{},"body":{"components/ModalComponent.html":{},"dependencies.html":{},"index.html":{},"additional-documentation/readme.html":{},"additional-documentation/readme/style-readme.html":{}}}],["x.ui/src/_config",{"_index":5239,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui",{"_index":5240,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["x.ui/src/x.ui.scss",{"_index":5434,"title":{},"body":{"additional-documentation/readme/style-readme.html":{}}}],["x1f682;&#x1f683;&#x1f683;&#x1f683",{"_index":457,"title":{},"body":{"components/AdminEntryInputComponent.html":{},"components/DefaultEntryInputComponent.html":{},"components/DefaultEntryOutputComponent.html":{}}}],["xlcss/sass/xlcss.scss",{"_index":5238,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["xxxxxxxx",{"_index":5249,"title":{},"body":{"additional-documentation/project-setup-tutorial.html":{}}}],["yarn",{"_index":5086,"title":{},"body":{"index.html":{},"additional-documentation/project-setup-tutorial.html":{},"additional-documentation/readme.html":{},"additional-documentation/adding-new-packages.html":{}}}],["yes",{"_index":493,"title":{},"body":{"directives/AssetDirective.html":{},"components/AssetListComponent.html":{},"injectables/AuthService.html":{},"classes/Collection.html":{},"classes/Config.html":{},"pipes/DatetimePipe.html":{},"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"directives/ImageDirective.html":{},"components/ImageSelectPopComponent.html":{},"components/InputComponent.html":{},"components/ListComponent.html":{},"components/ListHeaderComponent.html":{},"components/LocationPickerComponent.html":{},"components/ModalComponent.html":{},"injectables/ModelConfigService.html":{},"classes/Notification.html":{},"injectables/NotificationsService.html":{},"classes/Pagination.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"classes/Sorter.html":{}}}],["yields",{"_index":1691,"title":{},"body":{"components/EntryListPopComponent.html":{},"injectables/EntryService.html":{},"interfaces/FileOptions.html":{},"components/ImageSelectPopComponent.html":{},"components/ListItemsComponent.html":{},"components/ModalComponent.html":{},"components/PopComponent.html":{},"components/ResourceListPopComponent.html":{},"injectables/ResourceService.html":{},"interfaces/Update.html":{},"interfaces/Upload.html":{}}}],["you'll",{"_index":5358,"title":{},"body":{"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{}}}],["yourself",{"_index":4178,"title":{},"body":{"injectables/SdkService.html":{}}}],["yyyy",{"_index":874,"title":{},"body":{"modules/CalendarModule.html":{},"interfaces/Day.html":{}}}],["z",{"_index":3594,"title":{},"body":{"injectables/ModelConfigService.html":{}}}],["z0",{"_index":2010,"title":{},"body":{"interfaces/FileOptions.html":{},"interfaces/Upload.html":{}}}],["za",{"_index":2009,"title":{},"body":{"interfaces/FileOptions.html":{},"injectables/ModelConfigService.html":{},"interfaces/Upload.html":{}}}],["zone",{"_index":1483,"title":{},"body":{"directives/DropzoneDirective.html":{}}}],["zone.js",{"_index":5064,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":356,"title":{},"body":{"modules/AceModule.html":{},"modules/AuthModule.html":{},"modules/CalendarModule.html":{},"modules/DataModule.html":{},"modules/FilesModule.html":{},"modules/FormModule.html":{},"modules/IconModule.html":{},"modules/IoModule.html":{},"modules/ListModule.html":{},"modules/LoaderModule.html":{},"modules/LocationModule.html":{},"modules/MediumEditorModule.html":{},"modules/NotificationsModule.html":{},"modules/PopModule.html":{},"modules/ResourceModule.html":{},"modules/SdkModule.html":{},"modules/SelectModule.html":{},"modules/SymbolModule.html":{},"modules/TinymceModule.html":{},"modules/UiModule.html":{},"modules/UtilityModule.html":{},"overview.html":{}}}],["zurücksetzen",{"_index":3924,"title":{},"body":{"components/PasswordResetComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AceComponent.html":{"url":"components/AceComponent.html","title":"component - AceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ace/src/lib/ace.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps ace editor as angular component. Implements ControlValueAccessor!\nhttps://components.entrecode.de/misc/ace?e=1\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-ace\n            \n\n            \n                styleUrls\n                ace.component.scss\n            \n\n\n\n            \n                templateUrl\n                ace.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                editor\n                            \n                            \n                                input\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setMode\n                            \n                            \n                                setTheme\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                mode\n                            \n                            \n                                theme\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:47\n                            \n                        \n                \n                    \n                        mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        theme\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:51\n                            \n                        \n                \n                    \n                        theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            creates new ace instance if not present and sets mode and theme if given \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:97\n                            \n                        \n\n\n                \n                    \n                            Re-inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:93\n                            \n                        \n\n\n                \n                    \n                            Inits the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:120\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setMode\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetMode(mode: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:75\n                            \n                        \n\n\n                \n                    \n                            Sets the editor mode to the specified language (after ace/mode/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mode\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTheme(theme: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Sets the editor theme to the specified theme (after ace/theme/) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        theme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element for ace editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:29\n                            \n                        \n\n                \n                    \n                        The ace editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:39\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:112\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:37\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/ace/src/lib/ace.component.ts:33\n                            \n                        \n\n                \n                    \n                        The current value of the editor\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:19\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:21\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, ElementRef, ViewChild, Input, OnChanges, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent } from '@ec.components/ui';\n\nimport 'ace-builds/src-noconflict/ace';\nimport 'ace-builds/webpack-resolver';\n\n/** Workaround that expects ace to be imported somewhere else... */\ndeclare const ace: any;\n\n/** Wraps ace editor as angular component. Implements ControlValueAccessor!\n *\n * https://components.entrecode.de/misc/ace?e=1\n*/\n@Component({\n    selector: 'ec-ace',\n    templateUrl: 'ace.component.html',\n    styleUrls: ['ace.component.scss'],\n    providers: [\n        {\n            provide: NG_VALUE_ACCESSOR,\n            useExisting: forwardRef(() => AceComponent),\n            multi: true\n        }\n    ]\n})\nexport class AceComponent extends DefaultInputComponent implements ControlValueAccessor, OnInit, OnChanges {\n    /** The ace editor instance */\n    editor: any;\n    /**\n     * The current value of the editor\n     */\n    value = '';\n    /**\n     * Promise that resolves when the editor has been initialized.\n     */\n    ready: Promise;\n    /** Form input component */\n    input: InputComponent;\n    /**\n     * container element for ace editor\n     */\n    @ViewChild('container') container: ElementRef;\n    /**\n     * mode that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the mode is availabe.\n     */\n    @Input() mode: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-modelist.js\n    /**\n     * theme that should be used (e.g. javascript). Depending on your way of importing ace you have to make sure, the theme is availabe.\n     */\n    @Input() theme: string; // https://github.com/ajaxorg/ace-builds/blob/master/src/ext-themelist.js\n\n    /** creates new ace instance if not present and sets mode and theme if given */\n    init() {\n        if (!this.editor) {\n            this.editor = ace.edit(this.container.nativeElement);\n        }\n        this.ready = Promise.resolve(this.editor);\n        if (this.mode) {\n            this.setMode(this.mode);\n        }\n        if (this.theme) {\n            this.setTheme(this.theme);\n        }\n        if (this.value) {\n            this.editor.setValue(this.value, 1);\n        }\n        this.ready.then((editor) => {\n            editor.on('change', (e) => {\n                this.propagateChange(this.editor.getValue());\n            });\n        });\n    }\n    /** Sets the editor mode to the specified language (after ace/mode/) */\n    setMode(mode: string) {\n        this.mode = mode;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.session.setMode('ace/mode/' + this.mode);\n    }\n\n    /** Sets the editor theme to the specified theme (after ace/theme/) */\n    setTheme(theme: string) {\n        this.theme = theme;\n        if (!this.editor) {\n            return;\n        }\n        this.editor.setTheme('ace/theme/' + this.theme);\n    }\n\n    /** Inits the editor */\n    ngOnInit() {\n        this.init();\n    }\n    /** Re-inits the editor */\n    ngOnChanges() {\n        this.init();\n    }\n\n    /** writes value to editor on outside model change. */\n    writeValue(value: any) {\n        this.value = value || '';\n        if (!this.ready) {\n            return;\n        }\n        this.ready.then((editor) => {\n            editor.setValue(this.value, 1);\n        });\n    }\n\n    propagateChange = (_: any) => {\n    }\n\n    /** Registers change callback */\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ace.component.scss\n                \n                .ec-ace {\n    min-height: 500px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AceModule.html":{"url":"modules/AceModule.html","title":"module - AceModule","body":"\n                   \n\n\n\n\n    Modules\n    AceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n AceComponent), multi: true\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ace/src/lib/ace.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { AceComponent } from './ace.component';\nimport { UiModule } from '@ec.components/ui';\n\nexport const aceModuleConfig = {\n    imports: [UiModule],\n    exports: [AceComponent],\n    declarations: [AceComponent],\n    entryComponents: [AceComponent],\n    providers: [],\n};\n\n@NgModule(aceModuleConfig)\nexport class AceModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Action.html":{"url":"interfaces/Action.html","title":"interface - Action","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Action\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                            Optional\n                                        data\n                                \n                                \n                                        id\n                                \n                                \n                                            Optional\n                                        path\n                                \n                                \n                                            Optional\n                                        select\n                                \n                                \n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        data\n                                    \n                                \n                                \n                                    \n                                        data:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                    \n                                \n                                \n                                    \n                                        id:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                    \n                                \n                                \n                                    \n                                        path:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        select\n                                    \n                                \n                                \n                                    \n                                        select:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n    title: string;\n    id: string;\n    path?: string;\n    data?: any;\n    select?: boolean;\n    action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {\n\n}\n\n@Component({\n    selector: 'ec-actionbar',\n    templateUrl: '../select/select.component.html'\n})\n\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n    @Input() config: ActionbarConfig = {\n        label: 'title',\n        identifier: 'id',\n        fields: {\n            title: {}\n        }\n    };\n    @Input() actions: Action[];\n    actionStack: { [id: string]: Action[] } = {};\n\n    constructor(\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n        this.add.subscribe((item) => {\n            if (item.getBody().select !== false) {\n                this.selection.add(item);\n            }\n            if (item.getBody().action) {\n                item.getBody().action(item, this);\n            }\n            if (item.getBody().children) {\n                this.loadActions(item.getBody().children);\n            }\n            this.searchbar.clear();\n        });\n        this.remove.subscribe((item) => {\n            this.selection.remove(item);\n            this.loadActionsBefore();\n        });\n    }\n\n    loadActionsBefore() {\n        const actionsBefore = this.actionStack[this.currentID()];\n        if (actionsBefore) {\n            this.loadActions(actionsBefore);\n        }\n    }\n\n    ngOnInit() {\n        this.loadActions(this.actions);\n    }\n\n    currentID() {\n        if (!this.selection || this.selection.isEmpty()) {\n            return 'ROOT';\n        }\n        return this.selection.items[this.selection.items.length - 1].id();\n    }\n\n    reset() {\n        this.selection.removeAll();\n        this.loadActions(this.actionStack[this.currentID()]);\n    }\n\n    currentActions() {\n        return this.actionStack[this.currentID()];\n    }\n\n    loadActions(actions, addToStack = true) {\n        if (addToStack) {\n            this.actionStack[this.currentID()] = actions;\n        }\n        this.list = new List(actions, this.config);\n        if (!this.selection) {\n            this.initSelection();\n        }\n        setTimeout(() => {\n            if (this.dropdownList) {\n                this.dropdownList.focusFirst();\n            }\n        });\n    }\n\n    getPath() {\n        return this.selection.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ActionbarConfig.html":{"url":"interfaces/ActionbarConfig.html","title":"interface - ActionbarConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ActionbarConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/actionbar/actionbar.component.ts\n        \n\n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n\n\n\n    \n\n\n    \n        import { Component, OnInit, Input, ElementRef, ChangeDetectorRef } from '@angular/core';\nimport { SelectComponent } from '../select/select.component';\nimport { ListConfig, List, Item } from '@ec.components/core';\n\nexport type ActionFunction = (item?: Item | any, actionbar?: ActionbarComponent) => any;\n\nexport interface Action {\n    title: string;\n    id: string;\n    path?: string;\n    data?: any;\n    select?: boolean;\n    action?: ActionFunction;\n}\n\nexport interface ActionbarConfig extends ListConfig {\n\n}\n\n@Component({\n    selector: 'ec-actionbar',\n    templateUrl: '../select/select.component.html'\n})\n\nexport class ActionbarComponent extends SelectComponent implements OnInit {\n    @Input() config: ActionbarConfig = {\n        label: 'title',\n        identifier: 'id',\n        fields: {\n            title: {}\n        }\n    };\n    @Input() actions: Action[];\n    actionStack: { [id: string]: Action[] } = {};\n\n    constructor(\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n        this.add.subscribe((item) => {\n            if (item.getBody().select !== false) {\n                this.selection.add(item);\n            }\n            if (item.getBody().action) {\n                item.getBody().action(item, this);\n            }\n            if (item.getBody().children) {\n                this.loadActions(item.getBody().children);\n            }\n            this.searchbar.clear();\n        });\n        this.remove.subscribe((item) => {\n            this.selection.remove(item);\n            this.loadActionsBefore();\n        });\n    }\n\n    loadActionsBefore() {\n        const actionsBefore = this.actionStack[this.currentID()];\n        if (actionsBefore) {\n            this.loadActions(actionsBefore);\n        }\n    }\n\n    ngOnInit() {\n        this.loadActions(this.actions);\n    }\n\n    currentID() {\n        if (!this.selection || this.selection.isEmpty()) {\n            return 'ROOT';\n        }\n        return this.selection.items[this.selection.items.length - 1].id();\n    }\n\n    reset() {\n        this.selection.removeAll();\n        this.loadActions(this.actionStack[this.currentID()]);\n    }\n\n    currentActions() {\n        return this.actionStack[this.currentID()];\n    }\n\n    loadActions(actions, addToStack = true) {\n        if (addToStack) {\n            this.actionStack[this.currentID()] = actions;\n        }\n        this.list = new List(actions, this.config);\n        if (!this.selection) {\n            this.initSelection();\n        }\n        setTimeout(() => {\n            if (this.dropdownList) {\n                this.dropdownList.focusFirst();\n            }\n        });\n    }\n\n    getPath() {\n        return this.selection.getValue();\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AdminEntryInputComponent.html":{"url":"components/AdminEntryInputComponent.html","title":"component - AdminEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AdminEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/admin-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that require having the DatamanagerResource as api.\nThis is currently relevant for account and role fields which come from the ec.api.\n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./admin-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManagerResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/admin-entry-input.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:19\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:21\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { SdkService } from '../sdk/sdk.service';\nimport { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService } from '@ec.components/ui';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\n\n/** This component holds the input templates for all field types that require having the DatamanagerResource as api.\n * This is currently relevant for account and role fields which come from the ec.api.\n */\n@Component({\n  templateUrl: './admin-entry-input.component.html',\n})\nexport class AdminEntryInputComponent extends DefaultInputComponent {\n  api: DataManagerResource;\n  constructor(public sdk: SdkService, public formService: FormService) {\n    super(formService);\n    /* this.sdk.root.then((root) => this.api = root); */\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AdminEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/AssetDirective.html":{"url":"directives/AssetDirective.html","title":"directive - AssetDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  AssetDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/asset/asset.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset by id to the template.\nassets/asset\nhttps://components.entrecode.de/assets/asset?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecAsset]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                asset\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                sdk\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetId\n                            \n                            \n                                autoload\n                            \n                            \n                                ecAsset\n                            \n                            \n                                levels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:26\n                            \n                        \n                \n                    \n                        The api to use. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetId\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:18\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:22\n                            \n                        \n                \n                    \n                        Should the asset be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ecAsset\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:20\n                            \n                        \n                \n                    \n                        The asset id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:24\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:28\n                            \n                        \n                \n                    \n                        Fires as soon as the asset has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:48\n                            \n                        \n\n\n                \n                    \n                            Loads the asset. Can be called from template when using autoload=false \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the asset will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            asset\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:30\n                            \n                        \n\n                \n                    \n                        The current loaded asset \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:16\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/asset/asset.directive.ts:33\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ecAsset\nThis directive can be used to load a single asset directly from the template:\n\n  id: {{myAsset.asset?.assetID}}\n  title: {{myAsset.asset?.title}}\n  tags: {{myAsset.asset?.tags}}\n  created: {{myAsset.asset?.created}}\n  type: {{myAsset.asset?.type}}\n  files: {{myAsset.asset?.files?.length}}\n\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SdkService } from '../../sdk/sdk.service';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\n\n/** Loads an public asset by id to the template.\n * assets/asset\n * https://components.entrecode.de/assets/asset?e=1\n */\n@Directive({\n  selector: '[ecAsset]',\n  exportAs: 'ecAsset'\n})\nexport class AssetDirective implements OnChanges {\n  /** The loading promise */\n  promise: any;\n  /** The asset id that should be loaded*/\n  @Input() assetId: string;\n  /** The asset id that should be loaded*/\n  @Input() ecAsset: string;\n  /** Should the asset be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** The api to use. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Fires as soon as the asset has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The current loaded asset */\n  public asset: any;\n\n  /** Injects the sdk */\n  constructor(public sdk: SdkService) {\n  }\n\n  /** as soon as model and id are known, the asset will be loaded. */\n  ngOnChanges() {\n    if (this.ecAsset) {\n      this.assetId = this.ecAsset;\n    }\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the asset. Can be called from template when using autoload=false */\n  load(id?: string) {\n    this.assetId = id || this.assetId;\n    if (!this.assetId) {\n      return Promise.reject('cannot load asset: no assetId is set');\n    }\n    const api = this.api || this.sdk.api;\n    if (!api) {\n      throw new Error('cannot load asset: no api was set!');\n    }\n    this.promise = api.asset(this.assetId)\n      .then((asset) => {\n        this.asset = asset;\n        this.loaded.emit(asset);\n        return asset;\n      });\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetListComponent.html":{"url":"components/AssetListComponent.html","title":"component - AssetListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetListComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/asset-list/asset-list.component.ts\n\n\n\n    \n        Extends\n    \n    \n            ResourceListComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-asset-list\n            \n\n\n\n\n            \n                templateUrl\n                ./asset-list.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                list\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                            \n                                resourceConfig\n                            \n                            \n                                    Public\n                                route\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Protected\n                                createList\n                            \n                            \n                                filter\n                            \n                            \n                                initFilterQuery\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                listResource\n                            \n                            \n                                loader\n                            \n                            \n                                loadWhen\n                            \n                            \n                                relation\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:35\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        listResource\n                    \n                \n                \n                    \n                        Type :     ListResource\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:27\n                            \n                        \n                \n                    \n                        If listResource input is set, the given ListResource will be used directly and loading will be skipped. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:39\n                            \n                        \n                \n                    \n                        The loader that should be shown while the list is loaded. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loadWhen\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:31\n                            \n                        \n                \n                    \n                        If set to false, the list will wait for the flag to turn true before loading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:37\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:29\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/asset-list/asset-list.component.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            createList\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createList()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:62\n                            \n                        \n\n\n                \n                    \n                            The method to create the list\n\n\n                            \n                                Returns :     Promise | ResourceList\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property: string, value: any)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:128\n                            \n                        \n\n\n                \n                    \n                            This method will filter the list by a given property value and optional operator. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterQuery\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterQuery(fieldFilter: (property: string,value: any) => void)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fieldFilter\n                                                        \n                                                                    function\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:119\n                            \n                        \n\n\n                \n                    \n                            When changing the model or the config, the list will update\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:83\n                            \n                        \n\n\n                \n                    \n                            Creates/Updates the list and subscribes Observables.  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:49\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceList\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:33\n                            \n                        \n\n                \n                    \n                        The instance of an EntryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     ResourceListComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in ResourceListComponent:50\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\n\n@Component({\n    selector: 'ec-asset-list',\n    templateUrl: './asset-list.component.html'\n})\n\nexport class AssetListComponent extends ResourceListComponent implements OnInit {\n    ngOnInit() {\n    }\n}\n\n    \n\n    \n        \n    \n    \n        \n            \n                \n                \n                    \n                \n                \n                    {{group.value}}\n                \n            \n             -->\n\n            \n            \n                \n                    \n                \n                {{item.getBody()}}\n             -->\n\n        \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                                                                    {{group.value}}                                         -->                                                                                            {{item.getBody()}}             -->            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AssetgroupSelectComponent.html":{"url":"components/AssetgroupSelectComponent.html","title":"component - AssetgroupSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AssetgroupSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-assetgroup-select\n            \n\n\n\n\n            \n                templateUrl\n                ./assetgroup-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                assetGroups\n                            \n                            \n                                disableLegacy\n                            \n                            \n                                placeholder\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:13\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroups\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:14\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableLegacy\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'select assetgroup..'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:12\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:17\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts:20\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FileService } from '../file.service';\n\n// TODO: add demo + doc\n\n@Component({\n    selector: 'ec-assetgroup-select',\n    templateUrl: './assetgroup-select.component.html',\n})\n\nexport class AssetgroupSelectComponent implements OnInit {\n    @Input() placeholder = 'select assetgroup..';\n    @Input() assetGroupID: string;\n    @Input() assetGroups: string[];\n    @Input() disableLegacy: boolean;\n    @Input() readOnly: boolean;\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n\n    constructor(\n        public fileService: FileService\n    ) { }\n\n    ngOnInit() {\n        this.fileService.assetGroupList().then(assetGroups => this.assetGroups = assetGroups);\n    }\n}\n\n    \n\n    \n        \n    {{placeholder}}\n    {{assetGroup}}\n    legacy Assets -->\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{placeholder}}    {{assetGroup}}    legacy Assets -->'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'AssetgroupSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n\n                \n                Description\n                \n                \n                    This guard can be used on routes that only can be activated when a user is present in the SdkService.\nIf no user is found, an error message is shown. You can then react via the redirect output. \n\n                \n\n\n\n\n                \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                redirect\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth-guard.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            canActivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ncanActivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth-guard.service.ts:17\n                            \n                        \n\n\n                \n                    \n                            Checks if the sdk contains a user, if not an error message is shown. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { NotificationsService } from '@ec.components/ui';\nimport { Subject } from 'rxjs';\n\n/** This guard can be used on routes that only can be activated when a user is present in the SdkService.\n * If no user is found, an error message is shown. You can then react via the redirect output. */\n@Injectable()\nexport class AuthGuard implements CanActivate {\n  /** Subject that is nexted when the user check fails. (Meant to be used for redirecting to another page e.g. login) */\n  redirect: Subject = new Subject();\n\n  constructor(private sdk: SdkService, private notifications: NotificationsService) {\n  }\n  /** Checks if the sdk contains a user, if not an error message is shown. */\n  canActivate() {\n    return this.sdk.ready.then(user => {\n      if (!!user) {\n        return true;\n      }\n      this.notifications.emit({\n        type: 'error',\n        title: 'Diese Seite kann nicht angezeigt werden.',\n        message: 'Sie sind nicht eingeloggt.'\n      });\n      this.redirect.next();\n    });\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nLoginComponent\n\nLoginComponent\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Module for all auth related components and services. \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                        \n                            cookieFactory()\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginComponent\n                        \n                        \n                            PasswordResetComponent\n                        \n                        \n                            SignupComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { CookieModule } from 'ngx-cookie';\nimport { AuthGuard } from './auth-guard.service';\nimport { AuthService } from './auth.service';\nimport { LoginComponent } from './login/login.component';\nimport { PasswordResetComponent } from './password-reset/password-reset.component';\nimport { SignupComponent } from './signup/signup.component';\n\n/** loads CookieModule */\nexport function cookieFactory(): ModuleWithProviders {\n  // https://github.com/auth0/angular2-jwt/issues/305\n  return CookieModule.forRoot();\n}\n/** Module for all auth related components and services. */\n@NgModule({\n  declarations: [\n    PasswordResetComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  imports: [\n    FormsModule,\n    cookieFactory(),\n    CommonModule,\n    ReactiveFormsModule,\n    UiModule\n  ],\n  exports: [\n    ReactiveFormsModule,\n    PasswordResetComponent,\n    LoginComponent,\n    SignupComponent,\n  ],\n  providers: [AuthGuard, AuthService]\n})\nexport class AuthModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/auth/auth.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkPermission\n                            \n                            \n                                getAccount\n                            \n                            \n                                getAllowedModelMethods\n                            \n                            \n                                getAllowedResourceMethods\n                            \n                            \n                                getApi\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                            \n                                noClientID\n                            \n                            \n                                resetPassword\n                            \n                            \n                                resolveVariables\n                            \n                            \n                                signup\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, sdk: SdkService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/auth.service.ts:24\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            checkPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ncheckPermission(permission: string, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:67\n                            \n                        \n\n\n                \n                    \n                            checks given public permission for given api, defaults to this.sdk.api. Also works as ec user \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        permission\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedModelMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedModelMethods(model: string, methods?: string[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:113\n                            \n                        \n\n\n                \n                    \n                            Returns an array of all allowed methods for the given relation \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAllowedResourceMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAllowedResourceMethods(relation: string, variables: Object, methods?: string[], api?: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                                \n                                                        methods\n                                                        \n                                                                    string[]\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getApi\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetApi(email: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:157\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:31\n                            \n                        \n\n\n                \n                    \n                            Generic login that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout(api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:147\n                            \n                        \n\n\n                \n                    \n                            Generic logout that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noClientID\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoClientID()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:171\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetPassword\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetPassword(email, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Generic password reset that works with both public and admin API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolveVariables\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolveVariables(string: string, variables: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            replaces all variables by values in a string \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        string\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        variables\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined, api?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/auth.service.ts:45\n                            \n                        \n\n\n                \n                    \n                            Generic Signup, works for accounts API and PublicAPI \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport Core from 'ec.sdk/lib/Core';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: \"environment\",\n   useValue: {\n     datamanagerID: \"83cc6374\",\n     environment: \"stage\",\n     clientID: \"rest\"\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class AuthService {\n\n  /** Calls init and sets ready to true when finished. */\n  constructor(private resourceConfig: ResourceConfig, private sdk: SdkService) {\n  }\n\n  /** Generic login that works with both public and admin API. */\n  login({ email, password }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.session;\n        return !_api ? Promise.reject('api_not_found') : _api.login(email, password);\n      }).then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  /** Generic Signup, works for accounts API and PublicAPI */\n  signup({ email, password, invite }, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.signup(email, password, invite) :\n      this.sdk.api.signup(email, password, invite)\n        .catch(() => this.sdk.accounts.signup(email, password, invite))\n        .then((res) => {\n          return this.sdk.init();\n        });\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.sdk.api) {\n    return api.me().then((account) => {\n      return account || this.sdk.accounts.me();\n    }).catch((err) => {\n      return this.sdk.api.me();\n    });\n  }\n\n  /** checks given public permission for given api, defaults to this.sdk.api. Also works as ec user */\n  checkPermission(permission: string, api?) {\n    return this.sdk.ready.then((user) => {\n      api = api || this.sdk.user;\n      return api.checkPermission(permission);\n    });\n  }\n  /** replaces all variables by values in a string */\n  resolveVariables(string: string, variables: Object) {\n    Object.keys(variables).forEach((key) => {\n      string = string.replace(``, variables[key]);\n    });\n    return string;\n  }\n\n  /** Returns only the allowed methods for a given relation. Uses the permissions config option from resource-config. */\n  getAllowedResourceMethods(relation: string, variables: Object = {}, methods?: string[], api?: Core): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    if (!this.resourceConfig.get(relation) || !this.resourceConfig.get(relation).permissions) {\n      /* console.warn(`relation ${relation} has no defined permissions, defaulting to all methods available`); */\n      return Promise.resolve(['get', 'post', 'put', 'delete']);\n    }\n    const permissions = this.resourceConfig.get(relation).permissions;\n    return Object.keys(permissions)\n      .map((method) => (results) => {\n        return !permissions[method] ? Promise.resolve(results) :\n          permissions[method] === true ? Promise.resolve(results.concat(method)) :\n            this.checkPermission(`${this.resolveVariables(permissions[method], variables)}`, api)\n              .then(res => {\n                if (res) {\n                  results.push(method);\n                }\n                return results;\n              }).catch(err => {\n                return results;\n              });\n      })\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Returns an array of all allowed methods for the given relation */\n  getAllowedModelMethods(model: string, methods?: string[]): Promise {\n    if (methods) {\n      return Promise.resolve(methods);\n    }\n    return ['get', 'post', 'put', 'delete']\n      .map((method) => (results) =>\n        this.checkPermission(`${model}:${method}`, this.sdk.api)\n          .then(res => {\n            if (res) {\n              results.push(method);\n            }\n            return results;\n          })\n      )\n      .reduce((a, b) => a.then(r => b(r)), Promise.resolve([]))\n      .then(_methods => {\n        _methods.filter(x => !!x);\n        return _methods;\n      });\n  }\n\n  /** Generic password reset that works with both public and admin API. */\n  resetPassword(email, api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return Promise.resolve(api || this.getApi(email))\n      .then((resolvedAPI) => {\n        const _api = resolvedAPI || this.sdk.accounts;\n        return !_api ? Promise.reject('api_not_found') : _api.resetPassword(email);\n      });\n  }\n\n  /** Generic logout that works with both public and admin API. */\n  logout(api?) {\n    if (this.noClientID()) {\n      return Promise.reject(this.noClientID());\n    }\n    return api ? api.logout() : this.sdk.session.logout().catch(() => this.sdk.api.logout())\n      .then(() => {\n        return this.sdk.init();\n      });\n  }\n\n  getApi(email: string) {\n    if (!this.sdk.api && !this.sdk.accounts) {\n      return Promise.reject('no_api_found');\n    }\n    return this.sdk.api.emailAvailable(email)\n      .then((available) => {\n        if (!available) {\n          return this.sdk.api;\n        }\n      }).catch(() => {\n        return;\n      });\n  }\n\n  noClientID() {\n    if (!this.sdk.environment || !this.sdk.environment.clientID) {\n      return `\nNo clientID set in environment! To enable all auth related functionalities,\nyou can create a client in your datamanager settings and provide it with your environment:\n\n  providers: [\n    {\n      provide: 'environment',\n      useValue: {\n        datamanagerID: '83cc6374',\n        clientID: 'myClient',\n      }\n    }\n  ]\n`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CalendarModule.html":{"url":"modules/CalendarModule.html","title":"module - CalendarModule","body":"\n                   \n\n\n\n\n    Modules\n    CalendarModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This Module contains all calendar related components \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CalendarComponent\n                        \n                        \n                            DaterangeComponent\n                        \n                        \n                            DatetimePipe\n                        \n                        \n                            HeatmapComponent\n                        \n                        \n                            MonthComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(formats: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/calendar.module.ts:46\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formats\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DatetimePipe } from './datetime.pipe';\nimport { CalendarComponent } from './calendar/calendar.component';\nimport { HeatmapComponent } from './heatmap/heatmap.component';\nimport { DaterangeComponent } from './daterange/daterange.component';\nimport { MonthComponent } from './calendar/month.component';\nimport { CommonModule } from '@angular/common';\n\nexport const calendarModuleConfig = {\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        DatetimePipe,\n        CalendarComponent,\n        HeatmapComponent,\n        DaterangeComponent,\n        MonthComponent,\n    ],\n    declarations: [\n        DatetimePipe,\n        CalendarComponent,\n        HeatmapComponent,\n        DaterangeComponent,\n        MonthComponent,\n    ],\n    providers: [\n        {\n            provide: 'moment.format.date',\n            useValue: 'DD.MM.YYYY'\n        },\n        {\n            provide: 'moment.format.time',\n            useValue: 'HH:mm'\n        },\n        {\n            provide: 'moment.format.month',\n            useValue: 'MMMM YYYY'\n        }\n    ]\n};\n\n/** This Module contains all calendar related components */\n@NgModule(calendarModuleConfig)\nexport class CalendarModule {\n    static forRoot(formats: { date?, time?, month?}): ModuleWithProviders {\n        return {\n            ngModule: CalendarModule,\n            providers: [\n                {\n                    provide: 'moment.format.date',\n                    useValue: formats.date\n                },\n                {\n                    provide: 'moment.format.time',\n                    useValue: formats.time\n                },\n                {\n                    provide: 'moment.format.month',\n                    useValue: formats.month\n                },\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Collection.html":{"url":"classes/Collection.html","title":"class - Collection","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Collection\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/collection/collection.ts\n        \n\n            \n                Description\n            \n            \n                A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Protected\n                                update\n                            \n                            \n                                    Public\n                                update$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                add\n                            \n                            \n                                addAll\n                            \n                            \n                                has\n                            \n                            \n                                hasAll\n                            \n                            \n                                index\n                            \n                            \n                                isEmpty\n                            \n                            \n                                move\n                            \n                            \n                                remove\n                            \n                            \n                                removeAll\n                            \n                            \n                                replaceWith\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(items: Array)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                            Constructs the collection with the given item Array (optional).\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                  \n                                                        \n                                                                    Array\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                                    Example :\n                                        \n                                               *  const numbers = new Collection([1, 2, 3]);\n   *\n                                        \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:10\n                            \n                        \n\n                \n                    \n                        The items must all have the same type T.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject>\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:12\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items update \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            update$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable>\n\n                        \n                    \n                    \n                        \n                            Default value : this.update.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:14\n                            \n                        \n\n                \n                    \n                        Subject that is nexted when the items change \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            add\n                            \n                            \n                        \n                    \n                \n                \n                    \nadd(item: T, unique?: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:71\n                            \n                        \n\n\n                \n                    \n                            Adds the given item to the Collection. If the unique flag is set, the item will only be added\nif it is not contained.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.add(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAll\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAll(items: Array, unique: boolean, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:89\n                            \n                        \n\n\n                \n                    \n                            Adds the given items to the Collection. If the unique flag is set, only items that are not\ncontained will be added.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        unique\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.addAll([5, 6, 7]);\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            has\n                            \n                            \n                        \n                    \n                \n                \n                    \nhas(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:42\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains the given item.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has(2); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasAll(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:53\n                            \n                        \n\n\n                \n                    \n                            Checks if the Collection contains all given items.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.has([1,2]); //true\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            index\n                            \n                            \n                        \n                    \n                \n                \n                    \nindex(item: T)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:31\n                            \n                        \n\n\n                \n                    \n                            Returns the index of the given item \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isEmpty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisEmpty()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:160\n                            \n                        \n\n\n                \n                    \n                            Returns true if the collection is empty \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            move\n                            \n                            \n                        \n                    \n                \n                \n                    \nmove(item: T, index: number, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:165\n                            \n                        \n\n\n                \n                    \n                            Moves the given item to the given array index. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            remove\n                            \n                            \n                        \n                    \n                \n                \n                    \nremove(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:106\n                            \n                        \n\n\n                \n                    \n                            Removes the given item from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.remove(4);\n   *\n                                        \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            removeAll\n                            \n                            \n                        \n                    \n                \n                \n                    \nremoveAll(items?: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:123\n                            \n                        \n\n\n                \n                    \n                            Removes all items from the Collection.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * numbers.removeAll();\n   *\n                                        \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            replaceWith\n                            \n                            \n                        \n                    \n                \n                \n                    \nreplaceWith(items: Array, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:147\n                            \n                        \n\n\n                \n                    \n                            Replaces all current items with the given items. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(item: T, event: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/collection/collection.ts:138\n                            \n                        \n\n\n                \n                    \n                            Toggles the item in and out of collection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    T\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        event\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Collection\nCollection is a more sophisticated Array:\nconst collection = new Collection([1, 2, 3]);\ncollection.has(1); //true\ncollection.has(4); //false\ncollection.add(4);\ncollection.remove(4);\ncollection.index(1); //0\ncollection.addAll([10,11,12]); //true\ncollection.hasAll([1,10,11]); //true\ncollection.removeAll();It is the Parent Class of List and Selection.\n\n    \n\n    \n        import { Observable, Subject } from 'rxjs';\n\n/**\n * A Collection is a more sophisticated Array. It is fundamental for other classes like List.\n */\nexport class Collection {\n  /**\n   * The items must all have the same type T.\n   */\n  public items: Array;\n  /** Subject that is nexted when the items update */\n  protected update: Subject> = new Subject();\n  /** Subject that is nexted when the items change */\n  public update$: Observable> = this.update.asObservable();\n\n  /**\n   * Constructs the collection with the given item Array (optional).\n   * @example\n   * ```typescript\n   *  const numbers = new Collection([1, 2, 3]);\n   * ```\n   */\n  constructor(items: Array = []) {\n    this.items = [];\n    items.forEach((item) => {\n      this.items.push(item);\n    });\n  }\n\n  /** Returns the index of the given item */\n  index(item: T): number {\n    return this.items.indexOf(item);\n  }\n\n  /**\n   * Checks if the Collection contains the given item.\n   * @example\n   * ```typescript\n   * numbers.has(2); //true\n   * ```\n   */\n  has(item: T): boolean {\n    return this.index(item) !== -1;\n  }\n\n  /**\n   * Checks if the Collection contains all given items.\n   * @example\n   * ```typescript\n   * numbers.has([1,2]); //true\n   * ```\n   */\n  hasAll(items: Array = []): boolean {\n    if (items === null) {\n      // console.warn('has all fail', this, items);\n      return false;\n    }\n    return items.reduce((has, item) => {\n      return has && this.has(item);\n    }, true);\n  }\n\n  /**\n   * Adds the given item to the Collection. If the unique flag is set, the item will only be added\n   * if it is not contained.\n   * @example\n   * ```typescript\n   * numbers.add(4);\n   * ```\n   */\n  add(item: T, unique?: boolean, event: boolean = true) {\n    if (unique && this.has(item)) {\n      return false;\n    }\n    this.items.push(item);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Adds the given items to the Collection. If the unique flag is set, only items that are not\n   * contained will be added.\n   * @example\n   * ```typescript\n   * numbers.addAll([5, 6, 7]);\n   * ```\n   */\n  addAll(items: Array = [], unique: boolean = false, event: boolean = true) {\n    const length = this.items.length;\n    items.forEach((item) => {\n      this.add(item, unique, false);\n    });\n    if (this.items.length > length && event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes the given item from the Collection.\n   * @example\n   * ```typescript\n   * numbers.remove(4);\n   * ```\n   */\n  remove(item: T, event: boolean = true) {\n    if (!this.has(item)) {\n      return false;\n    }\n    this.items.splice(this.index(item), 1);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /**\n   * Removes all items from the Collection.\n   * @example\n   * ```typescript\n   * numbers.removeAll();\n   * ```\n   */\n  removeAll(items?: Array, event: boolean = true) {\n    const length = this.items.length;\n    if (items) {\n      items.forEach((item) => {\n        this.remove(item, false);\n      });\n    } else {\n      this.items.length = 0;\n    }\n    if (this.items.length , event: boolean = true) {\n    if (this.items && this.items.length) {\n      this.removeAll(undefined, false);\n    }\n    if (items.length) {\n      this.addAll(items, false, false);\n    }\n    if (event) {\n      this.update.next(this);\n    }\n  }\n\n  /** Returns true if the collection is empty */\n  isEmpty() {\n    return this.items.length === 0;\n  }\n\n  /** Moves the given item to the given array index. */\n  move(item: T, index: number, event: boolean = true) {\n    if (!this.has(item) || this.items.indexOf(item) === index) {\n      return;\n    }\n    this.items.splice(index, 0, this.items.splice(this.items.indexOf(item), 1)[0]);\n    if (event) {\n      this.update.next(this);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Config.html":{"url":"classes/Config.html","title":"class - Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Config\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/config.ts\n        \n\n            \n                Description\n            \n            \n                The Root class for all Configurations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                    Optional\n                                configure\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:5\n                            \n                        \n\n                \n                    \n                        The config object. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                                Optional\n                            configure\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        configure(key: string, property: string, config?: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/config/config.ts:13\n                            \n                        \n\n\n                \n                    \n                            This method is a getter and setter for configurations. The key stands for the config (e.g. model).\nThe property is a sub property if the config (e.g. fields => model.fields).\nIf no config is given, the method just returns the configuration for the given property.\nIf a config is given, the property config is merged via Object.assign. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export abstract class Config {\n  // TODO use Map !!!! (like simi did in EventEmitter.ts)\n  /** The config object. */\n  private config: {\n    [key: string]: Object,\n  } = {};\n\n  /** This method is a getter and setter for configurations. The key stands for the config (e.g. model).\n   * The property is a sub property if the config (e.g. fields => model.fields).\n   * If no config is given, the method just returns the configuration for the given property.\n   * If a config is given, the property config is merged via Object.assign. */\n  public configure?(key: string, property: string, config?: Object) {\n    if (!this.config[key]) {\n      this.config[key] = {};\n    }\n    if (!config) {\n      return this.config[key][property];\n    }\n    if (!this.config[key][property]) {\n      this.config[key][property] = {};\n    }\n    Object.assign(this.config[key][property], config);\n    return this;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CrudComponent.html":{"url":"components/CrudComponent.html","title":"component - CrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  CrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/crud/crud.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * \n *https://components.entrecode.de/entries/crud?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entryPop\n                            \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                    Private\n                                loadEntry\n                            \n                            \n                                    Public\n                                mustReload\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                selectEntry\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, modelConfig: ModelConfigService, notificationService: NotificationsService, symbol: SymbolService, cdr: ChangeDetectorRef, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/crud/crud.component.ts:49\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:35\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:33\n                            \n                        \n                \n                    \n                        The model that should be crud'ed. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:37\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:45\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:47\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:79\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            loadEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        loadEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            mustReload\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        mustReload(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Returns true if the visible fields in the list differ from the visible fields in the form\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:70\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            selectEntry\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        selectEntry(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:115\n                            \n                        \n\n\n                \n                    \n                            Is called when an item in the list is clicked. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entryPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryPopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryPopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(EntryListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The EntryList inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:43\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:49\n                            \n                        \n\n                \n                    \n                        Emitted Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:59\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/crud/crud.component.ts:58\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, EventEmitter, Input, OnInit, Optional,\n  Output, ViewChild, ChangeDetectorRef\n} from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CrudConfig } from './crud-config.interface';\nimport { EntryListComponent } from '../entry-list/entry-list.component';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { EntryPopComponent } from '../entry-pop/entry-pop.component';\nimport { WithLoader } from '@ec.components/ui';\nimport { Notification, WithNotifications, SymbolService } from '@ec.components/ui';\nimport { ModelConfigService } from '../model-config/model-config.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * https://components.entrecode.de/entries/crud?e=1\n * */\n@Component({\n  selector: 'ec-crud',\n  templateUrl: './crud.component.html',\n})\nexport class CrudComponent implements OnInit, WithLoader, WithNotifications {\n  /** The model that should be crud'ed. */\n  @Input() model: string;\n  /** CrudConfig for customization of the crud's UI.*/\n  @Input() config: CrudConfig = {};\n  /** The selection that should be used */\n  @Input() selection: Selection;\n  /** The EntryList inside the template. */\n  @ViewChild(EntryListComponent) list: EntryListComponent;\n  /** The Pop inside the template. */\n  @ViewChild(EntryPopComponent) entryPop: EntryPopComponent;\n  /** The lists loader */\n  @ViewChild(LoaderComponent) loader: LoaderComponent;\n  /** Emits when a list element is clicked */\n  @Output() columnClicked: EventEmitter = new EventEmitter();\n  /** Emits when the selection has changed */\n  @Output() selected: EventEmitter = new EventEmitter();\n  /** Emitted Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private auth: AuthService,\n    private loaderService: LoaderService,\n    private modelConfig: ModelConfigService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService,\n    private cdr: ChangeDetectorRef,\n    @Optional() public router: Router,\n    @Optional() public route: ActivatedRoute) {\n    /* if (route) {\n      merge(route.data, route.params, route.queryParams)\n        .subscribe(({ model }) => {\n          if (model) {\n            this.model = model;\n          }\n        });\n    } */\n  }\n\n  ngOnInit() {\n    this.auth.getAllowedModelMethods(this.model, this.config.methods)\n      .then((methods) => {\n        this.config.methods = methods;\n        this.cdr.markForCheck();\n      });\n  }\n\n  /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n  public hasMethod(method: string) {\n    return this.config.methods && this.config.methods.indexOf(method) !== -1;\n  }\n\n  /** Returns true if the visible fields in the list differ from the visible fields in the form*/\n  public mustReload(item) {\n    return !Object.keys(item.config.fields).reduce((equal, property) => {\n      return equal && (item.config.fields[property].list !== false || item.config.fields[property].form === false);\n    }, true);\n  }\n\n  /** Loads the clicked entry item, depending on the configured levels. Reloads the entry if the form has fields the which list has not. */\n  private loadEntry(item) {\n    return this.modelConfig.getMinLevel(this.model, this.config.fields)\n      .then((minLevel) => {\n        const levels = Math.max(minLevel, this.config.levels || 1);\n        if (!this.config.alwaysLoadEntry && !this.mustReload(item) && levels === 1) {\n          return item.getBody();\n        }\n        return this.sdk.api.entry(this.model, item.id(), levels);\n      }).then((loadedEntry) => {\n        this.entryPop.edit(loadedEntry);\n        this.notificationService.emit({ hide: this.notifications });\n      }).catch((err) => {\n        console.log('error while loading entry to edit', err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.load'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n      });\n  }\n\n  /** Is called when an item in the list is clicked. */\n  public selectEntry(item) {\n    if (!item) {\n      return;\n    }\n    if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n      return;\n    }\n    this.loaderService.wait(this.loadEntry(item), this.loader);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{config?.createLabel}}\n        \n          \n        \n      \n    \n  \n  \n    \n    \n  \n\n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{config?.createLabel}}                                                      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'CrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/CrudConfig.html":{"url":"interfaces/CrudConfig.html","title":"interface - CrudConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  CrudConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/crud/crud-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                The CrudConfig allows a quick customization of an ec-crud component. \n\n            \n\n            \n                Extends\n            \n            \n                    ListConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysLoadEntry\n                                \n                                \n                                            Optional\n                                        createLabel\n                                \n                                \n                                            Optional\n                                        customUpload\n                                \n                                \n                                            Optional\n                                        deleteOnRemove\n                                \n                                \n                                            Optional\n                                        develop\n                                \n                                \n                                            Optional\n                                        disableCreatePop\n                                \n                                \n                                            Optional\n                                        disableListPop\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        disableSelectSwitch\n                                \n                                \n                                            Optional\n                                        disableUrlUpload\n                                \n                                \n                                            Optional\n                                        dropdownFields\n                                \n                                \n                                            Optional\n                                        fileOptions\n                                \n                                \n                                            Optional\n                                        hideAssetGroupSelect\n                                \n                                \n                                            Optional\n                                        keepPopOpen\n                                \n                                \n                                            Optional\n                                        levels\n                                \n                                \n                                            Optional\n                                        loader\n                                \n                                \n                                            Optional\n                                        methods\n                                \n                                \n                                            Optional\n                                        nestedPopActive\n                                \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        permissions\n                                \n                                \n                                            Optional\n                                        placeholder\n                                \n                                \n                                            Optional\n                                        pluralLabel\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        safeDelete\n                                \n                                \n                                            Optional\n                                        singularLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysLoadEntry\n                                    \n                                \n                                \n                                    \n                                        alwaysLoadEntry:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an entry is always loaded when opened, even with lvl1 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createLabel\n                                    \n                                \n                                \n                                    \n                                        createLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for the entry create button \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        customUpload\n                                    \n                                \n                                \n                                    \n                                        customUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a pop will open before upload to set up custom options \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        deleteOnRemove\n                                    \n                                \n                                \n                                    \n                                        deleteOnRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, selects will delete entries that are removed from the selection \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        develop\n                                    \n                                \n                                \n                                    \n                                        develop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, an extra develop button will be shown\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableCreatePop\n                                    \n                                \n                                \n                                    \n                                        disableCreatePop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no create pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableListPop\n                                    \n                                \n                                \n                                    \n                                        disableListPop:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no list pop will be available at selects \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be accessible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSelectSwitch\n                                    \n                                \n                                \n                                    \n                                        disableSelectSwitch:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select mode switch will be shown \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableUrlUpload\n                                    \n                                \n                                \n                                    \n                                        disableUrlUpload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, assets cannot be upload via url \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        dropdownFields\n                                    \n                                \n                                \n                                    \n                                        dropdownFields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The fields that are used in select dropdowns, defaults to label field only. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileOptions\n                                    \n                                \n                                \n                                    \n                                        fileOptions:     FileOptions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FileOptions\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Default options for file uploads \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideAssetGroupSelect\n                                    \n                                \n                                \n                                    \n                                        hideAssetGroupSelect:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Hides the assetGroup select in asset-list-pop \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        keepPopOpen\n                                    \n                                \n                                \n                                    \n                                        keepPopOpen:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the entry pop will remain open after the entry has been successfully saved. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        levels\n                                    \n                                \n                                \n                                    \n                                        levels:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external loader component that should be used, falls back to internal. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        methods\n                                    \n                                \n                                \n                                    \n                                        methods:     Array\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An Array of Methods that should be supported. Possible values are create, read, update and delete\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nestedPopActive\n                                    \n                                \n                                \n                                    \n                                        nestedPopActive:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, a nested pop will be active immediately \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     NotificationsComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     NotificationsComponent\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An external notifications component that should be used, falls back to internal \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        permissions\n                                    \n                                \n                                \n                                    \n                                        permissions:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    maps the permissions to the methods post put create delete \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        placeholder\n                                    \n                                \n                                \n                                    \n                                        placeholder:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Sets a placeholder. Used e.g. for empty entry-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pluralLabel\n                                    \n                                \n                                \n                                    \n                                        pluralLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for multiple entities \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Defines the column width of the pops used. Defaults to popService.defaultColumns \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        safeDelete\n                                    \n                                \n                                \n                                    \n                                        safeDelete:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, delete operations need confirmation \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        singularLabel\n                                    \n                                \n                                \n                                    \n                                        singularLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label for one entity \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ListConfig, FieldConfig } from '@ec.components/core';\nimport { NotificationsComponent, LoaderComponent } from '@ec.components/ui';\nimport { FileOptions } from '../files/file.service';\n\n/** The CrudConfig allows a quick customization of an ec-crud component. */\nexport interface CrudConfig extends ListConfig {\n  /** The fields that are used in select dropdowns, defaults to label field only. */\n  dropdownFields?: FieldConfig;\n  /** The label for one entity */\n  singularLabel?: string;\n  /** The label for multiple entities */\n  pluralLabel?: string;\n  /** The label for the entry create button */\n  createLabel?: string;\n  /** An Array of Methods that should be supported. Possible values are create, read, update and delete*/\n  methods?: Array;\n  /** An external loader component that should be used, falls back to internal. */\n  loader?: LoaderComponent;\n  /** An external notifications component that should be used, falls back to internal */\n  notifications?: NotificationsComponent;\n  /** If true, an extra develop button will be shown*/\n  develop?: boolean;\n  /** If true, the entry pop will remain open after the entry has been successfully saved. */\n  keepPopOpen?: boolean;\n  /** With how many levels should a list entry be loaded? Defaults to 1 (taking entry directly from the list, without loading)*/\n  levels?: number;\n  /** If true, an entry is always loaded when opened, even with lvl1 */\n  alwaysLoadEntry?: boolean;\n  /** maps the permissions to the methods post put create delete */\n  permissions?: { put?: string | boolean, post?: string | boolean, get?: string | boolean, delete?: string | boolean };\n  /** If true, no select mode switch will be shown */\n  disableSelectSwitch?: boolean;\n  /** If true, no list pop will be available at selects */\n  disableListPop?: boolean;\n  /** If true, assets cannot be upload via url */\n  disableUrlUpload?: boolean;\n  /** If true, no create pop will be available at selects */\n  disableCreatePop?: boolean;\n  /** If true, no dropdown will be accessible */\n  disableSearchbar?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, selects will delete entries that are removed from the selection */\n  deleteOnRemove?: boolean;\n  /** If true, delete operations need confirmation */\n  safeDelete?: boolean;\n  /** Hides the assetGroup select in asset-list-pop */\n  hideAssetGroupSelect?: boolean;\n  /** Default options for file uploads */\n  fileOptions?: FileOptions;\n  /** If true, a pop will open before upload to set up custom options */\n  customUpload?: boolean;\n  /** Defines the column width of the pops used. Defaults to popService.defaultColumns */\n  popColumns?: number;\n  /** If true, a nested pop will be active immediately */\n  nestedPopActive?: boolean;\n  /** Sets a placeholder. Used e.g. for empty entry-select */\n  placeholder?: string;\n\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DataModule.html":{"url":"modules/DataModule.html","title":"module - DataModule","body":"\n                   \n\n\n\n\n    Modules\n    DataModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\n\n\nAuthModule\n\nAuthModule\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/data.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AdminEntryInputComponent\n                        \n                        \n                            DefaultEntryInputComponent\n                        \n                        \n                            DefaultEntryOutputComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            EntryService\n                        \n                        \n                            HistoryService\n                        \n                        \n                            ModelConfigService\n                        \n                        \n                            TypeConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CrudComponent\n                        \n                        \n                            EntriesDirective\n                        \n                        \n                            EntryDirective\n                        \n                        \n                            EntryFormComponent\n                        \n                        \n                            EntryListComponent\n                        \n                        \n                            EntryListPopComponent\n                        \n                        \n                            EntryListSelectComponent\n                        \n                        \n                            EntryPopComponent\n                        \n                        \n                            EntrySelectComponent\n                        \n                        \n                            FilesModule\n                        \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forEnvironment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forEnvironment(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/data.module.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { ModuleWithProviders, NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { UiModule } from '@ec.components/ui';\nimport { DndModule } from 'ngx-drag-drop';\nimport { AuthModule } from './auth/auth.module';\nimport { CrudComponent } from './crud/crud.component';\nimport { EntryService } from './entry/entry.service';\nimport { EntriesDirective } from './entries/entries.directive';\nimport { AdminEntryInputComponent } from './entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from './entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from './entry-form/default-entry-output.component';\nimport { EntryFormComponent } from './entry-form/entry-form.component';\nimport { EntryListPopComponent } from './entry-list-pop/entry-list-pop.component';\nimport { EntryListComponent } from './entry-list/entry-list.component';\nimport { EntryPopComponent } from './entry-pop/entry-pop.component';\nimport { EntrySelectComponent } from './entry-select/entry-select.component';\nimport { EntryDirective } from './entry/entry.directive';\nimport { FilesModule } from './files/files.module';\nimport { ModelConfigService } from './model-config/model-config.service';\nimport { TypeConfigService } from './model-config/type-config.service';\nimport { ResourceModule } from './resource/resource.module';\nimport { HistoryService } from './sdk/history.service';\nimport { SdkModule } from './sdk/sdk.module';\nimport { EntryListSelectComponent } from './entry-list-select/entry-list-select.component';\n\nexport const dataModuleConfig = {\n  entryComponents: [\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n  ],\n  declarations: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    DefaultEntryInputComponent,\n    DefaultEntryOutputComponent,\n    AdminEntryInputComponent,\n    EntryListSelectComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListPopComponent,\n  ],\n  imports: [\n    FormsModule,\n    CommonModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule,\n    DndModule\n  ],\n  exports: [\n    EntryListComponent,\n    EntryDirective,\n    EntriesDirective,\n    EntryFormComponent,\n    EntryPopComponent,\n    CrudComponent,\n    EntrySelectComponent,\n    EntryListSelectComponent,\n    EntryListPopComponent,\n    RouterModule,\n    UiModule,\n    SdkModule,\n    FilesModule,\n    AuthModule,\n    ResourceModule\n  ],\n  providers: [\n    EntryService,\n    TypeConfigService,\n    ModelConfigService,\n    HistoryService,\n    {\n      provide: 'environment',\n      useValue: {\n        environment: 'live',\n        datamanagerID: '83cc6374'\n      }\n    }\n  ]\n};\n\n@NgModule(dataModuleConfig)\nexport class DataModule {\n  static forEnvironment(environment): ModuleWithProviders {\n    return {\n      ngModule: DataModule,\n      providers: [\n        {\n          provide: 'environment',\n          useValue: Object.assign(\n            {\n              environment: 'live'\n            },\n            environment\n          )\n        }\n      ]\n    };\n  }\n  constructor() { }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DatetimeComponent.html":{"url":"components/DatetimeComponent.html","title":"component - DatetimeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DatetimeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/datetime/datetime.component.ts\n\n\n    \n        Description\n    \n    \n        Input for a datetime.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => DatetimeComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-datetime\n            \n\n\n\n\n            \n                templateUrl\n                datetime.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                calendar\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                weekdays\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                date\n                            \n                            \n                                disableTime\n                            \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        date\n                    \n                \n                \n                    \n                        Type :     moment.Moment\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:24\n                            \n                        \n                \n                    \n                        The date that should be displayed at start. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        disableTime\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:32\n                            \n                        \n                \n                    \n                        If true, the time will not be displayed nor will be editable. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                \n                    \n                        Default value : new FormControl()\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:26\n                            \n                        \n                \n                    \n                        The form control that holds the date \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:34\n                            \n                        \n                \n                    \n                        The input's placeholder \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:46\n                            \n                        \n\n\n                \n                    \n                            registerOnChange implementation of ControlValueAccessor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            registerOnTouched implementation of ControlValueAccessor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: Date)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Selects the given Date when the model changes. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            calendar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CalendarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(CalendarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:28\n                            \n                        \n\n                \n                    \n                        The used calendar component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:42\n                            \n                        \n\n                \n                    \n                        Change propagation for ControlValueAccessor \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            weekdays\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/datetime/datetime.component.ts:30\n                            \n                        \n\n                \n                    \n                        Array of the days of a week. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input, ViewChild } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport moment from 'moment-es6';\nimport { CalendarComponent } from '@ec.components/calendar';\n\n/** Input for a datetime.\n *\n * https://components.entrecode.de/ui/datetime?e=1\n *\n*/\n@Component({\n  selector: 'ec-datetime',\n  templateUrl: 'datetime.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => DatetimeComponent),\n      multi: true\n    }\n  ]\n})\nexport class DatetimeComponent implements ControlValueAccessor {\n  /** The date that should be displayed at start. */\n  @Input() date: moment.Moment;\n  /** The form control that holds the date */\n  @Input() formControl: FormControl = new FormControl();\n  /** The used calendar component */\n  @ViewChild(CalendarComponent) calendar: CalendarComponent;\n  /** Array of the days of a week. */\n  public weekdays: string[];\n  /** If true, the time will not be displayed nor will be editable. */\n  @Input() disableTime: boolean;\n  /** The input's placeholder */\n  @Input() placeholder = '';\n\n  /** Selects the given Date when the model changes. */\n  writeValue(value: Date) {\n    this.calendar.writeValue(value);\n  }\n\n  /** Change propagation for ControlValueAccessor */\n  propagateChange = (_: any) => {\n  }\n\n  /** registerOnChange implementation of ControlValueAccessor */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  /** registerOnTouched implementation of ControlValueAccessor */\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n        \n        \n            \n                \n            \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DatetimeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/DatetimePipe.html":{"url":"pipes/DatetimePipe.html","title":"pipe - DatetimePipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  DatetimePipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/calendar/src/lib/datetime.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        datetime\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(value: Date | string, pattern: string | string[], raw?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/calendar/src/lib/datetime.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Date | string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        pattern\n                                                        \n                                                                    string | string[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.dateFormat\n                                                        \n\n                                                \n                                                \n                                                        raw\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform, Inject } from '@angular/core';\nimport moment from 'moment-es6';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'datetime'\n})\nexport class DatetimePipe implements PipeTransform {\n  constructor(@Inject('moment.format.date') private dateFormat/* private symbol: SymbolService */) { }\n  transform(\n    value: Date | string,\n    pattern: string | string[] = this.dateFormat/* this.symbol.resolve('moment.format.date') */,\n    raw?: string\n  ): string {\n    if (!value) {\n      return '';\n    }\n    if (raw) {\n      console.log('raw', raw);\n    }\n    const typed = moment(value, pattern, true);\n    if (!typed.isValid()) {\n      return '';\n    }\n    if (Array.isArray(pattern)) {\n      pattern = pattern[0];\n    }\n    return moment(value).format(pattern);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Day.html":{"url":"interfaces/Day.html","title":"interface - Day","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Day\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/calendar/src/lib/calendar/month.component.ts\n        \n\n            \n                Description\n            \n            \n                Interface for a day inside the a month.\nhttps://components.entrecode.de/ui/datetime?e=1\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        date\n                                \n                                \n                                        draggable\n                                \n                                \n                                        first\n                                \n                                \n                                        format\n                                \n                                \n                                            Optional\n                                        heat\n                                \n                                \n                                        index\n                                \n                                \n                                        last\n                                \n                                \n                                        today\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        date\n                                    \n                                \n                                \n                                    \n                                        date:     moment.Moment\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     moment.Moment\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The moment that is represented by the day. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        draggable\n                                    \n                                \n                                \n                                    \n                                        draggable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    determines if the day can be dragged to change the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        first\n                                    \n                                \n                                \n                                    \n                                        first:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the first in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        format\n                                    \n                                \n                                \n                                    \n                                        format:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The formatted day number. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        heat\n                                    \n                                \n                                \n                                    \n                                        heat:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    custom class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        index\n                                    \n                                \n                                \n                                    \n                                        index:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The cell index \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        last\n                                    \n                                \n                                \n                                    \n                                        last:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    if the day is the last in the timespan \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        today\n                                    \n                                \n                                \n                                    \n                                        today:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Flag that is true if the day is today. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Can be given a type, to set a class. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, EventEmitter, Input, OnChanges, OnInit, Output, Inject } from '@angular/core';\n/* import { SymbolService } from '../../symbol/symbol.service'; */\nimport moment from 'moment-es6';\nimport { debounceTime } from 'rxjs/operators';\nimport { Subject } from 'rxjs';\n\n/** Interface for a day inside the a month.\n * https://components.entrecode.de/ui/datetime?e=1\n * */\nexport interface Day {\n  /** The cell index */\n  index: number;\n  /** The moment that is represented by the day. */\n  date: moment.Moment;\n  /** Can be given a type, to set a class. */\n  type?: string;\n  /** The formatted day number. */\n  format: string;\n  /** Flag that is true if the day is today. */\n  today: boolean;\n  /** if the day is the first in the timespan */\n  first: boolean;\n  /** if the day is the last in the timespan */\n  last: boolean;\n  /** determines if the day can be dragged to change the timespan */\n  draggable: boolean;\n  /** custom class */\n  heat?: string;\n}\n\n/** Displays the days of a month in a calendarish table. */\n@Component({\n  selector: 'ec-month',\n  templateUrl: 'month.component.html'\n})\nexport class MonthComponent implements OnInit, OnChanges {\n  dragged: any;\n  /** The current selected date */\n  @Input() selected: moment.Moment;\n  /** Color mapping for day cells. E.g. to view a month heatmap */\n  @Input() colors: Object;\n  /** Class mapping for day cells. E.g. to apply different background classes */\n  @Input() heatmap: Object;\n  /** Timespan that is reflected. Marks days inside the span */\n  @Input() timespan: moment.Moment[];\n  /** The current date (for showing month) */\n  @Input() date: moment.Moment;\n  /** The color of days that are inside the timespan */\n  @Input() spancolor = '#ccc';\n  /** If true, the timespan start cannot be dragged */\n  @Input() disableDragStart = false;\n  /** If true, the timespan end cannot be dragged */\n  @Input() disableDragEnd = false;\n  /** The current month as string */\n  public formatted: string;\n  /** The cells containing the days */\n  public cells: Array;\n  /** Format for month in header */\n  public monthFormat = 'MMMM YYYY';\n  /** Emits when the selected day changes. */\n  @Output() dayClicked: EventEmitter = new EventEmitter();\n  /** Changed Timespan selection */\n  @Output() spanChanged: EventEmitter = new EventEmitter();\n\n  protected drag: Subject = new Subject();\n  protected changeSpan: Subject = new Subject();\n\n  constructor(\n    @Inject('moment.format.month') protected defaultMonthFormat\n    /* public symbol: SymbolService */\n  ) {\n    /* this.monthFormat = this.symbol.resolve('moment.format.month') || this.monthFormat; */\n    this.monthFormat = this.defaultMonthFormat || this.monthFormat;\n    this.drag.asObservable()\n      .pipe(debounceTime(100))\n      .subscribe((day) => this.dropDay(day));\n    this.changeSpan.asObservable().pipe(debounceTime(800))\n      .subscribe(timespan => this.spanChanged.emit(this.timespan));\n  }\n\n  dropDay(day: Day) {\n    if (!this.dragged || (day.first && this.dragged.first || day.last && this.dragged.last)) {\n      return;\n    }\n    const newTimespan = [].concat(this.timespan);\n    newTimespan[this.dragged.first ? 0 : 1] = day.date.clone();\n    if (newTimespan[0].isAfter(newTimespan[1])) {\n      this.dragged.first = !this.dragged.first;\n      this.dragged.last = !this.dragged.last;\n      newTimespan.reverse();\n    }\n    this.timespan = newTimespan;\n    this.changeSpan.next(this.timespan);\n    /* if (this.cells[0] === day || this.cells[this.cells.length - 1] === day) {\n      // change month if dragging to edge\n      this.setDate(day.date.clone().subtract(1, 'days'));\n    } else {\n      this.setDate();\n    } */\n    this.setDate();\n  }\n\n  dragStart(day, e) {\n    if ((this.disableDragStart && day.first) || (this.disableDragEnd && day.last)) {\n      return;\n    }\n    this.dragged = day;\n    e.preventDefault();\n  }\n\n  mouseUp(day, e) {\n    if (!this.dragged) {\n      return;\n    }\n    delete this.dragged;\n    e.preventDefault();\n  }\n\n  mouseOver(day, e) {\n    if (!this.dragged || this.dragged === day) {\n      return;\n    }\n    e.preventDefault();\n    this.drag.next(day);\n  }\n\n  getDayColor(_moment: moment.Moment) {\n    if (this.colors && this.colors[_moment.toISOString()]) {\n      return this.colors[_moment.toISOString()];\n    }\n  }\n\n  getDayHeat(_moment: moment.Moment) {\n    if (this.heatmap && this.heatmap[_moment.toISOString()]) {\n      return this.heatmap[_moment.toISOString()];\n    }\n  }\n\n  /** Initializes the calendar. */\n  ngOnInit() {\n    this.setDate();\n  }\n\n  /** When changing the date or selected input, the calendar will update its view to display the month containing it. */\n  ngOnChanges(change) {\n    if (change.selected) {\n      this.setDate(this.selected);\n      return;\n    } else if (change.date) {\n      this.setDate(this.date);\n    } else if (change.timespan) {\n      this.setDate();\n    } if (change.colors || change.heatmap) {\n      this.cells = this.getMonth(this.date.clone(), 'current');\n    }\n  }\n\n  /** Returns days of current month */\n  getMonth(day = moment(), type?: string): Array {\n    const begin = day.clone().startOf('month').startOf('week'); // .subtract(weeksbefore * 7, 'days');\n    return new Array(42)\n      .fill(0)\n      .map((d, index) => begin.clone().add(index, 'days'))\n      .map((date, index) => {\n        const isStart = this.timespan && date.clone().startOf('day').isSame(this.timespan[0].clone().startOf('day'));\n        const isEnd = this.timespan && date.clone().startOf('day').isSame(this.timespan[1].clone().startOf('day'));\n        return {\n          index,\n          date,\n          type: date.format('MM YYYY') === day.format('MM YYYY') ? 'current' : 'other',\n          active: this.timespan && date.isBetween(this.timespan[0], this.timespan[1], 'days', '[]'),\n          first: isStart,\n          last: isEnd,\n          draggable: (!this.disableDragStart && isStart) || (!this.disableDragEnd && isEnd),\n          color: this.getDayColor(date),\n          heat: this.getDayHeat(date),\n          format: date.format('DD'),\n          today: moment().startOf('day').diff(date, 'days') === 0,\n        };\n      });\n  }\n\n\n  /** Sets the calendars viewed date to the given moment's month. Renders always 42 cells to keep the layout consistent. */\n  setDate(date: moment.Moment = this.selected || this.date || moment()) {\n    this.date = date.clone();\n    this.formatted = date.format(this.monthFormat);\n    this.cells = this.getMonth(date.clone(), 'current');\n  }\n\n  /** Selects the day of the given moment. */\n  selectDay(_moment: moment.Moment, emit = true): void {\n    this.setDate(_moment);\n    this.selected = _moment;\n    if (emit) {\n      this.dayClicked.emit(_moment);\n    }\n  }\n\n  /** Clears the current selected date*/\n  clearSelection(): void {\n    delete this.selected;\n  }\n\n  /** Returns true if the given moment is currently selected (on a day basis) */\n  isSelected(_moment: moment.Moment): boolean {\n    if (!this.selected) {\n      return;\n    }\n    return this.selected.startOf('day').diff(_moment, 'days') === 0;\n  }\n\n  canAlter(value, span: string) {\n    if (!this.timespan) {\n      return true;\n    }\n    const newDate = this.date.clone().add(value, span);\n    return newDate.isBetween(this.timespan[0], this.timespan[1], 'months', '[]');\n  }\n\n  /** Updates the viewed date to reflect the given relative changes. */\n  alter(value, span: string): void {\n    if (!this.canAlter(value, span)) {\n      return;\n    }\n    this.setDate(this.date.clone().add(value, span));\n  }\n\n  /** Sets the current viewed date to today. */\n  today(): void {\n    this.setDate(moment());\n  }\n\n  /** Sets the current selected date to today. */\n  setToday(): void {\n    this.selectDay(moment());\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryInputComponent.html":{"url":"components/DefaultEntryInputComponent.html","title":"component - DefaultEntryInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the input templates for all field types that can not be represented by the default input template. \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-entry-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-input.component.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:19\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:21\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { DefaultInputComponent, FormService } from '@ec.components/ui';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** This component holds the input templates for all field types that can not be represented by the default input template. */\n@Component({\n  templateUrl: './default-entry-input.component.html',\n})\nexport class DefaultEntryInputComponent extends DefaultInputComponent {\n  constructor(public sdk: SdkService, public formService: FormService) {\n    super(formService);\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n  \n  \n    \n  \n  \n    \n    \n    \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n    \n    \n  \n  \n    \n  \n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} input coming soon..\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                      🚂🚃🚃🚃 {{field.type}} input coming soon..      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultEntryOutputComponent.html":{"url":"components/DefaultEntryOutputComponent.html","title":"component - DefaultEntryOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultEntryOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-form/default-entry-output.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all output types that cannot be represented by the default output component. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-entry-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-entry-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field to output. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-form/default-entry-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item to display \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** This component holds the templates for all output types that cannot be represented by the default output component. */\n@Component({\n  selector: 'ec-default-entry-output',\n  templateUrl: './default-entry-output.component.html',\n})\nexport class DefaultEntryOutputComponent {\n  /** The field to output. */\n  field: Field;\n  /** The item to display */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n    JSON\n  \n  \n    &#x1F682;&#x1F683;&#x1F683;&#x1F683; {{field.type}} output coming soon!-->\n    {{item?.display(field.property)}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          JSON        🚂🚃🚃🚃 {{field.type}} output coming soon!-->    {{item?.display(field.property)}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultEntryOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultInputComponent.html":{"url":"components/DefaultInputComponent.html","title":"component - DefaultInputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultInputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-input/default-input.component.ts\n\n\n    \n        Description\n    \n    \n        This component holds the templates for all basic field types. \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                Focus\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./default-input.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:21\n                            \n                        \n\n                \n                    \n                            Injects the services. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:19\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:13\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:21\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:17\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-input/default-input.component.ts:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, AfterViewInit, OnChanges } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { Field, Item } from '@ec.components/core';\nimport { Focus } from '../../utility/focus/focus.interface';\nimport { FormService } from '../form.service';\n\n/** This component holds the templates for all basic field types. */\n@Component({\n  templateUrl: './default-input.component.html',\n})\nexport class DefaultInputComponent implements AfterViewInit, Focus {\n  /** The field for which the input is meant. */\n  public field: Field;\n  /** The item that is targeted by the input */\n  public item: Item;\n  /** The form group that is used */\n  public group: FormGroup;\n  /** The form control that is used */\n  public control: FormControl;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  /** Injects the services. */\n  constructor(public formService: FormService) {}\n\n  ngAfterViewInit() {\n    if (this.field && this.field.autofocus) {\n      this.focus();\n    }\n  }\n\n  focus(focus = true) {\n    setTimeout(() => {\n      this.focusEvent.emit(focus);\n    }, 100);\n  }\n}\n\n    \n\n    \n        \n  \n\n  \n\n  \n\n  \n    \n      \n    \n  \n\n  \n    \n    {{field.placeholder}}\n  \n\n  \n\n  \n\n  \n  \n\n  \n\n  \n    \n      {{field.getPlaceholder()}}\n      \n        {{option.label?option.label:option}}\n      \n    \n    \n  \n\n  \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                  {{field.placeholder}}                        {{field.getPlaceholder()}}              {{option.label?option.label:option}}                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultInputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DefaultOutputComponent.html":{"url":"components/DefaultOutputComponent.html","title":"component - DefaultOutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DefaultOutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/default-output/default-output.component.ts\n\n\n    \n        Description\n    \n    \n        Holds the templates to output item field values. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-default-output\n            \n\n\n\n\n            \n                templateUrl\n                ./default-output.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:11\n                            \n                        \n\n                \n                    \n                        The field that should be displayed \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/default-output/default-output.component.ts:13\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Field, Item } from '@ec.components/core';\n\n/** Holds the templates to output item field values. */\n@Component({\n  selector: 'ec-default-output',\n  templateUrl: './default-output.component.html',\n})\nexport class DefaultOutputComponent {\n  /** The field that should be displayed */\n  field: Field;\n  /** The item that is targeted by the input */\n  item: Item;\n}\n\n    \n\n    \n        \n  \n    \n      {{label}}\n    \n    (field.maxItems||10)\">\n      &hellip;\n    \n  \n\n  {{item?.display(field.property)}}\n\n  \n    &#10004;\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    {{item?.display(field.property)}}\n  \n  \n    {{item?.display(field.property)}}\n  \n\n  \n    \n    {{item?.display(field.property)}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n    {{item?.resolve(field.property)?.length}}\n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    \n  \n\n  \n    {{item?.display(field.property)}}\n    \n  \n\n  \n    \n    text\n  \n  \n    {{item?.display(field.property)}}-->\n    JSON\n  \n  \n    {{item?.display(field.property)}}\n    \n  \n  \n    {{item?.display(field.property)}}\n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{label}}        (field.maxItems||10)\">      …        {{item?.display(field.property)}}      ✔        {{item?.display(field.property)}}        {{item?.display(field.property)}}        {{item?.display(field.property)}}            {{item?.display(field.property)}}                    {{item?.resolve(field.property)?.length}}                    {{item?.resolve(field.property)?.length}}                                {{item?.display(field.property)}}                text        {{item?.display(field.property)}}-->    JSON        {{item?.display(field.property)}}            {{item?.display(field.property)}}      '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DefaultOutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/DropzoneDirective.html":{"url":"directives/DropzoneDirective.html","title":"directive - DropzoneDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  DropzoneDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/dropzone/dropzone.directive.ts\n        \n\n            \n                Description\n            \n            \n                Directive that turns any element into a zone to drop files. TODO: demo \n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecDropzone]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                disabled\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecDropzone\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class.is-active\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                dragleave\n                            \n                            \n                                dragover\n                            \n                            \n                                drop\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:46\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        disabled\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:11\n                            \n                        \n                \n                    \n                        If true the element acts normal \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        ecDropzone\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:9\n                            \n                        \n                \n                    \n                        Emits when files are dropped \n\n                    \n                \n            \n        \n\n            \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class.is-active\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:7\n                            \n                        \n\n                \n                    \n                        The is-active class is bound to the host when dragover is active \n\n                    \n                \n\n            \n        \n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            dragleave\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragleave(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:37\n                            \n                        \n\n\n                \n                    \n                            flips active to false on dragleave \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dragover\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndragover(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:13\n                            \n                        \n\n\n                \n                    \n                            flips active to true on dragover \n\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            drop\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndrop(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/dropzone/dropzone.directive.ts:24\n                            \n                        \n\n\n                \n                    \n                            emits dropped files and flips active to false on drop \n\n\n                    \n                \n            \n        \n\n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, HostBinding, HostListener, Input, Output } from '@angular/core';\n\n/** Directive that turns any element into a zone to drop files. TODO: demo */\n@Directive({ selector: '[ecDropzone]' })\nexport class DropzoneDirective {\n    /** The is-active class is bound to the host when dragover is active */\n    @HostBinding('class.is-active') public active: boolean;\n    /** Emits when files are dropped */\n    @Output() ecDropzone: EventEmitter = new EventEmitter();\n    /** If true the element acts normal */\n    @Input() disabled = false;\n    /** flips active to true on dragover */\n    @HostListener('dragover', ['$event']) onDragOver(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!this.active) {\n            this.active = true;\n        }\n    }\n    /** emits dropped files and flips active to false on drop */\n    @HostListener('drop', ['$event']) onDrop(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (!e.dataTransfer.files || !e.dataTransfer.files.length) {\n            return;\n        }\n        this.ecDropzone.emit(e);\n        this.active = false;\n    }\n    /** flips active to false on dragleave */\n    @HostListener('dragleave', ['$event']) onDragLeave(e) {\n        if (this.disabled) {\n            return;\n        }\n        e.preventDefault();\n        e.stopPropagation();\n        if (this.active) {\n            this.active = false;\n        }\n    }\n    constructor(private el: ElementRef) {\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicRackComponent.html":{"url":"components/DynamicRackComponent.html","title":"component - DynamicRackComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicRackComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                ./dynamic-rack.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver } from '@angular/core';\n\n// import { CustomFieldComponent } from './custom-field.component';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  // selector: 'ec-dynamic-rack',\n  templateUrl: './dynamic-rack.component.html'\n})\nexport class DynamicRackComponent {\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(private componentFactoryResolver: ComponentFactoryResolver) {\n  }\n}\n\n    \n\n    \n        \n  \n    -->\n    -->\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->    -->  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicRackComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DynamicSlotComponent.html":{"url":"components/DynamicSlotComponent.html","title":"component - DynamicSlotComponent","body":"\n                   \n\n\n\n\n\n  Components\n  DynamicSlotComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-dynamic-slot\n            \n\n\n\n\n            \n                templateUrl\n                ./dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(componentFactoryResolver: ComponentFactoryResolver)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor provides the instance of ViewContainerRef which is later used to create embedded views\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        componentFactoryResolver\n                                                  \n                                                        \n                                                                    ComponentFactoryResolver\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ComponentFactoryResolver, ComponentRef, Type, ViewChild } from '@angular/core';\nimport { SlotHostDirective } from '../slot-host.directive';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-dynamic-slot',\n  templateUrl: './dynamic-slot.component.html'\n})\nexport class DynamicSlotComponent {\n  /** The FieldHostDirective will  be used to nest custom components into the field */\n  @ViewChild(SlotHostDirective) fieldHost: SlotHostDirective;\n\n  /** The constructor provides the instance of ViewContainerRef which is later used to create embedded views*/\n  constructor(public componentFactoryResolver: ComponentFactoryResolver) {\n  }\n\n  /** Loads the given component inside the fieldHost. Sets current item and field by default. */\n  loadComponent(component: Type, attributes: Object = {}): ComponentRef {\n    const componentFactory = this.componentFactoryResolver.resolveComponentFactory(component);\n    const viewContainerRef = this.fieldHost.viewContainerRef;\n    viewContainerRef.clear();\n    const componentRef = viewContainerRef.createComponent(componentFactory);\n    Object.assign(componentRef.instance, attributes);\n    return componentRef;\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'DynamicSlotComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntriesDirective.html":{"url":"directives/EntriesDirective.html","title":"directive - EntriesDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntriesDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entries/entries.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entryList of a given model with the given config.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntries]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                entryList\n                            \n                            \n                                    Public\n                                items\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Private\n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                entries\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                load\n                            \n                            \n                                next\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                prev\n                            \n                            \n                                useList\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                endless\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                            \n                                options\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:30\n                            \n                        \n                \n                    \n                        Should the entries be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        endless\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:28\n                            \n                        \n                \n                    \n                        If true, calling next will append the next page to the items, making the list grow.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:32\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:24\n                            \n                        \n                \n                    \n                        The model to load from. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:26\n                            \n                        \n                \n                    \n                        The filterOptions for loading. \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entries\n                            \n                            \n                        \n                    \n                \n                \n                    \nentries()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:108\n                            \n                        \n\n\n                \n                    \n                            This helper returns all items of the current entryList. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:100\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:96\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:58\n                            \n                        \n\n\n                \n                    \n                            Loads the entries \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:45\n                            \n                        \n\n\n                \n                    \n                            When the model is known, the entryList will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:89\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useList\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseList(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:71\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            entryList\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryList\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:34\n                            \n                        \n\n                \n                    \n                        The current loaded entryList \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            items\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EntryResource[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:41\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:22\n                            \n                        \n\n                \n                    \n                        The promise of the entryList call. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entries/entries.directive.ts:40\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entries\nThis component can be used to load a list of entries from the template:\n\n  \n  {{muffin.name}}\n  \n\n    \n\n    \n        import { Directive, Input, OnChanges } from '@angular/core';\nimport { LoaderComponent, WithLoader, NotificationsService } from '@ec.components/ui';\nimport EntryList from 'ec.sdk/lib/resources/publicAPI/EntryList';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { SymbolService } from '@ec.components/ui';\n\n// import { filterOptions } from 'ec.sdk/lib/resources/ListResource';\n\n/** Loads an entryList of a given model with the given config.\n * https://components.entrecode.de/entries/entries?e=1\n*/\n@Directive({\n  selector: '[ecEntries]',\n  exportAs: 'ecEntries'\n})\nexport class EntriesDirective implements OnChanges, WithLoader {\n  /** The promise of the entryList call. */\n  private promise: any;\n  /** The model to load from. */\n  @Input() model: string;\n  /** The filterOptions for loading. */\n  @Input() options: any = {}; // TODO cannot import #simibug : filterOptions;\n  /** If true, calling next will append the next page to the items, making the list grow.*/\n  @Input() endless = false;\n  /** Should the entries be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entryList */\n  private entryList: EntryList;\n  public items: EntryResource[] = [];\n\n  /** Injects sdk */\n  constructor(\n    private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService) {\n  }\n\n  /** When the model is known, the entryList will be loaded. */\n  ngOnChanges() {\n    if (!this.model) {\n      return;\n    }\n    if (this.endless && this.options.page && this.options.page > 1) {\n      console.warn('cannot init ecEntries on page!==1 with strategy=endless');\n    }\n    if (this.autoload !== false) {\n      this.load();\n    }\n  }\n\n  /** Loads the entries */\n  load() {\n    this.promise = this.sdk.api.entryList(this.model, this.options)\n      .then(list => this.useList(list))\n      .catch(error => this.notificationService.emit({\n        title: this.symbol.resolve('entries.load.error'),\n        error\n      }));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n\n  useList(entryList) {\n    this.entryList = entryList;\n    const items = this.entryList.getAllItems();\n    if (this.endless) {\n      this.items = this.items.concat(items);\n      this.items = this.items.filter((item) => this.items.find((_item) => _item.id === item.id));\n    } else {\n      this.items = this.entryList.getAllItems();\n    }\n  }\n\n  next() {\n    this.promise = this.entryList.followNextLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  prev() {\n    this.promise = this.entryList.followPrevLink().then(list => this.useList(list));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n  }\n\n  isLast() {\n    return !this.entryList || !this.entryList.hasNextLink();\n  }\n\n  isFirst() {\n    if (this.endless) {\n      return true;\n    }\n    return !this.entryList || !this.entryList.hasFirstLink();\n  }\n\n  /** This helper returns all items of the current entryList. */\n  entries() {\n    if (!this.entryList) {\n      return [];\n    }\n    return this.entryList.getAllItems();\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/EntryDirective.html":{"url":"directives/EntryDirective.html","title":"directive - EntryDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  EntryDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an entry by id to the template.\nhttps://components.entrecode.de/entries/entries?e=1\n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n                        WithLoader\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecEntry]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                entry\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promise\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoload\n                            \n                            \n                                entryId\n                            \n                            \n                                levels\n                            \n                            \n                                loader\n                            \n                            \n                                model\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                loaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, symbol: SymbolService, notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                            Injects the sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoload\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:25\n                            \n                        \n                \n                    \n                        Should the entry be loaded immediately? Defaults to true \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        entryId\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:21\n                            \n                        \n                \n                    \n                        The entry id that should be loaded\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        levels\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:27\n                            \n                        \n                \n                    \n                        The levels to use. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:31\n                            \n                        \n                \n                    \n                        The loader that should be used. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:23\n                            \n                        \n                \n                    \n                        The model to load from \n\n                    \n                \n            \n        \n\n            \n    Outputs\n        \n            \n                \n                    \n                        \n                        loaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:29\n                            \n                        \n                \n                    \n                        Fires as soon as the entry has been loaded. \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:50\n                            \n                        \n\n\n                \n                    \n                            Loads the entry. Can be called from template when using autoload=false \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:42\n                            \n                        \n\n\n                \n                    \n                            as soon as model and id are known, the entry will be loaded. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            entry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:33\n                            \n                        \n\n                \n                    \n                        The current loaded entry \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:19\n                            \n                        \n\n                \n                    \n                        The loading promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.directive.ts:37\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n    \n        ec-entry\nThis directive can be used to load a single entry directly from the template:\n\n{{muffin.entry?.name}}\n    \n\n    \n        import { Directive, EventEmitter, Input, OnChanges, Output } from '@angular/core';\nimport { SdkService } from '../sdk/sdk.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { WithLoader, LoaderComponent, NotificationsService } from '@ec.components/ui';\nimport { SymbolService } from '@ec.components/ui';\n\n/** Loads an entry by id to the template.\n * https://components.entrecode.de/entries/entries?e=1\n * */\n@Directive({\n  selector: '[ecEntry]',\n  exportAs: 'ecEntry'\n})\nexport class EntryDirective implements OnChanges, WithLoader {\n  /** The loading promise */\n  promise: any;\n  /** The entry id that should be loaded*/\n  @Input() entryId: string;\n  /** The model to load from */\n  @Input() model: string;\n  /** Should the entry be loaded immediately? Defaults to true */\n  @Input() autoload: boolean;\n  /** The levels to use. */\n  @Input() levels: number;\n  /** Fires as soon as the entry has been loaded. */\n  @Output() loaded: EventEmitter = new EventEmitter();\n  /** The loader that should be used. */\n  @Input() loader: LoaderComponent;\n  /** The current loaded entry */\n  entry: any;\n\n  /** Injects the sdk */\n  constructor(private sdk: SdkService,\n    public symbol: SymbolService,\n    public notificationService: NotificationsService) {\n  }\n\n  /** as soon as model and id are known, the entry will be loaded. */\n  ngOnChanges() {\n    if (this.autoload === false) {\n      return;\n    }\n    this.load();\n  }\n\n  /** Loads the entry. Can be called from template when using autoload=false */\n  load() {\n    if (!this.entryId || !this.model) {\n      return;\n    }\n    this.promise = this.sdk.api.entry(this.model, this.entryId, this.levels)\n      .then((entry) => {\n        this.entry = entry;\n        this.loaded.emit(entry);\n        return entry;\n      })\n      .catch(error =>\n        this.notificationService.emit({\n          title: this.symbol.resolve('entry.load.error'),\n          error\n        }));\n    if (this.loader) {\n      this.loader.wait(this.promise);\n    }\n    return this.promise;\n  }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/EntryListPopComponent.html":{"url":"components/EntryListPopComponent.html","title":"component - EntryListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  EntryListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop that contains an entry list. TODO: add demo \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-entry-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./entry-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                modelConfig\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHeader\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                model\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(modelConfig: ModelConfigService, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:22\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        modelConfig\n                                                  \n                                                        \n                                                                    ModelConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:21\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetHeader(entryList)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:50\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryList\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:92\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:76\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            modelConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ModelConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnChanges, Output, ViewChild } from '@angular/core';\nimport { Item, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ModelConfigService } from '../model-config/model-config.service';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\n\n/** A Pop that contains an entry list. TODO: add demo */\n@Component({\n    selector: 'ec-entry-list-pop',\n    templateUrl: './entry-list-pop.component.html',\n\n})\nexport class EntryListPopComponent extends PopComponent implements OnChanges {\n    @Input() model: string;\n    @Input() config: CrudConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'toast-wrapper';\n    lightModel: any;\n\n    constructor(\n        public modelConfig: ModelConfigService,\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef\n    ) {\n        super(popService, elementRef, cdr);\n    }\n\n    ngOnChanges() {\n        if (this.model) {\n            this.modelConfig.getLightModel(this.model).then(model => this.lightModel = model);\n        }\n        this.config = Object.assign({}, this.config || {}, { hidePagination: true, disableHeader: true });\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n        // this.searchbar.focusEvent.emit(true);\n    }\n\n    getHeader(entryList) {\n        const label = this.config.singularLabel || entryList.model;\n        return `${label}`;\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{getHeader(entryList)}}\n         -->\n        \n    \n    \n        \n        \n        \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{getHeader(entryList)}}         -->                                                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'EntryListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/EntryService.html":{"url":"injectables/EntryService.html","title":"injectable - EntryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  EntryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/entry/entry.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                resourceService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                save\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/entry/entry.service.ts:14\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:21\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, config?: ItemConfig, cleanReadOnly)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:75\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    ItemConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        cleanReadOnly\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(model: string, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:94\n                            \n                        \n\n\n                \n                    \n                            Creates a new entry with the given value for the given model. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(model: string, entry: EntryResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:106\n                            \n                        \n\n\n                \n                    \n                            deletes the given entry and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entry\n                                                        \n                                                                    EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(model: string, entryItem: Item, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        entryItem\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        update(model, entryItem: Item, value: Object, safePut)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Updates the given entry with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        entryItem\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        safePut\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/entry/entry.service.ts:17\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Observable } from 'rxjs';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { Item, ItemConfig } from '@ec.components/core';\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class EntryService {\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService, public resourceService: ResourceService) {\n  }\n\n  /** Yields an observable that emits for all updates that match the given filter */\n  change(filter?: any): Observable {\n    if (filter.model) {\n      filter.relation = `model.${filter.model}`;\n      delete filter.model;\n    }\n    console.warn(`EntryService.change is deprecated! Use ResourceService.change instead!\n    Make sure to change the \"model\" property to \"relation\" with prefix \"model.\":\n\n    this.entryService.change({model:'muffin'}) // OLD\n    // CHANGE TO\n    this.resourceService.change({relation:'model.muffin'}) // NEW\n\n    The EntryService#change method will be removed in a future release!\n    `);\n    return this.resourceService.change(filter);\n  }\n\n  /** Saves the given entry with the given value. If the entry is not yet existing, it will be created. Otherwise it will be updated. */\n  save(model: string, entryItem: Item, value: Object) {\n    const entry = entryItem.getBody();\n    if (entry && entry.save) {\n      return this.update(model, entryItem, value);\n    }\n    return this.create(model, value)\n      .then((_entry) => {\n        return _entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** Updates the given entry with the new value. Fires the \"update\" change. */\n  async update(model, entryItem: Item, value: Object, safePut = true): Promise {\n    const oldValues = {}; // save old values\n    const entry = entryItem.getBody();\n    Object.keys(value).forEach((key) => oldValues[key] = entry[key]);\n    // TODO: EDITOR-263 get model config, clean readOnly fields too. Add custom filter argument to clean method\n    Object.assign(entry, this.clean(value, entryItem.config, true)); // assign new form values\n    return entry.save(safePut).then((_entry) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: _entry, type: 'put' });\n      return _entry;\n    }).catch((err) => {\n      Object.assign(entry, this.clean(oldValues)); // fall back to old values\n      return Promise.reject(err);\n    });\n  }\n\n  /** Returns true if the given field key is an immutable system property */\n  isImmutableProperty(key: string) {\n    return key[0] === '_' ||\n      ['id', 'created', 'modified'].indexOf(key) !== -1;\n  }\n\n  /** Removes all null or undefined values from the given object */\n  clean(value: Object, config?: ItemConfig, cleanReadOnly = false): Object {\n    for (const key in value) {\n      if (value.hasOwnProperty(key)) {\n        if (value[key] === '') { // clear empty strings\n          value[key] = null;\n        }\n        if (this.isImmutableProperty(key)) { // filter system properties\n          delete value[key];\n        }\n        if (config && config.fields && config.fields[key] &&\n          (config.fields[key].immutable || (cleanReadOnly && config.fields[key].readOnly))) {\n          delete value[key];\n        }\n      }\n    }\n    return value;\n  }\n\n  /** Creates a new entry with the given value for the given model. Fires the \"create\" change. */\n  create(model: string, value: Object): Promise {\n    return this.sdk.api.createEntry(model, this.clean(value))\n      .then((entry: EntryResource) => {\n        // TODO: make sure leveled entries are returned leveled\n        this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'post' });\n        return entry;\n      }).catch((err) => {\n        return Promise.reject(err);\n      });\n  }\n\n  /** deletes the given entry and emits the \"delete\" change. */\n  del(model: string, entry: EntryResource) {\n    return entry.del().then((res) => {\n      this.resourceService.changes.next({ relation: `model.${model}`, resource: entry, type: 'delete' });\n      return res;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ErrorComponent.html":{"url":"components/ErrorComponent.html","title":"component - ErrorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ErrorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/error/error.component.ts\n\n\n    \n        Description\n    \n    \n        The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  \n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-error\n            \n\n\n\n\n            \n                templateUrl\n                ./error.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:12\n                            \n                        \n                \n                    \n                        The error that should be displayed \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:22\n                            \n                        \n\n\n                \n                    \n                            change update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            initial update \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/error/error.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            updates error message  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, Input, OnChanges, OnInit } from '@angular/core';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** The CrudComponent takes at least a model name to render an entry list with create/edit/delete functionality out of the box.  */\n@Component({\n  selector: 'ec-error',\n  templateUrl: './error.component.html'\n})\n/** Displays an error thrown by the SDK. */\nexport class ErrorComponent implements OnInit, OnChanges {\n  /** The error that should be displayed */\n  @Input() error: any;\n\n  constructor(private symbol: SymbolService) {\n  }\n\n  /** initial update */\n  ngOnInit() {\n    this.update();\n  }\n  /** change update */\n  ngOnChanges() {\n    this.update();\n  }\n  /** updates error message  */\n  update() {\n    if (!this.error) {\n      return;\n    }\n    const message = this.symbol.resolve('error.' + this.error.code);\n    if (message) {\n      this.error.message = message;\n    }\n  }\n}\n\n    \n\n    \n        {{error.code}}\n{{error.dataPath}}\n{{error?.message}}\n{{error.detail}}{{error.verbose?': '+error.verbose:''}}\n\n  \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{error.code}}{{error.dataPath}}{{error?.message}}{{error.detail}}{{error.verbose?\\': \\'+error.verbose:\\'\\'}}        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ErrorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Field.html":{"url":"classes/Field.html","title":"class - Field","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Field\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/field/field.ts\n        \n\n\n\n            \n                Implements\n            \n            \n                        FieldConfigProperty\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                autofocus\n                            \n                            \n                                class\n                            \n                            \n                                    Optional\n                                filterable\n                            \n                            \n                                    Optional\n                                filterOperator\n                            \n                            \n                                    Optional\n                                filterPopClass\n                            \n                            \n                                    Optional\n                                form\n                            \n                            \n                                    Optional\n                                hidden\n                            \n                            \n                                    Optional\n                                icon\n                            \n                            \n                                id\n                            \n                            \n                                    Optional\n                                input\n                            \n                            \n                                    Optional\n                                label\n                            \n                            \n                                    Optional\n                                maxItems\n                            \n                            \n                                    Optional\n                                output\n                            \n                            \n                                    Optional\n                                placeholder\n                            \n                            \n                                    Optional\n                                property\n                            \n                            \n                                    Optional\n                                required\n                            \n                            \n                                    Optional\n                                sortable\n                            \n                            \n                                    Optional\n                                type\n                            \n                            \n                                    Optional\n                                validate\n                            \n                            \n                                values\n                            \n                            \n                                    Optional\n                                view\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getColumns\n                            \n                            \n                                getLabel\n                            \n                            \n                                getPlaceholder\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(property: string, config: FieldConfigProperty)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:49\n                            \n                        \n\n                \n                    \n                            A Field is constructed by assigning the given config and the property to itself\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            autofocus\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:13\n                            \n                        \n\n                \n                    \n                        If true, the field will autofocus after view init \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:37\n                            \n                        \n\n                \n                    \n                        Class string \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:43\n                            \n                        \n\n                \n                    \n                        if false, the field will not be filterable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterOperator\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:29\n                            \n                        \n\n                \n                    \n                        The operator to use for filtering: exact, search, any etc.. see ec.sdk doc \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            filterPopClass\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:31\n                            \n                        \n\n                \n                    \n                        Defines the class for the filter pop, e.g. in list header. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:33\n                            \n                        \n\n                \n                    \n                        Wether or not the field should appear in default forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hidden\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:11\n                            \n                        \n\n                \n                    \n                        If true, the field will not be visible anywhere \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:47\n                            \n                        \n\n                \n                    \n                        Icon name that should be associated with the field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:39\n                            \n                        \n\n                \n                    \n                        id for form labels \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:21\n                            \n                        \n\n                \n                    \n                        Custom Component to display form input *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            label\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string | boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:27\n                            \n                        \n\n                \n                    \n                        Label for Inputs. Defaults to property name. If false, the label is empty. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            maxItems\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:45\n                            \n                        \n\n                \n                    \n                        Defines the maximum of visible item (for tags view or similar). Defaults to 10 \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            output\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:23\n                            \n                        \n\n                \n                    \n                        Custom Component to display value *\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            placeholder\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:25\n                            \n                        \n\n                \n                    \n                        Placeholder in inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            property\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:9\n                            \n                        \n\n                \n                    \n                        The name of the field's property \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            required\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:7\n                            \n                        \n\n                \n                    \n                        Tells if the field is required in forms \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sortable\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:41\n                            \n                        \n\n                \n                    \n                        if false, the field will not be sortable in a list \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:15\n                            \n                        \n\n                \n                    \n                        The field's type \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            validate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:19\n                            \n                        \n\n                \n                    \n                        Custom Validation function \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            values\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:35\n                            \n                        \n\n                \n                    \n                        Possible Values e.g. in a select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            view\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:17\n                            \n                        \n\n                \n                    \n                        The field's view \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColumns\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColumns()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:65\n                            \n                        \n\n\n                \n                    \n                            Returns the column class for data-col, based on configured columns \n\n\n                            \n                                Returns :     string\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLabel()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns the fields label \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPlaceholder\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPlaceholder()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/field/field.ts:61\n                            \n                        \n\n\n                \n                    \n                            Returns placeholder if any \n\n\n                            \n                                Returns :     string | true\n\n                            \n                    \n                \n            \n        \n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    any\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/field/field.ts:47\n                            \n                        \n                \n                    \n                        wildcard for custom config values \n\n                    \n                \n            \n        \n\n\n\n\n\n\n    \n\n    \n        Field\nA Field represents a property of an Object, without a specific value.\nIt is used to describe a column or field of one or multiple equally structured objects.\nThe field config (see FieldConfigProperty) can contain different transformation methods, such as:\n\nresolve: This method is used to resolve the field value from the object body.\nIt runs before all other transformation methods.\ndisplay: Transforms the resolved value to a human readable output. It is used for e.g. in list cells.\ngroup: Should return a value that is suitable for grouping multiple different values together, like in a list.\n\nExample Usage:\nconst field = new Field('name', {\n    resolve: (body) => body.value.name,\n    display: (value) => value.toUpperCase(),\n    group: (value) => value.length + ' Buchstaben',\n    sort: (value) => value.length\n    });\nconst name = field.resolve({value:{name:'bobby'}}); // 'bobby'\nfield.display(name); // => 'Bobby'\nfield.group(name); // => '5 Buchstaben'\nfield.sort(name); // => 5The above example is of course only viable to show the concept.\nWhen using the components as a whole, those methods will be called automatically from Item, List or Form.\n\n    \n\n    \n        import { FieldConfigProperty } from '../config/field-config-property.interface';\n\nexport class Field implements FieldConfigProperty {\n  /** Tells if the field is required in forms */\n  required?: boolean;\n  /** The name of the field's property */\n  property?: string;\n  /** If true, the field will not be visible anywhere */\n  hidden?: boolean;\n  /** If true, the field will autofocus after view init */\n  autofocus?: boolean;\n  /** The field's type */\n  type?: string;\n  /** The field's view */\n  view?: string;\n  /** Custom Validation function */\n  validate?: (value, field) => any;\n  /** Custom Component to display form input **/\n  input?: any;\n  /** Custom Component to display value **/\n  output?: any;\n  /** Placeholder in inputs */\n  placeholder?: string;\n  /** Label for Inputs. Defaults to property name. If false, the label is empty. */\n  label?: string | boolean;\n  /** The operator to use for filtering: exact, search, any etc.. see ec.sdk doc */\n  filterOperator?: string;\n  /** Defines the class for the filter pop, e.g. in list header. */\n  filterPopClass?: string;\n  /** Wether or not the field should appear in default forms */\n  form?: boolean;\n  /** Possible Values e.g. in a select */\n  values: any[] = [];\n  /** Class string */\n  class = '';\n  /** id for form labels */\n  id: string;\n  /** if false, the field will not be sortable in a list */\n  sortable?: boolean;\n  /** if false, the field will not be filterable in a list */\n  filterable?: boolean;\n  /** Defines the maximum of visible item (for tags view or similar). Defaults to 10 */\n  maxItems?: number;\n  /** Icon name that should be associated with the field */\n  icon?: string;\n  /** wildcard for custom config values */\n  [key: string]: any;\n\n  /** A Field is constructed by assigning the given config and the property to itself*/\n  constructor(property: string, config: FieldConfigProperty) {\n    if (config) {\n      Object.assign(this, config);\n    }\n    Object.assign(this, { property: property });\n    this.id = `${this.property}_${Date.now()}`;\n  }\n\n  /** Returns placeholder if any */\n  getPlaceholder() {\n    return this.placeholder || this.label || this.property;\n  }\n  /** Returns the column class for data-col, based on configured columns */\n  getColumns() {\n    return (this.columns || 12) + '-sm';\n  }\n  /** Returns the fields label */\n  getLabel() {\n    if (this.label === false) {\n      return '';\n    }\n    return this.label || this.property;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FieldConfig.html":{"url":"interfaces/FieldConfig.html","title":"interface - FieldConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FieldConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/config/field-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for list fields.\n\n            \n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:    FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/config/field-config.interface.ts:6\n                            \n                        \n                \n                    \n                        Each field can be configured in the form of FieldConfigProperty. \n\n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { FieldConfigProperty } from './field-config-property.interface';\n\n/**\n * Configuration for list fields.\n */\nexport interface FieldConfig {\n  /** Each field can be configured in the form of FieldConfigProperty. */\n  [key: string]: FieldConfigProperty;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FileOptions.html":{"url":"interfaces/FileOptions.html","title":"interface - FileOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FileOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Interface for file options used by new assets \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        deduplicate\n                                \n                                \n                                            Optional\n                                        fieldName\n                                \n                                \n                                            Optional\n                                        fileName\n                                \n                                \n                                            Optional\n                                        ignoreDuplicates\n                                \n                                \n                                            Optional\n                                        includeAssetIDInPath\n                                \n                                \n                                            Optional\n                                        preserveFilenames\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        deduplicate\n                                    \n                                \n                                \n                                    \n                                        deduplicate:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Deduplicate upload \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fieldName\n                                    \n                                \n                                \n                                    \n                                        fieldName:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom file form fieldName \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fileName\n                                    \n                                \n                                \n                                    \n                                        fileName:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Optional custom names for assets. Mapped by indices to assets. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        ignoreDuplicates\n                                    \n                                \n                                \n                                    \n                                        ignoreDuplicates:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Ignores duplicates \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        includeAssetIDInPath\n                                    \n                                \n                                \n                                    \n                                        includeAssetIDInPath:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Includes assetID in path \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        preserveFilenames\n                                    \n                                \n                                \n                                    \n                                        preserveFilenames:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Preserves Filenames \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: []\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, (config.filter || {}), {\n          type: assetGroupID\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n          if (key in options) {\n            formData.append(key, `${options[key]}`);\n          }\n        });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map(f => f.url) : this.getFormData(files, options);\n    return api.createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {});\n      }\n      return this.sdk.api.createAssets(data, {});\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string):\n    Promise> {\n    console.warn('FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.');\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset];\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset);\n        });\n\n    });\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FilesModule.html":{"url":"modules/FilesModule.html","title":"module - FilesModule","body":"\n                   \n\n\n\n\n    Modules\n    FilesModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_imports\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\n\nAssetDirective\n\nAssetDirective\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\n\n\nResourceModule\n\nResourceModule\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\n\n\nSdkModule\n\nSdkModule\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/files/files.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FileService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ResourceModule\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AssetDirective\n                        \n                        \n                            AssetListComponent\n                        \n                        \n                            AssetListPopComponent\n                        \n                        \n                            AssetSelectComponent\n                        \n                        \n                            AssetgroupSelectComponent\n                        \n                        \n                            DropzoneDirective\n                        \n                        \n                            ImageDirective\n                        \n                        \n                            ImageSelectPopComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            TagSelectComponent\n                        \n                        \n                            UploadComponent\n                        \n                        \n                            UploadSelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { AssetListComponent } from '../asset-list/asset-list.component';\nimport { ResourceModule } from '../resource/resource.module';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { AssetListPopComponent } from './asset-list-pop/asset-list-pop.component';\nimport { AssetSelectComponent } from './asset-select/asset-select.component';\nimport { AssetDirective } from './asset/asset.directive';\nimport { AssetgroupSelectComponent } from './assetgroup-select/assetgroup-select.component';\nimport { DropzoneDirective } from './dropzone/dropzone.directive';\nimport { FileService } from './file.service';\nimport { ImageDirective } from './image/image.directive';\nimport { UploadComponent } from './upload/upload.component';\nimport { UploadSelectComponent } from './upload-select/upload-select.component';\nimport { ImageSelectPopComponent } from './image-select-pop/image-select-pop.component';\nimport { TagSelectComponent } from './tag-select/tag-select.component';\n\n@NgModule({\n  entryComponents: [\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    UploadComponent,\n    TagSelectComponent,\n  ],\n  declarations: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    ImageSelectPopComponent,\n    TagSelectComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n    ResourceModule\n  ],\n  exports: [\n    AssetListComponent,\n    AssetListPopComponent,\n    AssetSelectComponent,\n    AssetgroupSelectComponent,\n    AssetDirective,\n    DropzoneDirective,\n    ImageDirective,\n    UploadComponent,\n    UploadSelectComponent,\n    SdkModule,\n    ImageSelectPopComponent,\n    TagSelectComponent\n  ],\n  providers: [\n    FileService\n  ],\n})\nexport class FilesModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Focus.html":{"url":"interfaces/Focus.html","title":"interface - Focus","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Focus\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        focusEvent\n                                \n                            \n                        \n                    \n                    \n                        \n                            Methods\n                        \n                    \n                    \n                        \n                            \n                                \n                                    ngAfterViewInit\n                                \n                            \n                        \n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.interface.ts:6\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        focusEvent\n                                    \n                                \n                                \n                                    \n                                        focusEvent:     EventEmitter\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     EventEmitter\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter } from '@angular/core';\n\nexport interface Focus {\n  focusEvent: EventEmitter;\n\n  ngAfterViewInit();\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/FocusDirective.html":{"url":"directives/FocusDirective.html","title":"directive - FocusDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  FocusDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/utility/focus/focus.directive.ts\n        \n\n\n            \n                Implements\n            \n            \n                        OnInit\n                        AfterViewInit\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecFocus]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autofocus\n                            \n                            \n                                ecFocus\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(element: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        autofocus\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:9\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        ecFocus\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:8\n                            \n                        \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/focus/focus.directive.ts:20\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, EventEmitter, Input, OnInit, AfterViewInit } from '@angular/core';\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: '[ecFocus]',\n})\nexport class FocusDirective implements OnInit, AfterViewInit {\n  @Input() ecFocus: EventEmitter;\n  @Input() autofocus: boolean;\n\n  constructor(private element: ElementRef) {\n  }\n\n  ngAfterViewInit() {\n    if (this.autofocus) {\n      this.ecFocus.emit(true);\n    }\n  }\n\n  ngOnInit() {\n    this.ecFocus\n      .subscribe((event: boolean) => {\n        if (event) {\n          this.element.nativeElement.focus();\n        } else {\n          this.element.nativeElement.blur();\n        }\n      });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FormConfig.html":{"url":"interfaces/FormConfig.html","title":"interface - FormConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  FormConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/form/form-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                FormConfig is an extension of ItemConfig. \n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        hideSubmitButton\n                                \n                                \n                                            Optional\n                                        submitButtonLabel\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the column visibility filter will not be visible \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hideSubmitButton\n                                    \n                                \n                                \n                                    \n                                        hideSubmitButton:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no submit button will be rendered. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        submitButtonLabel\n                                    \n                                \n                                \n                                    \n                                        submitButtonLabel:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The label of the submit button \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\n\n/** FormConfig is an extension of ItemConfig. */\nexport interface FormConfig extends ItemConfig {\n  /** If true, no submit button will be rendered. */\n  hideSubmitButton?: boolean;\n  /** The label of the submit button */\n  submitButtonLabel?: string;\n  /** If true, the column visibility filter will not be visible */\n  disableColumnFilter?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/FormModule.html":{"url":"modules/FormModule.html","title":"module - FormModule","body":"\n                   \n\n\n\n\n    Modules\n    FormModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nCalendarModule\n\nCalendarModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            DefaultInputComponent\n                        \n                        \n                            DefaultOutputComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            FormService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            CalendarModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            IoModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DatetimeComponent\n                        \n                        \n                            FormComponent\n                        \n                        \n                            IoModule\n                        \n                        \n                            MaxItemsPipe\n                        \n                        \n                            PopModule\n                        \n                        \n                            ToggleComponent\n                        \n                        \n                            UtilityModule\n                        \n                        \n                            VisibleFieldsPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormComponent } from './form.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { PopModule } from '../pop/pop.module';\nimport { FormService } from './form.service';\nimport { VisibleFieldsPipe } from './visible-fields.pipe';\nimport { IoModule } from '../io/io.module';\nimport { DatetimeComponent } from './datetime/datetime.component';\nimport { ToggleComponent } from './toggle/toggle.component';\nimport { LoaderModule } from '../loader/loader.module';\nimport { IconModule } from '../icon/icon.module';\nimport { MaxItemsPipe } from './max-items.pipe';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { DefaultInputComponent } from './default-input/default-input.component';\nimport { DefaultOutputComponent } from './default-output/default-output.component';\nimport { CalendarModule } from '@ec.components/calendar';\nimport { UtilityModule } from '../utility/utility.module';\n\nexport const formModuleConfig = {\n  entryComponents: [\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  declarations: [\n    FormComponent,\n    DatetimeComponent,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n    DefaultInputComponent,\n    DefaultOutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    PopModule,\n    IoModule,\n    LoaderModule,\n    IconModule,\n    SymbolModule,\n    CalendarModule,\n    UtilityModule\n  ],\n  exports: [\n    UtilityModule,\n    ReactiveFormsModule,\n    IoModule,\n    FormComponent,\n    DatetimeComponent,\n    PopModule,\n    VisibleFieldsPipe,\n    MaxItemsPipe,\n    ToggleComponent,\n  ],\n  providers: [\n    FormService,\n    /* {\n      provide: 'moment.format.date',\n      useValue: SymbolService.resolve('moment.format.date')\n    },\n    {\n      provide: 'moment.format.time',\n      useValue: SymbolService.resolve('moment.format.time')\n    },\n    {\n      provide: 'moment.format.month',\n      useValue: SymbolService.resolve('moment.format.month')\n    } */\n  ]\n};\n\n@NgModule(formModuleConfig)\nexport class FormModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FormService.html":{"url":"injectables/FormService.html","title":"injectable - FormService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  FormService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/form/form.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the interface between Angular Forms and ec.components core classes. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                addField\n                            \n                            \n                                getFormLabel\n                            \n                            \n                                    Public\n                                getGroup\n                            \n                            \n                                getValidators\n                            \n                            \n                                isReadOnly\n                            \n                            \n                                    Public\n                                shouldBePartOfForm\n                            \n                            \n                                validateFactory\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/form/form.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            addField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        addField(field: Field, form: Form, group: FormGroup)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            adds a new field to a form. handles form group and control \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        group\n                                                        \n                                                                    FormGroup\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFormLabel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFormLabel(form: FormComponent, label)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:79\n                            \n                        \n\n\n                \n                    \n                            Returns label for given form (e.g. Edit label) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    FormComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        label\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.symbol.resolve('resource.generic')\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getGroup(form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:25\n                            \n                        \n\n\n                \n                    \n                            Initializes the form group from the form fields\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getValidators\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetValidators(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Extracts all validators from a given Field instance. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidatorFn[]\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isReadOnly\n                            \n                            \n                        \n                    \n                \n                \n                    \nisReadOnly(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:74\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be readOnly, depending on its config and the form state. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shouldBePartOfForm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shouldBePartOfForm(field, form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:14\n                            \n                        \n\n\n                \n                    \n                            Returns true if the field should be included in the form.\nDecides based on field config values form, edit and create \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            validateFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \nvalidateFactory(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns a Validation function from the given field (using field.validate) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ValidationErrors | null\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/form.service.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Form, Field } from '@ec.components/core';\nimport { AbstractControl, FormControl, FormGroup, ValidationErrors, ValidatorFn, Validators } from '@angular/forms';\nimport { SymbolService } from '../symbol/symbol.service';\nimport { FormComponent } from '../form/form.component';\n\n/** This service is the interface between Angular Forms and ec.components core classes. */\n@Injectable()\nexport class FormService {\n  constructor(public symbol: SymbolService) {}\n\n  /** Returns true if the field should be included in the form.\n   * Decides based on field config values form, edit and create */\n  public shouldBePartOfForm(field, form) {\n    if (field.create === false && !form.getBody()) {\n      return false;\n    }\n    if (field.edit === false && !!form.getBody()) {\n      return false;\n    }\n    return field.form !== false;\n  }\n\n  /** Initializes the form group from the form fields*/\n  public getGroup(form: Form) {\n    const controls = {};\n    form.fields\n      .filter((field) => this.shouldBePartOfForm(field, form))\n      .forEach((field) => {\n        const validators = this.getValidators(field);\n        controls[field.property] = new FormControl(form.getValue(field.property), validators);\n        // TODO use { updateOn: blur } when updating to angular 5.0.0\n        // see https://github.com/angular/angular/commit/333a708bb632d4258ecb5fd4a0e86229fe9d26e4\n      });\n    return new FormGroup(controls);\n  }\n\n  /** adds a new field to a form. handles form group and control */\n  public addField(field: Field, form: Form, group: FormGroup) {\n    console.warn('addField is experimental!');\n    const validators = this.getValidators(field);\n    const control = new FormControl(form.getValue(field.property), validators);\n    group.addControl(field.property, control);\n  }\n\n  /** Extracts all validators from a given Field instance. */\n  getValidators(field: Field): ValidatorFn[] {\n    const validators = [];\n    if (field.required) {\n      validators.push(Validators.required);\n    }\n    if (field.validate) {\n      validators.push(this.validateFactory(field));\n    }\n    return validators;\n  }\n\n  /** Returns a Validation function from the given field (using field.validate) */\n  validateFactory(field: Field): ValidationErrors | null {\n    return (control: AbstractControl) => {\n      if (!field.validate) {\n        return;\n      }\n      const error = field.validate(control.value, field);\n      if (error) {\n        return {\n          custom: error,\n        };\n      }\n    };\n  }\n\n  /** Returns true if the field should be readOnly, depending on its config and the form state. */\n  isReadOnly(field, form) {\n    return field.immutable || (field.readOnly && form && !!form.getBody());\n  }\n\n  /** Returns label for given form (e.g. Edit label) */\n  getFormLabel(form: FormComponent, label = this.symbol.resolve('resource.generic')) {\n    if (!form || !form.form) {\n      return '';\n    }\n    return `${this.symbol.resolve('resource.' + (form.form.isEditing() ? 'edit' : 'create'))}\n    ${label} ${form.form.display() ? `\"${form.form.display()}\"` : ''}`;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/GeocodeService.html":{"url":"injectables/GeocodeService.html","title":"injectable - GeocodeService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  GeocodeService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/location/src/lib/geocode.service.ts\n        \n\n            \n                Description\n            \n            \n                Wraps google maps api to handle geocode operations \n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                autocompleteAddress\n                            \n                            \n                                geocodeLatLng\n                            \n                            \n                                    Public\n                                getNearestAddress\n                            \n                            \n                                    Public\n                                observeElement\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(mapLoader: MapsAPILoader, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/geocode.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        mapLoader\n                                                  \n                                                        \n                                                                    MapsAPILoader\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            autocompleteAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        autocompleteAddress(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:43\n                            \n                        \n\n\n                \n                    \n                            Turns an input element to an maps autocomplete searchbar. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            geocodeLatLng\n                            \n                            \n                        \n                    \n                \n                \n                    \ngeocodeLatLng(geocoder, location)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            Reverse address lookup for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocoder\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        location\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getNearestAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getNearestAddress(location: literal type)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:62\n                            \n                        \n\n\n                \n                    \n                            Returns the nearest address for a given location \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        location\n                                                        \n                                                                    literal type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            observeElement\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        observeElement(el)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/geocode.service.ts:18\n                            \n                        \n\n\n                \n                    \n                            Observes a given input element, transforming it into an autocomplete \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { MapsAPILoader } from '@agm/core';\nimport { Injectable, NgZone } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { switchMap } from 'rxjs/operators';\nimport { from } from 'rxjs';\n\n/** declares google namespace */\ndeclare var google: any;\n\n/** Wraps google maps api to handle geocode operations */\n@Injectable()\nexport class GeocodeService {\n\n    constructor(private mapLoader: MapsAPILoader,\n        private ngZone: NgZone) { }\n\n    /** Observes a given input element, transforming it into an autocomplete */\n    public observeElement(el) {\n        return new Observable(observer => {\n            const autocomplete = new google.maps.places.Autocomplete(el, {\n                types: ['address']\n            });\n            autocomplete.addListener('place_changed', () => {\n                this.ngZone.run(() => {\n                    // get the place result\n                    const place = autocomplete.getPlace();\n                    // verify result\n                    if (place.geometry === undefined || place.geometry === null) {\n                        return;\n                    }\n                    const coords = {\n                        latitude: place.geometry.location.lat(),\n                        longitude: place.geometry.location.lng()\n                    };\n                    observer.next(coords);\n                    /* observer.complete(); */\n                });\n            });\n        });\n    }\n\n    /** Turns an input element to an maps autocomplete searchbar. */\n    public autocompleteAddress(el): Observable {\n        return from(this.mapLoader.load())\n            .pipe(switchMap(() => this.observeElement(el)));\n    }\n\n    /** Reverse address lookup for a given location */\n    geocodeLatLng(geocoder, location): Promise {\n        return new Promise((resolve, reject) => {\n            geocoder.geocode({ location }, (results, status) => {\n                if (status === 'OK') {\n                    resolve(results);\n                } else {\n                    reject(status);\n                }\n            });\n        });\n    }\n\n    /** Returns the nearest address for a given location */\n    public getNearestAddress(location: { latitude: number, longitude: number }): Promise> {\n        return this.mapLoader.load().then(() => {\n            return this.geocodeLatLng(\n                new google.maps.Geocoder, {\n                    lat: location.latitude,\n                    lng: location.longitude\n                }\n            );\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/GroupPipe.html":{"url":"pipes/GroupPipe.html","title":"pipe - GroupPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  GroupPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/group.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The GroupPipe filters an array of Item instances by a given property value.\nIt is meant to be used to get only the items with the exact same value. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        group\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(items: Array>, property: string, value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/group.pipe.ts:10\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Item } from '@ec.components/core';\n\n/** The GroupPipe filters an array of Item instances by a given property value.\n * It is meant to be used to get only the items with the exact same value. */\n@Pipe({\n  name: 'group'\n})\nexport class GroupPipe implements PipeTransform {\n  transform(items: Array>, property: string, value: any): any {\n    if (!property) {\n      return items;\n    }\n    return items.filter((item) => {\n      return item.group(property) === value;\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/HistoryService.html":{"url":"injectables/HistoryService.html","title":"injectable - HistoryService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  HistoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/history.service.ts\n        \n\n            \n                Description\n            \n            \n                The HistoryService keeps track of live updates for models entries and datamanagers. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                eventSources\n                            \n                            \n                                    Public\n                                loaderService\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                promises\n                            \n                            \n                                    Public\n                                resourceService\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                disableUpdates\n                            \n                            \n                                enableUpdates\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService, loaderService: LoaderService, router: Router, resourceService: ResourceService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        resourceService\n                                                  \n                                                        \n                                                                    ResourceService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            disableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisableUpdates(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:42\n                            \n                        \n\n\n                \n                    \n                            Closes the event stream for the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enableUpdates\n                            \n                            \n                        \n                    \n                \n                \n                    \nenableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:52\n                            \n                        \n\n\n                \n                    \n                            Enables Updates for the given resource. The relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:26\n                            \n                        \n\n\n                \n                    \n                            Toggles live updates on the resource and stores them under the given key.\nThe relation is passed through the Update instances on change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        resource\n                                                        \n                                                                    ModelResource | DataManagerResource | EntryResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        key\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.router.url.split('?')[0]\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            eventSources\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:17\n                            \n                        \n\n                \n                    \n                        EventSources that are active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            loaderService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            promises\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:15\n                            \n                        \n\n                \n                    \n                        Current loaded histories \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/history.service.ts:22\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport ModelResource from 'ec.sdk/lib/resources/datamanager/ModelResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { NotificationsService, LoaderService } from '@ec.components/ui';\nimport { Router } from '@angular/router';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport * as EventSource from 'eventsource/lib/eventsource-polyfill';\n\n/** The HistoryService keeps track of live updates for models entries and datamanagers. */\n@Injectable()\nexport class HistoryService {\n    /** Current loaded histories */\n    promises: { [relation: string]: Promise } = {};\n    /** EventSources that are active */\n    eventSources: { [relation: string]: any } = {}; // EventSource[]\n\n    constructor(\n        public notificationService: NotificationsService,\n        public loaderService: LoaderService,\n        public router: Router,\n        public resourceService: ResourceService) { }\n    /** Toggles live updates on the resource and stores them under the given key.\n     * The relation is passed through the Update instances on change. */\n    toggle(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (this.promises[key] && !this.eventSources[relation]) {\n            return this.promises[key];\n        }\n        this.disableUpdates(key);\n        this.promises[key] = this.enableUpdates(resource, relation, key)\n            .then(source => {\n                this.eventSources[key] = source;\n            })\n            .catch(error => {\n                delete this.promises[key];\n            });\n        this.loaderService.wait(this.promises[key]);\n    }\n\n    /** Closes the event stream for the given key */\n    disableUpdates(key = this.router.url.split('?')[0]) {\n        if (this.eventSources[key]) {\n            this.eventSources[key].close();\n            delete this.promises[key];\n            delete this.eventSources[key];\n            return;\n        }\n    }\n\n    /** Enables Updates for the given resource. The relation is passed through the Update instances on change. */\n    enableUpdates(resource: ModelResource | DataManagerResource | EntryResource, relation: string, key = this.router.url.split('?')[0]) {\n        if (!resource || !resource.newHistory) {\n            throw new Error('cannot get history: no newHistory method found on given resource');\n        }\n        if (this.promises[key]) {\n            return this.promises[key];\n        }\n        DataManager.enableHistoryEvents(EventSource);\n        const loading = resource.newHistory()\n            .then(source => {\n                source.addEventListener('entryUpdated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'put',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                source.addEventListener('entryCreated', (e) => {\n                    const data = JSON.parse(e.data);\n                    this.resourceService.changes.next({\n                        relation,\n                        type: 'post',\n                        identifier: data ? data.entryID : ''\n                    });\n                }, false);\n                return source;\n            })\n            .catch(error => {\n                this.notificationService.emit({\n                    title: 'History Error',\n                    error\n                });\n            });\n        this.loaderService.wait(loading);\n        return loading;\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/IconComponent.html":{"url":"components/IconComponent.html","title":"component - IconComponent","body":"\n                   \n\n\n\n\n\n  Components\n  IconComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/icon/icon.component.ts\n\n\n    \n        Description\n    \n    \n        Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\nIf not, is is expected to be a ec-icon.\nhttps://components.entrecode.de/ui/icons?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-icon\n            \n\n\n\n\n            \n                templateUrl\n                ./icon.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                icon\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                resolve\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(iconService: IconService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/icon/icon.component.ts:19\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        iconService\n                                                  \n                                                        \n                                                                    IconService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:17\n                            \n                        \n                \n                    \n                        The name of the icon. An Icon with this name is expected to be present in the current iconService registry. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:29\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            icon\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.component.ts:19\n                            \n                        \n\n                \n                    \n                        The resolved icon (by name) \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Icon\nOpen Demo\nDisplays an icon:\nThe default icon set uses ec-icons. You have to embedd them to your index.html (or similar):\n  Using another icon set\nYou can also use other icons:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.use(emojiIcons);\n    }\n}Overriding icons\nYou can also override the current icon registry:\nimport { emojiIcons } from '@ec.components/ui/src/icon/emoji-icons';\nexport class SomeModule  {\n    constructor(public iconService: IconService) {\n        this.iconService.set(emojiIcons);\n    }\n}This will override the icon registry with the given icons, but keep the rest.\n\n    \n\n    \n        import { Component, OnInit, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { IconService } from './icon.service';\nimport { Symbol } from '../symbol/symbol.interface';\n\n/** Displays icons by name. If the matching Icon (from registry contains a content, the content is shown.\n * If not, is is expected to be a ec-icon.\n * https://components.entrecode.de/ui/icons?e=1\n */\n@Component({\n    selector: 'ec-icon',\n    templateUrl: './icon.component.html',\n    changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class IconComponent implements OnInit, OnChanges {\n    /** The name of the icon. An Icon with this name is expected to be present in the current iconService registry. */\n    @Input() name: string;\n    /** The resolved icon (by name) */\n    icon: Symbol;\n    constructor(private iconService: IconService) {\n    }\n    /** The component will resolve the icon from the current iconService registry. A warning is logged if no icon can be found. */\n    resolve() {\n        this.icon = this.iconService.get(this.name);\n        if (!this.icon) {\n            console.warn(`Icon ${this.name} cannot be found. Using the following icon registry:`, this.iconService.registry);\n        }\n    }\n    ngOnInit() {\n        this.resolve();\n    }\n    ngOnChanges() {\n        this.resolve();\n    }\n}\n\n    \n\n    \n        \n{{icon.content}}\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{icon.content}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'IconComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IconModule.html":{"url":"modules/IconModule.html","title":"module - IconModule","body":"\n                   \n\n\n\n\n    Modules\n    IconModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\n\nIconComponent\n\nIconComponent\n\n\n\nIconModule\n\nIconModule\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            IconService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            IconComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { IconComponent } from './icon.component';\nimport { IconService } from './icon.service';\n\n@NgModule({\n    imports: [CommonModule],\n    declarations: [IconComponent],\n    exports: [IconComponent],\n    providers: [IconService],\n})\nexport class IconModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/IconService.html":{"url":"injectables/IconService.html","title":"injectable - IconService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  IconService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/icon/icon.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\nhttps://components.entrecode.de/ui/icons?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                registry\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : ecIcons\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/icon/icon.service.ts:11\n                            \n                        \n\n                \n                    \n                        The current icon set that is registered to the service. It will be used to resolve icons from. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ecIcons } from './ec-icons';\nimport { Symbol } from '../symbol/symbol.interface';\nimport { SymbolService } from '../symbol/symbol.service';\n/** Service to register icons and icon sets. The default set is ec-icons. (Requires including ec-icons)\n * https://components.entrecode.de/ui/icons?e=1\n*/\n@Injectable()\nexport class IconService extends SymbolService {\n    /** The current icon set that is registered to the service. It will be used to resolve icons from. */\n    public registry: Symbol[] = ecIcons;\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/ImageDirective.html":{"url":"directives/ImageDirective.html","title":"directive - ImageDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  ImageDirective\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/image/image.directive.ts\n        \n\n            \n                Description\n            \n            \n                Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. \n\n            \n\n            \n                Implements\n            \n            \n                        OnChanges\n            \n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        img [ecImage]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                url\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                load\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                setUrl\n                            \n                            \n                                use\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                ecImage\n                            \n                            \n                                size\n                            \n                            \n                                thumb\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, elementRef: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        ecImage\n                    \n                \n                \n                    \n                        Type :     string | DMAssetResource\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:18\n                            \n                        \n                \n                    \n                        The assetID that should be loaded \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        size\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:16\n                            \n                        \n                \n                    \n                        The size that should be requested. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        thumb\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:14\n                            \n                        \n                \n                    \n                        If true, the image will be requested as thumb (square) \n\n                    \n                \n            \n        \n\n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \nload(id?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:39\n                            \n                        \n\n\n                \n                    \n                            Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        id\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:27\n                            \n                        \n\n\n                \n                    \n                            Reads ecImage input as assetId and loads if autoload is not false \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(asset: PublicAssetResource | DMAssetResource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:43\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        asset\n                                                        \n                                                                    PublicAssetResource | DMAssetResource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            url\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image/image.directive.ts:20\n                            \n                        \n\n                \n                    \n                        Resolved asset url. \n\n                    \n                \n\n            \n        \n\n\n\n    \n\n    \n        ecImage\nThis directive can be used to load an image:\n\nID: {{myImage.asset?.assetID}}\n    \n\n    \n        import { Directive, ElementRef, Input, OnChanges } from '@angular/core';\nimport { AssetDirective } from '../asset/asset.directive';\nimport { SdkService } from '../../sdk/sdk.service';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\n\n/** Loads an public asset image by id to the template. It can be used with img's to auto load the url to the src. */\n@Directive({\n  selector: 'img [ecImage]',\n  exportAs: 'ecImage'\n})\nexport class ImageDirective extends AssetDirective implements OnChanges {\n  /** If true, the image will be requested as thumb (square) */\n  @Input() thumb: boolean;\n  /** The size that should be requested. */\n  @Input() size = 200;\n  /** The assetID that should be loaded */\n  @Input() ecImage: string | DMAssetResource;\n  /** Resolved asset url. */\n  url: string;\n\n  constructor(public sdk: SdkService, private elementRef: ElementRef) {\n    super(sdk);\n  }\n\n  /** Reads ecImage input as assetId and loads if autoload is not false */\n  ngOnChanges() {\n    if (typeof this.ecImage === 'string') {\n      this.assetId = this.ecImage;\n    } else if (this.ecImage && this.ecImage.assetID) {\n      this.use(this.ecImage);\n    }\n    if (this.autoload !== false && this.assetId) {\n      this.load();\n    }\n  }\n\n  /** Calls super.load, then resolves the image url and assigns it to the native element src (only if it is an img) */\n  load(id?: string) {\n    return super.load(id).then(this.use.bind(this));\n  }\n\n  use(asset: PublicAssetResource | DMAssetResource) {\n    return Promise.resolve().then(() => {\n      if (asset.type !== 'image') {\n        return Promise.reject(`ecImage only works for assets of type image.\n        Loaded id ${asset.id} is of type ${asset.type}`);\n      }\n      if (asset instanceof DMAssetResource) { // new asset\n        return asset.getFileVariant(this.size, this.thumb);\n      } else if (asset instanceof PublicAssetResource) { // old asset\n        if (this.thumb) {\n          return asset.getImageThumbUrl(this.size, '');\n        }\n        return asset.getImageUrl(this.size, '');\n      }\n    }).then(this.setUrl.bind(this));\n  }\n\n  setUrl(url: string) {\n    this.url = url;\n    this.elementRef.nativeElement.src = this.url;\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ImageSelectPopComponent.html":{"url":"components/ImageSelectPopComponent.html","title":"component - ImageSelectPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ImageSelectPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n\n\n    \n        Description\n    \n    \n        This component is a pop with a form to add images. You can set an the alternative Text and the size.\nThe size inputs will keep the image ratio by default.  \n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-image-select-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./image-select-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                imageForm\n                            \n                            \n                                imageLoader\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                sdk\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                defaultSize\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, sdk: SdkService, symbol: SymbolService, fileService: FileService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:16\n                            \n                        \n                \n                    \n                        The assetGroupID to pick from \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        defaultSize\n                    \n                \n                \n                    \n                        Default value : 400\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:18\n                            \n                        \n                \n                    \n                        The default size used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:20\n                            \n                        \n                \n                    \n                        Ouput that emits when image changes  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'dialog-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:26\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Inits the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:92\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:76\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:22\n                            \n                        \n\n                \n                    \n                        The instance of the imageForm  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            imageLoader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('imageLoader')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:24\n                            \n                        \n\n                \n                    \n                        The loader that is shown after an image has been selected  \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sdk\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SdkService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnInit, Output, ViewChild } from '@angular/core';\nimport { FormConfig } from '@ec.components/core';\nimport { FormComponent, LoaderComponent, PopComponent, PopService, SymbolService } from '@ec.components/ui';\nimport { DefaultEntryInputComponent } from '../../entry-form/default-entry-input.component';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileService } from '../file.service';\n\n/** This component is a pop with a form to add images. You can set an the alternative Text and the size.\n * The size inputs will keep the image ratio by default.  */\n@Component({\n    selector: 'ec-image-select-pop',\n    templateUrl: './image-select-pop.component.html'\n})\nexport class ImageSelectPopComponent extends PopComponent implements OnInit {\n    /** The assetGroupID to pick from */\n    @Input() assetGroupID;\n    /** The default size used */\n    @Input() defaultSize = 400;\n    /** Ouput that emits when image changes  */\n    @Output() changed: EventEmitter = new EventEmitter();\n    /** The instance of the imageForm  */\n    imageForm: FormConfig;\n    /** The loader that is shown after an image has been selected  */\n    @ViewChild('imageLoader') imageLoader: LoaderComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'dialog-wrapper';\n\n    constructor(public popService: PopService,\n        public sdk: SdkService,\n        public symbol: SymbolService,\n        public fileService: FileService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef) {\n        super(popService, elementRef, cdr);\n    }\n    /** Inits the form */\n    ngOnInit() {\n        const isOldAssetGroupID = this.fileService.isOldAssetGroupID(this.assetGroupID);\n        this.imageForm = {\n            submitButtonLabel: this.symbol.resolve('image-select-pop.submitButtonLabel'),\n            onSave: (form, value: { img, height, width, alt }) => {\n                const size = Math.max(value.width, value.height);\n                if (isOldAssetGroupID) {\n                    this.sdk.api.asset(value.img)\n                        .then(asset =>\n                            asset.getImageUrl(size, '')\n                        ).then(url => {\n                            this.hide();\n                            this.changed.emit({ url, alt: value.alt, size });\n                        });\n                } else {\n                    const loadImage = this.sdk.api.dmAsset(this.assetGroupID, value.img)\n                        .then(asset =>\n                            asset.getImageUrl(size)\n                        ).then(url => {\n                            this.hide();\n                            this.changed.emit({ url, alt: value.alt, size });\n                        });\n                    this.imageLoader.wait(loadImage);\n                }\n            },\n            fields: {\n                img: {\n                    label: ' ',\n                    input: DefaultEntryInputComponent,\n                    inputView: isOldAssetGroupID ? 'asset-select' : 'dmAsset-select',\n                    relation: !isOldAssetGroupID ? this.assetGroupID : 'legacyAsset',\n                    required: true,\n                    changed: (value, form) => {\n                        const loadImg = Promise.resolve().then(() => {\n                            if (isOldAssetGroupID) {\n                                return this.sdk.api.asset(value).then(asset => {\n                                    const original = asset.getOriginalFile();\n                                    const resolution = original.resolution;\n                                    return { resolution, title: asset.title };\n                                });\n                            } else {\n                                return this.sdk.api.dmAsset(this.assetGroupID, value).then(asset => {\n                                    const resolution = asset.file.resolution;\n                                    return { resolution, title: asset.title };\n                                });\n                            }\n                        }).then(({ resolution, title }) => {\n                            const ratio = resolution.width / resolution.height;\n                            const width = Math.min(this.defaultSize, resolution.width);\n                            form.group.controls.width.setValue(width);\n                            form.group.controls.alt.setValue(title);\n                            form.group.controls.ratio.setValue(ratio);\n                        });\n                        this.imageLoader.wait(loadImg);\n                    }\n                },\n                alt: {\n                    label: this.symbol.resolve('image-select-pop.alt'),\n                    view: 'string'\n                },\n                ratio: {\n                    hideInForm: true,\n                    view: 'number'\n                },\n                keepRatio: {\n                    label: this.symbol.resolve('image-select-pop.keepRatio'),\n                    view: 'boolean',\n                    prefill: true,\n                    changed: (value) => {\n                        if (value === true) {\n                            console.log('should fix ratio now...');\n                        }\n                    }\n                },\n                width: {\n                    label: this.symbol.resolve('image-select-pop.width'),\n                    view: 'number',\n                    columns: 6,\n                    changed: (value, form: FormComponent) => {\n                        const ratio = form.getValue('ratio');\n                        if (ratio && form.getValue('keepRatio')) {\n                            form.group.controls.height.setValue(Math.round(value / ratio));\n                        }\n                    }\n                },\n                height: {\n                    label: this.symbol.resolve('image-select-pop.height'),\n                    view: 'number',\n                    columns: 6,\n                    changed: (value, form) => {\n                        const ratio = form.getValue('ratio');\n                        if (ratio && form.getValue('keepRatio')) {\n                            form.group.controls.width.setValue(Math.round(value * ratio));\n                        }\n                    }\n                }\n            }\n        };\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        {{'image-select-pop.header' | symbol}}\n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                            {{\\'image-select-pop.header\\' | symbol}}                            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ImageSelectPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputComponent.html":{"url":"components/InputComponent.html","title":"component - InputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input/input.component.ts\n\n\n    \n        Description\n    \n    \n        This directive can be used to display a field. It is used inside ec-form as well as ec-list. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => InputComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-input\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                componentInstance\n                            \n                            \n                                focusEvent\n                            \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                connectControl\n                            \n                            \n                                focus\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                component\n                            \n                            \n                                config\n                            \n                            \n                                control\n                            \n                            \n                                debounce\n                            \n                            \n                                field\n                            \n                            \n                                group\n                            \n                            \n                                item\n                            \n                            \n                                lazy\n                            \n                            \n                                property\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                ready\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        component\n                    \n                \n                \n                    \n                        Type :     Type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:41\n                            \n                        \n                \n                    \n                        Overrides the default component \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     FieldConfigProperty\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:39\n                            \n                        \n                \n                    \n                        Config that should be used, only needed when not using field input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     AbstractControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:25\n                            \n                        \n                \n                    \n                        The belonging form control. This is not required if you pass in a field and group. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:31\n                            \n                        \n                \n                    \n                        Debounce time in ms before the changed event emits. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :     Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:33\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template, can also be a property name. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        group\n                    \n                \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:23\n                            \n                        \n                \n                    \n                        The belonging form group \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:37\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:43\n                            \n                        \n                \n                    \n                        If true, the input will never reinit/reload. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        property\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:35\n                            \n                        \n                \n                    \n                        The property name that is edited. Expects a form as item input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:27\n                            \n                        \n                \n                    \n                        The changed ouput emits whenever the form control of the input changes. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        ready\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:29\n                            \n                        \n                \n                    \n                        Emits when the component has been loaded \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            connectControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nconnectControl()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:110\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:58\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:66\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:135\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:140\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:124\n                            \n                        \n\n\n                \n                    \n                            writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            componentInstance\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:46\n                            \n                        \n\n                \n                    \n                        Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\nYou can access a form's InputComponents via FormComponent#inputs \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:50\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:131\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input/input.component.ts:48\n                            \n                        \n\n                \n                    \n                        The current value of the input. Needs to be saved for the case the component is not yet loaded \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, forwardRef, Input, OnChanges, Output, Type, ChangeDetectionStrategy } from '@angular/core';\nimport { ControlValueAccessor, FormControl, FormGroup, NG_VALUE_ACCESSOR, AbstractControl } from '@angular/forms';\nimport { FieldConfigProperty, Field, Form, Item } from '@ec.components/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { DefaultInputComponent } from '../../form/default-input/default-input.component';\nimport { debounceTime } from 'rxjs/operators';\n\n/** This directive can be used to display a field. It is used inside ec-form as well as ec-list. */\n@Component({\n  selector: 'ec-input',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => InputComponent),\n      multi: true\n    }\n  ]\n})\nexport class InputComponent extends DynamicSlotComponent implements ControlValueAccessor, OnChanges {\n  /** The belonging form group */\n  @Input() group: FormGroup;\n  /** The belonging form control. This is not required if you pass in a field and group. */\n  @Input() control: AbstractControl;\n  /** The changed ouput emits whenever the form control of the input changes. */\n  @Output() changed = new EventEmitter();\n  /** Emits when the component has been loaded */\n  @Output() ready = new EventEmitter();\n  /** Debounce time in ms before the changed event emits. */\n  @Input() debounce = 0;\n  /** The instance of field that should be used in the template, can also be a property name. */\n  @Input() field: Field;\n  /** The property name that is edited. Expects a form as item input */\n  @Input() property: string;\n  /** The belonging item */\n  @Input() item: Item;\n  /** Config that should be used, only needed when not using field input */\n  @Input() config: FieldConfigProperty;\n  /** Overrides the default component */\n  @Input() component: Type;\n  /** If true, the input will never reinit/reload. */\n  @Input() lazy: boolean;\n  /** Holds a reference to the component instance. This is helpful when you want to modify the component after form intialization.\n   * You can access a form's InputComponents via FormComponent#inputs */\n  componentInstance: InputComponent;\n  /** The current value of the input. Needs to be saved for the case the component is not yet loaded */\n  value: any;\n  /** Emitter to focus the input field */\n  focusEvent: EventEmitter = new EventEmitter();\n\n  ngOnChanges(changes?) {\n    if (!this.lazy || !this.componentInstance || changes.field) {\n      this.init();\n    }\n  }\n\n  focus(focus = true) {\n    if (this.componentInstance && this.componentInstance.focusEvent) {\n      this.componentInstance.focusEvent.emit(focus);\n    } else {\n      console.warn('could not focus component', this.componentInstance);\n    }\n  }\n\n  init() {\n    if (this.property && this.item instanceof Form) {\n      this.field = this.item.getField(this.property);\n    } else if (!this.field && this.config) {\n      this.field = new Field(this.property || 'input', this.config);\n    }\n    if (!this.field) {\n      return;\n    }\n    if (!this.control) {\n      this.control = this.group ? this.group.get(this.field.property) : new FormControl();\n    }\n    if (!this.group) {\n      this.group = new FormGroup({\n        [this.property || this.field.property || 'input']: this.control\n      });\n    }\n    const data = {\n      group: this.group,\n      control: this.control || this.group ? this.group.get(this.field.property) : null,\n      item: this.item,\n      field: this.field,\n      input: this,\n      config: this.config || this.field.config || {},\n      focusEvent: this.focusEvent\n    };\n    const componentRef = this.loadComponent(this.component || this.field.input || DefaultInputComponent, data);\n    this.componentInstance = componentRef.instance;\n    this.connectControl();\n    this.ready.emit(this);\n    if (this.componentInstance.control) {\n      this.componentInstance.control.valueChanges\n        .pipe(\n          debounceTime(this.debounce)\n        ).subscribe((change) => {\n          this.changed.emit(change);\n          this.propagateChange(change);\n        });\n    }\n    if (this.field && typeof this.field.init === 'function') {\n      this.field.init(this.componentInstance, this);\n    }\n  }\n\n  connectControl() {\n    if (!this.componentInstance) {\n      // console.warn('could not connect control: no instance loaded');\n      return;\n    }\n    if (this.componentInstance.registerOnChange && this.propagateChange) {\n      this.componentInstance.registerOnChange(this.propagateChange);\n    }\n    if (this.value !== undefined) {\n      this.writeValue(this.value);\n    }\n  }\n\n  /** writes value to editor on outside model change. */\n  writeValue(value: any) {\n    if (this.componentInstance && this.componentInstance.writeValue) {\n      this.componentInstance.writeValue(value);\n    }\n    this.value = value;\n  }\n\n  propagateChange = (_: any) => {\n  }\n\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n    this.connectControl();\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InputErrorsComponent.html":{"url":"components/InputErrorsComponent.html","title":"component - InputErrorsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  InputErrorsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/input-errors/input-errors.component.ts\n\n\n    \n        Description\n    \n    \n        This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-input-errors\n            \n\n\n\n\n            \n                templateUrl\n                ./input-errors.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                getErrors\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                control\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n\n                \n                    \n                            Imported error messages. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        control\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:12\n                            \n                        \n                \n                    \n                        The form control that should be tracked \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            getErrors\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getErrors()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:18\n                            \n                        \n\n\n                \n                    \n                            This method will iterate over the control errors and generate objects for the template. \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/input-errors/input-errors.component.ts:14\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { SymbolService } from '../../symbol/symbol.service';\n\n/** This component keeps track of a form control's errors and displays them. It is meant to be used beneath a form control. */\n@Component({\n  selector: 'ec-input-errors',\n  templateUrl: './input-errors.component.html',\n})\nexport class InputErrorsComponent {\n  /** The form control that should be tracked */\n  @Input() control: FormControl;\n  /** Imported error messages. */\n  constructor(public symbol: SymbolService) {\n  }\n\n  /** This method will iterate over the control errors and generate objects for the template. */\n  public getErrors() {\n    return Object.keys(this.control.errors).reduce((errs, key) => {\n      let message;\n      if (key === 'custom') {\n        message = this.control.errors[key];\n      } else {\n        message = this.symbol.resolve('error.input.' + key) || this.symbol.resolve('error.input.invalid');\n      }\n      errs.push({\n        key: key,\n        error: this.control.errors[key],\n        message\n      });\n      return errs;\n    }, []);\n  }\n\n}\n\n    \n\n    \n        \n  {{error.message}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{error.message}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'InputErrorsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/IoModule.html":{"url":"modules/IoModule.html","title":"module - IoModule","body":"\n                   \n\n\n\n\n    Modules\n    IoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\n\n\nIoModule\n\nIoModule\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/io/io.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            DynamicRackComponent\n                        \n                        \n                            DynamicSlotComponent\n                        \n                        \n                            InputComponent\n                        \n                        \n                            InputErrorsComponent\n                        \n                        \n                            OutputComponent\n                        \n                        \n                            SlotHostDirective\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DynamicSlotComponent } from './dynamic-slot/dynamic-slot.component';\nimport { SlotHostDirective } from './slot-host.directive';\nimport { OutputComponent } from './output/output.component';\nimport { InputComponent } from './input/input.component';\nimport { InputErrorsComponent } from './input-errors/input-errors.component';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { DynamicRackComponent } from './dynamic-rack/dynamic-rack.component';\n\n@NgModule({\n  entryComponents: [\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n  ],\n  declarations: [\n    InputErrorsComponent,\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n  ],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n  ],\n  exports: [\n    SlotHostDirective,\n    DynamicSlotComponent,\n    DynamicRackComponent,\n    InputComponent,\n    OutputComponent,\n    InputErrorsComponent,\n    ReactiveFormsModule,\n  ],\n  providers: []\n})\nexport class IoModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ItemConfig.html":{"url":"interfaces/ItemConfig.html","title":"interface - ItemConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ItemConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/item/item-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                An ItemConfig describes an abstract entity with certain properties.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        classes\n                                \n                                \n                                            Optional\n                                        fields\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        identifierPattern\n                                \n                                \n                                            Optional\n                                        label\n                                \n                                \n                                            Optional\n                                        onEdit\n                                \n                                \n                                            Optional\n                                        onSave\n                                \n                                \n                                            Optional\n                                        parent\n                                \n                                \n                                            Optional\n                                        resolve\n                                \n                                \n                                            Optional\n                                        title\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        classes\n                                    \n                                \n                                \n                                    \n                                        classes:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Items field Config \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to identify items from another (e.g. in a selection). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifierPattern\n                                    \n                                \n                                \n                                    \n                                        identifierPattern:     RegExp\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     RegExp\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Pattern of the identifier field. Is used e.g. in the searchbar \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                    \n                                \n                                \n                                    \n                                        label:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The Property that is used to display the item for humans \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onEdit\n                                    \n                                \n                                \n                                    \n                                        onEdit:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked before the item is edited \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        onSave\n                                    \n                                \n                                \n                                    \n                                        onSave:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Callback that is invoked when the item is saved \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        parent\n                                    \n                                \n                                \n                                    \n                                        parent:     any\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     any\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resolve\n                                    \n                                \n                                \n                                    \n                                        resolve:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Custom resolve path function. It can be used e.g. to access subbranches of an Object. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For primitive values only: the title for the item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of the Item. It determines how it will be displayed in different contexts \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Item } from './item';\nimport { FieldConfig } from '../config/field-config.interface';\n\n/** An ItemConfig describes an abstract entity with certain properties.*/\nexport interface ItemConfig {\n  /** For primitive values only: the title for the item */\n  title?: string;\n  /** The Property that is used to identify items from another (e.g. in a selection). */\n  identifier?: string;\n  /** Pattern of the identifier field. Is used e.g. in the searchbar */\n  identifierPattern?: RegExp;\n  /** The Property that is used to display the item for humans */\n  label?: string;\n  /** The Items field Config */\n  fields?: FieldConfig;\n  /** The type of the Item. It determines how it will be displayed in different contexts */\n  type?: string;\n  /** Custom resolve path function. It can be used e.g. to access subbranches of an Object. */\n  resolve?: (body: T) => any;\n  /** Contains the parent Instance which inhabits the item. This property is set programmatically and therefore meant to be readonly.*/\n  parent?: any;\n  /** Callback that is invoked when the item is saved */\n  onSave?: (item?: Item, value?: Object) => Promise | T; // TODO rename to save\n  /** Callback that is invoked before the item is edited */\n  onEdit?: (value?: T) => Promise | T; // TODO rename to save\n  /** This method can be used to set custom classes based on item contents. Used e.g. in list-items for row class */\n  classes?: (item?: Item) => string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListComponent.html":{"url":"components/ListComponent.html","title":"component - ListComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list.component.ts\n\n\n    \n        Description\n    \n    \n        The ListComponent will render a list containing the given items or collection.\nhttps://components.entrecode.de/ui/list/basic?e=1\nhttps://components.entrecode.de/ui/list/transforms?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list\n            \n\n\n\n            \n                template\n                listTemplate\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                config\n                            \n                            \n                                focusItem\n                            \n                            \n                                isLoading\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                filter\n                            \n                            \n                                focusFirst\n                            \n                            \n                                focusNext\n                            \n                            \n                                focusPrev\n                            \n                            \n                                init\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                selectIndex\n                            \n                            \n                                showHeader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                autoFocusFirst\n                            \n                            \n                                collection\n                            \n                            \n                                config\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                pagination\n                            \n                            \n                                paginationConfig\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                columnClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        autoFocusFirst\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:52\n                            \n                        \n                \n                    \n                        If true, the first item in the list will always be focused after changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        collection\n                    \n                \n                \n                    \n                        Type :     Collection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:36\n                            \n                        \n                \n                    \n                        The used collection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:32\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Array\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:34\n                            \n                        \n                \n                    \n                        The visible items \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:46\n                            \n                        \n                \n                    \n                        The Instance of the List \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :     Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:48\n                            \n                        \n                \n                    \n                        Pagination that should be used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        paginationConfig\n                    \n                \n                \n                    \n                        Type :     PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:50\n                            \n                        \n                \n                    \n                        Custom PaginationConfig \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:38\n                            \n                        \n                \n                    \n                        The used selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:40\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:56\n                            \n                        \n                \n                    \n                        emits after the list changed \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:42\n                            \n                        \n                \n                    \n                        Event emitter on item selection \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:44\n                            \n                        \n                \n                    \n                        Event emitter on selection change \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:102\n                            \n                        \n\n\n                \n                    \n                            Column click handler. Triggers select.emit(item) with fallback to selection.toggle\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filter\n                            \n                            \n                        \n                    \n                \n                \n                    \nfilter(property, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:155\n                            \n                        \n\n\n                \n                    \n                            Filters the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:123\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusNext\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusNext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:129\n                            \n                        \n\n\n                \n                    \n                            Selects the next item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusPrev\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocusPrev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:142\n                            \n                        \n\n\n                \n                    \n                            Selects the previous item \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:75\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Changing items or collection will trigger reconstructing the list with the new items.\nChanging the selection will reconstruct the selection \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectIndex\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectIndex(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:116\n                            \n                        \n\n\n                \n                    \n                            Selects the item with the given index \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showHeader\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowHeader()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:110\n                            \n                        \n\n\n                \n                    \n                            Decides if the header should be visible or not \n\n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:27\n                            \n                        \n\n                \n                    \n                        The current list config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusItem\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:54\n                            \n                        \n\n                \n                    \n                        Current focus \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLoading\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:30\n                            \n                        \n\n                \n                    \n                        Config input for List \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list.component.ts:59\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List\nThe List is one of the main components to work with.\nThe basic idea is to display collections of data in a structured but flexible way.\nYou can create a new List like this:\nthis.trees = new List(\n//first argument: Array of Objects\n[{\n  name: 'Appletree',\n  height: 10,\n  fruits: true\n}, {\n  name: 'Lemontree',\n  height: 8,\n  fruits: true\n}, {\n  name: 'Birch',\n  height: 20,\n  fruits: false\n}],\n//second (optional) argument: ListConfig\n{\n  fields: {\n    name: {\n      label: 'Name'\n    },\n    height: {\n      label: 'Height',\n      group: (h) => h > 10 ? 'Higher than 10m' : 'Lower than 10m'\n    },\n    fruits: {\n      label: 'Has Fruits?',\n      display: (value) => value ? 'yes' : 'no'\n    },\n  }\n})This is how you display a List instance into your template:\n\n    \n\n    \n        import {\n  Component, EventEmitter, Input, OnChanges, Output, ViewEncapsulation,\n  ChangeDetectionStrategy, ChangeDetectorRef\n} from '@angular/core';\nimport { Collection, List, ListConfig, Selection, Pagination } from '@ec.components/core';\nimport { Item } from '@ec.components/core';\nimport { PaginationConfig } from './pagination/pagination-config.interface';\nimport { ListConfigService } from './list-config.service';\n\nimport { listTemplate } from './list.component.html';\n\n/**\n * The ListComponent will render a list containing the given items or collection.\n *\n * https://components.entrecode.de/ui/list/basic?e=1\n * https://components.entrecode.de/ui/list/transforms?e=1\n * */\n@Component({\n  selector: 'ec-list',\n  /* templateUrl: './list.component.html', */\n  template: listTemplate,\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListComponent implements OnChanges {\n  /** The current list config */\n  config: ListConfig = {};\n  /** Config input for List */\n  /** Flag that flips true when loading. */\n  isLoading = false;\n  // tslint:disable-next-line:no-input-rename\n  @Input('config') configInput: ListConfig;\n  /** The visible items */\n  @Input() items: Array;\n  /** The used collection */\n  @Input() collection: Collection;\n  /** The used selection */\n  @Input() selection: Selection;\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** Event emitter on item selection */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n  /** Event emitter on selection change */\n  @Output() selected: EventEmitter> = new EventEmitter();\n  /** The Instance of the List */\n  @Input() list: List;\n  /** Pagination that should be used */\n  @Input() pagination: Pagination;\n  /** Custom PaginationConfig */\n  @Input() paginationConfig: PaginationConfig;\n  /** If true, the first item in the list will always be focused after changed */\n  @Input() autoFocusFirst = false;\n  /** Current focus */\n  focusItem: Item;\n  /** emits after the list changed */\n  @Output() changed: EventEmitter> = new EventEmitter();\n\n  constructor(\n    public listConfig: ListConfigService,\n    public cdr: ChangeDetectorRef\n  ) {\n  }\n\n  /** Changing items or collection will trigger reconstructing the list with the new items.\n   * Changing the selection will reconstruct the selection */\n  ngOnChanges(changes?) {\n    this.config = Object.assign(this.config || {}, this.configInput || {});\n    if (this.items) {\n      this.init(new List(this.items, this.config, this.pagination));\n    } else if (this.collection) {\n      this.init(new List(this.collection.items, this.config, this.pagination));\n    }\n  }\n\n  init(list: List) {\n    if (!list) {\n      console.warn('tried to init list.component with undefined list');\n      return;\n    }\n    this.list = list;\n    this.listConfig.applyConfig(this.list);\n    this.list.change$.subscribe(() => {\n      if (this.autoFocusFirst || this.list.isFiltered()) {\n        this.focusFirst();\n      } else {\n        delete this.focusItem;\n      }\n      this.cdr.markForCheck();\n      this.changed.emit(this.list);\n    });\n    if (!this.selection) {\n      this.selection = new Selection([], this.list.config);\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe((selection: Selection) => {\n        this.selected.emit(selection);\n      });\n    }\n  }\n\n  /** Column click handler. Triggers select.emit(item) with fallback to selection.toggle*/\n  columnClick(item) {\n    if (this.list.config.selectMode && this.selection) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      return this.columnClicked.emit(item);\n    }\n  }\n  /** Decides if the header should be visible or not */\n  showHeader() {\n    return this.list && this.list.config && !this.list.config.disableHeader && (this.list.fields.length || this.list.config.title);\n    /* && (this.list.config.alwaysShowHeader || !this.list.isEmpty()); */\n  }\n\n  /** Selects the item with the given index */\n  selectIndex(index: number) {\n    if (!this.selection || this.list.isEmpty() || !this.list.items[index]) {\n      return;\n    }\n    this.selection.select(this.list.items[index]);\n  }\n\n  focusFirst() {\n    delete this.focusItem;\n    this.focusNext();\n  }\n\n  /** Selects the next item */\n  focusNext() {\n    if (!this.list) {\n      return;\n    }\n    let index = 0;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Selects the previous item */\n  focusPrev() {\n    if (!this.list) {\n      return;\n    }\n    let index = this.list.page.length - 1;\n    if (this.focusItem) {\n      index = this.list.page.indexOf(this.focusItem) + this.list.page.length - 1;\n    }\n    this.focusItem = this.list.page[index % this.list.page.length];\n    this.cdr.markForCheck();\n  }\n\n  /** Filters the list */\n  filter(property, value) {\n    this.list.filter(property, value);\n  }\n}\n\n    \n\n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'listTemplate'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ListConfig.html":{"url":"interfaces/ListConfig.html","title":"interface - ListConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ListConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/list/list-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for List Classes.\n\n            \n\n            \n                Extends\n            \n            \n                    ItemConfig\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        alwaysShowHeader\n                                \n                                \n                                            Optional\n                                        autoload\n                                \n                                \n                                            Optional\n                                        availableSizes\n                                \n                                \n                                            Optional\n                                        defaultFilter\n                                \n                                \n                                            Optional\n                                        desc\n                                \n                                \n                                            Optional\n                                        disableColumnFilter\n                                \n                                \n                                            Optional\n                                        disableDrag\n                                \n                                \n                                            Optional\n                                        disableDropdown\n                                \n                                \n                                            Optional\n                                        disableHeader\n                                \n                                \n                                            Optional\n                                        disableRemove\n                                \n                                \n                                            Optional\n                                        disableSearchbar\n                                \n                                \n                                            Optional\n                                        display\n                                \n                                \n                                            Optional\n                                        filter\n                                \n                                \n                                            Optional\n                                        hidePagination\n                                \n                                \n                                            Optional\n                                        maxColumns\n                                \n                                \n                                            Optional\n                                        page\n                                \n                                \n                                            Optional\n                                        popColumns\n                                \n                                \n                                            Optional\n                                        query\n                                \n                                \n                                            Optional\n                                        selectMode\n                                \n                                \n                                            Optional\n                                        size\n                                \n                                \n                                            Optional\n                                        solo\n                                \n                                \n                                            Optional\n                                        sort\n                                \n                                \n                                            Optional\n                                        sortBy\n                                \n                                \n                                            Optional\n                                        storageKey\n                                \n                                \n                                            Optional\n                                        title\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        alwaysShowHeader\n                                    \n                                \n                                \n                                    \n                                        alwaysShowHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the header will also be shown when the list is empty. Defaults to false \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        autoload\n                                    \n                                \n                                \n                                    \n                                        autoload:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will automatically load on change \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        availableSizes\n                                    \n                                \n                                \n                                    \n                                        availableSizes:     number[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The available sizes. If not set, the size cannot be changed \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        defaultFilter\n                                    \n                                \n                                \n                                    \n                                        defaultFilter:     string | boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set, a filter input for the given field property will be shown by default \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        desc\n                                    \n                                \n                                \n                                    \n                                        desc:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If set to true, the sorting will be descending \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableColumnFilter\n                                    \n                                \n                                \n                                    \n                                        disableColumnFilter:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no column filter will be shown in the list header \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDrag\n                                    \n                                \n                                \n                                    \n                                        disableDrag:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, select items cannot be dragged \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableDropdown\n                                    \n                                \n                                \n                                    \n                                        disableDropdown:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no dropdown will be shown for a select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableHeader\n                                    \n                                \n                                \n                                    \n                                        disableHeader:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will have no header. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableRemove\n                                    \n                                \n                                \n                                    \n                                        disableRemove:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, removal of items wont be possible (select) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        disableSearchbar\n                                    \n                                \n                                \n                                    \n                                        disableSearchbar:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no select dropdown will be shown on ec-select \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        display\n                                    \n                                \n                                \n                                    \n                                        display:     function\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     function\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Transforms the Items before they are displayed, e.g. to apply a filter for the view *\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        filter\n                                    \n                                \n                                \n                                    \n                                        filter:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    tells the list to show only items that match the filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        hidePagination\n                                    \n                                \n                                \n                                    \n                                        hidePagination:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the default pagination will not be visible. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        maxColumns\n                                    \n                                \n                                \n                                    \n                                        maxColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Maximal visible columns. Defaults to 8 \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        page\n                                    \n                                \n                                \n                                    \n                                        page:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The current active page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        popColumns\n                                    \n                                \n                                \n                                    \n                                        popColumns:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    how many columns should the pop have? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        query\n                                    \n                                \n                                \n                                    \n                                        query:     literal type\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     literal type\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    a query that will be turned in to a filter \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        selectMode\n                                    \n                                \n                                \n                                    \n                                        selectMode:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the list will show its checkboxes and will select on column click.\nThe columnClicked output will be ignored as long selectMode is active \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        size\n                                    \n                                \n                                \n                                    \n                                        size:     number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The number of items per page \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        solo\n                                    \n                                \n                                \n                                    \n                                        solo:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Should the selection be solo? \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sort\n                                    \n                                \n                                \n                                    \n                                        sort:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of properties that is sorted after, experimental... \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        sortBy\n                                    \n                                \n                                \n                                    \n                                        sortBy:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The property name that is sorted after \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        storageKey\n                                    \n                                \n                                \n                                    \n                                        storageKey:     string | \n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | \n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The key that should store the lists config in the local storage.\nIf set, the key will be populated on config changes. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    For lists with primitive values only: the title of the list header \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { ItemConfig } from '../item/item-config.interface';\nimport { List } from '../list/list';\nimport { Item } from '../item/item';\n\n/**\n *  Configuration for List Classes.\n * */\nexport interface ListConfig extends ItemConfig {\n  /** For lists with primitive values only: the title of the list header */\n  title?: string;\n  /** The property name that is sorted after */\n  sortBy?: string;\n  /** Array of properties that is sorted after, experimental... */\n  sort?: string[];\n  /** If set to true, the sorting will be descending */\n  desc?: boolean;\n  /** If true, the list will show its checkboxes and will select on column click.\n   * The columnClicked output will be ignored as long selectMode is active */\n  selectMode?: boolean;\n  /** If true, no select dropdown will be shown on ec-select */\n  disableSearchbar?: boolean;\n  /** If true, the list will have no header. */\n  disableHeader?: boolean;\n  /** If true, the header will also be shown when the list is empty. Defaults to false */\n  alwaysShowHeader?: boolean;\n  /** If true, no dropdown will be shown for a select */\n  disableDropdown?: boolean;\n  /** If true, removal of items wont be possible (select) */\n  disableRemove?: boolean;\n  /** If true, no column filter will be shown in the list header */\n  disableColumnFilter?: boolean;\n  /** If true, select items cannot be dragged */\n  disableDrag?: boolean;\n  /** If true, the default pagination will not be visible. */\n  hidePagination?: boolean;\n  /** The current active page */\n  page?: number;\n  /** The number of items per page */\n  size?: number;\n  /** The available sizes. If not set, the size cannot be changed */\n  availableSizes?: number[];\n  /** Should the selection be solo? */\n  solo?: boolean;\n  /** tells the list to show only items that match the filter */\n  filter?: { [key: string]: any };\n  /** a query that will be turned in to a filter */\n  query?: { [key: string]: any };\n  /** Maximal visible columns. Defaults to 8 */\n  maxColumns?: number;\n  /** how many columns should the pop have? */\n  popColumns?: number;\n  /** If true, the list will automatically load on change */\n  autoload?: boolean;\n  /** The key that should store the lists config in the local storage.\n   * If set, the key will be populated on config changes. */\n  storageKey?: string | ((list: List) => string);\n  /** Transforms the Items before they are displayed, e.g. to apply a filter for the view **/\n  display?: (items: Item[]) => Item[];\n  /** If set, a filter input for the given field property will be shown by default */\n  defaultFilter?: string | boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ListConfigService.html":{"url":"injectables/ListConfigService.html","title":"injectable - ListConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ListConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/list-config.service.ts\n        \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                storageKeyResolver\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                applyConfig\n                            \n                            \n                                getStorageKey\n                            \n                            \n                                retrieve\n                            \n                            \n                                set\n                            \n                            \n                                store\n                            \n                            \n                                storeConfig\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            applyConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \napplyConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:44\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getStorageKey\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetStorageKey(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:23\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            retrieve\n                            \n                            \n                        \n                    \n                \n                \n                    \nretrieve(key)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:9\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(key, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:14\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            store\n                            \n                            \n                        \n                    \n                \n                \n                    \nstore(key, config)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:18\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            storeConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \nstoreConfig(list: List)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        list\n                                                        \n                                                                    List\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            storageKeyResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     function\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-config.service.ts:7\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { List } from '@ec.components/core';\n\n@Injectable()\nexport class ListConfigService {\n\n    public storageKeyResolver: (list: List) => string;\n\n    retrieve(key) {\n        const config = localStorage.getItem(key);\n        return config ? JSON.parse(config) : null;\n    }\n\n    set(key, value) {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n\n    store(key, config) {\n        const existing = this.retrieve(key) || {};\n        localStorage.setItem(key, JSON.stringify(Object.assign(existing, config)));\n    }\n\n    getStorageKey(list: List) {\n        if (!list || !list.fields || !list.config || !list.config.storageKey) {\n            // console.log('cannot apply config: no storage key or list set');\n            return;\n        }\n        const resolveFn = list.config.storageKey || this.storageKeyResolver;\n        if (typeof resolveFn === 'function') {\n            return resolveFn(list);\n        }\n        return list.config.storageKey;\n    }\n\n    storeConfig(list: List) {\n        const key = this.getStorageKey(list);\n        if (!key) {\n            return;\n        }\n        const config = { hide: list.fields.filter(f => f.hideInList).map(f => f.property) };\n        this.store(key, config);\n    }\n\n    applyConfig(list: List) {\n        const key = this.getStorageKey(list);\n        if (!key) {\n            return;\n        }\n        const existing = this.retrieve(key);\n        if (existing && existing.hide) {\n            list.fields.forEach(field => field.hideInList = false);\n            existing.hide.forEach(property => {\n                const field = list.fields.find(f => f.property === property);\n                if (!field) {\n                    console.warn('field ', property, ' not found');\n                    return;\n                }\n                field.hideInList = true;\n            });\n        }\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListHeaderComponent.html":{"url":"components/ListHeaderComponent.html","title":"component - ListHeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListHeaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-header/list-header.component.ts\n\n\n    \n        Description\n    \n    \n        This component renders, as the name states, the header of a list.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-header\n            \n\n\n\n\n            \n                templateUrl\n                ./list-header.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                filteredField\n                            \n                            \n                                filterForm\n                            \n                            \n                                filterFormConfig\n                            \n                            \n                                filterInput\n                            \n                            \n                                filterPop\n                            \n                            \n                                    Public\n                                listConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clearFilter\n                            \n                            \n                                    Public\n                                filterField\n                            \n                            \n                                initFilterForm\n                            \n                            \n                                inputReady\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                resetFilter\n                            \n                            \n                                setFilter\n                            \n                            \n                                toggledFilterPop\n                            \n                            \n                                    Public\n                                toggleVisibility\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(listConfig: ListConfigService, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        listConfig\n                                                  \n                                                        \n                                                                    ListConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:16\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:18\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clearFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nclearFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:112\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filterField\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        filterField(property)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:82\n                            \n                        \n\n\n                \n                    \n                            opens the given filter pop and closes all others \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initFilterForm\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitFilterForm(filterForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filterForm\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            inputReady\n                            \n                            \n                        \n                    \n                \n                \n                    \ninputReady(input)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges(changes?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        changes\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resetFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nresetFilter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setFilter\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetFilter(field, value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:30\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggledFilterPop\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggledFilterPop(active)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:121\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        active\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleVisibility\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleVisibility(field: Field)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:131\n                            \n                        \n\n\n                \n                    \n                            Toggles the fields visibility in the list \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        field\n                                                        \n                                                                    Field\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filteredField\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterFormConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:22\n                            \n                        \n\n                \n                    \n                        The config for the filter form \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            filterPop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('filterPop')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:20\n                            \n                        \n\n                \n                    \n                        The pop dropdowns that contain the filtering \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            listConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfigService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-header/list-header.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        List Header\nThis document conceptualizes the ec-list-header.\nIdea\nThe list-header displays the field labels in columns. If a fields are sortable or filterable, a clickeable icons will be shown.\nFiltering\nIf a field has the option \"filterable\" set to true, a search icon will be shown. When clicking the icon, an input field will appear above the list header which can be used to filter the list by the field property.\n\nThe input field will be autofocused\nNo validation errors should be shown\nWhen the input value changes, the list will load after a short debounce.\nWhen the input is closed, the filter will be cleared.\nWhen another field's search icon is clicked, all previous filters will be cleared.\n\n\n    \n\n    \n        import { ChangeDetectionStrategy, ChangeDetectorRef, Component, Input, OnChanges, ViewChild } from '@angular/core';\nimport { Field, List, ListConfig, Selection } from '@ec.components/core';\nimport { FormComponent } from '../../form/form.component';\nimport { PopComponent } from '../../pop/pop.component';\nimport { ListConfigService } from '../list-config.service';\nimport { InputComponent } from '../../io/input/input.component';\n\n/** This component renders, as the name states, the header of a list.*/\n@Component({\n  selector: 'ec-list-header',\n  templateUrl: './list-header.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListHeaderComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** The pop dropdowns that contain the filtering */\n  @ViewChild('filterPop') filterPop: PopComponent;\n  /** The config for the filter form */\n  filterFormConfig: ListConfig;\n  filteredField: any;\n  filterForm: FormComponent;\n  filterInput: InputComponent;\n\n  constructor(public listConfig: ListConfigService, public cdr: ChangeDetectorRef) {\n  }\n\n  setFilter(field, value) {\n    this.list.setFilter({ [field.property]: value });\n  }\n\n  inputReady(input) {\n    this.filterInput = input;\n    input.focus(true);\n  }\n\n  initFilterForm(filterForm) {\n    // is called when form is ready\n    this.filterForm = filterForm;\n    if (this.list.config.defaultFilter) {\n      this.filterField(this.list.config.defaultFilter);\n    }\n  }\n\n  ngOnChanges(changes?) {\n    if (!changes.list) {\n      return;\n    }\n    if (!this.list || !this.list.config || !this.list.config.fields) {\n      return;\n    }\n    /* this.list.change$.subscribe(() => {\n      if (this.filterInput) {\n        // this.filterInput.focus(true);\n      }\n    }); */\n    this.filterFormConfig = {\n      ...this.list.config,\n      fields: this.list.filterableFields().reduce((fields, field) => {\n        return {\n          ...fields,\n          [field.property]: {\n            ...this.list.config.fields[field.property],\n            required: false,\n            readOnly: false,\n            immutable: false,\n            form: true,\n            autofocus: true,\n            nestedCrudConfig: {\n              ...field.nestedCrudConfig,\n              methods: ['get'],\n            },\n          }\n        };\n      }, {})\n    };\n  }\n\n  /** opens the given filter pop and closes all others */\n  public filterField(property) {\n    if (this.filteredField) {\n      if (this.filteredField.property === property) {\n        /* this.filterPop.hide(); */\n        if (this.filterInput) {\n          this.filterInput.focus(true);\n        }\n        return;\n      }\n      this.clearFilter();\n    }\n    // patch current filter value to control\n    const control = this.filterForm.group.get(property);\n    if (!control) {\n      console.warn('no control found for ' + property + '. Is it filterable?', this.list.config);\n      return;\n    }\n    this.filterForm.group.get(property).patchValue(this.list.getFilterValue(property));\n    this.filteredField = this.filterForm.form.getField(property);\n    setTimeout(() => this.filterPop.show());\n  }\n\n  resetFilter() {\n    if (!this.filteredField || !this.list || !this.list.isFiltered(this.filteredField.property)) {\n      return;\n    }\n    this.filterForm.group.get(this.filteredField.property).reset();\n    this.list.clearFilter();\n  }\n\n  clearFilter() {\n    if (!this.filteredField || !this.list.isFiltered(this.filteredField.property)) {\n      delete this.filteredField;\n      return;\n    }\n    this.resetFilter();\n    delete this.filteredField;\n  }\n\n  toggledFilterPop(active) {\n    if (!active) {\n      this.clearFilter();\n    }\n    if (this.filterInput) {\n      this.filterInput.focus(true);\n    }\n  }\n\n  /** Toggles the fields visibility in the list */\n  public toggleVisibility(field: Field) {\n    this.list.toggleVisibility(field);\n    this.listConfig.storeConfig(this.list);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{filteredField.getLabel()}}\n      \n      \n        \n          {{filteredField.getLabel()}}\n        \n      \n     -->\n    \n\n    \n       -->\n      \n    \n\n    \n      \n        \n      \n      \n        \n          \n            \n              \n              \n            \n            {{field.getLabel()}}\n          \n        \n      \n    \n  \n\n\n  \n  \n    \n      \n    \n    \n      \n      \n        \n      \n      \n        \n       -->\n      \n      \n        {{field.getLabel()}}\n      \n      \n        \n        \n      \n    \n\n    \n      &#9776;\n      \n        \n          \n            \n              {{field.getLabel()}}\n            \n          \n        \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{filteredField.getLabel()}}                              {{filteredField.getLabel()}}                   -->               -->                                                                                                                          {{field.getLabel()}}                                                                                                   -->                    {{field.getLabel()}}                                                ☰                                                  {{field.getLabel()}}                                          '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListHeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ListItemsComponent.html":{"url":"components/ListItemsComponent.html","title":"component - ListItemsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ListItemsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/list-items/list-items.component.ts\n\n\n    \n        Description\n    \n    \n        The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\nIt can either be given an Array of Items or just the list parent to control the shown items. \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-list-items\n            \n\n\n\n\n            \n                templateUrl\n                ./list-items.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                columnClick\n                            \n                            \n                                hasFocus\n                            \n                            \n                                isClickable\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                focusItem\n                            \n                            \n                                items\n                            \n                            \n                                list\n                            \n                            \n                                selection\n                            \n                            \n                                solo\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        focusItem\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:22\n                            \n                        \n                \n                    \n                        The current focused item \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        items\n                    \n                \n                \n                    \n                        Type :     Item[]\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:18\n                            \n                        \n                \n                    \n                        An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        list\n                    \n                \n                \n                    \n                        Type :     List\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:14\n                            \n                        \n                \n                    \n                        The list instance \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:16\n                            \n                        \n                \n                    \n                        The selection instance. This is optional. If It is not provided, no checkbox will be visible.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        solo\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:20\n                            \n                        \n                \n                    \n                        If true, only one item is selectable next \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:24\n                            \n                        \n                \n                    \n                        Event emitter on item clicked \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            columnClick\n                            \n                            \n                        \n                    \n                \n                \n                    \ncolumnClick(item: Item, e: Event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:54\n                            \n                        \n\n\n                \n                    \n                            Propagate clicked item to host or toggle selection. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                        \n                                                                    Event\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasFocus\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasFocus(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            yields true if the item is focussed \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isClickable\n                            \n                            \n                        \n                    \n                \n                \n                    \nisClickable()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:49\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            Checks for host and uses its list. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/list-items/list-items.component.ts:27\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Item, List, Selection } from '@ec.components/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\n\n/** The ListItemsComponent displays the actual list, without all peripherals (header, pagination etc.).\n * It can either be given an Array of Items or just the list parent to control the shown items. */\n@Component({\n  selector: 'ec-list-items',\n  templateUrl: './list-items.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListItemsComponent implements OnChanges {\n  /** The list instance */\n  @Input() list: List;\n  /** The selection instance. This is optional. If It is not provided, no checkbox will be visible.*/\n  @Input() selection: Selection;\n  /** An Optional Array of Item's that should be displayed. If none are provded, the list Items are used.*/\n  @Input() items: Item[];\n  /** If true, only one item is selectable next */\n  @Input() solo: boolean;\n  /** The current focused item */\n  @Input() focusItem: Item;\n  /** Event emitter on item clicked */\n  @Output() columnClicked: EventEmitter> = new EventEmitter();\n\n\n  constructor(public cdr: ChangeDetectorRef) { }\n  /** Checks for host and uses its list. */\n  ngOnChanges() {\n    if (!this.items && this.list) {\n      this.items = this.list.page;\n    }\n    if (this.list) {\n      this.list.change$.subscribe(newList => {\n        this.cdr.markForCheck();\n      });\n    }\n    if (this.selection) {\n      this.selection.update$.subscribe(newList => {\n        this.cdr.markForCheck();\n      });\n    }\n  }\n  /** yields true if the item is focussed */\n  hasFocus(item) {\n    return this.focusItem === item;\n  }\n\n  isClickable() {\n    return this.columnClicked.observers.length || (this.selection && this.list && this.list.config.selectMode);\n  }\n\n  /** Propagate clicked item to host or toggle selection. */\n  columnClick(item: Item, e: Event) {\n    e.stopPropagation();\n    e.stopImmediatePropagation();\n    if (this.selection && this.list && this.list.config.selectMode) {\n      this.selection.toggle(item, this.solo);\n    } else if (this.columnClicked.observers.length) {\n      this.columnClicked.emit(item);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ListItemsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ListModule.html":{"url":"modules/ListModule.html","title":"module - ListModule","body":"\n                   \n\n\n\n\n    Modules\n    ListModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_imports\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\n\nGroupPipe\n\nGroupPipe\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/list/list.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ListConfigService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            GroupPipe\n                        \n                        \n                            ListComponent\n                        \n                        \n                            ListHeaderComponent\n                        \n                        \n                            ListItemsComponent\n                        \n                        \n                            PaginationComponent\n                        \n                        \n                            SearchbarComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormModule } from '../form/form.module';\nimport { IconModule } from '../icon/icon.module';\nimport { SymbolModule } from '../symbol/symbol.module';\nimport { UtilityModule } from '../utility/utility.module';\nimport { GroupPipe } from './group.pipe';\nimport { ListHeaderComponent } from './list-header/list-header.component';\nimport { ListItemsComponent } from './list-items/list-items.component';\nimport { ListComponent } from './list.component';\nimport { PaginationComponent } from './pagination/pagination.component';\nimport { SearchbarComponent } from './searchbar/searchbar.component';\nimport { ListConfigService } from './list-config.service';\nimport { FormsModule } from '@angular/forms';\n\nexport const listModuleConfig = {\n  declarations: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    FormModule,\n    IconModule,\n    SymbolModule,\n    UtilityModule\n  ],\n  exports: [\n    ListComponent,\n    ListItemsComponent,\n    ListHeaderComponent,\n    PaginationComponent,\n    SearchbarComponent,\n    GroupPipe,\n    FormModule,\n  ],\n  providers: [\n    ListConfigService\n  ]\n};\n\n@NgModule(listModuleConfig)\nexport class ListModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoaderComponent.html":{"url":"components/LoaderComponent.html","title":"component - LoaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoaderComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/loader/loader.component.ts\n\n\n    \n        Description\n    \n    \n        The ec-loader can be plugged into various components to be triggered when they load stuff.\nhttps://components.entrecode.de/ui/loader?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-loader\n            \n\n\n\n\n            \n                templateUrl\n                ./loader.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                stack\n                            \n                            \n                                    Private\n                                timestamp\n                            \n                            \n                                    Private\n                                visible\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                hide\n                            \n                            \n                                    Private\n                                show\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(host: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                            Injects the host element. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        host\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:25\n                            \n                        \n\n\n                \n                    \n                            Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\nMake sure the given promise is catched (so the loader will stop loading on error)! \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection>\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:14\n                            \n                        \n\n                \n                    \n                        The current stack of loading promises.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timestamp\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:18\n                            \n                        \n\n                \n                    \n                        The timestamp of the last time a promise has been added to the stack. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            visible\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.component.ts:16\n                            \n                        \n\n                \n                    \n                        The loader's visibility status. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Loader\nThe loader can be used to indicate any kind of loading activity\nTemplate\n\n\nGlobal Loader\nLocal LoaderThe default classes can be found here.\nUsage\nYou can use a global loader that handles every action or use multiple local loaders:\nimport { LoaderComponent, LoaderService } from '@ec.components/ui';\nexport class MyApp {\n  @ViewChild('globalLoader') globalLoader: LoaderComponent;\n  @ViewChild('localLoader') localLoader: LoaderComponent;\n  constructor(private loaderService: LoaderService) {\n      this.loaderService.use(this.globalLoader); // set global loader\n  }\n  globalLoader() { // When not passing a loader to .wait, the global loader (set by .use) is used.\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)));\n  }\n  localLoader() {\n    this.loaderService.wait(new Promise((resolve) => setTimeout(resolve, 2000)), this.localLoader);\n    // this.localLoader.wait(new Promise((resolve) => setTimeout(resolve, 2000))); // alternative way\n  }\n}The advantage of local loaders is that you can place them in specific places of your template to only \"disable\" a part of your site while loading and not the whole page.\nSee the commented out line in localLoader for a direct way to trigger a loader without the service.\nHow it works\nEach time .wait is called on the LoaderService, the target loader throws the given promise on a stack. When all promises on the stack have been resolved, the loader is hidden. This is better than just a boolean switch because multiple loading activies do not interfere with each other.\n\n    \n\n    \n        import { Component, ElementRef, ChangeDetectionStrategy } from '@angular/core';\nimport { Collection } from '@ec.components/core';\n\n/** The ec-loader can be plugged into various components to be triggered when they load stuff.\n * https://components.entrecode.de/ui/loader?e=1\n*/\n@Component({\n  selector: 'ec-loader',\n  templateUrl: './loader.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LoaderComponent {\n  /** The current stack of loading promises.*/\n  private stack: Collection> = new Collection([]);\n  /** The loader's visibility status. */\n  private visible = false;\n  /** The timestamp of the last time a promise has been added to the stack. */\n  private timestamp;\n\n  /** Injects the host element. */\n  constructor(private host: ElementRef) {\n  }\n\n  /** Shows the loader by setting .visible to the host. This method is NOT meant to be used from outside, */\n  private show() {\n    this.visible = true; // show loader\n    this.host.nativeElement.classList.add('is-active');\n  }\n\n  /** Hide the loader by removing .visible from the host. This method is NOT meant to be used from outside, */\n  private hide() {\n    this.visible = false; // show loader\n    this.host.nativeElement.classList.remove('is-active');\n  }\n\n  /** Tells loader to show until the given promise resolves. (includes all other promises that are waited upon)\n   * Make sure the given promise is catched (so the loader will stop loading on error)! */\n  wait(promise: Promise) {\n    this.stack.add(promise); // add promise to stack\n    this.show();\n    const timestamp = Date.now();\n    this.timestamp = timestamp; // get timestamp\n    Promise.all(this.stack.items)\n      .then(() => {\n        if (timestamp === this.timestamp) {\n          this.hide();\n          this.stack.removeAll();\n        }\n      });\n    return promise;\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoaderModule.html":{"url":"modules/LoaderModule.html","title":"module - LoaderModule","body":"\n                   \n\n\n\n\n    Modules\n    LoaderModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\n\n\nLoaderModule\n\nLoaderModule\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            LoaderService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoaderComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\nimport { LoaderService } from './loader.service';\n\n@NgModule({\n  declarations: [\n    LoaderComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    LoaderComponent,\n  ],\n  providers: [LoaderService]\n})\nexport class LoaderModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoaderService.html":{"url":"injectables/LoaderService.html","title":"injectable - LoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/loader.service.ts\n        \n\n            \n                Description\n            \n            \n                The loader service registers promises \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                use\n                            \n                            \n                                wait\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:11\n                            \n                        \n\n\n                \n                    \n                            Sets a global loader that can be triggered without having the reference. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            wait\n                            \n                            \n                        \n                    \n                \n                \n                    \nwait(promise: Promise, loader: LoaderComponent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:16\n                            \n                        \n\n\n                \n                    \n                            Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        promise\n                                                        \n                                                                    Promise\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        loader\n                                                        \n                                                                    LoaderComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.loader\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/loader/loader.service.ts:8\n                            \n                        \n\n                \n                    \n                        The global loader that should be used if not loader is passed to wait. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { LoaderComponent } from './loader.component';\n\n/** The loader service registers promises */\n@Injectable()\nexport class LoaderService {\n  /** The global loader that should be used if not loader is passed to wait. */\n  loader: LoaderComponent;\n\n  /** Sets a global loader that can be triggered without having the reference. */\n  use(loader: LoaderComponent) {\n    this.loader = loader;\n  }\n\n  /** Tells the given loader to wait for the given promise. If no loader is given, the global loader is used (if set)*/\n  wait(promise: Promise, loader: LoaderComponent = this.loader) {\n    if (!loader || !promise) {\n      console.warn('cannot trigger loader: no promise or loader given');\n      return;\n    }\n    return loader.wait(promise);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationMapComponent.html":{"url":"components/LocationMapComponent.html","title":"component - LocationMapComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationMapComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-map.component.ts\n\n\n    \n        Description\n    \n    \n        Shows Google Maps Map \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-map\n            \n\n            \n                styleUrls\n                ./location-map.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-map.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                markerDragEnd\n                            \n                            \n                                setValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                center\n                            \n                            \n                                readOnly\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        center\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                \n                    \n                        Default value : { latitude: 48.8093253, longitude: 9.159388100000001 }\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:12\n                            \n                        \n                \n                    \n                        The desired map center \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:14\n                            \n                        \n                \n                    \n                        If true, no markers can be changed or set \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        value\n                    \n                \n                \n                    \n                        Type :     literal type\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:18\n                            \n                        \n                \n                    \n                        Form input component \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:16\n                            \n                        \n                \n                    \n                        Emits when the marker has been changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            markerDragEnd\n                            \n                            \n                        \n                    \n                \n                \n                    \nmarkerDragEnd(coords)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            changes value on marker dragend \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        coords\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-map.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            sets the value cand changes the center \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output } from '@angular/core';\n\n/** Shows Google Maps Map */\n@Component({\n    selector: 'ec-location-map',\n    templateUrl: './location-map.component.html',\n    styleUrls: ['./location-map.component.scss']\n})\n\nexport class LocationMapComponent {\n    /** The desired map center */\n    @Input() center: { longitude: any; latitude: any; } = { latitude: 48.8093253, longitude: 9.159388100000001 };\n    /** If true, no markers can be changed or set */\n    @Input() readOnly: boolean;\n    /** Emits when the marker has been changed */\n    @Output() changed: EventEmitter = new EventEmitter();\n    /** Form input component */\n    @Input() value: {\n        longitude: number,\n        latitude: number\n    };\n\n    /** sets the value cand changes the center */\n    setValue(value) {\n        this.value = value;\n        if (value) {\n            this.center = value;\n        }\n    }\n    /** changes value on marker dragend */\n    markerDragEnd(coords) {\n        if (!coords) {\n            console.warn('no coords');\n            return;\n        }\n        const position = { longitude: coords.lng, latitude: coords.lat };\n        this.setValue(position);\n        this.changed.emit(position);\n    }\n}\n\n    \n\n    \n        \n    \n\n    \n\n    \n                \n                    ./location-map.component.scss\n                \n                :host {\n    height: 300px;\n}\nagm-map {\n    height: 300px;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationMapComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LocationModule.html":{"url":"modules/LocationModule.html","title":"module - LocationModule","body":"\n                   \n\n\n\n\n    Modules\n    LocationModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_imports\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nUiModule\n\nUiModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/location/src/lib/location.module.ts\n        \n\n\n        \n            Description\n        \n        \n            This module holds all location/map related components and services \n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            LOCATION_COMPONENTS\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            GeocodeService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LocationMapComponent\n                        \n                        \n                            LocationPickerComponent\n                        \n                        \n                            LocationSearchComponent\n                        \n                    \n                \n            \n        \n\n        \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            forRoot\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        forRoot(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location.module.ts:34\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { AgmCoreModule } from '@agm/core';\nimport { CommonModule } from '@angular/common';\nimport { NgModule, ModuleWithProviders } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { UiModule } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationPickerComponent } from './location-picker.component';\nimport { LocationSearchComponent } from './location-search.component';\n/** The components of this module */\nconst LOCATION_COMPONENTS = [\n    LocationMapComponent,\n    LocationSearchComponent,\n    LocationPickerComponent,\n];\n\nexport const locationModuleConfig = {\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        UiModule,\n        AgmCoreModule.forRoot({\n            apiKey: 'AIzaSyAdgEUE1Yxo1F-qb1MrO56u5KATpX9j8o4',\n            libraries: ['places']\n        })],\n    exports: LOCATION_COMPONENTS,\n    declarations: LOCATION_COMPONENTS,\n    entryComponents: LOCATION_COMPONENTS,\n    providers: [GeocodeService],\n};\n/** This module holds all location/map related components and services */\n@NgModule(locationModuleConfig)\nexport class LocationModule {\n    static forRoot({ apiKey }): ModuleWithProviders {\n        return {\n            ngModule: LocationModule,\n            providers: [\n                {\n                    provide: 'googlemaps.apiKey',\n                    useValue: apiKey\n                }\n            ]\n        };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationPickerComponent.html":{"url":"components/LocationPickerComponent.html","title":"component - LocationPickerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationPickerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-picker.component.ts\n\n\n    \n        Description\n    \n    \n        Component with map and autocomplete input to pick a location. Implements ControlValueAccessor \n\n    \n\n    \n        Extends\n    \n    \n            DefaultInputComponent\n    \n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => LocationPickerComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-location-picker\n            \n\n            \n                styleUrls\n                ./location-picker.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./location-picker.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                geocodeService\n                            \n                            \n                                input\n                            \n                            \n                                map\n                            \n                            \n                                propagateChange\n                            \n                            \n                                search\n                            \n                            \n                                    Public\n                                control\n                            \n                            \n                                    Public\n                                field\n                            \n                            \n                                focusEvent\n                            \n                            \n                                    Public\n                                formService\n                            \n                            \n                                    Public\n                                group\n                            \n                            \n                                    Public\n                                item\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                setValue\n                            \n                            \n                                updateAddress\n                            \n                            \n                                writeValue\n                            \n                            \n                                focus\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                formControl\n                            \n                            \n                                placeholder\n                            \n                            \n                                showRawValue\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, formService: FormService)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-picker.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        formService\n                                                  \n                                                        \n                                                                    FormService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        formControl\n                    \n                \n                \n                    \n                        Type :     FormControl\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:24\n                            \n                        \n                \n                    \n                        The form control that holds the location \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:28\n                            \n                        \n                \n                    \n                        Placeholder for search input \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showRawValue\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:26\n                            \n                        \n                \n                    \n                        If true, the raw location value will be visible\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:84\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetValue(value, fromSearch?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:44\n                            \n                        \n\n\n                \n                    \n                            Sets value of map and propagates change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        fromSearch\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateAddress\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateAddress()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:62\n                            \n                        \n\n\n                \n                    \n                            updates the address string by reverse geo lookup  \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:56\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                \n                    \nfocus(focus)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:32\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        focus\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:26\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:38\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            geocodeService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     GeocodeService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            input\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     InputComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:34\n                            \n                        \n\n                \n                    \n                        Form input component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            map\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocationMapComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationMapComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:30\n                            \n                        \n\n                \n                    \n                        The nested LocationMapComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:78\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            search\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LocationSearchComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LocationSearchComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-picker.component.ts:32\n                            \n                        \n\n                \n                    \n                        The nested LocationSearchComponent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            control\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormControl\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:19\n                            \n                        \n\n                \n                    \n                        The form control that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            field\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Field\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:13\n                            \n                        \n\n                \n                    \n                        The field for which the input is meant. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:21\n                            \n                        \n\n                \n                    \n                        Emitter to focus the input field \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            group\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:17\n                            \n                        \n\n                \n                    \n                        The form group that is used \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            item\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Item\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DefaultInputComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DefaultInputComponent:15\n                            \n                        \n\n                \n                    \n                        The item that is targeted by the input \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, ViewChild, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, FormControl, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { DefaultInputComponent, InputComponent, FormService } from '@ec.components/ui';\nimport { GeocodeService } from './geocode.service';\nimport { LocationMapComponent } from './location-map.component';\nimport { LocationSearchComponent } from './location-search.component';\n\n/** Component with map and autocomplete input to pick a location. Implements ControlValueAccessor */\n@Component({\n  selector: 'ec-location-picker',\n  templateUrl: './location-picker.component.html',\n  styleUrls: ['./location-picker.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => LocationPickerComponent),\n      multi: true\n    }\n  ]\n})\n\nexport class LocationPickerComponent extends DefaultInputComponent implements ControlValueAccessor {\n  /** The form control that holds the location */\n  @Input() formControl: FormControl;\n  /** If true, the raw location value will be visible*/\n  @Input() showRawValue = true;\n  /** Placeholder for search input */\n  @Input() placeholder;\n  /** The nested LocationMapComponent */\n  @ViewChild(LocationMapComponent) map: LocationMapComponent;\n  /** The nested LocationSearchComponent */\n  @ViewChild(LocationSearchComponent) search: LocationSearchComponent;\n  /** Form input component */\n  input: InputComponent;\n\n  constructor(\n    public geocodeService: GeocodeService,\n    public formService: FormService\n  ) {\n    super(formService);\n  }\n\n  /** Sets value of map and propagates change */\n  setValue(value, fromSearch?: boolean) {\n    if (!value) {\n      this.search.clear();\n    }\n    this.map.setValue(value);\n    if (!fromSearch) {\n      this.updateAddress();\n    }\n    this.propagateChange(value);\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.map.setValue(value);\n    this.updateAddress();\n  }\n\n  /** updates the address string by reverse geo lookup  */\n  updateAddress() {\n    const value = this.map.value;\n    if (!value) {\n      this.search.searchInput.nativeElement.value = '';\n      return;\n    }\n    this.geocodeService.getNearestAddress(value)\n      .then(results => {\n        if (results.length) {\n          this.search.searchInput.nativeElement.value = results[0].formatted_address;\n        } else {\n          this.search.searchInput.nativeElement.value = '';\n        }\n      });\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n\n\n    \n\n{{map.value | json}}\n    \n\n    \n                \n                    ./location-picker.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    {{map.value | json}}'\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationPickerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LocationSearchComponent.html":{"url":"components/LocationSearchComponent.html","title":"component - LocationSearchComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LocationSearchComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/location/src/lib/location-search.component.ts\n\n\n    \n        Description\n    \n    \n        Google Maps Location Searchbar \n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-location-search\n            \n\n\n\n\n            \n                templateUrl\n                ./location-search.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                searchInput\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                clear\n                            \n                            \n                                ngAfterViewInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(geocodeService: GeocodeService, ngZone: NgZone)\n                    \n                \n                        \n                            \n                                Defined in packages/location/src/lib/location-search.component.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        geocodeService\n                                                  \n                                                        \n                                                                    GeocodeService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'Search Location...'\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:16\n                            \n                        \n                \n                    \n                        Placeholder for input \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:20\n                            \n                        \n                \n                    \n                        emits when the coords have been changed (after selecting a match) \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Clears the searchbar input value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:34\n                            \n                        \n\n\n                \n                    \n                            subscribes to changes from the inputs autocomplete using geocodeService. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('search')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/location/src/lib/location-search.component.ts:18\n                            \n                        \n\n                \n                    \n                        The search input element \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n    AfterViewInit, Component, ElementRef,\n    EventEmitter, Input, NgZone, Output, ViewChild\n} from '@angular/core';\nimport { } from 'googlemaps';\nimport { GeocodeService } from './geocode.service';\n\n/** Google Maps Location Searchbar */\n@Component({\n    selector: 'ec-location-search',\n    templateUrl: './location-search.component.html'\n})\n\nexport class LocationSearchComponent implements AfterViewInit {\n    /** Placeholder for input */\n    @Input() placeholder = 'Search Location...';\n    /** The search input element */\n    @ViewChild('search') searchInput: ElementRef;\n    /** emits when the coords have been changed (after selecting a match) */\n    @Output() changed: EventEmitter = new EventEmitter();\n\n    constructor(\n        private geocodeService: GeocodeService,\n        private ngZone: NgZone\n    ) {\n    }\n    /** Clears the searchbar input value */\n    clear() {\n        if (this.searchInput) {\n            this.searchInput.nativeElement.value = '';\n        }\n    }\n    /** subscribes to changes from the inputs autocomplete using geocodeService. */\n    ngAfterViewInit() {\n        this.geocodeService.autocompleteAddress(this.searchInput.nativeElement)\n            .subscribe(\n                coords => {\n                    this.changed.emit(coords);\n                }\n            );\n    }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LocationSearchComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/auth?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login\n            \n\n\n\n\n            \n                templateUrl\n                login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:24\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:28\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:26\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:30\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:32\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/login/login.component.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  SymbolService,\n  WithNotifications,\n  Notification,\n  LoaderComponent,\n  NotificationsService,\n  WithLoader\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport { AuthService } from '../auth.service';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/auth?e=1\n*/\n@Component({\n  selector: 'ec-login',\n  templateUrl: 'login.component.html'\n})\n\nexport class LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Subject that is nexted when an error occurs. For custom error reactions */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  constructor(public auth: AuthService,\n    public notificationService: NotificationsService,\n    public symbol: SymbolService) {\n  }\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  login({ email, password }) {\n    const login = this.auth.login({ email, password }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('login.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('login.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        this.error.next(error);\n        console.log('could not login', error);\n      });\n    this.loader.wait(login);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginFormComponent.html":{"url":"components/LoginFormComponent.html","title":"component - LoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/login-form/login-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-login-form\n            \n\n\n\n\n            \n                templateUrl\n                ./login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                            Injects the FormBuilder\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/login-form/login-form.component.ts:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Login Form\nThe Login Form UI component is meant to be extended by a component that communicates with an API.\n    \n    \n\n    \n        import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { throwError } from 'rxjs';\nimport { LoaderComponent } from '../../loader/loader.component';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { SymbolService } from '../../symbol/symbol.service';\nimport { FieldValidators } from '../validators/field-validators';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n*/\n@Component({\n  selector: 'ec-login-form',\n  templateUrl: './login-form.component.html',\n})\nexport class LoginFormComponent implements OnInit, WithLoader {\n  /** The login's form group.*/\n  public form: FormGroup;\n  /** Flips true when submitted. */\n  protected submitted: boolean;\n  /** Contains possible error messages. */\n  public errorMessage: string;\n  /** Event that emits on succesful submit of the form, passing the login credentials. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** Event that emits when calling showError. */\n  @Output() error: EventEmitter = new EventEmitter();\n  /** The loader that should be shown during login */\n  @Input() loader: LoaderComponent;\n  /** If true, email and password wont have labels */\n  @Input() showLabels = true;\n  /** The Label of the Mail field */\n  @Input() emailLabel = this.symbol.resolve('login.email.label');\n  /** The Placeholder of the mail Field */\n  @Input() emailPlaceholder = this.symbol.resolve('login.email.placeholder');\n  /** The Label of the password field. */\n  @Input() passwordLabel = this.symbol.resolve('login.password.label');\n  /** The Placeholder of the password field */\n  @Input() passwordPlaceholder = this.symbol.resolve('login.password.placeholder');\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('login.button.label');\n  /** Additional Button classes */\n  @Input() buttonClasses = '';\n  /** Recent error Notifications */\n  notifications: Notification[];\n\n  /** Injects the FormBuilder*/\n  constructor(protected fb: FormBuilder, public symbol: SymbolService) {\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n    });\n  }\n\n  /** Shows the given error in the form. Clears the password field and emits the error event. */\n  showError(err): any {\n    this.errorMessage = err.message;\n    this.form.get('password').setValue('');\n    this.error.emit(err);\n    throwError(err);\n  }\n\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  login(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.login(this.form.value)\n      .then((res) => {\n        this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    {{buttonLabel}}\n  \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'LoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/MaxItemsPipe.html":{"url":"pipes/MaxItemsPipe.html","title":"pipe - MaxItemsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  MaxItemsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/max-items.pipe.ts\n        \n\n            \n                Description\n            \n            \n                This pipe slices an array after the nth item \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        maxItems\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(array: Array, maxItems: number, start: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/max-items.pipe.ts:8\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        array\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        maxItems\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        start\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\n/** This pipe slices an array after the nth item */\n@Pipe({\n    name: 'maxItems'\n})\n\nexport class MaxItemsPipe implements PipeTransform {\n    transform(array: Array = [], maxItems: number, start: number = 0): any {\n        return array.slice(start, maxItems);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MediumEditorComponent.html":{"url":"components/MediumEditorComponent.html","title":"component - MediumEditorComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MediumEditorComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/medium-editor/src/lib/medium-editor.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps medium-editor to a reactive form component.\nhttps://components.entrecode.de/misc/medium-editor?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-medium-editor\n            \n\n            \n                styleUrls\n                ./medium-editor.component.scss\n            \n\n\n\n            \n                templateUrl\n                medium-editor.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Private\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                model\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                modelChange\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        model\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:35\n                            \n                        \n                \n                    \n                        data model \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:37\n                            \n                        \n                \n                    \n                        MediumEditor options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:39\n                            \n                        \n                \n                    \n                        empty placeholder \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        modelChange\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:41\n                            \n                        \n                \n                    \n                        change emitter \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:63\n                            \n                        \n\n\n                \n                    \n                            destroys editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            inits editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:78\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:82\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:68\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:43\n                            \n                        \n\n                \n                    \n                        container element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     MediumEditor\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:47\n                            \n                        \n\n                \n                    \n                        editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:75\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:49\n                            \n                        \n\n                \n                    \n                        ready promise \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/medium-editor/src/lib/medium-editor.component.ts:45\n                            \n                        \n\n                \n                    \n                        current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component,\n  ElementRef,\n  EventEmitter,\n  forwardRef,\n  Input,\n  OnDestroy,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport * as MediumEditor from 'medium-editor/dist/js/medium-editor';\n\n/** Wraps medium-editor to a reactive form component.\n * https://components.entrecode.de/misc/medium-editor?e=1\n*/\n@Component({\n  selector: 'ec-medium-editor',\n  styleUrls: ['./medium-editor.component.scss'],\n  templateUrl: 'medium-editor.component.html',\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => MediumEditorComponent),\n      multi: true\n    }\n  ]\n})\nexport class MediumEditorComponent implements OnInit, OnDestroy, ControlValueAccessor {\n  /** data model */\n  @Input() model: any;\n  /** MediumEditor [options](https://github.com/yabwe/medium-editor#mediumeditor-options) */\n  @Input() options: any = {};\n  /** empty placeholder */\n  @Input() placeholder: string;\n  /** change emitter */\n  @Output() modelChange: EventEmitter = new EventEmitter();\n  /** container element */\n  @ViewChild('container') container: ElementRef;\n  /** current value */\n  value: any;\n  /** editor instance */\n  private editor: MediumEditor;\n  /** ready promise */\n  public ready: Promise;\n\n  /** inits editor */\n  ngOnInit() {\n    this.container.nativeElement.innerHTML = this.model || '';\n    this.options.placeholder = this.placeholder;\n    this.editor = new MediumEditor(this.container.nativeElement, this.options);\n    this.editor.subscribe('editableInput', () => {\n      this.value = this.editor.getContent();\n      this.propagateChange(this.value);\n    });\n    this.ready = Promise.resolve(this.editor);\n  }\n  /** destroys editor */\n  ngOnDestroy(): void {\n    this.editor.destroy();\n  }\n\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    this.ready.then((editor) => {\n      editor.setContent(this.value);\n    });\n  }\n\n  propagateChange = (_: any) => {\n  }\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() {\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./medium-editor.component.scss\n                \n                @import '~medium-editor/src/sass/medium-editor.scss';\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MediumEditorComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MediumEditorModule.html":{"url":"modules/MediumEditorModule.html","title":"module - MediumEditorModule","body":"\n                   \n\n\n\n\n    Modules\n    MediumEditorModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n MediumEditorComponent), multi: true\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}->MediumEditorComponent\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/medium-editor/src/lib/medium-editor.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            MediumEditorComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { MediumEditorComponent } from './medium-editor.component';\n\nexport const mediumModuleConfig = {\n  imports: [CommonModule],\n  exports: [MediumEditorComponent],\n  declarations: [MediumEditorComponent],\n  providers: [],\n};\n\n@NgModule(mediumModuleConfig)\nexport class MediumEditorModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MenuComponent.html":{"url":"components/MenuComponent.html","title":"component - MenuComponent","body":"\n                   \n\n\n\n\n\n  Components\n  MenuComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/menu/menu.component.ts\n\n\n    \n        Description\n    \n    \n        Renders a nested menu from a given routes Array (the same you would use for angular routing). \n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-menu,[ec-menu]\n            \n\n            \n                styleUrls\n                ./menu.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./menu.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hover\n                            \n                            \n                                    Private\n                                timeout\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTimeout\n                            \n                            \n                                getColor\n                            \n                            \n                                getItemColor\n                            \n                            \n                                getLevel\n                            \n                            \n                                getPath\n                            \n                            \n                                hasActivePath\n                            \n                            \n                                hoverItem\n                            \n                            \n                                hoverOut\n                            \n                            \n                                isActive\n                            \n                            \n                                isSelected\n                            \n                            \n                                ngOnChanges\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                colors\n                            \n                            \n                                hoverDelay\n                            \n                            \n                                parent\n                            \n                            \n                                route\n                            \n                            \n                                routes\n                            \n                            \n                                title\n                            \n                            \n                                vanishDelay\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                            Injects the Router. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        colors\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4']\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:23\n                            \n                        \n                \n                    \n                        Color map of submenus. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hoverDelay\n                    \n                \n                \n                    \n                        Default value : 50\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:27\n                            \n                        \n                \n                    \n                        Delay before menu is shown on mouseover. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        parent\n                    \n                \n                \n                    \n                        Type :     MenuComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:21\n                            \n                        \n                \n                    \n                        Parent Menu (when nested) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:17\n                            \n                        \n                \n                    \n                        The currently active route \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        routes\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:15\n                            \n                        \n                \n                    \n                        Routes that should be used for the menu. You can use your angular router routes here. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        title\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:19\n                            \n                        \n                \n                    \n                        The title of the menu \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        vanishDelay\n                    \n                \n                \n                    \n                        Default value : 500\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:25\n                            \n                        \n                \n                    \n                        Delay before menu is hidden after mouseout. \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            cancelTimeout\n                            \n                            \n                        \n                    \n                \n                \n                    \ncancelTimeout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:84\n                            \n                        \n\n\n                \n                    \n                            Cancels the current timeout \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetColor(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:64\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the current level. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getItemColor\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetItemColor(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:69\n                            \n                        \n\n\n                \n                    \n                            Returns the color for the given item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLevel(level: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Returns the level of nesting (parent=0). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        level\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                0\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPath\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPath(item, path: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            Returns the full path to an item. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        path\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hasActivePath\n                            \n                            \n                        \n                    \n                \n                \n                    \nhasActivePath(item, parent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:48\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item or a child of it is active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        parent\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverItem\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverItem(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Hovers the item after hoverDelay timeout. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hoverOut\n                            \n                            \n                        \n                    \n                \n                \n                    \nhoverOut()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Hovers out after vanishDelay \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(path)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:106\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        path\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSelected\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSelected(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Returns true if the item is selected. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:38\n                            \n                        \n\n\n                \n                    \n                            updates the routes on change of route \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hover\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:29\n                            \n                        \n\n                \n                    \n                        The currently hovered Route\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            timeout\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/menu/menu.component.ts:31\n                            \n                        \n\n                \n                    \n                        The timeout for delay handling \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges } from '@angular/core';\nimport { Router } from '@angular/router'; // TODO cannot import Route...\n\n/** Renders a nested menu from a given routes Array (the same you would use for angular routing). */\n@Component({\n  selector: 'ec-menu,[ec-menu]',\n  templateUrl: './menu.component.html',\n  styleUrls: ['./menu.component.scss']\n})\nexport class MenuComponent implements OnChanges {\n  /** Routes that should be used for the menu. You can use your angular router routes here. */\n  @Input() routes; // : Route[];\n  /** The currently active route */\n  @Input() route; // : Route;\n  /** The title of the menu */\n  @Input() title: string;\n  /** Parent Menu (when nested) */\n  @Input() parent: MenuComponent;\n  /** Color map of submenus. */\n  @Input() colors: string[] = ['#29A9E1', '#00DBF0', '#4A5EA9', '#29A9E1', '#C9C8D4'];\n  /** Delay before menu is hidden after mouseout. */\n  @Input() vanishDelay = 500;\n  /** Delay before menu is shown on mouseover. */\n  @Input() hoverDelay = 50;\n  /** The currently hovered Route*/\n  public hover; // : Route;\n  /** The timeout for delay handling */\n  private timeout;\n\n  /** Injects the Router. */\n  constructor(private router: Router) {\n  }\n\n  /** updates the routes on change of route */\n  ngOnChanges() {\n    if (this.route) {\n      this.routes = this.route.children\n        .filter(route => route.path && route.path.indexOf(':') === -1)\n        .filter(route => !route.data || !route.data.hidden);\n      console.log('routes', this.routes);\n    }\n  }\n\n  /** Returns true if the item or a child of it is active. */\n  hasActivePath(item, parent = this) { // this.parent\n    return parent.getPath(item) === this.router.url;\n  }\n\n  /** Returns true if the item is selected. */\n  isSelected(item) {\n    const path = this.getPath(item);\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n\n  /** Returns the level of nesting (parent=0). */\n  getLevel(level = 0) {\n    return this.parent ? this.parent.getLevel(++level) : level;\n  }\n\n  /** Returns the color for the current level. */\n  getColor(level = 0) {\n    return this.colors[this.getLevel(level) % this.colors.length];\n  }\n\n  /** Returns the color for the given item. */\n  getItemColor(item) {\n    return this.isActive(item) ? this.getColor(1) : 'initial';\n  }\n\n  /** Hovers the item after hoverDelay timeout. */\n  hoverItem(item) { // : Route\n    if (!this.hover) {\n      this.hover = item;\n    }\n    this.timeout = setTimeout(() => {\n      this.hover = item;\n    }, this.hoverDelay);\n  }\n\n  /** Cancels the current timeout */\n  cancelTimeout() {\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n  }\n\n  /** Hovers out after vanishDelay */\n  hoverOut() {\n    this.timeout = setTimeout(() => {\n      delete this.hover;\n    }, this.vanishDelay);\n  }\n\n  /** Returns the full path to an item. */\n  getPath(item, path: string = '') {\n    path = '/' + item.path + path;\n    if (!this.parent) {\n      return path;\n    }\n    return this.parent.getPath(this.route, path);\n  }\n\n  isActive(path) {\n    return path !== '/' && (path === this.router.url || this.router.url.indexOf(path) === 0);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{item.data?.title || item.path}}\n      \n      \n        \n          {{child.data?.title || child.path}}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./menu.component.scss\n                \n                li.is-active>a {\n    text-decoration: underline;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{item.data?.title || item.path}}                              {{child.data?.title || child.path}}                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'MenuComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ModalComponent.html":{"url":"components/ModalComponent.html","title":"component - ModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/modal/modal.component.ts\n\n\n    \n        Description\n    \n    \n        A modal is an extension of a pop. It adds different style options that apply x.ui markup.\nhttps://components.entrecode.de/ui/modal?e=1\nhttps://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n\n    \n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-modal\n            \n\n\n\n\n            \n                templateUrl\n                ./modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                classes\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                templates\n                            \n                            \n                                types\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initMode\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                animation\n                            \n                            \n                                backdrop\n                            \n                            \n                                body\n                            \n                            \n                                columns\n                            \n                            \n                                footer\n                            \n                            \n                                header\n                            \n                            \n                                mode\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                            Constructs the modal, injects pop service \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        animation\n                    \n                \n                \n                    \n                        Default value : 'fadeIn 4'\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:31\n                            \n                        \n                \n                    \n                        Sets data-animate. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        backdrop\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:29\n                            \n                        \n                \n                    \n                        If true, the modal will have a dark backdrop that disables clicking outside. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        body\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:35\n                            \n                        \n                \n                    \n                        Body Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        columns\n                    \n                \n                \n                    \n                        Type :     number | string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:41\n                            \n                        \n                \n                    \n                        Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        footer\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:37\n                            \n                        \n                \n                    \n                        Footer Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        header\n                    \n                \n                \n                    \n                        Type :     TemplateRef\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:33\n                            \n                        \n                \n                    \n                        Header Template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        mode\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:27\n                            \n                        \n                \n                    \n                        This property sets the mode + additional options.\nIt expects the type at first and non mandatory options like opens-left afterwards. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMode\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMode()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:52\n                            \n                        \n\n\n                \n                    \n                            Is called on init and change. Parses mode input and throws warning if type is not supported. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            calls initMode \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:92\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:76\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:48\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            classes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:43\n                            \n                        \n\n                \n                    \n                        Will contain the classes (mode - type) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:47\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:46\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            templates\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TemplateRef[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TemplateRef)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:39\n                            \n                        \n\n                \n                    \n                        Templates for header body and footer \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                    \n                        \n                            Default value : [\n        'dialog',\n        'overlay',\n        'deck',\n        'toast',\n        'snackbar'\n    ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/modal/modal.component.ts:18\n                            \n                        \n\n                \n                    \n                        all possible modes that can be set \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit, ElementRef, OnChanges, TemplateRef, ContentChildren, ChangeDetectorRef } from '@angular/core';\nimport { PopComponent } from '../pop/pop.component';\nimport { PopService } from '../pop/pop.service';\n\n/**\n * A modal is an extension of a pop. It adds different style options that apply x.ui markup.\n * https://components.entrecode.de/ui/modal?e=1\n *\n * https://medium.com/claritydesignsystem/ng-content-the-hidden-docs-96a29d70d11b\n */\n@Component({\n    selector: 'ec-modal',\n    templateUrl: './modal.component.html'\n})\n\nexport class ModalComponent extends PopComponent implements OnInit, OnChanges {\n    /** all possible modes that can be set */\n    types = [\n        'dialog',\n        'overlay',\n        'deck',\n        'toast',\n        'snackbar'\n    ];\n    /** This property sets the mode + additional options.\n     * It expects the type at first and non mandatory options like opens-left afterwards. */\n    @Input() mode: string;\n    /** If true, the modal will have a dark backdrop that disables clicking outside. */\n    @Input() backdrop = false;\n    /** Sets data-animate. */\n    @Input() animation = 'fadeIn 4';\n    /** Header Template */\n    @Input() header: TemplateRef;\n    /** Body Template */\n    @Input() body: TemplateRef;\n    /** Footer Template */\n    @Input() footer: TemplateRef;\n    /** Templates for header body and footer */\n    @ContentChildren(TemplateRef) templates: TemplateRef[];\n    /** Sets data-col. If specified, the width of the modal is fixed to the given value (1-12). */\n    @Input() columns: number | string;\n    /** Will contain the classes (mode - type) */\n    public classes: string;\n    /** Constructs the modal, injects pop service */\n    constructor(\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef) {\n        super(popService, elementRef, cdr);\n    }\n    /** Is called on init and change. Parses mode input and throws warning if type is not supported. */\n    initMode() {\n        this.mode = this.mode || 'dialog';\n        this.type = this.mode.split(' ')[0];\n        if (!this.types.includes(this.type)) {\n            const fallback = this.mode.replace(this.type, 'dialog');\n            console.warn(`ec-modal does not support the mode \"${this.type}\".\n            Use one of ${this.types.join(', ')}.\n            Falling back to ${fallback}.`);\n            this.type = fallback;\n        }\n        this.classes = this.mode.split(' ').splice(1).join(' ');\n        this.types.forEach(type => {\n            this.elementRef.nativeElement.classList.remove(`${type}-wrapper`);\n        });\n        if (this.backdrop) {\n            this.elementRef.nativeElement.classList.add(`${this.type}-wrapper`);\n        }\n    }\n\n    /** calls initMode */\n    ngOnInit() {\n        this.initMode();\n    }\n    /** calls initMode */\n    ngOnChanges() {\n        this.initMode();\n    }\n}\n\n    \n\n    \n        \n    \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n    \n        \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                                        '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfig.html":{"url":"interfaces/ModelConfig.html","title":"interface - ModelConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfig {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ModelConfigService.html":{"url":"injectables/ModelConfigService.html","title":"injectable - ModelConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ModelConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The main class for configuring the behaviour of a model.\nBy default, everything is auto generated from the model's schema but can be overriden via the\nset method. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                omittedFields\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                generateConfig\n                            \n                            \n                                get\n                            \n                            \n                                getFieldConfig\n                            \n                            \n                                getLightModel\n                            \n                            \n                                getMinLevel\n                            \n                            \n                                getSystemFields\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(entryService: EntryService, sdk: SdkService, typeConfig: TypeConfigService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/model-config.service.ts:23\n                            \n                        \n\n                \n                    \n                            Injects EntryService and SdkService. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        entryService\n                                                  \n                                                        \n                                                                    EntryService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        typeConfig\n                                                  \n                                                        \n                                                                    TypeConfigService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Async\n                            generateConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        generateConfig(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:192\n                            \n                        \n\n\n                \n                    \n                            Generates a CrudConfig for the given model.\nMerges three configurations into one:\n\ndefault field config, obtained by getFieldConfig\nglobal model config (if any) configured via with set\ncustomFieldConfig: any custom field config that is merged on top of the other two.\nThis enables the developer to either customize at a global scale to target all lists/forms,\nor just specific components. \n\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise>\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(property: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:40\n                            \n                        \n\n\n                \n                    \n                            Retrieves the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.get(&#39;muffin&#39;); //returns muffin config;\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getFieldConfig\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetFieldConfig(model: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:122\n                            \n                        \n\n\n                \n                    \n                            Returns the default field config for the given model.\nUtilizes PublicAPI#getFieldConfig + TypeConfigService#get.\nThis config is meant to deliver the default behaviour when nothing else is configured. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getLightModel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetLightModel(model)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:223\n                            \n                        \n\n\n                \n                    \n                            Returns light model information \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getMinLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetMinLevel(model: string, customFieldConfig?: FieldConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:101\n                            \n                        \n\n\n                \n                    \n                            Parses config for fields that require leveled entries \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        customFieldConfig\n                                                        \n                                                                    FieldConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSystemFields\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSystemFields()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:60\n                            \n                        \n\n\n                \n                    \n                            Returns the field config for all system fields \n\n\n                            \n                                Returns :     { id: { label: any; view: string; form: boolean; immutable: boolean; hideInList: boolean; }; _cre...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(property: string, config: CrudConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:55\n                            \n                        \n\n\n                \n                    \n                            Sets the given model config.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    CrudConfig\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                                    Example :\n                                        \n                                               * ModelConfig.set(&#39;muffin&#39;, {\n   *  fields: {\n   *    title: {\n   *      label: &#39;Muffin Titel&#39;\n   *    }\n   *  });\n   *\n                                        \n                            \n                            \n                                Returns :     CrudConfig\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            omittedFields\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ]\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/model-config.service.ts:17\n                            \n                        \n\n                \n                    \n                        Array of property names that are omitted by default. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Config, FieldConfig, Item } from '@ec.components/core';\nimport { SymbolService } from '@ec.components/ui';\nimport { fields } from 'ec.sdk/lib/PublicAPI';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { EntryService } from '../entry/entry.service';\nimport { SdkService } from '../sdk/sdk.service';\nimport { TypeConfigService } from './type-config.service';\n\n/** The main class for configuring the behaviour of a model.\n * By default, everything is auto generated from the model's schema but can be overriden via the\n * set method. */\n@Injectable()\nexport class ModelConfigService extends Config {\n  /** Array of property names that are omitted by default. */\n  omittedFields: Array = [\n    'id',\n    'private',\n    'created',\n    'creator',\n    'modified'\n  ];\n\n\n  /** Injects EntryService and SdkService. */\n  constructor(private entryService: EntryService,\n    private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private symbol: SymbolService) {\n    super();\n  }\n\n  /** Retrieves the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.get('muffin'); //returns muffin config;\n   * ```\n   * */\n  get(property: string): CrudConfig {\n    return this.configure('model', property);\n  }\n\n  /** Sets the given model config.\n   * @example\n   * ```typescript\n   * ModelConfig.set('muffin', {\n   *  fields: {\n   *    title: {\n   *      label: 'Muffin Titel'\n   *    }\n   *  });\n   * ```\n   * */\n  set(property: string, config: CrudConfig): CrudConfig {\n    return this.configure('model', property, config);\n  }\n\n  /** Returns the field config for all system fields */\n  getSystemFields() {\n    return {\n      id: {\n        label: this.symbol.resolve('field.label.id'),\n        view: 'string',\n        form: false,\n        immutable: true,\n        hideInList: true\n      },\n      _created: {\n        label: this.symbol.resolve('field.label.created'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hideInList: true,\n        rawFilter: true\n      },\n      _modified: {\n        label: this.symbol.resolve('field.label.modified'),\n        display: this.typeConfig.displayDate(),\n        group: this.typeConfig.groupDate(),\n        form: false,\n        immutable: true,\n        sortable: true,\n        hideInList: false,\n        rawFilter: true\n      },\n      _creator: {\n        label: this.symbol.resolve('field.label.creator'),\n        display: this.typeConfig.displayAccount(),\n        view: 'account',\n        form: false,\n        immutable: true,\n        hideInList: true\n      }\n    };\n  }\n\n  /** Parses config for fields that require leveled entries */\n  getMinLevel(model: string, customFieldConfig?: FieldConfig) {\n    return this.generateConfig(model, customFieldConfig)\n      .then((modelConfig) => {\n        const fieldConfig = modelConfig.fields;\n        return Object.keys(fieldConfig)\n          .filter(field => !!fieldConfig[field].type)\n          .map(field => {\n            const inputView = fieldConfig[field].inputView;\n            const views = this.typeConfig.get(fieldConfig[field].type).inputViews || [];\n            if (!inputView || !views) {\n              return 1;\n            }\n            const match = views.find(v => v.name === inputView);\n            return match ? match.levels || 1 : 1;\n          }).reduce((max, lvl) => Math.max(max, lvl), 1);\n      });\n  }\n\n  /** Returns the default field config for the given model.\n   * Utilizes PublicAPI#getFieldConfig + TypeConfigService#get.\n   * This config is meant to deliver the default behaviour when nothing else is configured. */\n  getFieldConfig(model: string): Promise {\n    return this.sdk.api.getFieldConfig(model).then((fieldConfig: fields) => {\n      const merged = {};\n      Object.assign(merged, this.getSystemFields());\n      Object.keys(fieldConfig).map(property => fieldConfig[property])\n        .forEach(({\n          config,\n          type,\n          title,\n          unique,\n          mutable,\n          readOnly,\n          required,\n          validation,\n          description,\n          localizable\n        }) => {\n          /* type = type as string; */\n          config = config || {};\n          if (type.includes('asset')) {\n            type = type.replace('a', 'dmA');\n          }\n          // parse field config\n          const { hideInList,\n            hideInForm,\n            hideOnCreate,\n            hideOnEdit,\n            placeholder,\n            inputView,\n            label,\n            classes,\n            columns = 12\n          } = config;\n          const typeConfig = this.typeConfig.get(type);\n          // assign default values + merge customFieldConfig if given\n          merged[title] = Object.assign({\n            property: title,\n            label: label || title + (type === 'datetime' ? ` ${this.symbol.resolve('datetime.local')}` : ''),\n            placeholder,\n            description,\n            validation,\n            relation: validation,\n            immutable: !mutable,\n            readOnly,\n            hideInList,\n            hideInForm,\n            create: !hideOnCreate,\n            edit: !hideOnEdit,\n            classes,\n            unique,\n            required,\n            columns,\n            /* display: ((value) => value), */\n            localizable,\n          }, typeConfig, {\n              placeholder: placeholder || typeConfig.placeholder,\n              inputView: inputView || typeConfig.inputView || type\n            });\n        });\n      return merged;\n    });\n  }\n\n  /** Generates a CrudConfig for the given model.\n   * Merges three configurations into one:\n   * - default field config, obtained by getFieldConfig\n   * - global model config (if any) configured via with set\n   * - customFieldConfig: any custom field config that is merged on top of the other two.\n   * This enables the developer to either customize at a global scale to target all lists/forms,\n   * or just specific components. */\n  async generateConfig(model: string, customFieldConfig?: FieldConfig): Promise> {\n    const lightModel = await this.getLightModel(model);\n    // first step: merge global model config with default entry config\n    const modelConfig = Object.assign(this.get(model) || {}, {\n      identifier: 'id',\n      identifierPattern: /^[0-9A-Za-z-_]{7,14}$/, // shortID pattern\n      label: '_entryTitle',\n      defaultFilter: lightModel.titleField,\n      onSave: (item: Item, value) => this.entryService.save(model, item, value)\n    });\n    return this.getFieldConfig(model)\n      .then((fieldConfig: FieldConfig) => {\n        const modelConfigFields = modelConfig.fields || {};\n        const relevantKeys = Object.keys(customFieldConfig || modelConfigFields);\n        const mergedFields = {};\n        if (!relevantKeys.length) {\n          modelConfig.fields = fieldConfig;\n        } else {\n          relevantKeys.forEach(key => {\n            mergedFields[key] = Object.assign(\n              {},\n              fieldConfig[key] || {},\n              modelConfigFields[key] || {},\n              (customFieldConfig || {})[key]);\n          });\n          modelConfig.fields = mergedFields;\n        }\n        return modelConfig;\n      });\n  }\n  /** Returns light model information */\n  getLightModel(model) {\n    return this.sdk.ready.then(() => this.sdk.api.modelList()).then((models) => models[model]);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ModelConfiguration.html":{"url":"interfaces/ModelConfiguration.html","title":"interface - ModelConfiguration","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ModelConfiguration\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/model-configuration.interface.ts\n        \n\n            \n                Description\n            \n            \n                This is the interface for a model's configuration.\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        fields\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fields\n                                    \n                                \n                                \n                                    \n                                        fields:     FieldConfig\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     FieldConfig\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Array of FieldConfigProperty Objects. Sets up the behaviour of each field. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { FieldConfig } from '@ec.components/core';\n/** This is the interface for a model's configuration.*/\nexport interface ModelConfiguration {\n  /** Array of FieldConfigProperty Objects. Sets up the behaviour of each field. */\n  fields?: FieldConfig;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Notification.html":{"url":"classes/Notification.html","title":"class - Notification","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Notification\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notification.ts\n        \n\n            \n                Description\n            \n            \n                A Notification is used inside NotificationService and NotificationComponent to display any information to the user.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                append\n                            \n                            \n                                    Optional\n                                error\n                            \n                            \n                                    Optional\n                                hide\n                            \n                            \n                                    Optional\n                                host\n                            \n                            \n                                    Optional\n                                message\n                            \n                            \n                                    Optional\n                                replace\n                            \n                            \n                                    Optional\n                                sticky\n                            \n                            \n                                    Optional\n                                time\n                            \n                            \n                                    Optional\n                                title\n                            \n                            \n                                    Optional\n                                type\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(notification: Notification)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                            The constructor just looks if an error is set, and if yes, sets the type to error. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                  \n                                                        \n                                                                    Notification\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            append\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:22\n                            \n                        \n\n                \n                    \n                        If set, the notification will be appended to the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            error\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:18\n                            \n                        \n\n                \n                    \n                        If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            hide\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:20\n                            \n                        \n\n                \n                    \n                        Notifications that should be hidden when this one gets active \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            host\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:10\n                            \n                        \n\n                \n                    \n                        The host the is NotificationsComponent that should display the notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            message\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:8\n                            \n                        \n\n                \n                    \n                        The message is shown below the title and is meant for further description. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            replace\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     []\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:24\n                            \n                        \n\n                \n                    \n                        If set, the notification will replace all others in the given array of Notifications when activated \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            sticky\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:14\n                            \n                        \n\n                \n                    \n                        If true, the notification will stay forever \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            time\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:12\n                            \n                        \n\n                \n                    \n                        The amount of ms it should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            title\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:6\n                            \n                        \n\n                \n                    \n                        The title is the headline of a notification and the only value that is required. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Optional\n                            type\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notification.ts:16\n                            \n                        \n\n                \n                    \n                        Determines the looks. Currently info, error and success are defined. \n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { NotificationsComponent } from './notifications.component';\n\n/** A Notification is used inside NotificationService and NotificationComponent to display any information to the user.*/\nexport class Notification {\n  /** The title is the headline of a notification and the only value that is required. */\n  title?: string;\n  /** The message is shown below the title and is meant for further description. */\n  message?: string;\n  /** The host the is NotificationsComponent that should display the notification. */\n  host?: NotificationsComponent;\n  /** The amount of ms it should be visible */\n  time?: number;\n  /** If true, the notification will stay forever */\n  sticky?: boolean;\n  /** Determines the looks. Currently info, error and success are defined. */\n  type?: string;\n  /** If an error is given, the type will automatically be set to error. The error will be displayed inside the notification via ec-error.*/\n  error?: any;\n  /** Notifications that should be hidden when this one gets active */\n  hide?: this[];\n  /** If set, the notification will be appended to the given array of Notifications when activated */\n  append?: this[];\n  /** If set, the notification will replace all others in the given array of Notifications when activated */\n  replace?: this[];\n\n  /** The constructor just looks if an error is set, and if yes, sets the type to error. */\n  constructor(notification: Notification) {\n    if (notification.error) {\n      this.type = 'error';\n    }\n    Object.assign(this, notification);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NotificationsComponent.html":{"url":"components/NotificationsComponent.html","title":"component - NotificationsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NotificationsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/notifications/notifications.component.ts\n\n\n    \n        Description\n    \n    \n        Displays any kind of Notification inside the DOM.\nIt listens on the notificationService.$emitter for notifications.\nhttps://components.entrecode.de/ui/notifications?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-notifications\n            \n\n\n\n\n            \n                templateUrl\n                ./notifications.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                notifications\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                time\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(notificationService: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n\n                \n                    \n                            Listens on the NotificationService and shows each notification that has this component set as host, or none at all. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        time\n                    \n                \n                \n                    \n                        Type :     number\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:21\n                            \n                        \n                \n                    \n                        The default time for a notification to be visible. Will be ignored if the notification itself has a time set. \n\n                    \n                \n            \n        \n\n\n\n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection([])\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current stack of notifications that are visible. \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Notifications\nThe Notifications Module is a combination of the NotificationsService and the NotificationsComponent.\nSimple Usage\n\nPlace the component somewhere in your app template:\n\n\nEmit notifications via the service\n\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  showNotification() {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        message: 'Das ist die Beschreibung'\n      });\n  }\n\n  doSomethingRisky() {\n      return Promise.reject('Fehler')\n      .catch((err) => {\n          this.notifications.emit({\n              error: err, // passing the error Object\n              title: 'Fehler!'\n          })\n      })\n  }\n}The given type will be added as class. The classes that are available by default can be looked up here.\nAdvanced Usage\nYou can also use multiple ec-notifications at different places:\n\n\nA\nBAll you have to do, is pass the instance of the component that should display the notification via the host property:\nexport class MyComponent {\n  constructor(private notifications: NotificationsService) {}\n\n  emit(host) {\n      this.notifications.emit({\n        type: 'success',\n        title: 'Das ist der Notification Titel',\n        host: host\n      });\n  }\n}Hiding previous errors\nHere is an example usage of a typical success/error handling.\nIt features hiding previous notifications. We recommended you to use the WithNotifications interface for that case.\nexport class MuffinComponent implements WithNotifications {\n  /** Recent Error notification */\n  notifications: Notification[] = [];\n\nconstructor(\n    public bakery:BakeryService,\n    public notificationService: NotificationsService,\n    )\n\n  bake() {\n    this.bakery.bake().then(()=> {\n        this.notificationService.emit({\n            title: 'Muffin was baken!',\n            hide: this.notifications // this will hide all preceding notifications\n        })\n    }).catch(error=>{\n        this.notificationService.emit({\n            title: 'Error while baking',\n            sticky: true,\n            hide: this.notifications, // this will hide all preceding notifications\n            replace: this.notifications // this will replace the given array with the new notification\n        })\n    });\n  }\n}The hide option is useful to hide obsolete errors. E.g. If you successfully log in after one failiure, the sticky error notification of the first attempt will be hidden. This enables you to keep errors messages as long as they are needed.\nInstead of replace, you could also use append (see notification.component.ts for implementation).\n\n    \n\n    \n        import { Component, Input } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { Notification } from './notification';\nimport { NotificationsService } from './notifications.service';\n\n/** Displays any kind of Notification inside the DOM.\n * It listens on the notificationService.$emitter for notifications.\n * https://components.entrecode.de/ui/notifications?e=1\n * */\n@Component({\n  selector: 'ec-notifications',\n  templateUrl: './notifications.component.html',\n})\nexport class NotificationsComponent {\n  /** The current stack of notifications that are visible. */\n  notifications: Collection = new Collection([]);\n  /** The default time for a notification to be visible. Will be ignored if the notification itself has a time set. */\n  @Input() time: number;\n\n  /** Listens on the NotificationService and shows each notification that has this component set as host, or none at all. */\n  constructor(private notificationService: NotificationsService) {\n    this.time = this.time || this.notificationService.defaultTime;\n    this.notificationService.emitter$.subscribe((notification: Notification) => {\n      if (notification.hide) {\n        this.notifications.removeAll(notification.hide);\n      }\n      if (!notification.title && !notification.message) {\n        // console.warn('tried to emit notification without message and title', notification);\n        return;\n      }\n      if (notification.append) {\n        notification.append.push(notification);\n      }\n      if (notification.replace) {\n        notification.replace.length = 0;\n        notification.replace.push(notification);\n      }\n\n      if (!notification.host || notification.host === this) {\n        this.notifications.add(notification);\n        if (notification.sticky) {\n          if (notification.time) {\n            console.warn('notification.time is ignored because it was set sticky');\n          }\n          return;\n        }\n        setTimeout(() => this.notifications.remove(notification), notification.time || this.time);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    {{notification.title}}\n    {{notification.message}}\n    \n    \n      \n        \n      \n    \n    \n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{notification.title}}    {{notification.message}}                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'NotificationsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/NotificationsModule.html":{"url":"modules/NotificationsModule.html","title":"module - NotificationsModule","body":"\n                   \n\n\n\n\n    Modules\n    NotificationsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_imports\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\n\nErrorComponent\n\nErrorComponent\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            NotificationsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                        \n                            PopModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ErrorComponent\n                        \n                        \n                            NotificationsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { NotificationsComponent } from './notifications.component';\nimport { NotificationsService } from './notifications.service';\nimport { PopModule } from '../pop/pop.module';\nimport { ErrorComponent } from './error/error.component';\nimport { IconModule } from '../icon/icon.module';\n\n@NgModule({\n  declarations: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  imports: [\n    CommonModule,\n    PopModule,\n    IconModule,\n  ],\n  exports: [\n    NotificationsComponent,\n    ErrorComponent,\n  ],\n  providers: [\n    {\n      provide: 'useDesktopNotifications',\n      useValue: false\n    }, NotificationsService]\n})\nexport class NotificationsModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/NotificationsService.html":{"url":"injectables/NotificationsService.html","title":"injectable - NotificationsService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  NotificationsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/notifications.service.ts\n        \n\n            \n                Description\n            \n            \n                This service is the main interaction layer for the developer to show notifications.\nYou can use desktop notifications by default by providing:\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }in your module's providers.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                defaultTime\n                            \n                            \n                                    Private\n                                emitter\n                            \n                            \n                                    Public\n                                emitter$\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                desktopNotification\n                            \n                            \n                                emit\n                            \n                            \n                                getPermission\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(useDesktopNotifications)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                            The constructors injects the useDesktopNotifications flag from the module.\nIf true, all notifications will be shown as desktop notifications instead. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        useDesktopNotifications\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            desktopNotification\n                            \n                            \n                        \n                    \n                \n                \n                    \ndesktopNotification(notification: Notification)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:61\n                            \n                        \n\n\n                \n                    \n                            Emits a desktop notification after asking for permission (if not already granted). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            emit\n                            \n                            \n                        \n                    \n                \n                \n                    \nemit(notification: Notification, desktop?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:34\n                            \n                        \n\n\n                \n                    \n                            Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        notification\n                                                        \n                                                                    Notification\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        desktop\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPermission\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPermission()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:48\n                            \n                        \n\n\n                \n                    \n                            Asks for permission to show desktop notifications, if not already granted. \n\n\n                            \n                                Returns :     Promise\n\n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            defaultTime\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 5000\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:26\n                            \n                        \n\n                \n                    \n                        The default view time for a notification. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            emitter\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:22\n                            \n                        \n\n                \n                    \n                        The emitter subject to fire notifications. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            emitter$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.emitter.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/notifications/notifications.service.ts:24\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when a new notification comes in. \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport { Notification } from './notification';\nimport { Observable } from 'rxjs';\nimport { Subject } from 'rxjs';\n\n/** Workaround to get window without typescript complaining */\ndeclare const window;\n\n/** This service is the main interaction layer for the developer to show notifications.\n * You can use desktop notifications by default by providing:\n * ```json\n {\n   provide: \"useDesktopNotifications\",\n   useValue: true\n }```\n * in your module's providers.\n *\n * */\n@Injectable()\nexport class NotificationsService {\n  /** The emitter subject to fire notifications. */\n  private emitter: Subject = new Subject();\n  /** Observable that is nexted when a new notification comes in. */\n  public emitter$: Observable = this.emitter.asObservable();\n  /** The default view time for a notification. */\n  public defaultTime = 5000;\n\n  /** The constructors injects the useDesktopNotifications flag from the module.\n   * If true, all notifications will be shown as desktop notifications instead. */\n  constructor(@Inject('useDesktopNotifications') private useDesktopNotifications) {\n  }\n\n  /** Emits a notification to all ec-notification components. If host is set, it is only pushed to the specified host.*/\n  emit(notification: Notification, desktop?: boolean) {\n    const instance = new Notification(notification);\n    if (desktop || this.useDesktopNotifications) {\n      this.desktopNotification(instance);\n    } else {\n      this.emitter.next(instance);\n    }\n    if (notification && notification.error) {\n      console.error(notification.error);\n    }\n    return instance;\n  }\n\n  /** Asks for permission to show desktop notifications, if not already granted. */\n  getPermission(): Promise {\n    if (window.Notification.permission === 'granted') {\n      return Promise.resolve();\n    }\n    return window.Notification.requestPermission().then((permission) => {\n      // If the user accepts, let's create a notification\n      if (permission !== 'granted') {\n        return Promise.reject('Desktop Notification Permission Denied!');\n      }\n    });\n  }\n\n  /** Emits a desktop notification after asking for permission (if not already granted). */\n  desktopNotification(notification: Notification) {\n    if (!('Notification' in window)) {\n      console.warn('This browser does not support desktop notification');\n    }\n    this.getPermission().then(() => {\n      const message = new window.Notification(notification.title, { body: notification.message });\n      if (notification.sticky) {\n        if (notification.time) {\n          console.warn('notification.time is ignored because it was set sticky');\n        }\n        return;\n      }\n      setTimeout(() => message.close(), notification.time || this.defaultTime);\n    });\n  }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/OutputComponent.html":{"url":"components/OutputComponent.html","title":"component - OutputComponent","body":"\n                   \n\n\n\n\n\n  Components\n  OutputComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/io/output/output.component.ts\n\n\n    \n        Description\n    \n    \n        Outputs the given field of the given item, rendering the component dynamically. \n\n    \n\n    \n        Extends\n    \n    \n            DynamicSlotComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-output\n            \n\n\n\n\n            \n                templateUrl\n                ../dynamic-slot/dynamic-slot.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                componentFactoryResolver\n                            \n                            \n                                fieldHost\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                loadComponent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                field\n                            \n                            \n                                item\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        field\n                    \n                \n                \n                    \n                        Type :     Field\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:14\n                            \n                        \n                \n                    \n                        The instance of field that should be used in the template \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        item\n                    \n                \n                \n                    \n                        Type :     Item\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:16\n                            \n                        \n                \n                    \n                        The belonging item \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/io/output/output.component.ts:20\n                            \n                        \n\n\n                \n                    \n                            The component is loade as soon as the field and item are known.\nIf the field has no output property set, the DefaultOutputComponent will be rendered. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loadComponent\n                            \n                            \n                        \n                    \n                \n                \n                    \nloadComponent(component: Type, attributes: Object)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:18\n                            \n                        \n\n\n                \n                    \n                            Loads the given component inside the fieldHost. Sets current item and field by default. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        component\n                                                        \n                                                                    Type\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        attributes\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                {}\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            componentFactoryResolver\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ComponentFactoryResolver\n\n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fieldHost\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SlotHostDirective\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SlotHostDirective)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     DynamicSlotComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in DynamicSlotComponent:11\n                            \n                        \n\n                \n                    \n                        The FieldHostDirective will  be used to nest custom components into the field \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { DynamicSlotComponent } from '../dynamic-slot/dynamic-slot.component';\nimport { Field, Item } from '@ec.components/core';\nimport { DefaultOutputComponent } from '../../form/default-output/default-output.component';\n\n/** Outputs the given field of the given item, rendering the component dynamically. */\n@Component({\n  selector: 'ec-output',\n  templateUrl: '../dynamic-slot/dynamic-slot.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class OutputComponent extends DynamicSlotComponent implements OnChanges {\n  /** The instance of field that should be used in the template */\n  @Input() field: Field;\n  /** The belonging item */\n  @Input() item: Item;\n\n  /** The component is loade as soon as the field and item are known.\n   * If the field has no output property set, the DefaultOutputComponent will be rendered. */\n  ngOnChanges() {\n    if (this.field && this.item) {\n      this.loadComponent(this.field.output || DefaultOutputComponent,\n        {\n          item: this.item,\n          field: this.field\n        });\n    }\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'OutputComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Pagination.html":{"url":"classes/Pagination.html","title":"class - Pagination","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Pagination\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/pagination/pagination.ts\n        \n\n            \n                Description\n            \n            \n                This class can be used to control the loading behaviour of external data. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                change\n                            \n                            \n                                    Public\n                                change$\n                            \n                            \n                                    Protected\n                                config\n                            \n                            \n                                    Public\n                                pages\n                            \n                            \n                                    Protected\n                                total\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                first\n                            \n                            \n                                getPage\n                            \n                            \n                                getPages\n                            \n                            \n                                isActive\n                            \n                            \n                                isFirst\n                            \n                            \n                                isLast\n                            \n                            \n                                last\n                            \n                            \n                                    Protected\n                                load\n                            \n                            \n                                next\n                            \n                            \n                                params\n                            \n                            \n                                prev\n                            \n                            \n                                select\n                            \n                            \n                                setTotal\n                            \n                            \n                                slice\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config?: ListConfig, total?: number)\n                    \n                \n                        \n                            \n                                Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                            You can init each Pagination instance with an optional config.\nIf no config is provided, it will default to {page: 1, size: 25}. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ListConfig\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                                \n                                                        total\n                                                  \n                                                        \n                                                                    number\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            change\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:13\n                            \n                        \n\n                \n                    \n                        Subject for tracking changes. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            change$\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Observable\n\n                        \n                    \n                    \n                        \n                            Default value : this.change.asObservable()\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:15\n                            \n                        \n\n                \n                    \n                        Observable that is nexted when the pagination has changed. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ListConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:9\n                            \n                        \n\n                \n                    \n                        The pagination config \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:11\n                            \n                        \n\n                \n                    \n                        Array to iterate over the number of pages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            total\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:7\n                            \n                        \n\n                \n                    \n                        The total number of items that is being paginated. It can be changed via setTotal. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            first\n                            \n                            \n                        \n                    \n                \n                \n                    \nfirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:93\n                            \n                        \n\n\n                \n                    \n                            Loads the first Page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPage\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPage()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:33\n                            \n                        \n\n\n                \n                    \n                            Retrieves the current page \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getPages\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetPages()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:38\n                            \n                        \n\n\n                \n                    \n                            Retrieves the number of pages \n\n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isActive\n                            \n                            \n                        \n                    \n                \n                \n                    \nisActive(page: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:107\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given page number is currently active.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isFirst\n                            \n                            \n                        \n                    \n                \n                \n                    \nisFirst()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:112\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the first one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isLast\n                            \n                            \n                        \n                    \n                \n                \n                    \nisLast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:117\n                            \n                        \n\n\n                \n                    \n                            Returns true if the current page is the last one \n\n\n                            \n                                Returns :     boolean\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            last\n                            \n                            \n                        \n                    \n                \n                \n                    \nlast()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:98\n                            \n                        \n\n\n                \n                    \n                            Loads the last page \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            load\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        load(config?: ListConfig)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:76\n                            \n                        \n\n\n                \n                    \n                            Merges config and fires next on change \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                        \n                                                                    ListConfig\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            next\n                            \n                            \n                        \n                    \n                \n                \n                    \nnext()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:43\n                            \n                        \n\n\n                \n                    \n                            Loads the next page. Throws error if already on last page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            params\n                            \n                            \n                        \n                    \n                \n                \n                    \nparams()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:130\n                            \n                        \n\n\n                \n                    \n                            Returns an object with all relevant infos about the current state of pagination \n\n\n                            \n                                Returns :     { page: number; pages: number; total: number; from: number; to: any; size: any; availableSizes: a...\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            prev\n                            \n                            \n                        \n                    \n                \n                \n                    \nprev()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:52\n                            \n                        \n\n\n                \n                    \n                            Loads the previous page. Throws error if already on first page. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(page: number, silent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:84\n                            \n                        \n\n\n                \n                    \n                            Selects the given page number \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        silent\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setTotal\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetTotal(total: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:63\n                            \n                        \n\n\n                \n                    \n                            Sets the total number of items and calculcates the page count.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        total\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            slice\n                            \n                            \n                        \n                    \n                \n                \n                    \nslice(items: Array)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:125\n                            \n                        \n\n\n                \n                    \n                            slices a given array according to the current pagination state \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/pagination/pagination.ts:142\n                            \n                        \n\n\n                \n                    \n                            updates the size of the pages.  \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Pagination\nPagination can be used to keep track of the pages of arbitrary items.\nconst pagination = new Pagination({ size: 10 });\npagination.setTotal(50); //tells the pagination that it should paginate over 50 items.\npagination.getPages(); //5See list.ts/list.component for example usage.\n\n    \n\n    \n        import { Subject, Observable } from 'rxjs';\nimport { ListConfig } from '../list/list-config.interface';\n\n/** This class can be used to control the loading behaviour of external data. */\nexport class Pagination {\n  /** The total number of items that is being paginated. It can be changed via setTotal. */\n  protected total: number;\n  /** The pagination config */\n  protected config: ListConfig;\n  /** Array to iterate over the number of pages. */\n  public pages: Array;\n  /** Subject for tracking changes. */\n  private change = new Subject();\n  /** Observable that is nexted when the pagination has changed. */\n  public change$: Observable = this.change.asObservable();\n\n  /** You can init each Pagination instance with an optional config.\n   * If no config is provided, it will default to ```{page: 1, size: 25}```. */\n  constructor(config?: ListConfig, total?: number) {\n    this.config = { page: 1, size: 25 };\n    Object.assign(this.config, config);\n    Object.assign(this.config, {\n      availableSizes: Array.from(new Set([this.config.size]\n        .concat(this.config.availableSizes || [10, 25, 50, 100], [this.config.size])\n        .sort(((a, b) => a - b))))\n    });\n    if (total) {\n      this.setTotal(total);\n    }\n  }\n\n  /** Retrieves the current page */\n  getPage(): number {\n    return this.config.page;\n  }\n\n  /** Retrieves the number of pages */\n  getPages(): number {\n    return this.pages ? this.pages.length : 0;\n  }\n\n  /** Loads the next page. Throws error if already on last page. */\n  next(): void {\n    if (this.isLast()) {\n      return; // already last page\n    }\n    this.config.page += 1;\n    this.load();\n  }\n\n  /** Loads the previous page. Throws error if already on first page. */\n  prev(): void {\n    if (this.isFirst()) {\n      return; // already first page\n    }\n    this.config.page -= 1;\n    this.load();\n  }\n\n  /**\n   * Sets the total number of items and calculcates the page count.\n   * */\n  setTotal(total: number) {\n    /* if (this.total !== total) {\n      this.change.next(this.config);\n    } */\n    this.total = total;\n    this.pages = new Array(Math.ceil(this.total / this.config.size));\n    if (this.config.page !== 1 && this.config.page > this.pages.length) {\n      this.config.page = this.pages.length || 1;\n      this.load();\n    }\n  }\n\n  /** Merges config and fires next on change */\n  protected load(config?: ListConfig): void {\n    if (config) {\n      Object.assign(this.config, config);\n    }\n    this.change.next(this.config);\n  }\n\n  /** Selects the given page number */\n  select(page: number, silent = false): void {\n    if (page === this.config.page || silent) {\n      this.config.page = page;\n      return;\n    }\n    this.load({ page: page });\n  }\n\n  /** Loads the first Page */\n  first(): void {\n    this.load({ page: 1 });\n  }\n\n  /** Loads the last page */\n  last() {\n    if (!this.pages) {\n      throw new Error(`Cannot load last page without knowing the item count.\n        Call setTotal(itemCount) before loading.`);\n    }\n    this.load({ page: this.pages.length });\n  }\n\n  /** Returns true if the given page number is currently active.*/\n  isActive(page: number): boolean {\n    return this.config.page === page;\n  }\n\n  /** Returns true if the current page is the first one */\n  isFirst(): boolean {\n    return this.config.page === 1;\n  }\n\n  /** Returns true if the current page is the last one */\n  isLast(): boolean {\n    if (!this.pages) {\n      return true;\n    }\n    return this.config.page === this.pages.length;\n  }\n\n  /** slices a given array according to the current pagination state */\n  slice(items: Array): Array {\n    return items.slice((this.config.page - 1) * this.config.size, (this.config.page) * this.config.size);\n  }\n\n  /** Returns an object with all relevant infos about the current state of pagination */\n  params() {\n    return {\n      page: this.getPage(),\n      pages: this.getPages(),\n      total: this.total,\n      from: (this.getPage() - 1) * this.config.size + 1,\n      to: Math.min(this.getPage() * this.config.size, this.total),\n      size: this.config.size,\n      availableSizes: this.config.availableSizes,\n    };\n  }\n  /** updates the size of the pages.  */\n  updateSize(size: number) {\n    if (!size) {\n      return;\n    }\n    this.load({ size, page: 1 });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PaginationComponent.html":{"url":"components/PaginationComponent.html","title":"component - PaginationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PaginationComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/list/pagination/pagination.component.ts\n\n\n    \n        Description\n    \n    \n        The Pagination component renders a given instance of the Pagination class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnChanges\n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pagination\n            \n\n\n\n\n            \n                templateUrl\n                ./pagination.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                container\n                            \n                            \n                                    Private\n                                page\n                            \n                            \n                                    Private\n                                pageContainer\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isVisible\n                            \n                            \n                                ngOnChanges\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                updateSize\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                config\n                            \n                            \n                                pagination\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     PaginationConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:23\n                            \n                        \n                \n                    \n                        The config that is used \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        pagination\n                    \n                \n                \n                    \n                        Type :     Pagination\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:15\n                            \n                        \n                \n                    \n                        A Pagination Instance \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isVisible\n                            \n                            \n                        \n                    \n                \n                \n                    \nisVisible(page)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:39\n                            \n                        \n\n\n                \n                    \n                            Determines if a page should be visible \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        page\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:31\n                            \n                        \n\n\n                \n                    \n                            As soon as the pagination is known, the change$ event is subscribed to translate the container on change.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Init config. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            updateSize\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdateSize(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:45\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:17\n                            \n                        \n\n                \n                    \n                        The div container for the pages\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            page\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChildren('page')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:21\n                            \n                        \n\n                \n                    \n                        The pages li elements. The first one is used to determine the container translation. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pageContainer\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('pageContainer')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination.component.ts:19\n                            \n                        \n\n                \n                    \n                        The ul around pages \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Pagination\nTODO\n\n    \n\n    \n        import { Component, ElementRef, Input, OnInit, QueryList, ViewChild, ViewChildren } from '@angular/core';\nimport { OnChanges } from '@angular/core/src/metadata/lifecycle_hooks';\nimport { Pagination } from '@ec.components/core';\nimport { PaginationConfig } from './pagination-config.interface';\n\n/**\n * The Pagination component renders a given instance of the Pagination class.\n */\n@Component({\n  selector: 'ec-pagination',\n  templateUrl: './pagination.component.html',\n})\nexport class PaginationComponent implements OnChanges, OnInit {\n  /** A Pagination Instance */\n  @Input() pagination: Pagination;\n  /** The div container for the pages*/\n  @ViewChild('container') private container: ElementRef;\n  /** The ul around pages */\n  @ViewChild('pageContainer') private pageContainer: ElementRef;\n  /** The pages li elements. The first one is used to determine the container translation. */\n  @ViewChildren('page') private page: QueryList;\n  /** The config that is used */\n  @Input() config: PaginationConfig;\n\n  /** Init config. */\n  ngOnInit() {\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** As soon as the pagination is known, the change$ event is subscribed to translate the container on change.*/\n  ngOnChanges() {\n    if (!this.pagination) {\n      return;\n    }\n    this.config = new PaginationConfig(this.config);\n  }\n\n  /** Determines if a page should be visible */\n  isVisible(page) {\n    const current = this.pagination.getPage();\n    return Math.abs(current - page) \n    \n\n    \n        \n  1&&!pagination?.isFirst()\">\n    \n      \n        {{'pagination.first' | symbol}}\n      \n    \n    \n      \n        {{'pagination.prev' | symbol}}\n      \n    \n  \n  1\">\n    \n      \n        \n          {{i+1}}\n        \n      \n    \n  \n  1&&!pagination?.isLast()\">\n    \n      \n        {{'pagination.next' | symbol}}\n      \n    \n    \n      \n        {{'pagination.last' | symbol}}\n      \n    \n  \n  \n    {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ 'pagination.of' | symbol}} {{pagination?.params()?.total}}\n  \n  \n     1\" (change)=\"updateSize($event.target.value)\" class=\"input\">\n      \n        {{size}} {{'pagination.size' | symbol}}\n      \n    \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  1&&!pagination?.isFirst()\">                  {{\\'pagination.first\\' | symbol}}                            {{\\'pagination.prev\\' | symbol}}              1\">                            {{i+1}}                      1&&!pagination?.isLast()\">                  {{\\'pagination.next\\' | symbol}}                            {{\\'pagination.last\\' | symbol}}                  {{pagination?.params()?.from}} - {{pagination?.params()?.to}} {{ \\'pagination.of\\' | symbol}} {{pagination?.params()?.total}}         1\" (change)=\"updateSize($event.target.value)\" class=\"input\">              {{size}} {{\\'pagination.size\\' | symbol}}            '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PaginationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PaginationConfig.html":{"url":"classes/PaginationConfig.html","title":"class - PaginationConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PaginationConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n        \n\n            \n                Description\n            \n            \n                Configuration for a pagination component \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                hideFirstLast\n                            \n                            \n                                hidePages\n                            \n                            \n                                range\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(config: PaginationConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                            The constructor assigns the config \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    PaginationConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hideFirstLast\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:9\n                            \n                        \n\n                \n                    \n                        Hides first and last Link \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            hidePages\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:11\n                            \n                        \n\n                \n                    \n                        Hides pages \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            range\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 2\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/list/pagination/pagination-config.interface.ts:7\n                            \n                        \n\n                \n                    \n                        Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\nNOTE: For a smoother UX, there are minimum 2 * range + 1 pages visible.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { SymbolService } from '../../symbol/symbol.service';\n\n/** Configuration for a pagination component */\nexport class PaginationConfig {\n    /** Range of displayed pages in the UI. Controls the number of pages before and after the current page. Defaults to 3.\n * NOTE: For a smoother UX, there are minimum ```2 * range + 1``` pages visible.*/\n    range = 2;\n    /** Hides first and last Link */\n    hideFirstLast: boolean;\n    /** Hides pages */\n    hidePages: boolean;\n    /** The constructor assigns the config */\n    constructor(config: PaginationConfig) {\n        Object.assign(this, config);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PasswordResetComponent.html":{"url":"components/PasswordResetComponent.html","title":"component - PasswordResetComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PasswordResetComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/password-reset/password-reset.component.ts\n\n\n    \n        Description\n    \n    \n        Form to send password reset request.\nhttps://components.entrecode.de/auth/password-reset?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-password-reset\n            \n\n\n\n\n            \n                templateUrl\n                password-reset.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                auth\n                            \n                            \n                                email\n                            \n                            \n                                loader\n                            \n                            \n                                lockForm\n                            \n                            \n                                    Public\n                                notifications\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                reset\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(auth: AuthService, notifications: NotificationsService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:27\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notifications\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:21\n                            \n                        \n                \n                    \n                        Optional api to be used (if not using sdk.api instance) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Default value : 'E-Mail Adresse...'\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:23\n                            \n                        \n                \n                    \n                        Custom placeholder for email field \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:25\n                            \n                        \n                \n                    \n                        Event after request was successful \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            reset\n                            \n                            \n                        \n                    \n                \n                \n                    \nreset()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Sends request through AuthService and shows notifications + loader. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:19\n                            \n                        \n\n                \n                    \n                        The user email \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:27\n                            \n                        \n\n                \n                    \n                        The loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lockForm\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:17\n                            \n                        \n\n                \n                    \n                        To ensure the user only sends one request, the form is locked after the request has been sent \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/password-reset/password-reset.component.ts:29\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { LoaderComponent, NotificationsService, WithLoader } from '@ec.components/ui';\nimport { AuthService } from '../auth.service';\n\n/** Form to send password reset request.\n * https://components.entrecode.de/auth/password-reset?e=1\n *\n*/\n@Component({\n  selector: 'ec-password-reset',\n  templateUrl: 'password-reset.component.html'\n})\n\nexport class PasswordResetComponent implements WithLoader {\n  /** To ensure the user only sends one request, the form is locked after the request has been sent */\n  lockForm: boolean;\n  /** The user email */\n  email: string;\n  /** Optional api to be used (if not using sdk.api instance) */\n  @Input() api: PublicAPI;\n  /** Custom placeholder for email field */\n  @Input() placeholder = 'E-Mail Adresse...';\n  /** Event after request was successful */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The loader */\n  @ViewChild(LoaderComponent) loader;\n\n  constructor(public auth: AuthService, public notifications: NotificationsService) {\n  }\n  /** Sends request through AuthService and shows notifications + loader. */\n  reset() {\n    const reset = this.auth.resetPassword(this.email, this.api)\n      .then(() => {\n        this.notifications.emit({\n          type: 'success',\n          title: 'Mail versendet',\n          message: 'Sie haben soeben eine Mail mit weiteren Anweisungen erhalten',\n          sticky: true\n        });\n        this.lockForm = true;\n        this.success.emit();\n      }).catch((error) => {\n        this.notifications.emit({\n          title: 'Fehler beim Passwort zurücksetzen',\n          error,\n          sticky: true\n        });\n        console.log('could not reset password', error);\n      });\n    this.loader.wait(reset);\n  }\n}\n\n    \n\n    \n        \n\n  \n    \n  \n  \n    {{'passwordReset.button' | symbol}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '              {{\\'passwordReset.button\\' | symbol}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PasswordResetComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PopComponent.html":{"url":"components/PopComponent.html","title":"component - PopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  PopComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/pop/pop.component.ts\n\n\n    \n        Description\n    \n    \n        A Pop is an area of content whose visibility can be toggled.\nIt can be used e.g as dialog, drawer or dialog.\nhttps://components.entrecode.de/ui/pop?e=1\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.component.ts:52\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:38\n                            \n                        \n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:92\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:76\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.component.ts:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n    \n        Pop\nA Pop is not just a modal, but a section of markup that appears (pops) anywhere and with any style on your page.\nUsage\n\n    \n        Close\n    \n    \n        Some body content\n    \n    \n        This is the footer\n    \n\nShow popThe default pop classes can be looked up here.\n\n    \n\n    \n        import {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  HostBinding,\n  HostListener,\n  ElementRef,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { PopService } from './pop.service';\n\n/** A Pop is an area of content whose visibility can be toggled.\n * It can be used e.g as dialog, drawer or dialog.\n * https://components.entrecode.de/ui/pop?e=1\n * */\n@Component({\n  selector: 'ec-pop',\n  templateUrl: './pop.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PopComponent {\n  /** If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  */\n  @Input() @HostBinding('class.is-active') active: boolean;\n  /** Flip and stays true after first show */\n  activated = false;\n  /** The used type on the host element */\n  @Input() type: string;\n  /** If set to true, the pop will hide when a click happens outside the pop. */\n  @Input() hideOnClickOutside = false;\n  /** If set to false, esc will not close the pop */\n  @Input() hideOnEscape = true;\n  // tslint:disable-next-line:no-output-rename\n  @Output('toggle') _toggle: EventEmitter = new EventEmitter();\n\n  clickEvent;\n\n  /** Listens for document:click and hides */\n  @HostListener('document:click', ['$event']) clickedOutside($event) {\n    if (\n      this.hideOnClickOutside &&\n      this.active &&\n      (!this.clickEvent || $event !== this.clickEvent) && // to ensure the show event wont hide immediately\n      this.elementRef &&\n      this.isOutside($event.target)) {\n      this.hide();\n    }\n  }\n\n  constructor(protected popService: PopService,\n    public elementRef: ElementRef,\n    protected cdr: ChangeDetectorRef\n  ) {\n  }\n\n  /** yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) */\n  isOutside(element) {\n    return !this.elementRef.nativeElement.contains(element)/*  ||\n      element === this.elementRef.nativeElement */;\n  }\n\n  /** Shows if not active, hides if active. */ // active: boolean = !this.active, emit: boolean = false\n  public toggle(e?) {\n    if (this.active) {\n      this.hide();\n    } else {\n      this.show(e);\n    }\n  }\n\n  /** Shows the pop. Sets active true and adds pop to popService.stack */\n  public show(e?) {\n    this.active = true;\n    this.activated = true;\n    if (this.hideOnEscape) {\n      this.popService.stack.add(this);\n    }\n    if (e) {\n      this.clickEvent = e;\n    } else if (this.hideOnClickOutside) {\n      // console.warn('To use hideOnClickOutside, you need to pass the click event to the show method of ec-pop!');\n    }\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n\n  /** Hides the pop. Sets active false and removes pop from popService.stack */\n  public hide() {\n    if (this.hideOnEscape) {\n      this.popService.stack.remove(this);\n    }\n    this.active = false;\n    this._toggle.emit(this.active);\n    this.cdr.markForCheck();\n  }\n}\n\n    \n\n    \n        \n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'PopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PopModule.html":{"url":"modules/PopModule.html","title":"module - PopModule","body":"\n                   \n\n\n\n\n    Modules\n    PopModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_imports\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\n\nModalComponent\n\nModalComponent\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nIconModule\n\nIconModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            PopService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IconModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ModalComponent\n                        \n                        \n                            PopComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { PopComponent } from './pop.component';\nimport { PopService } from './pop.service';\nimport { ModalComponent } from '../modal/modal.component';\nimport { IconModule } from '../icon/icon.module';\n\nexport const popModuleConfig = {\n  declarations: [\n    PopComponent,\n    ModalComponent,\n  ],\n  imports: [\n    CommonModule,\n    IconModule\n  ],\n  exports: [\n    PopComponent,\n    ModalComponent,\n  ],\n  providers: [PopService]\n};\n\n@NgModule(popModuleConfig)\nexport class PopModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PopService.html":{"url":"injectables/PopService.html","title":"injectable - PopService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PopService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/pop/pop.service.ts\n        \n\n            \n                Description\n            \n            \n                Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                defaultColumns\n                            \n                            \n                                stack\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                            Listens for escape keys and hides latest pop + removes the pop from stack \n\n                    \n                \n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            defaultColumns\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 9\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:9\n                            \n                        \n\n                \n                    \n                        default value for columns of any pop \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            stack\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Collection\n\n                        \n                    \n                    \n                        \n                            Default value : new Collection()\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/pop/pop.service.ts:11\n                            \n                        \n\n                \n                    \n                        Stack of current opened pops \n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Collection } from '@ec.components/core';\nimport { PopComponent } from './pop.component';\n\n/** Holds a stack of all open pops. listens for escape keydown events to close the latest opened pop. */\n@Injectable()\nexport class PopService {\n    /** default value for columns of any pop */\n    defaultColumns = 9;\n    /** Stack of current opened pops */\n    stack: Collection = new Collection();\n    /** Listens for escape keys and hides latest pop + removes the pop from stack */\n    constructor() {\n        window.addEventListener('keydown', (event) => {\n            if ((event.keyCode === 27 || event.key === 'Escape') && this.stack.items.length) {\n                const latestPop = this.stack.items[this.stack.items.length - 1];\n                latestPop.hide();\n                this.stack.remove(latestPop);\n            }\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ResourceActionbarState.html":{"url":"interfaces/ResourceActionbarState.html","title":"interface - ResourceActionbarState","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  ResourceActionbarState\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        action\n                                \n                                \n                                        actionbar\n                                \n                                \n                                        api\n                                \n                                \n                                            Optional\n                                        options\n                                \n                                \n                                        relation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                    \n                                \n                                \n                                    \n                                        action:     ActionFunction\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionFunction\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionbar\n                                    \n                                \n                                \n                                    \n                                        actionbar:     ActionbarComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ActionbarComponent\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        api\n                                    \n                                \n                                \n                                    \n                                        api:     Core\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Core\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        options\n                                    \n                                \n                                \n                                    \n                                        options:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ElementRef, Input, ChangeDetectorRef, EventEmitter, Output } from '@angular/core';\nimport { ActionbarComponent, Action, ActionFunction, selectTemplate } from '@ec.components/ui';\nimport { NotificationsService, ListComponent } from '@ec.components/ui';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport ListResource from 'ec.sdk/lib/resources/ListResource';\nimport Core from 'ec.sdk/lib/Core';\nimport { Item } from '@ec.components/core';\nimport { SdkService } from '../sdk/sdk.service';\n\nexport interface ResourceActionbarState {\n    api: Core;\n    relation: string;\n    actionbar: ActionbarComponent;\n    action?: ActionFunction;\n    options?: Object;\n}\n\n@Component({\n    selector: 'ec-resource-actionbar',\n    template: selectTemplate\n})\nexport class ResourceActionbarComponent extends ActionbarComponent implements OnInit {\n\n    state: ResourceActionbarState;\n\n    @Output() create: EventEmitter = new EventEmitter();\n    @Output() select: EventEmitter> = new EventEmitter();\n\n    @Input() actions: Action[];\n\n    constructor(\n        public notificationService: NotificationsService,\n        public sdk: SdkService,\n        public resourceConfig: ResourceConfig,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef,\n    ) {\n        super(elementRef, cdr);\n    }\n\n    ngOnInit() {\n        const state = {\n            api: this.sdk.api,\n            relation: 'tags'\n        };\n        const { api, relation } = state;\n        this.sdk.ready.then(() => {\n            this.loadResourceListActions({\n                api,\n                relation,\n                actionbar: this\n            });\n        });\n    }\n\n    getResourceListActions(listResource: ListResource, relation: string, action?: ActionFunction): Action[] {\n        const actions: Action[] = listResource.getAllItems()\n            .map((resource) => {\n                const { identifier, label } = this.resourceConfig.get(relation);\n                return {\n                    id: resource[identifier],\n                    title: resource[label] || '- no title -',\n                    data: resource,\n                    path: relation,\n                    action: (item, bar) => {\n                        if (action) {\n                            action(item.getBody().data, bar);\n                        } else {\n                            console.log('no action specified..');\n                        }\n                    }\n                };\n            });\n        if (listResource.hasNextLink()) {\n            actions.push({\n                id: 'next-page',\n                title: `Load Page`,\n                path: null,\n                data: {},\n                select: false,\n                action: () => {\n                    listResource.followNextLink().then((list) => {\n                        const concatted = this.list.items\n                            .map(i => i.getBody())\n                            .filter(i => i.id !== 'next-page')\n                            .concat(this.getResourceListActions(list, relation, action));\n                        this.loadActions(concatted);\n                    });\n                }\n            });\n        }\n        return actions;\n    }\n\n    reload() {\n        this.loadResourceListActions({\n            ...this.state,\n            options: {}\n        });\n    }\n\n    loadResourceListActions(state: ResourceActionbarState = this.state, stack = true): Promise {\n        const { api, relation, actionbar, action, options } = state;\n        this.state = {\n            ...this.state,\n            ...state\n        };\n        const loading = api.resourceList(relation, options)\n            .then(list => {\n                return this.getResourceListActions(list, relation, action);\n            }).then(actions => {\n                if (actions) {\n                    actionbar.loadActions(actions, stack);\n                }\n                return actions;\n            }).catch(error => {\n                this.notificationService.emit({\n                    title: 'Error while loading Resources',\n                    error\n                });\n            }).then(actions => actions || []);\n        if (actionbar.dropdownLoader) {\n            actionbar.dropdownLoader.wait(loading);\n        }\n        return loading;\n    }\n\n    resourceAction({ relation, title, api, action, actionbar, add, path }:\n        {\n            relation: string,\n            title: string,\n            api: Core,\n            action?: ActionFunction,\n            actionbar?: ActionbarComponent,\n            add?: boolean,\n            path?: string\n        }) {\n        return {\n            id: path || relation,\n            title: title,\n            add,\n            action: () => this.loadResourceListActions(\n                { api, relation, actionbar, action }\n            )\n        };\n    }\n\n    filterDropdownList(listComponent: ListComponent, query) {\n        const paths = this.currentActions()\n            .map(a => a.path)\n            .filter((value, index, self) => self.indexOf(value) === index)\n            .filter(v => !!v);\n        if (!paths.length) {\n            return super.filterDropdownList(listComponent, query);\n        }\n        const { identifier, label } = this.resourceConfig.get(this.state.relation);\n        this.loadResourceListActions({\n            ...this.state,\n            options: {\n                [label + '~']: { exact: query }\n            }\n        }, false).then((actions) => {\n            if (actions.length === 0) {\n                this.loadActions([{\n                    title: `\"${query}\" erstellen`,\n                    id: 'createnew',\n                    select: false,\n                    action: () => {\n                        if (this.create.observers.length) {\n                            this.create.emit(query);\n                        } else {\n                            const item = new Item({\n                                id: Date.now() + '',\n                                title: query,\n                            }, this.config);\n                            this.addItem(item);\n                            this.searchbar.clear();\n                            this.reload();\n                        }\n                    }\n                }], false);\n            }\n        });\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceCrudComponent.html":{"url":"components/ResourceCrudComponent.html","title":"component - ResourceCrudComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceCrudComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-crud/resource-crud.component.ts\n\n\n    \n        Description\n    \n    \n        The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * \n *\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-crud\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-crud.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                list\n                            \n                            \n                                loader\n                            \n                            \n                                pop\n                            \n                            \n                                    Public\n                                route\n                            \n                            \n                                    Public\n                                router\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                            \n                                    Public\n                                hasMethod\n                            \n                            \n                                initMethods\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                select\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                createClicked\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, auth: AuthService, loaderService: LoaderService, notificationService: NotificationsService, router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        auth\n                                                  \n                                                        \n                                                                    AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:29\n                            \n                        \n                \n                    \n                        The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:33\n                            \n                        \n                \n                    \n                        CrudConfig for customization of the crud's UI.\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:31\n                            \n                        \n                \n                    \n                        The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:35\n                            \n                        \n                \n                    \n                        The selection that should be used \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:43\n                            \n                        \n                \n                    \n                        Emits when a list element is clicked \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        createClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:47\n                            \n                        \n                \n                    \n                        Output that is nexted when pressing the create button \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:45\n                            \n                        \n                \n                    \n                        Emits when the selection has changed \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:90\n                            \n                        \n\n\n                \n                    \n                            Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hasMethod\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hasMethod(method: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:72\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given method is part of the methods array (or if there is no methods array) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        method\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initMethods\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitMethods()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:61\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:77\n                            \n                        \n\n\n                \n                    \n                            Called on list columnClicked \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            list\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceListComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourceListComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:37\n                            \n                        \n\n                \n                    \n                        The ResourceListComponent inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     LoaderComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:41\n                            \n                        \n\n                \n                    \n                        The lists loader \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourcePopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(ResourcePopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:39\n                            \n                        \n\n                \n                    \n                        The Pop inside the template. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            route\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ActivatedRoute\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:54\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            router\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Router\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Optional()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-crud/resource-crud.component.ts:53\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, OnInit, Optional, Output, ViewChild } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { SdkService } from '../sdk/sdk.service';\nimport { Selection } from '@ec.components/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { LoaderService } from '@ec.components/ui';\nimport { NotificationsService } from '@ec.components/ui';\nimport { AuthService } from '../auth/auth.service';\nimport { WithLoader } from '@ec.components/ui';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport Core from 'ec.sdk/lib/Core';\n\n/** The ResourceCrudComponent takes a relation name and api to render a resource list with create/edit/delete functionality out of the box.\n * ```html\n * \n * ```\n * */\n@Component({\n    selector: 'ec-resource-crud',\n    templateUrl: './resource-crud.component.html',\n})\nexport class ResourceCrudComponent implements OnInit, WithLoader {\n    /** The API Connector that possesses the resource list, see https://entrecode.github.io/ec.sdk/#api-connectors */\n    @Input() api: Core; // sdk api connector\n    /** The name of the resource. If given, the generic ListResource loading will be used (api.resourceList) */\n    @Input() relation: string;\n    /** CrudConfig for customization of the crud's UI.*/\n    @Input() config: CrudConfig = {};\n    /** The selection that should be used */\n    @Input() selection: Selection;\n    /** The ResourceListComponent inside the template. */\n    @ViewChild(ResourceListComponent) list: ResourceListComponent;\n    /** The Pop inside the template. */\n    @ViewChild(ResourcePopComponent) pop: ResourcePopComponent;\n    /** The lists loader */\n    @ViewChild(LoaderComponent) loader: LoaderComponent;\n    /** Emits when a list element is clicked */\n    @Output() columnClicked: EventEmitter = new EventEmitter();\n    /** Emits when the selection has changed */\n    @Output() selected: EventEmitter = new EventEmitter();\n    /** Output that is nexted when pressing the create button */\n    @Output() createClicked: EventEmitter = new EventEmitter();\n\n    constructor(private sdk: SdkService,\n        private auth: AuthService,\n        private loaderService: LoaderService,\n        private notificationService: NotificationsService,\n        @Optional() public router: Router,\n        @Optional() public route: ActivatedRoute) {\n    }\n\n    ngOnInit() {\n        this.initMethods();\n    }\n\n    initMethods() {\n        if (!this.relation) {\n            return;\n        }\n        this.auth.getAllowedResourceMethods(this.relation, {}, this.config.methods)\n            .then((methods) => {\n                this.config.methods = methods;\n            });\n    }\n\n    /** Returns true if the given method is part of the methods array (or if there is no methods array) */\n    public hasMethod(method: string) {\n        return this.config.methods && this.config.methods.indexOf(method) !== -1;\n    }\n\n    /** Called on list columnClicked */\n    select(item) {\n        if (!item) {\n            return;\n        }\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n            return;\n        }\n        this.pop.edit(item.getBody());\n        // TODO: check CrudComponent#loadEntry for further inspiration\n    }\n\n    /** Method that is invoked when pressing the create button. Default behaviour is opening the resource-pop. */\n    create() {\n        if (this.createClicked.observers.length) {\n            this.createClicked.next();\n        } else if (this.pop) {\n            this.pop.create();\n        }\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n                {{config?.createLabel}}\n                \n                    \n                \n            \n            \n                \n            \n        \n    \n    \n        \n    \n    \n    \n    \n    \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                        {{config?.createLabel}}                                                                                                                                                    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceCrudComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ResourceListPopComponent.html":{"url":"components/ResourceListPopComponent.html","title":"component - ResourceListPopComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ResourceListPopComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n\n\n\n    \n        Extends\n    \n    \n            PopComponent\n    \n\n    \n        Implements\n    \n    \n                OnChanges\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-resource-list-pop\n            \n\n\n\n\n            \n                templateUrl\n                ./resource-list-pop.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                cdr\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                            \n                                lightModel\n                            \n                            \n                                    Public\n                                popService\n                            \n                            \n                                    Public\n                                resourceConfig\n                            \n                            \n                                searchbar\n                            \n                            \n                                activated\n                            \n                            \n                                clickEvent\n                            \n                            \n                                    Public\n                                elementRef\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnChanges\n                            \n                            \n                                select\n                            \n                            \n                                    Public\n                                hide\n                            \n                            \n                                isOutside\n                            \n                            \n                                    Public\n                                show\n                            \n                            \n                                    Public\n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                config\n                            \n                            \n                                relation\n                            \n                            \n                                selection\n                            \n                            \n                                active\n                            \n                            \n                                hideOnClickOutside\n                            \n                            \n                                hideOnEscape\n                            \n                            \n                                type\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                columnClicked\n                            \n                            \n                                pasted\n                            \n                            \n                                toggle\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                class\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:click\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(resourceConfig: ResourceConfig, popService: PopService, elementRef: ElementRef, cdr: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        resourceConfig\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        popService\n                                                  \n                                                        \n                                                                    PopService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        cdr\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     Core\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:16\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     ListConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        relation\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:15\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        selection\n                    \n                \n                \n                    \n                        Type :     Selection\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        active\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:28\n                            \n                        \n                \n                    \n                        If true, .ec-pop is part of the DOM (*ngIf) + .active is set on .ec-pop-container.  \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnClickOutside\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:34\n                            \n                        \n                \n                    \n                        If set to true, the pop will hide when a click happens outside the pop. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        hideOnEscape\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:36\n                            \n                        \n                \n                    \n                        If set to false, esc will not close the pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        type\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:32\n                            \n                        \n                \n                    \n                        The used type on the host element \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        columnClicked\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        pasted\n                    \n                \n                \n                    \n                        Type :     EventEmitter>\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        toggle\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:38\n                            \n                        \n            \n        \n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            class\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : 'toast-wrapper'\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:23\n                            \n                        \n\n                \n                    \n                        Set host class to make sure the type is used \n\n                    \n                \n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:click\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:click($event)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:43\n                            \n                        \n\n\n                \n                    \n                            Listens for document:click and hides \n\n\n                    \n                \n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnChanges\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnChanges()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(item)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:45\n                            \n                        \n\n\n                \n                    \n                            emits columnClicked event or toggles selection if no observers. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            hide\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        hide()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:92\n                            \n                        \n\n\n                \n                    \n                            Hides the pop. Sets active false and removes pop from popService.stack \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isOutside\n                            \n                            \n                        \n                    \n                \n                \n                    \nisOutside(element)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:61\n                            \n                        \n\n\n                \n                    \n                            yields true if the given element is outside the pop / or is the wrapper element itself (the backdrop) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        element\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            show\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        show(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:76\n                            \n                        \n\n\n                \n                    \n                            Shows the pop. Sets active true and adds pop to popService.stack \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggle(e?)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:67\n                            \n                        \n\n\n                \n                    \n                            Shows if not active, hides if active. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cdr\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ChangeDetectorRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            lightModel\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            popService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:28\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            resourceConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            searchbar\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SearchbarComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(SearchbarComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activated\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:30\n                            \n                        \n\n                \n                    \n                        Flip and stays true after first show \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clickEvent\n                            \n                        \n                    \n                \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            elementRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                            \n                                \n                                    Inherited from     PopComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in PopComponent:55\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { ChangeDetectorRef, Component, ElementRef, EventEmitter, HostBinding, Input, OnChanges, Output, ViewChild } from '@angular/core';\nimport { Item, ListConfig, Selection } from '@ec.components/core';\nimport { PopComponent, PopService, SearchbarComponent } from '@ec.components/ui';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\n\n@Component({\n    selector: 'ec-resource-list-pop',\n    templateUrl: './resource-list-pop.component.html',\n\n})\n\nexport class ResourceListPopComponent extends PopComponent implements OnChanges {\n    @Input() relation: string;\n    @Input() api: Core;\n    @Input() config: ListConfig;\n    @Input() selection: Selection;\n    @Output() columnClicked: EventEmitter> = new EventEmitter();\n    @Output() pasted: EventEmitter> = new EventEmitter();\n    @ViewChild(SearchbarComponent) searchbar: SearchbarComponent;\n    /** Set host class to make sure the type is used */\n    @HostBinding('class') class = 'toast-wrapper';\n    lightModel: any;\n\n    constructor(\n        public resourceConfig: ResourceConfig,\n        public popService: PopService,\n        public elementRef: ElementRef,\n        public cdr: ChangeDetectorRef\n    ) {\n        super(popService, elementRef, cdr);\n    }\n\n    ngOnChanges() {\n        if (this.relation) {\n            this.config = Object.assign({}, this.config || {}, this.resourceConfig.get(this.relation));\n        }\n        if (this.config) {\n            this.config = Object.assign({ hidePagination: true, disableHeader: true }, this.config);\n        }\n    }\n\n    /** emits columnClicked event or toggles selection if no observers. */\n    select(item) {\n        if (this.columnClicked.observers.length) {\n            this.columnClicked.emit(item);\n        } else if (this.selection) {\n            this.selection.toggle(item);\n        }\n        // this.searchbar.focusEvent.emit(true);\n    }\n}\n\n    \n\n    \n        \n    \n        \n            \n        \n         -->\n        \n    \n    \n        \n        \n            \n    \n    \n        \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                         -->                                                                '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ResourceListPopComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ResourceModule.html":{"url":"modules/ResourceModule.html","title":"module - ResourceModule","body":"\n                   \n\n\n\n\n    Modules\n    ResourceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_imports\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nUiModule\n\nUiModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/resource/resource.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            ResourceListComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            ResourceConfig\n                        \n                        \n                            ResourceService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ApiActionbarComponent\n                        \n                        \n                            ResourceActionbarComponent\n                        \n                        \n                            ResourceCrudComponent\n                        \n                        \n                            ResourceDeletePopComponent\n                        \n                        \n                            ResourceFormComponent\n                        \n                        \n                            ResourceListComponent\n                        \n                        \n                            ResourceListPopComponent\n                        \n                        \n                            ResourcePopComponent\n                        \n                        \n                            ResourceSelectComponent\n                        \n                        \n                            SdkModule\n                        \n                        \n                            UiModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { NgModule } from '@angular/core';\nimport { UiModule } from '@ec.components/ui';\nimport { SdkModule } from '../sdk/sdk.module';\nimport { ResourceListComponent } from '../resource-list/resource-list.component';\nimport { ResourceFormComponent } from '../resource-form/resource-form.component';\nimport { ResourcePopComponent } from '../resource-pop/resource-pop.component';\nimport { ResourceCrudComponent } from '../resource-crud/resource-crud.component';\nimport { ResourceDeletePopComponent } from '../resource-delete-pop/resource-delete-pop.component';\nimport { ResourceSelectComponent } from '../resource-select/resource-select.component';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceListPopComponent } from '../resource-list-pop/resource-list-pop.component';\nimport { ResourceActionbarComponent } from '../resource-actionbar/resource-actionbar.component';\nimport { ApiActionbarComponent } from '../resource-actionbar/api-actionbar.component';\n\n@NgModule({\n  entryComponents: [\n    ResourceListComponent,\n  ],\n  declarations: [\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  imports: [\n    CommonModule,\n    FormsModule,\n    UiModule,\n    SdkModule,\n  ],\n  exports: [\n    UiModule,\n    SdkModule,\n    ResourceListComponent,\n    ResourceListPopComponent,\n    ResourceFormComponent,\n    ResourcePopComponent,\n    ResourceCrudComponent,\n    ResourceDeletePopComponent,\n    ResourceSelectComponent,\n    ResourceActionbarComponent,\n    ApiActionbarComponent,\n  ],\n  providers: [\n    ResourceService,\n    ResourceConfig,\n  ],\n})\nexport class ResourceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResourceService.html":{"url":"injectables/ResourceService.html","title":"injectable - ResourceService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ResourceService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                The CRUD service is meant to be used when modifying entries.\nAs the letters state it should be used to create update and delete entries.\nEach action fires up a change that can be subscribed upon in any component to react to relevant\nchanges.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changes\n                            \n                            \n                                    Public\n                                config\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clean\n                            \n                            \n                                create\n                            \n                            \n                                del\n                            \n                            \n                                isImmutableProperty\n                            \n                            \n                                matches\n                            \n                            \n                                save\n                            \n                            \n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, config: ResourceConfig)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                            Injects sdk \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        config\n                                                  \n                                                        \n                                                                    ResourceConfig\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(filter?: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Yields an observable that emits for all updates that match the given filter \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Observable\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clean\n                            \n                            \n                        \n                    \n                \n                \n                    \nclean(value: Object, setEmptyStringsToNull, deleteNullProperties)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:103\n                            \n                        \n\n\n                \n                    \n                            Removes all null or undefined values from the given object \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        setEmptyStringsToNull\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                                \n                                                        deleteNullProperties\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Object\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            create\n                            \n                            \n                        \n                    \n                \n                \n                    \ncreate(relation: string, value: Object, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:121\n                            \n                        \n\n\n                \n                    \n                            Creates a new resource with the given value for the given relation. Fires the \"create\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            del\n                            \n                            \n                        \n                    \n                \n                \n                    \ndel(relation: string, resource: Resource)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:132\n                            \n                        \n\n\n                \n                    \n                            deletes the given resource and emits the \"delete\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isImmutableProperty\n                            \n                            \n                        \n                    \n                \n                \n                    \nisImmutableProperty(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:97\n                            \n                        \n\n\n                \n                    \n                            Returns true if the given field key is an immutable system property \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            matches\n                            \n                            \n                        \n                    \n                \n                \n                    \nmatches(change: Update, filter: Update)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:47\n                            \n                        \n\n\n                \n                    \n                            Gives true if the given change fits all property values of the filter. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        change\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        filter\n                                                        \n                                                                    Update\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            save\n                            \n                            \n                        \n                    \n                \n                \n                    \nsave(item: Item, value: Object, relation: string, api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:64\n                            \n                        \n\n\n                \n                    \n                            Saves the given resource with the given value. If the resource is not yet existing,\nit will be created.Otherwise it will be updated. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        item\n                                                        \n                                                                    Item\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        relation\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                            \n                        \n                    \n                \n                \n                    \nupdate(relation, resource: Resource, value: Object)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:82\n                            \n                        \n\n\n                \n                    \n                            Updates the given resource with the new value. Fires the \"update\" change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        relation\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        resource\n                                                        \n                                                                    Resource\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        value\n                                                        \n                                                                    Object\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changes\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:35\n                            \n                        \n\n                \n                    \n                        The changes event is emitted everytime an resource is created or updated. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            config\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ResourceConfig\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/resource-config/resource.service.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[];\n    /** The relevant resource. */\n    resource?: Resource;\n    /** The list where it happened. */\n    list?: ResourceList;\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete';\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string;\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().pipe(\n            rxFilter((change: Update) => this.matches(change, filter))\n        );\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value));\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SdkField.html":{"url":"interfaces/SdkField.html","title":"interface - SdkField","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  SdkField\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/sdk-field.ts\n        \n\n            \n                Description\n            \n            \n                Field Config as obtained by PublicAPI#getFieldConfig.\nSee https://doc.entrecode.de/data_manager/#field-data-types for more info\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        config\n                                \n                                \n                                        default\n                                \n                                \n                                        description\n                                \n                                \n                                        localizable\n                                \n                                \n                                        mutable\n                                \n                                \n                                        readOnly\n                                \n                                \n                                        required\n                                \n                                \n                                        title\n                                \n                                \n                                        type\n                                \n                                \n                                        unique\n                                \n                                \n                                        validation\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        config\n                                    \n                                \n                                \n                                    \n                                        config:     Object\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Object\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    further field config options (like columns etc.) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        default\n                                    \n                                \n                                \n                                    \n                                        default:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Default value that is returned for a newly created required field on old entries \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                    \n                                \n                                \n                                    \n                                        description:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Description. Used for placeholders \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        localizable\n                                    \n                                \n                                \n                                    \n                                        localizable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Not implemented yet. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        mutable\n                                    \n                                \n                                \n                                    \n                                        mutable:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tells if the field value can be changed. If true, the field is a system field  \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        readOnly\n                                    \n                                \n                                \n                                    \n                                        readOnly:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field can only be altered when creating. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        required\n                                    \n                                \n                                \n                                    \n                                        required:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    If true, the field must have a value \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        title\n                                    \n                                \n                                \n                                    \n                                        title:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    System Title \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Field Type \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        unique\n                                    \n                                \n                                \n                                    \n                                        unique:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Unique: each entry has a unique value for that field \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        validation\n                                    \n                                \n                                \n                                    \n                                        validation:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Validation info, depends on field type. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface SdkField {\n    /** further field config options (like columns etc.) */\n    config: Object;\n    /** Field Type */\n    type: string;\n    /** System Title */\n    title: string;\n    /** Unique: each entry has a unique value for that field */\n    unique: boolean;\n    /** Default value that is returned for a newly created required field on old entries */\n    default: string;\n    /** Tells if the field value can be changed. If true, the field is a system field  */\n    mutable: boolean;\n    /** If true, the field can only be altered when creating. */\n    readOnly: boolean;\n    /** If true, the field must have a value */\n    required: boolean;\n    /** Validation info, depends on field type. */\n    validation: string;\n    /** Field Description. Used for placeholders */\n    description: string;\n    /** Not implemented yet. */\n    localizable: boolean;\n};\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SdkModule.html":{"url":"modules/SdkModule.html","title":"module - SdkModule","body":"\n                   \n\n\n\n\n    Modules\n    SdkModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\n\nSdkService\n\nSdkService\n\n\n\nSdkModule\n\nSdkModule\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            SdkService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        // import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { SdkService } from './sdk.service';\n\n@NgModule({\n  entryComponents: [],\n  declarations: [],\n  imports: [],\n  exports: [],\n  providers: [\n    SdkService\n  ],\n})\nexport class SdkModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SdkService.html":{"url":"injectables/SdkService.html","title":"injectable - SdkService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SdkService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/sdk/sdk.service.ts\n        \n\n            \n                Description\n            \n            \n                The SdkService exposes all instances of the ec.sdk APIs.\nTo be able to use it, you have to provide an environment like this in your module's providers:\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }The environment is optional, defaulting to live. See\nhttps://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\nyou do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\nsetClientID.\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                _api\n                            \n                            \n                                    Public\n                                accounts\n                            \n                            \n                                apiResolved\n                            \n                            \n                                    Public\n                                changesEnvironment\n                            \n                            \n                                    Public\n                                datamanager\n                            \n                            \n                                    Public\n                                environment\n                            \n                            \n                                    Public\n                                ready\n                            \n                            \n                                roots\n                            \n                            \n                                    Private\n                                schemaRequests\n                            \n                            \n                                    Public\n                                session\n                            \n                            \n                                    Public\n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAccount\n                            \n                            \n                                getSchema\n                            \n                            \n                                    Public\n                                init\n                            \n                            \n                                noApi\n                            \n                            \n                                useDatamanager\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    root\n                                \n                                \n                                    api\n                                \n                            \n                        \n                    \n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(environment)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/sdk/sdk.service.ts:78\n                            \n                        \n\n                \n                    \n                            Calls init and sets ready to true when finished. Omits init if environment has set init: false \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                  \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetAccount(api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:135\n                            \n                        \n\n\n                \n                    \n                            Returns the current account. Works for all apis \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.accounts\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            getSchema\n                            \n                            \n                        \n                    \n                \n                \n                    \ngetSchema(model, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:124\n                            \n                        \n\n\n                \n                    \n                            Returns a schema for the given model. Caches the promise. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        model\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        init(environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:88\n                            \n                        \n\n\n                \n                    \n                            Creates all the API instances and determines the current user. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        environment\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Promise\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            noApi\n                            \n                            \n                        \n                    \n                \n                \n                    \nnoApi(api: Core)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        api\n                                                        \n                                                                    Core\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this._api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useDatamanager\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseDatamanager(shortID: string, environment)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:111\n                            \n                        \n\n\n                \n                    \n                            Uses the given datamanager and optional short id to init api.\nIf you set \"datamanagerID\" in your environment, this method is called automatically. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        shortID\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        environment\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.environment\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            _api\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PublicAPI\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:51\n                            \n                        \n\n                \n                    \n                        Current Public API instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            accounts\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Accounts\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:49\n                            \n                        \n\n                \n                    \n                        Current Accounts instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            apiResolved\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:34\n                            \n                        \n\n                \n                    \n                        Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            changesEnvironment\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:53\n                            \n                        \n\n                \n                    \n                        Emits when the env changes \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            datamanager\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     DataManager\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:67\n                            \n                        \n\n                \n                    \n                        Current DataManager instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            environment\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @Inject('environment')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:81\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:78\n                            \n                        \n\n                \n                    \n                        Promise that should be used before using any auth related stuff:\n   * this.sdk.ready.then(account => {});\n   *\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            roots\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:36\n                            \n                        \n\n                \n                    \n                        Collects different datamanager root instances \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            schemaRequests\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {}\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:71\n                            \n                        \n\n                \n                    \n                        Pending schema requests \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            session\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Session\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:47\n                            \n                        \n\n                \n                    \n                        Current Session instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            user\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AccountResource\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:69\n                            \n                        \n\n                \n                    \n                        Current User \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        root\n                    \n                \n\n                \n                    \n                        getroot()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:37\n                                \n                            \n\n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n\n                \n                    \n                        getapi()\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:55\n                                \n                            \n                    \n                        \n                                getter for api. Throws error if no api present. \n\n\n                                \n                                    Returns :     PublicAPI\n\n                                \n                        \n                    \n\n                \n                    \n                        setapi(api)\n                    \n                \n                            \n                                \n                                    Defined in packages/data/src/lib/sdk/sdk.service.ts:62\n                                \n                            \n                    \n                        \n                                Sets the public api \n\n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            api\n                                                    \n                                                    \n                                                        \n                                                                No\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Inject, Injectable } from '@angular/core';\nimport Accounts from 'ec.sdk/lib/Accounts';\nimport Core, { environment as env } from 'ec.sdk/lib/Core';\nimport DataManager from 'ec.sdk/lib/DataManager';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport Session from 'ec.sdk/lib/Session';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\nimport DataManagerResource from 'ec.sdk/lib/resources/datamanager/DataManagerResource';\nimport { Subject } from 'rxjs';\n\n/** The SdkService exposes all instances of the ec.sdk APIs.\n * To be able to use it, you have to provide an environment like this in your module's providers:\n *\n *```json\n {\n   provide: 'environment',\n   useValue: {\n     datamanagerID: '83cc6374',\n     environment: 'stage',\n     clientID: 'rest',\n     // init: false\n     // the init option will prevent automatically initing the sdk.\n     // you have to call sdk.init() yourself. This can be useful if your environment is not known before runtime\n   }\n }```\n * The environment is optional, defaulting to live. See\n * https://entrecode.github.io/ec.sdk/#environment for more info. The clientID is only optional if\n * you do not plan to use authentication. See https://entrecode.github.io/ec.sdk/#environment =>\n * setClientID.\n */\n@Injectable()\nexport class SdkService {\n  /** Flips to true as soon as the PublicAPI instance was resolved (now contains model and asset relations) */\n  apiResolved: boolean;\n  /** Collects different datamanager root instances */\n  roots: { [id: string]: Promise } = {};\n  get root(): Promise {\n    if (!this._api) {\n      throw new Error('no api');\n    }\n    if (!this.roots[this._api.dataManagerID]) {\n      this.roots[this._api.dataManagerID] = this.ready.then(() => this.datamanager.dataManager(this._api.dataManagerID));\n    }\n    return this.roots[this._api.dataManagerID];\n  }\n  /** Current Session instance */\n  public session: Session;\n  /** Current Accounts instance */\n  public accounts: Accounts;\n  /** Current Public API instance */\n  public _api: PublicAPI;\n  /** Emits when the env changes */\n  public changesEnvironment: Subject = new Subject();\n  /** getter for api. Throws error if no api present. */\n  get api(): PublicAPI {\n    if (this.noApi()) {\n      throw new Error('get api: ' + this.noApi());\n    }\n    return this._api;\n  }\n  /** Sets the public api */\n  set api(api: PublicAPI) {\n    this._api = api;\n    this._api.resolve().then(() => this.apiResolved = true);\n  }\n  /** Current DataManager instance */\n  public datamanager: DataManager;\n  /** Current User */\n  public user: AccountResource;\n  /** Pending schema requests */\n  private schemaRequests = {};\n  /** Promise that should be used before using any auth related stuff:\n   *\n   * ```ts\n   * this.sdk.ready.then(account => {});\n   * ```\n   * */\n  public ready: Promise;\n\n  /** Calls init and sets ready to true when finished. Omits init if environment has set init: false */\n  constructor(@Inject('environment') public environment) {\n    if (!environment || environment.init !== false) {\n      this.init();\n    }\n  }\n\n  /** Creates all the API instances and determines the current user. */\n  public init(environment = this.environment): Promise {\n    if (environment !== this.environment) {\n      this.changesEnvironment.next(environment);\n    }\n    this.environment = environment;\n    this.session = new Session(environment.environment);\n    if (environment.clientID) {\n      this.session.setClientID(environment.clientID);\n    }\n    this.accounts = new Accounts(environment.environment);\n    if (environment.datamanagerID) {\n      this.useDatamanager(environment.datamanagerID, environment);\n    }\n    this.ready = this.getAccount()\n      .then((user) => {\n        this.user = user;\n        this.datamanager = new DataManager(environment.environment);\n        return this.user;\n      });\n    return this.ready;\n  }\n  /** Uses the given datamanager and optional short id to init api.\n   * If you set \"datamanagerID\" in your environment, this method is called automatically. */\n  useDatamanager(shortID: string, environment = this.environment) {\n    this.apiResolved = false;\n    this._api = new PublicAPI(shortID, environment.environment, true);\n    if (environment.clientID) {\n      this._api.setClientID(environment.clientID);\n    }\n    return this._api.resolve().then(api => {\n      this.apiResolved = true;\n      return api;\n    });\n  }\n\n  /** Returns a schema for the given model. Caches the promise. */\n  getSchema(model, api = this._api) {\n    if (this.noApi(api)) {\n      return Promise.reject('getSchema: ' + this.noApi(api));\n    }\n    if (!this.schemaRequests[model] || this.schemaRequests[model].api !== api) {\n      this.schemaRequests[model] = { request: api.getSchema(model), api };\n    }\n    return this.schemaRequests[model].request;\n  }\n\n  /** Returns the current account. Works for all apis */\n  getAccount(api = this.accounts) {\n    if (this.noApi(api)) {\n      /* return Promise.reject('getAccount: ' + this.noApi(api)); */\n      return Promise.resolve();\n    }\n    return api.me().then((account) => {\n      return account || this._api.me();\n    }).catch((err) => {\n      return null;\n    });\n  }\n\n  noApi(api: Core = this._api) {\n    if (!api) {\n      return `No API was initialized. Either set datamanagerID in your environment or call useDatamanager with your shortID`;\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SelectModule.html":{"url":"modules/SelectModule.html","title":"module - SelectModule","body":"\n                   \n\n\n\n\n    Modules\n    SelectModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_imports\n\n\n\ncluster_SelectModule_exports\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n}\n\n SelectComponent), multi: true\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n}->SelectComponent\n\n\n\n\n\nListModule\n\nListModule\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/select/select.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ActionbarComponent\n                        \n                        \n                            ListModule\n                        \n                        \n                            SelectComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { DndModule } from 'ngx-drag-drop';\nimport { ListModule } from '../list/list.module';\nimport { SelectComponent } from './select.component';\nimport { ActionbarComponent } from '../actionbar/actionbar.component';\nimport { LoaderModule } from '../loader/loader.module';\n\nexport const selectModuleConfig = {\n  imports: [\n    CommonModule,\n    ListModule,\n    DndModule,\n    LoaderModule\n  ],\n  declarations: [\n    SelectComponent,\n    ActionbarComponent\n  ],\n  exports: [\n    ListModule,\n    SelectComponent,\n    ActionbarComponent,\n    DndModule\n  ],\n  providers: [],\n};\n\n\n@NgModule(selectModuleConfig)\nexport class SelectModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupComponent.html":{"url":"components/SignupComponent.html","title":"component - SignupComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/auth/signup/signup.component.ts\n\n\n    \n        Description\n    \n    \n        Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\nhttps://components.entrecode.de/auth/signup?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginComponent\n    \n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup\n            \n\n\n\n\n            \n                templateUrl\n                signup.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                auth\n                            \n                            \n                                loader\n                            \n                            \n                                notifications\n                            \n                            \n                                    Public\n                                notificationService\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                invite\n                            \n                            \n                                api\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                success\n                            \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:17\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:19\n                            \n                        \n                \n                    \n                        Invite code to use. If set, the invite form field will be hidden. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:24\n                            \n                        \n                \n                    \n                        You can optionally specify PublicAPI instance. Defaults to SdkService#api. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:21\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:28\n                            \n                        \n                \n                    \n                        Subject that is nexted when an error occurs. For custom error reactions \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:26\n                            \n                        \n                \n                    \n                        Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(undefined)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(undefined)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:39\n                            \n                        \n\n\n                \n                    \n                            Communicates with the AuthService. Handles loader, notifications and success Subject. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:23\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/auth/signup/signup.component.ts:25\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            auth\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     AuthService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            loader\n                            \n                        \n                    \n                \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(LoaderComponent)\n                            \n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:30\n                            \n                        \n\n                \n                    \n                        The included loader. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:32\n                            \n                        \n\n                \n                    \n                        Error notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            notificationService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     NotificationsService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginComponent:36\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport { LoginComponent } from '../login/login.component';\nimport { WithNotifications, LoaderComponent, WithLoader, Notification } from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport AccountResource from 'ec.sdk/lib/resources/accounts/AccountResource';\n\n/** Uses LoginFormComponent. Tries to login via AuthService. Shows notifications and nexts success Subject if login was successful.\n * https://components.entrecode.de/auth/signup?e=1\n*/\n@Component({\n  selector: 'ec-signup',\n  templateUrl: 'signup.component.html'\n})\n\nexport class SignupComponent extends LoginComponent implements WithLoader, WithNotifications {\n  /** You can optionally specify PublicAPI instance. Defaults to SdkService#api. */\n  @Input() api: PublicAPI;\n  /** Invite code to use. If set, the invite form field will be hidden. */\n  @Input() invite = '';\n  /** Subject that is nexted when the login was successful. Meant to be used for redirecting to another page (or similar). */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** The included loader. */\n  @ViewChild(LoaderComponent) loader;\n  /** Error notifications */\n  notifications: Notification[] = [];\n\n  /** Communicates with the AuthService. Handles loader, notifications and success Subject. */\n  signup({ email, password, invite }) {\n    const registration = this.auth.signup({ email, password, invite }, this.api)\n      .then((user) => {\n        this.notificationService.emit({\n          type: 'success',\n          title: this.symbol.resolve('signup.success'),\n          hide: this.notifications\n        });\n        this.success.emit(user);\n      })\n      .catch((error) => {\n        this.notificationService.emit({\n          title: this.symbol.resolve('signup.error'),\n          error,\n          sticky: true,\n          hide: this.notifications,\n          replace: this.notifications\n        });\n        this.error.next(error);\n        console.log('could not signup', error);\n      });\n    this.loader.wait(registration);\n  }\n}\n\n    \n\n    \n        \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SignupFormComponent.html":{"url":"components/SignupFormComponent.html","title":"component - SignupFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  SignupFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n\n\n    \n        Description\n    \n    \n        Login Form Component with validation. Fires success event with credentials on submit.\nhttps://components.entrecode.de/ui/login?e=1\n\n    \n\n    \n        Extends\n    \n    \n            LoginFormComponent\n    \n\n    \n        Implements\n    \n    \n                OnInit\n                WithLoader\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-signup-form\n            \n\n\n\n\n            \n                templateUrl\n                ./signup-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                errorMessage\n                            \n                            \n                                    Public\n                                form\n                            \n                            \n                                notifications\n                            \n                            \n                                    Protected\n                                submitted\n                            \n                            \n                                    Public\n                                symbol\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                signup\n                            \n                            \n                                login\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                buttonLabel\n                            \n                            \n                                invite\n                            \n                            \n                                invitePlaceholder\n                            \n                            \n                                buttonClasses\n                            \n                            \n                                buttonLabel\n                            \n                            \n                                emailLabel\n                            \n                            \n                                emailPlaceholder\n                            \n                            \n                                loader\n                            \n                            \n                                passwordLabel\n                            \n                            \n                                passwordPlaceholder\n                            \n                            \n                                showLabels\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.button.label')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:17\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invite\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:21\n                            \n                        \n                \n                    \n                        If set, the invite field will be hidden and the given code will be used for signup \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        invitePlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('signup.invite.placeholder')\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:19\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonClasses\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:42\n                            \n                        \n                \n                    \n                        Additional Button classes \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        buttonLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.button.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:40\n                            \n                        \n                \n                    \n                        The Label of the submit button. Defaults to Login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:32\n                            \n                        \n                \n                    \n                        The Label of the Mail field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        emailPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.email.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:34\n                            \n                        \n                \n                    \n                        The Placeholder of the mail Field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:28\n                            \n                        \n                \n                    \n                        The loader that should be shown during login \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordLabel\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.label')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:36\n                            \n                        \n                \n                    \n                        The Label of the password field. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        passwordPlaceholder\n                    \n                \n                \n                    \n                        Default value : this.symbol.resolve('login.password.placeholder')\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:38\n                            \n                        \n                \n                    \n                        The Placeholder of the password field \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        showLabels\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:30\n                            \n                        \n                \n                    \n                        If true, email and password wont have labels \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        error\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:26\n                            \n                        \n                \n                    \n                        Event that emits when calling showError. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:24\n                            \n                        \n                \n                    \n                        Event that emits on succesful submit of the form, passing the login credentials. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:28\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:37\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            signup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsignup(value)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/signup-form/signup-form.component.ts:23\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(value)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:67\n                            \n                        \n\n\n                \n                    \n                            Method that is meant to be overwritten by a subclass to communicate with an API. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:51\n                            \n                        \n\n\n                \n                    \n                            Initializes the form \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onSubmit\n                            \n                            \n                        \n                    \n                \n                \n                    \nonSubmit()\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:72\n                            \n                        \n\n\n                \n                    \n                            Is called when the form has been successfully submitted. Calls login and resets the form after. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showError\n                            \n                            \n                        \n                    \n                \n                \n                    \nshowError(err)\n                    \n                \n\n\n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:59\n                            \n                        \n\n\n                \n                    \n                            Shows the given error in the form. Clears the password field and emits the error event. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        err\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            errorMessage\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:22\n                            \n                        \n\n                \n                    \n                        Contains possible error messages. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            form\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormGroup\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:18\n                            \n                        \n\n                \n                    \n                        The login's form group.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:44\n                            \n                        \n\n                \n                    \n                        Recent error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Protected\n                            submitted\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:20\n                            \n                        \n\n                \n                    \n                        Flips true when submitted. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                            \n                                \n                                    Inherited from     LoginFormComponent\n\n                                \n                            \n                        \n                            \n                                    Defined in LoginFormComponent:47\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, Input, OnInit } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { FieldValidators } from '../../utility/validators/field-validators';\nimport { WithLoader } from '../../loader/with-loader.interface';\nimport { LoginFormComponent } from '../login-form/login-form.component';\n\n/** Login Form Component with validation. Fires success event with credentials on submit.\n * https://components.entrecode.de/ui/login?e=1\n*/\n@Component({\n  selector: 'ec-signup-form',\n  templateUrl: './signup-form.component.html',\n})\nexport class SignupFormComponent extends LoginFormComponent implements OnInit, WithLoader {\n\n  /** The Label of the submit button. Defaults to Login */\n  @Input() buttonLabel = this.symbol.resolve('signup.button.label');\n  /** The Placeholder of the mail Field */\n  @Input() invitePlaceholder = this.symbol.resolve('signup.invite.placeholder');\n  /** If set, the invite field will be hidden and the given code will be used for signup */\n  @Input() invite = '';\n  /** Method that is meant to be overwritten by a subclass to communicate with an API. */\n  signup(value) { // meant to be overridden\n    return Promise.resolve(value);\n  }\n\n  /** Initializes the form */\n  ngOnInit() {\n    this.form = this.fb.group({\n      email: ['', [Validators.required, FieldValidators.email]], // emailAvailable?\n      password: ['', [Validators.required]],\n      invite: [this.invite, [Validators.required]] // FieldValidators.uuid\n    });\n  }\n\n  /** Is called when the form has been successfully submitted. Calls login and resets the form after. */\n  onSubmit() {\n    this.submitted = true;\n    delete this.errorMessage;\n    if (!this.form.valid) {\n      return;\n    }\n    const login = this.signup(this.form.value)\n      .then((res) => {\n        // this.form.reset();\n        this.success.emit(res);\n      });\n    if (this.loader) {\n      this.loader.wait(login);\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    {{errorMessage}}\n  \n  \n    {{emailLabel}}\n    \n    \n  \n  \n    Passwort\n    \n    \n  \n  \n    Invite\n    \n    \n  \n\n  \n    {{buttonLabel}}\n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{errorMessage}}        {{emailLabel}}                Passwort                Invite                {{buttonLabel}}  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'SignupFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/SlotHostDirective.html":{"url":"directives/SlotHostDirective.html","title":"directive - SlotHostDirective","body":"\n                   \n\n\n\n\n\n\n\n  Directives\n  SlotHostDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/io/slot-host.directive.ts\n        \n\n            \n                Description\n            \n            \n                The field host is a helper to load components inside its view container.\nsee https://angular.io/guide/dynamic-component-loader\n\n            \n\n\n\n        \n            Metadata\n            \n                \n\n                    \n                        Selector\n                        [ecSlotHost]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                viewContainerRef\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(viewContainerRef: ViewContainerRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/io/slot-host.directive.ts:9\n                            \n                        \n\n                \n                    \n                            The constructor exposes the viewContainer that is used to load components into from outside.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        viewContainerRef\n                                                  \n                                                        \n                                                                    ViewContainerRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            viewContainerRef\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ViewContainerRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/io/slot-host.directive.ts:11\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ViewContainerRef } from '@angular/core';\n\n/** The field host is a helper to load components inside its view container.\n * see https://angular.io/guide/dynamic-component-loader\n * */\n@Directive({\n  selector: '[ecSlotHost]',\n})\nexport class SlotHostDirective {\n  /** The constructor exposes the viewContainer that is used to load components into from outside.*/\n  constructor(public viewContainerRef: ViewContainerRef) {\n  }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Sorter.html":{"url":"classes/Sorter.html","title":"class - Sorter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Sorter\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/core/src/lib/sorter/sorter.ts\n        \n\n            \n                Description\n            \n            \n                The Sorter is a singleton that handles all kinds of sorting operations. \n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                sortType\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Static\n                                getAlgorithm\n                            \n                            \n                                    Static\n                                sort\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sortType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:25\n                            \n                        \n\n                \n                    \n                        Contains sorting methods for different value types. \n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                                Static\n                            getAlgorithm\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getAlgorithm(items: Array>, property?: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:32\n                            \n                        \n\n\n                \n                    \n                            Returns the sorting algorithm for the given item array. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     number\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sort\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        sort(items: Array>, property?: string, desc?: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/core/src/lib/sorter/sorter.ts:62\n                            \n                        \n\n\n                \n                    \n                            Sorts a given Array of items after a given property.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        items\n                                                        \n                                                                    Array>\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                        \n                                                                Array of arbitrary content.\n\n                                                        \n                                                \n                                                \n                                                        property\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional property to sort after (For Objects)\n\n                                                        \n                                                \n                                                \n                                                        desc\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            Yes\n                                                    \n                                                    \n\n                                                        \n                                                                Optional Flag that will reverse sort the result (descending).\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Array\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n    \n        Sorter\nThe Sorter is a static class that acts as a helper to sort different primitive types. See the tests for example usage.\n\n    \n\n    \n        import { Item } from '../item/item';\n\n/** Used for natural sorting of strings */\nconst collator = new Intl.Collator(undefined, { numeric: true, sensitivity: 'base' });\n\n/** Sorts strings (naturally) */\nexport function sortString(a, b) {\n  return collator.compare(a, b);\n}\n\n/** Sorts numbers */\nexport function sortNumber(a, b) {\n  return a - b;\n}\n\n/** Sorts booleans */\nexport function sortBoolean(a, b) {\n  return a ? -1 : 1;\n}\n\n/** The Sorter is a singleton that handles all kinds of sorting operations. */\nexport abstract class Sorter {\n\n  /** Contains sorting methods for different value types. */\n  static sortType = {\n    'string': sortString,\n    'number': sortNumber,\n    'boolean': sortBoolean\n  };\n\n  /** Returns the sorting algorithm for the given item array. */\n  private static getAlgorithm(items: Array>, property?: string): (a, b) => number {\n    if (!items.length) {\n      return;\n    }\n    if (property && !items\n      .reduce((has, item) => has && item.sort(property) !== undefined, true)) {\n      console.warn('cannot sort property \"' + property + '\" because not all items have that property', items);\n      return;\n    }\n    const types = items\n      .map(item => typeof item.sort(property))\n      .filter((item, index, _items) => _items.indexOf(item) === index);\n    if (types.length > 1) {\n      console.warn('cannot sort items because they contain multiple types:', types);\n      return;\n    }\n    if (!this.sortType[types[0]]) {\n      console.warn('cannot sort items because no algorithm was found for type', types[0]);\n      return;\n    }\n    return this.sortType[types[0]];\n  }\n\n  /** Sorts a given Array of items after a given property.\n   * @param items Array of arbitrary content.\n   * @param property Optional property to sort after (For Objects)\n   * @param desc Optional Flag that will reverse sort the result (descending).\n   * @param resolve Optional resolve function to expose relevant the part of object that contains\n   *   the given property. */\n\n  static sort(items: Array>, property?: string, desc?: boolean): Array {\n    const algorithm = this.getAlgorithm(items, property);\n    if (!algorithm) {\n      return;\n    }\n    items.sort((a, b) => {\n      if (!property) {\n        return algorithm(a.resolve(), b.resolve());\n      }\n      return algorithm(a.sort(property), b.sort(property));\n    });\n    if (desc) {\n      items.reverse();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Symbol.html":{"url":"interfaces/Symbol.html","title":"interface - Symbol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Symbol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.interface.ts\n        \n\n            \n                Description\n            \n            \n                A Symbol is specified with a unique name and an optional string content.  \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        content\n                                \n                                \n                                        name\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        content\n                                    \n                                \n                                \n                                    \n                                        content:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The name under which the symbol is accessible. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        export interface Symbol {\n    /** The name under which the symbol is accessible. */\n    name: string;\n    /** Text content. If nothing is set, the symbol is expected to have e.g. valid font glyph name. */\n    content?: string;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SymbolModule.html":{"url":"modules/SymbolModule.html","title":"module - SymbolModule","body":"\n                   \n\n\n\n\n    Modules\n    SymbolModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\n\n\nSymbolModule\n\nSymbolModule\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        README\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.module.ts\n        \n\n\n        \n            Description\n        \n        \n            Collects all localization related components and services.\n\n        \n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            SymbolService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            SymbolPipe\n                        \n                    \n                \n            \n        \n\n\n    \n\n    \n        Localization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n    \n\n    \n        import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { SymbolService } from './symbol.service';\nimport { SymbolPipe } from './symbol.pipe';\n\n/**\n * Collects all localization related components and services.\n */\n@NgModule({\n    imports: [CommonModule],\n    declarations: [SymbolPipe],\n    exports: [SymbolPipe],\n    providers: [SymbolService],\n})\nexport class SymbolModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolPipe.html":{"url":"injectables/SymbolPipe.html","title":"injectable - SymbolPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The symbol pipe translates Symbol names to their content.\n * {{ 'entry.saved' | symbol }}\n *See SymbolService for more info about Symbols.\n\n            \n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nObject()\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.pipe.ts:21\n                            \n                        \n\n\n                \n                    \n                            Calls SymbolService.resolve with the given name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n    \n\n\n    \n        import { Pipe, Injectable, PipeTransform } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { SymbolService } from './symbol.service';\n\n/** The symbol pipe translates Symbol names to their content.\n *\n * ```html\n * {{ 'entry.saved' | symbol }}\n * ```\n *\n * See SymbolService for more info about Symbols.\n */\n@Pipe({\n    name: 'symbol'\n})\n@Injectable()\nexport class SymbolPipe implements PipeTransform {\n    /** Depends on the SymbolService */\n    constructor(private symbol: SymbolService) { }\n    /** Calls SymbolService.resolve with the given name */\n    transform(name: string): string {\n        if (!name) {\n            return '';\n        }\n        return this.symbol.resolve(name) || '';\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SymbolService.html":{"url":"injectables/SymbolService.html","title":"injectable - SymbolService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  SymbolService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Examples\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/symbol/symbol.service.ts\n        \n\n            \n                Description\n            \n            \n                Service to register symbols for localization. The default set is de.\nhttps://components.entrecode.de/ui/symbols?e=1\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                registry\n                            \n                            \n                                    Public\n                                registry\n                            \n                            \n                                    Static\n                                sets\n                            \n                            \n                                    Public\n                                sets\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                get\n                            \n                            \n                                get\n                            \n                            \n                                    Static\n                                resolve\n                            \n                            \n                                resolve\n                            \n                            \n                                    Static\n                                set\n                            \n                            \n                                set\n                            \n                            \n                                use\n                            \n                            \n                                useSet\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/symbol/symbol.service.ts:46\n                            \n                        \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        get(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:66\n                            \n                        \n\n\n                \n                    \n                            finds a symbol in the registry by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     Symbol\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        resolve(name: string, registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:28\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            resolve\n                            \n                            \n                        \n                    \n                \n                \n                    \nresolve(name: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:71\n                            \n                        \n\n\n                \n                    \n                            resolves a symbols content by name \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     string\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        set(symbols: Symbol[], registry)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:37\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                                \n                                                        registry\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                SymbolService.registry\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:77\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set to enhance the current registry.\nAll duplicates will be overriden. Non specified symbols will stay in the registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                []\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            use\n                            \n                            \n                        \n                    \n                \n                \n                    \nuse(symbols: Symbol[])\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:53\n                            \n                        \n\n\n                \n                    \n                            Uses the given symbol set. Replaces registry. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbols\n                                                        \n                                                                    Symbol[]\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            useSet\n                            \n                            \n                        \n                    \n                \n                \n                    \nuseSet(key: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:58\n                            \n                        \n\n\n                \n                    \n                            uses the set with the given key \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                    \n                        \n                            Default value : Object.keys(SymbolService.sets).length ? SymbolService.sets[Object.keys(SymbolService.sets)[0]] : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            registry\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Symbol[]\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Static\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:12\n                            \n                        \n\n                \n                    \n                        The current symbol set that is registered to the service. It will be used to resolve strings from. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            sets\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     literal type\n\n                        \n                    \n                    \n                        \n                            Default value : {\n        en, de\n    }\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/symbol/symbol.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Symbol } from './symbol.interface';\nimport { de } from './de';\nimport { en } from './en';\n/** Service to register symbols for localization. The default set is de.\n * https://components.entrecode.de/ui/symbols?e=1\n*/\n// https://github.com/ng-packagr/ng-packagr/issues/696\n@Injectable()\nexport class SymbolService {\n    /** The current symbol set that is registered to the service. It will be used to resolve strings from. */\n    public static sets: { [key: string]: Symbol[] } = {\n        en, de\n    };\n    public static registry: Symbol[] = Object.keys(SymbolService.sets).length ? SymbolService.sets[Object.keys(SymbolService.sets)[0]] : [];\n\n    public registry: Symbol[];\n    public sets: { [key: string]: Symbol[] } = {\n        en, de\n    };\n\n    /** finds a symbol in the registry by name */\n    static get(name: string, registry = SymbolService.registry): Symbol {\n        const symbol = registry.find(s => s.name === name);\n        return symbol;\n    }\n\n    static resolve(name: string, registry = SymbolService.registry): string {\n        const symbol = SymbolService.get(name, registry);\n        if (symbol) {\n            return symbol.content;\n        }\n        return null;\n    }\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    static set(symbols: Symbol[] = [], registry = SymbolService.registry) {\n        symbols.map(symbol => {\n            const index = registry.indexOf(this.get(symbol.name));\n            if (index === -1) {\n                registry.push(symbol);\n            } else {\n                registry[index] = symbol;\n            }\n        });\n    }\n\n    constructor() {\n        this.registry = Object.keys(this.sets).length ? this.sets[Object.keys(this.sets)[0]] : [];\n    }\n\n    /** Uses the given symbol set. Replaces registry. */\n    use(symbols: Symbol[]) {\n        this.registry = symbols;\n    }\n\n    /** uses the set with the given key */\n    useSet(key: string) {\n        if (!this.sets[key]) {\n            throw new Error('the symbol set with the key \"' + key + '\" does not exist');\n        }\n        this.use(this.sets[key]);\n    }\n\n    /** finds a symbol in the registry by name */\n    get(name: string): Symbol {\n        return SymbolService.get(name, this.registry);\n    }\n\n    /** resolves a symbols content by name */\n    resolve(name: string): string {\n        return SymbolService.resolve(name, this.registry);\n    }\n\n    /** Uses the given symbol set to enhance the current registry.\n     * All duplicates will be overriden. Non specified symbols will stay in the registry. */\n    set(symbols: Symbol[] = []) {\n        SymbolService.set(symbols, this.registry);\n    }\n}\n\n    \n\n    \n            \n                no-iframes\n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabComponent.html":{"url":"components/TabComponent.html","title":"component - TabComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tab/tab.component.ts\n\n\n    \n        Description\n    \n    \n        A Tab is meant to be placed inside TabsComponent \n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tab\n            \n\n\n\n\n            \n                templateUrl\n                ./tab.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                el\n                            \n                            \n                                parent\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                activate\n                            \n                            \n                                deactivate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                label\n                            \n                            \n                                route\n                            \n                            \n                                selected\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                activated\n                            \n                            \n                                deactivated\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(el: ElementRef)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                            The constructor adds the tab itself to its TabsComponent parent. \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        el\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        label\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:11\n                            \n                        \n                \n                    \n                        The tab's label \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        route\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:15\n                            \n                        \n                \n                    \n                        If set, the tab will be selected when the given (relative) route is active. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:13\n                            \n                        \n                \n                    \n                        If set to true, the tab will be selected at start. \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        activated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:17\n                            \n                        \n                \n                    \n                        Output that emits when the tab is activated \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        deactivated\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:19\n                            \n                        \n                \n                    \n                        Output that emits when the tab is deactivated \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            activate\n                            \n                            \n                        \n                    \n                \n                \n                    \nactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            deactivate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndeactivate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:32\n                            \n                        \n\n\n                \n                    \n                            Deselects the tab and nexts activated \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            el\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            parent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     TabsComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tab/tab.component.ts:21\n                            \n                        \n\n                \n                    \n                        The parent TabsComponent \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output } from '@angular/core';\nimport { TabsComponent } from '../tabs/tabs.component';\n\n/** A Tab is meant to be placed inside TabsComponent */\n@Component({\n  selector: 'ec-tab',\n  templateUrl: './tab.component.html',\n})\nexport class TabComponent {\n  /** The tab's label */\n  @Input() label: string;\n  /** If set to true, the tab will be selected at start. */\n  @Input() selected: boolean;\n  /** If set, the tab will be selected when the given (relative) route is active. */\n  @Input() route: string;\n  /** Output that emits when the tab is activated */\n  @Output() activated: EventEmitter = new EventEmitter();\n  /** Output that emits when the tab is deactivated */\n  @Output() deactivated: EventEmitter = new EventEmitter();\n  /** The parent TabsComponent */\n  parent: TabsComponent;\n\n  /** The constructor adds the tab itself to its TabsComponent parent. */\n  constructor(public el: ElementRef) {\n  }\n  /** Selects the tab and nexts activated */\n  activate() {\n    this.selected = true;\n    this.activated.next();\n  }\n  /** Deselects the tab and nexts activated */\n  deactivate() {\n    this.selected = false;\n    this.deactivated.next();\n  }\n}\n\n    \n\n    \n        \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TabsComponent.html":{"url":"components/TabsComponent.html","title":"component - TabsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TabsComponent\n\n\n\n        \n            Info\n        \n        \n            README\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/utility/tabs/tabs.component.ts\n\n\n    \n        Description\n    \n    \n        The TabsComponent holds serveral instances of TabComponent.\nhttps://components.entrecode.de/ui/tabs?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterContentInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-tabs\n            \n\n\n\n\n            \n                templateUrl\n                ./tabs.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tabs\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                initTabs\n                            \n                            \n                                ngAfterContentInit\n                            \n                            \n                                select\n                            \n                            \n                                selectByUrl\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                selected\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        selected\n                    \n                \n                \n                    \n                        Type :     TabComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:16\n                            \n                        \n                \n                    \n                        You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            initTabs\n                            \n                            \n                        \n                    \n                \n                \n                    \ninitTabs()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:38\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterContentInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterContentInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            select\n                            \n                            \n                        \n                    \n                \n                \n                    \nselect(tab: TabComponent, skipRoute)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Selects the given tab (Component). \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        tab\n                                                        \n                                                                    TabComponent\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        skipRoute\n                                                        \n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                false\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            selectByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \nselectByUrl(url: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Selects the tab associated with the route present in the given url \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            tabs\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ContentChildren(TabComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/utility/tabs/tabs.component.ts:14\n                            \n                        \n\n                \n                    \n                        The nested Tabs \n\n                    \n                \n\n            \n        \n\n\n\n\n    \n        Tabs\nThis is how you use Tabs:\n\n  \n    \n  \n  \n    \n  \n  \n    \n  \n  \n    \n  \nTODO:\n\n*ngIf\nSlot for templated Tab Header\n\n\n    \n\n    \n        import { AfterContentInit, Component, ContentChildren, Input, QueryList } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { TabComponent } from '../tab/tab.component';\n\n/** The TabsComponent holds serveral instances of TabComponent.\n * https://components.entrecode.de/ui/tabs?e=1\n*/\n@Component({\n  selector: 'ec-tabs',\n  templateUrl: './tabs.component.html',\n})\nexport class TabsComponent implements AfterContentInit {\n  /** The nested Tabs */\n  @ContentChildren(TabComponent) tabs: QueryList;\n  /** You can set the initially selected tab by passing a TabComponent in (e.g. via #variable) */\n  @Input() selected: TabComponent;\n\n  constructor(private router: Router, private route: ActivatedRoute) {\n    this.router.events.subscribe((event) => {\n      if (event instanceof NavigationEnd) {\n        this.selectByUrl(event.url);\n      }\n    });\n  }\n\n  /** Selects the tab associated with the route present in the given url */\n  selectByUrl(url: string) {\n    if (!url || !this.tabs) {\n      return;\n    }\n    const paths = url.split('/');\n    const match = this.tabs.find((tab) => paths[paths.length - 1].indexOf(tab.route) !== -1);\n    if (match) {\n      this.select(match, true);\n    }\n  }\n\n  initTabs() {\n    this.tabs.forEach((tab) => {\n      tab.parent = this;\n      if (tab.el.nativeElement.getAttribute('selected') !== null) {\n        this.select(tab);\n      }\n    });\n    this.selectByUrl(this.router.url);\n  }\n\n  ngAfterContentInit() {\n    this.initTabs();\n  }\n\n  /** Selects the given tab (Component). */\n  select(tab: TabComponent, skipRoute = false) {\n    if (this.selected) {\n      this.selected.deactivate();\n    }\n    this.selected = tab;\n    tab.activate();\n    if (tab.route && !skipRoute) {\n      this.router.navigate(['../' + tab.route], { relativeTo: this.route });\n    }\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        {{tab.label}}\n      \n    \n  \n  \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{tab.label}}              '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TabsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TinymceComponent.html":{"url":"components/TinymceComponent.html","title":"component - TinymceComponent","body":"\n                   \n\n\n\n\n\n  Components\n  TinymceComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n        \n            Examples\n        \n\n\n\n    \n    File\n\n\n    packages/tinymce/src/lib/tinymce/tinymce.component.ts\n\n\n    \n        Description\n    \n    \n        Wraps tinymce as a control input.\nhttps://components.entrecode.de/misc/tinymce?e=1\n\n    \n\n\n    \n        Implements\n    \n    \n                AfterViewInit\n                OnDestroy\n                ControlValueAccessor\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n            \n                encapsulation\n                ViewEncapsulation.None\n            \n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => TinymceComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-tinymce\n            \n\n            \n                styleUrls\n                ./tinymce.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./tinymce.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                container\n                            \n                            \n                                    Public\n                                editor\n                            \n                            \n                                propagateChange\n                            \n                            \n                                ready\n                            \n                            \n                                update\n                            \n                            \n                                    Public\n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addImageByUrl\n                            \n                            \n                                destroy\n                            \n                            \n                                init\n                            \n                            \n                                ngAfterViewInit\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                debounce\n                            \n                            \n                                lazy\n                            \n                            \n                                settings\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                changed\n                            \n                            \n                                setup\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(app: ApplicationRef)\n                    \n                \n                        \n                            \n                                Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                            Subscribes for changes and propagates them + calling application tick manually :( \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        app\n                                                  \n                                                        \n                                                                    ApplicationRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        debounce\n                    \n                \n                \n                    \n                        Default value : 200\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:56\n                            \n                        \n                \n                    \n                        Debounce time for value change processing \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        lazy\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:60\n                            \n                        \n                \n                    \n                        If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        settings\n                    \n                \n                \n                    \n                        Type :     any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:58\n                            \n                        \n                \n                    \n                        TinyMCE Settings. Get Object.assigned to the default settings \n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        changed\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:62\n                            \n                        \n                \n                    \n                        Output that emits when the value has been changed by the user \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        setup\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:65\n                            \n                        \n                \n                    \n                        Output that is emitted when the setup is being made.\nPasses the editor instance. Intended to be used for custom controls  \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addImageByUrl\n                            \n                            \n                        \n                    \n                \n                \n                    \naddImageByUrl(url: string, caption: string, size: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:133\n                            \n                        \n\n\n                \n                    \n                            adds an image by url to the editor \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        url\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        caption\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                ''\n                                                        \n\n                                                \n                                                \n                                                        size\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                200\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            destroy\n                            \n                            \n                        \n                    \n                \n                \n                    \ndestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:91\n                            \n                        \n\n\n                \n                    \n                            Destroys the editor. \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            init\n                            \n                            \n                        \n                    \n                \n                \n                    \ninit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:103\n                            \n                        \n\n\n                \n                    \n                            Initializes the editor \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngAfterViewInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngAfterViewInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:85\n                            \n                        \n\n\n                \n                    \n                            calls init \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:98\n                            \n                        \n\n\n                \n                    \n                            calls destroy \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:147\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:151\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: any)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:138\n                            \n                        \n\n\n                \n                    \n                            Writes value to editor on outside model change. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    any\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            container\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('container')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:52\n                            \n                        \n\n                \n                    \n                        The container where the editor is rendered \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            editor\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:50\n                            \n                        \n\n                \n                    \n                        The current editor instance \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:145\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ready\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:48\n                            \n                        \n\n                \n                    \n                        Promise that resolves when the editor has been initialized \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            update\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:54\n                            \n                        \n\n                \n                    \n                        Subject that is nexted on editor change \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/tinymce/src/lib/tinymce/tinymce.component.ts:67\n                            \n                        \n\n                \n                    \n                        Current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {\n  AfterViewInit, ApplicationRef,\n  Component, ElementRef,\n  EventEmitter, forwardRef,\n  Input, OnDestroy, Output,\n  ViewChild, ViewEncapsulation\n} from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { Subject } from 'rxjs';\nimport tinymce from 'tinymce/tinymce';\nimport 'tinymce/plugins/autolink';\nimport 'tinymce/plugins/autoresize';\nimport 'tinymce/plugins/code';\nimport 'tinymce/plugins/colorpicker';\nimport 'tinymce/plugins/contextmenu';\nimport 'tinymce/plugins/fullscreen';\nimport 'tinymce/plugins/link';\nimport 'tinymce/plugins/lists';\nimport 'tinymce/plugins/paste';\nimport 'tinymce/plugins/table';\nimport 'tinymce/plugins/template';\nimport 'tinymce/plugins/textcolor';\nimport 'tinymce/plugins/visualblocks';\nimport 'tinymce/themes/modern';\n\nimport { editorSettings } from './tinymce-settings';\nimport { debounceTime } from 'rxjs/operators';\n\n/** Wraps tinymce as a control input.\n * https://components.entrecode.de/misc/tinymce?e=1\n*/\n@Component({\n  selector: 'ec-tinymce',\n  templateUrl: './tinymce.component.html',\n  styleUrls: ['./tinymce.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => TinymceComponent),\n      multi: true\n    }\n  ]\n})\nexport class TinymceComponent\n  implements AfterViewInit, OnDestroy, ControlValueAccessor, OnDestroy {\n  /** Promise that resolves when the editor has been initialized */\n  ready: Promise;\n  /** The current editor instance */\n  public editor: any;\n  /** The container where the editor is rendered */\n  @ViewChild('container') container: ElementRef;\n  /** Subject that is nexted on editor change */\n  update: Subject = new Subject();\n  /** Debounce time for value change processing */\n  @Input() debounce = 200;\n  /** TinyMCE Settings. Get Object.assigned to the default settings */\n  @Input() settings: any = {};\n  /** If true, the editor wont init by default. This can be useful when using tinymce inside tabs or pops where tiny breaks */\n  @Input() lazy = false;\n  /** Output that emits when the value has been changed by the user */\n  @Output() changed: EventEmitter = new EventEmitter();\n  /** Output that is emitted when the setup is being made.\n   * Passes the editor instance. Intended to be used for custom controls  */\n  @Output() setup: EventEmitter = new EventEmitter();\n  /** Current value */\n  public value = '';\n\n  /** Subscribes for changes and propagates them + calling application tick manually :( */\n  constructor(private app: ApplicationRef) {\n    this.update\n      .asObservable()\n      .pipe(debounceTime(this.debounce))\n      .subscribe(editor => {\n        if (!this.editor) {\n          return;\n        }\n        this.value = editor.getContent();\n        this.propagateChange(this.value);\n        this.changed.emit(this.value);\n        this.app.tick();\n      });\n  }\n  /** calls init */\n  ngAfterViewInit() {\n    if (!this.lazy) {\n      this.init();\n    }\n  }\n  /** Destroys the editor. */\n  destroy() {\n    if (this.editor) {\n      this.editor.remove();\n      delete this.editor;\n    }\n  }\n  /** calls destroy */\n  ngOnDestroy() {\n    this.destroy();\n  }\n\n  /** Initializes the editor */\n  init() {\n    const settings = Object.assign({},\n      editorSettings,\n      this.settings,\n      {\n        target: this.container.nativeElement,\n        setup: (editor) => {\n          editorSettings.setup(editor);\n          if (this.settings && this.settings.setup) {\n            this.settings.setup(editor);\n          }\n          this.setup.emit(editor);\n        }\n      }\n    );\n    this.ready = new Promise((resolve, reject) => setTimeout(() => resolve(tinymce.init(settings))));\n    this.ready.then(editor => {\n      this.editor = editor[0];\n      this.editor.setContent(this.value || '');\n      this.editor.on('dblclick', e => {\n        if (e.target.localName === 'img') {\n          this.editor.buttons.image.onclick(true, e.toElement);\n        }\n      });\n      this.editor.on('change keyup', res => this.update.next(this.editor));\n      return this.editor;\n    });\n  }\n\n  /** adds an image by url to the editor */\n  addImageByUrl(url: string, caption = '', size = 200) {\n    this.editor.execCommand('mceInsertContent', false,\n      ``);\n  }\n  /** Writes value to editor on outside model change. */\n  writeValue(value: any) {\n    this.value = value || '';\n    if (this.editor) {\n      this.editor.setContent(this.value);\n    }\n  }\n\n  propagateChange = (_: any) => { };\n\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n\n  registerOnTouched() { }\n}\n\n    \n\n    \n        \n    \n\n    \n                \n                    ./tinymce.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n            \n                no-iframes\n            \n    \n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'TinymceComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TinymceModule.html":{"url":"modules/TinymceModule.html","title":"module - TinymceModule","body":"\n                   \n\n\n\n\n    Modules\n    TinymceModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/tinymce/src/lib/tinymce.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    EntryComponents\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            TinymceComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { TinymceComponent } from './tinymce/tinymce.component';\n\nexport const tinymceModuleConfig = {\n  declarations: [TinymceComponent],\n  entryComponents: [TinymceComponent],\n  exports: [TinymceComponent]\n};\n\n@NgModule(tinymceModuleConfig)\nexport class TinymceModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToggleComponent.html":{"url":"components/ToggleComponent.html","title":"component - ToggleComponent","body":"\n                   \n\n\n\n\n\n  Components\n  ToggleComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/ui/src/lib/form/toggle/toggle.component.ts\n\n\n    \n        Description\n    \n    \n        The toggle component is an alternative to the default boolean checkbox with fancier style.\nIt is used in the default input template for the view 'toggle'. \n\n    \n\n\n    \n        Implements\n    \n    \n                ControlValueAccessor\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            {\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => ToggleComponent), multi: true\n}\n                \n            \n\n\n            \n                selector\n                ec-toggle\n            \n\n\n\n\n            \n                templateUrl\n                ./toggle.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                propagateChange\n                            \n                            \n                                value\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                registerOnChange\n                            \n                            \n                                registerOnTouched\n                            \n                            \n                                toggle\n                            \n                            \n                                writeValue\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:21\n                            \n                        \n                \n                    \n                        The toggles placeholder (currently not in use) \n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnChange\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnChange(fn)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:36\n                            \n                        \n\n\n                \n                    \n                            Registers change callback \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fn\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            registerOnTouched\n                            \n                            \n                        \n                    \n                \n                \n                    \nregisterOnTouched()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:40\n                            \n                        \n\n\n                \n                    \n                            Register Touch \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggle\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggle()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:24\n                            \n                        \n\n\n                \n                    \n                            Toggles the value \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            writeValue\n                            \n                            \n                        \n                    \n                \n                \n                    \nwriteValue(value: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:29\n                            \n                        \n\n\n                \n                    \n                            writes incoming value \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            propagateChange\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : () => {...}\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            value\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/toggle/toggle.component.ts:19\n                            \n                        \n\n                \n                    \n                        The current value \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, forwardRef, Input } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\n/** The toggle component is an alternative to the default boolean checkbox with fancier style.\n * It is used in the default input template for the view 'toggle'. */\n@Component({\n  selector: 'ec-toggle',\n  templateUrl: './toggle.component.html',\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => ToggleComponent),\n      multi: true\n    }\n  ]\n})\nexport class ToggleComponent implements ControlValueAccessor {\n  /** The current value */\n  value: boolean;\n  /** The toggles placeholder (currently not in use) */\n  @Input() placeholder: string;\n\n  /** Toggles the value */\n  toggle() {\n    this.value = !this.value;\n    this.propagateChange(this.value);\n  }\n  /** writes incoming value */\n  writeValue(value: boolean) {\n    this.value = value;\n  }\n  /* Propagates change*/\n  propagateChange = (_: any) => {\n  }\n  /** Registers change callback */\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  /** Register Touch */\n  registerOnTouched() {\n  }\n\n}\n\n    \n\n    \n        \n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'ToggleComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TypeConfigService.html":{"url":"injectables/TypeConfigService.html","title":"injectable - TypeConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  TypeConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/model-config/type-config.service.ts\n        \n\n            \n                Description\n            \n            \n                The TypeConfig holds each field type's specific behaviour in certain situations \n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                nestedCrudConfig\n                            \n                            \n                                    Private\n                                types\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                displayAccount\n                            \n                            \n                                displayDate\n                            \n                            \n                                get\n                            \n                            \n                                groupDate\n                            \n                            \n                                set\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/model-config/type-config.service.ts:179\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayAccount\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayAccount()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:217\n                            \n                        \n\n\n                \n                    \n                            Returns an account display function \n\n\n                            \n                                Returns :     (value: any, entry: any, property: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            displayDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ndisplayDate(time)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:209\n                            \n                        \n\n\n                \n                    \n                            Returns a date display function. If time is true, the time will be displayed too.\nUsese 'moment.format.date' and 'moment.format.time' symbols. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        time\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                true\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     (value: any) => any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            get\n                            \n                            \n                        \n                    \n                \n                \n                    \nget(type: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:183\n                            \n                        \n\n\n                \n                    \n                            Returns the base FieldConfig for the given type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     FieldConfigProperty\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            groupDate\n                            \n                            \n                        \n                    \n                \n                \n                    \ngroupDate()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:223\n                            \n                        \n\n\n                \n                    \n                            Returns a date group function. Uses 'moment.format.month' symbol \n\n\n                            \n                                Returns :     (value: any) => any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            set\n                            \n                            \n                        \n                    \n                \n                \n                    \nset(type: string, config: FieldConfigProperty)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:199\n                            \n                        \n\n\n                \n                    \n                            Assigns the given config to the type, e.g. to change the default template of a type. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        type\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        config\n                                                        \n                                                                    FieldConfigProperty\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            nestedCrudConfig\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     CrudConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    /* size: 5, */\n    // methods: ['get']\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:15\n                            \n                        \n\n                \n                    \n                        The default config for nested crud lists, as passed to entry-select \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            types\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FieldConfig\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact'\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true\n    },\n    url: {\n      sortable: true,\n      filterable: true\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: value => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(\n        this.symbol.resolve('moment.format.date')\n      )\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select'\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2\n        }\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: value => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? JSON.stringify(value) : '')\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: value => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: value => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  }\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/model-config/type-config.service.ts:23\n                            \n                        \n\n                \n                    \n                        Defines the base configuration of each type.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { FieldConfig, FieldConfigProperty } from '@ec.components/core';\nimport { DefaultInputComponent, DefaultOutputComponent, SymbolService } from '@ec.components/ui';\nimport EntryResource from 'ec.sdk/lib/resources/publicAPI/EntryResource';\nimport moment from 'moment-es6';\nimport { CrudConfig } from '../crud/crud-config.interface';\nimport { AdminEntryInputComponent } from '../entry-form/admin-entry-input.component';\nimport { DefaultEntryInputComponent } from '../entry-form/default-entry-input.component';\nimport { DefaultEntryOutputComponent } from '../entry-form/default-entry-output.component';\n\n/** The TypeConfig holds each field type's specific behaviour in certain situations */\n@Injectable()\nexport class TypeConfigService {\n  /** The default config for nested crud lists, as passed to entry-select */\n  private nestedCrudConfig: CrudConfig = {\n    /* size: 5, */\n    // methods: ['get']\n  };\n\n  // TODO check if filterPopClass: '' is still needed\n\n  /** Defines the base configuration of each type.*/\n  private types: FieldConfig = {\n    id: {\n      view: 'label'\n    },\n    text: {\n      view: 'string',\n      filterable: true,\n      sortable: true\n    },\n    boolean: {\n      prefill: false,\n      filterOperator: 'exact'\n    },\n    formattedText: {\n      view: 'textarea',\n      filterable: true\n    },\n    number: {\n      sortable: true,\n      filterable: true,\n      filterOperator: 'exact'\n    },\n    decimal: {\n      view: 'number',\n      sortable: true\n    },\n    url: {\n      sortable: true,\n      filterable: true\n    },\n    asset: {\n      view: 'asset',\n      inputView: 'asset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    assets: {\n      view: 'assets',\n      inputView: 'assets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    dmAsset: {\n      view: 'dmAsset',\n      inputView: 'dmAsset-select',\n      // view: 'avatar',\n      input: DefaultEntryInputComponent,\n      filterOperator: 'exact',\n      filterable: true,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      filterPopClass: ''\n    },\n    dmAssets: {\n      view: 'dmAssets',\n      inputView: 'dmAssets-select',\n      // view: 'avatars',\n      input: DefaultEntryInputComponent,\n      display: (value, entry, property) =>\n        entry.getImageThumbUrl(property, 100),\n      prefill: [],\n      filterOperator: 'any',\n      filterable: true,\n      queryFilter: value => value.split(','),\n      filterPopClass: ''\n    },\n    email: {},\n    phone: {\n      view: 'string'\n    },\n    datetime: {\n      view: 'date',\n      sortable: true,\n      display: this.displayDate(true),\n      validate: value => {\n        if (value && (value === 'invalid' || !moment(value).isValid())) {\n          return 'Ungültiges Datum';\n        }\n        return;\n      },\n      filterPopClass: 'ec-pop_dialog',\n      placeholder: moment(new Date()).format(\n        this.symbol.resolve('moment.format.date')\n      )\n      /*,\n      prefill: new Date(0)*/\n    },\n    entry: {\n      view: 'tag',\n      inputView: 'entry-select',\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'exact',\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    entries: {\n      view: 'tags',\n      inputView: 'entries-select',\n      inputViews: [\n        {\n          name: 'entries-select'\n        },\n        {\n          name: 'entry-list-select',\n          levels: 2\n        }\n      ],\n      input: DefaultEntryInputComponent,\n      output: DefaultOutputComponent,\n      display: (value, entry, property) => entry.getTitle(property),\n      filterable: true,\n      filterOperator: 'any',\n      prefill: [],\n      queryFilter: value => value.split(','),\n      filterPopClass: 'ec-pop_dialog',\n      nestedCrudConfig: this.nestedCrudConfig\n    },\n    json: {\n      view: 'json',\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? JSON.stringify(value) : '')\n    },\n    location: {\n      input: DefaultEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      display: value => (value ? value.longitude + ',' + value.latitude : ''),\n      filterPopClass: 'ec-pop_dialog'\n    },\n    account: {\n      display: value => (value ? value.title : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    },\n    role: {\n      display: value => (value ? value.name : ''),\n      input: AdminEntryInputComponent,\n      output: DefaultEntryOutputComponent,\n      filterPopClass: 'ec-pop_dialog'\n    }\n  };\n  constructor(private symbol: SymbolService) { }\n\n  /** Returns the base FieldConfig for the given type. */\n  get(type: string): FieldConfigProperty {\n    const config = this.types[type];\n    if (!config) {\n      console.error('missing config for type', type);\n      return {};\n    }\n    Object.assign(config, {\n      type,\n      view: config.view || type,\n      input: config.input || DefaultInputComponent,\n      output: config.output || DefaultOutputComponent\n    });\n    return config;\n  }\n\n  /** Assigns the given config to the type, e.g. to change the default template of a type. */\n  set(type: string, config: FieldConfigProperty) {\n    if (!this.types[type]) {\n      console.error('cannot configure non existing type', type);\n      return;\n    }\n    Object.assign(this.types[type], config);\n  }\n\n  /** Returns a date display function. If time is true, the time will be displayed too.\n   * Usese 'moment.format.date' and 'moment.format.time' symbols. */\n  displayDate(time = true) {\n    const format =\n      this.symbol.resolve('moment.format.date') +\n      (time ? ' ' + this.symbol.resolve('moment.format.time') : '');\n    return value => (value ? moment(value).format(format) : '');\n  }\n\n  /** Returns an account display function */\n  displayAccount() {\n    return (value, entry, property) =>\n      entry.getTitle(property) || this.symbol.resolve('field.creator.ecuser');\n  }\n\n  /** Returns a date group function. Uses 'moment.format.month' symbol */\n  groupDate() {\n    return value =>\n      moment(value).format(this.symbol.resolve('moment.format.month'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UiModule.html":{"url":"modules/UiModule.html","title":"module - UiModule","body":"\n                   \n\n\n\n\n    Modules\n    UiModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UiModule\n\n\n\ncluster_UiModule_imports\n\n\n\ncluster_UiModule_exports\n\n\n\n\nFormModule\n\nFormModule\n\n\n\nUiModule\n\nUiModule\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\n\n\nListModule\n\nListModule\n\nUiModule -->\n\nListModule->UiModule\n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\n\n\nSelectModule\n\nSelectModule\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/ui.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Imports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FormModule\n                        \n                        \n                            IconModule\n                        \n                        \n                            ListModule\n                        \n                        \n                            LoaderModule\n                        \n                        \n                            NotificationsModule\n                        \n                        \n                            PopModule\n                        \n                        \n                            SelectModule\n                        \n                        \n                            SymbolModule\n                        \n                        \n                            UtilityModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { ListModule } from './list/list.module';\nimport { PopModule } from './pop/pop.module';\nimport { LoaderModule } from './loader/loader.module';\nimport { NotificationsModule } from './notifications/notifications.module';\nimport { UtilityModule } from './utility/utility.module';\nimport { SelectModule } from './select/select.module';\nimport { IconModule } from './icon/icon.module';\nimport { SymbolModule } from './symbol/symbol.module';\nimport { FormModule } from './form/form.module';\n\nexport const uiModuleConfig = {\n  imports: [\n    UtilityModule,\n    NotificationsModule,\n    PopModule,\n    LoaderModule,\n    FormModule,\n    ListModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ],\n  exports: [\n    UtilityModule,\n    PopModule,\n    NotificationsModule,\n    LoaderModule,\n    ListModule,\n    FormModule,\n    SelectModule,\n    IconModule,\n    SymbolModule\n  ]\n};\n\n@NgModule(uiModuleConfig)\nexport class UiModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Update.html":{"url":"interfaces/Update.html","title":"interface - Update","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Update\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/resource-config/resource.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the ResourceService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        broadcast\n                                \n                                \n                                            Optional\n                                        identifier\n                                \n                                \n                                            Optional\n                                        list\n                                \n                                \n                                        relation\n                                \n                                \n                                            Optional\n                                        resource\n                                \n                                \n                                            Optional\n                                        type\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        broadcast\n                                    \n                                \n                                \n                                    \n                                        broadcast:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        identifier\n                                    \n                                \n                                \n                                    \n                                        identifier:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    An identifier associated with the update e.g. an entryID \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        relation\n                                    \n                                \n                                \n                                    \n                                        relation:     string | string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string | string[]\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The relation that has been updated. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        resource\n                                    \n                                \n                                \n                                    \n                                        resource:     Resource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Resource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant resource. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                    \n                                \n                                \n                                    \n                                        type:     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"post\" | \"get\" | \"put\" | \"delete\"\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The type of update. (create/read/update/delete) \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport Core from 'ec.sdk/lib/Core';\nimport Resource from 'ec.sdk/lib/resources/Resource';\nimport { Subject, Observable } from 'rxjs';\nimport { filter as rxFilter } from 'rxjs/operators';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\nimport { ResourceConfig } from './resource-config.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the ResourceService. */\nexport interface Update {\n    /** The relation that has been updated. */\n    relation: string | string[];\n    /** The relevant resource. */\n    resource?: Resource;\n    /** The list where it happened. */\n    list?: ResourceList;\n    /** The type of update. (create/read/update/delete) */\n    type?: 'post' | 'get' | 'put' | 'delete';\n    /** An identifier associated with the update e.g. an entryID */\n    identifier?: string;\n    /** If true, the Update will reach all subscribers, ignoring all filters. Use with caution (reloads everything) */\n    broadcast?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class ResourceService {\n    /** The changes event is emitted everytime an resource is created or updated. */\n    public changes: Subject = new Subject();\n\n    /** Injects sdk */\n    constructor(private sdk: SdkService, public config: ResourceConfig) {\n        /* this.sdk.changesEnvironment.subscribe(env =>\n            this.changes.next({\n                relation: 'environment',\n                broadcast: true\n            })) */\n    }\n\n    /** Gives true if the given change fits all property values of the filter. */\n    matches(change: Update, filter: Update): boolean {\n        return change.broadcast || Object.keys(filter)\n            .reduce((match, key) => match && change[key] === filter[key], true);\n    }\n\n    /** Yields an observable that emits for all updates that match the given filter */\n    change(filter?: Update): Observable {\n        if (!filter) {\n            return this.changes.asObservable();\n        }\n        return this.changes.asObservable().pipe(\n            rxFilter((change: Update) => this.matches(change, filter))\n        );\n    }\n\n    /** Saves the given resource with the given value. If the resource is not yet existing,\n     * it will be created.Otherwise it will be updated. */\n    save(item: Item, value: Object, relation: string, api: Core): Promise {\n        const resource = item.getBody();\n        if (item.config.onSave) {\n            return Promise.resolve(item.config.onSave(item, value));\n        }\n        item.deleteImmutableProperties(value);\n        if (resource && resource.save) {\n            return this.update(relation, resource, value);\n        }\n        return this.create(relation, value, api)\n            .then((_resource) => {\n                return _resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** Updates the given resource with the new value. Fires the \"update\" change. */\n    update(relation, resource: Resource, value: Object): Promise {\n        const oldValues = {}; // save old values\n        Object.keys(value).forEach((key) => oldValues[key] = resource[key]);\n        Object.assign(resource, this.clean(value, false, false)); // assign new form values\n        return resource.save().then((_resource) => {\n            this.changes.next({ relation, resource: _resource, type: 'put' });\n            return _resource;\n        })\n            .catch((err) => {\n                Object.assign(resource, this.clean(oldValues, false, false)); // fall back to old values\n                return Promise.reject(err);\n            });\n    }\n\n    /** Returns true if the given field key is an immutable system property */\n    isImmutableProperty(key: string) {\n        return key[0] === '_' ||\n            ['id', 'created', 'modified'].indexOf(key) !== -1;\n    }\n\n    /** Removes all null or undefined values from the given object */\n    clean(value: Object, setEmptyStringsToNull = true, deleteNullProperties = true): Object {\n        for (const key in value) {\n            if (value.hasOwnProperty(key)) {\n                if (setEmptyStringsToNull && value[key] === '') { // clear empty strings\n                    value[key] = null;\n                }\n                if (deleteNullProperties && value[key] === null) {\n                    delete value[key];\n                }\n                if (this.isImmutableProperty(key)) { // filter system properties\n                    delete value[key];\n                }\n            }\n        }\n        return value;\n    }\n\n    /** Creates a new resource with the given value for the given relation. Fires the \"create\" change. */\n    create(relation: string, value: Object, api: Core): Promise {\n        return api.create(relation, this.clean(value))\n            .then((resource: Resource) => {\n                this.changes.next({ relation, resource, type: 'post' });\n                return resource;\n            }).catch((err) => {\n                return Promise.reject(err);\n            });\n    }\n\n    /** deletes the given resource and emits the \"delete\" change. */\n    del(relation: string, resource: Resource) {\n        return resource.del().then((res) => {\n            this.changes.next({ relation, resource, type: 'delete' });\n            return res;\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Upload.html":{"url":"interfaces/Upload.html","title":"interface - Upload","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Upload\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/data/src/lib/files/file.service.ts\n        \n\n            \n                Description\n            \n            \n                Instances of Update are emitted by the changes EventEmitter of the FileService. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        asset\n                                \n                                \n                                            Optional\n                                        assets\n                                \n                                \n                                            Optional\n                                        item\n                                \n                                \n                                            Optional\n                                        items\n                                \n                                \n                                            Optional\n                                        list\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        asset\n                                    \n                                \n                                \n                                    \n                                        asset:     PublicAssetResource\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant asset. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        assets\n                                    \n                                \n                                \n                                    \n                                        assets:     PublicAssetResource[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     PublicAssetResource[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The relevant assets (when uploading multiple). \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        item\n                                    \n                                \n                                \n                                    \n                                        item:     Item\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Item\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        items\n                                    \n                                \n                                \n                                    \n                                        items:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The uploaded asset as item \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        list\n                                    \n                                \n                                \n                                    \n                                        list:     ResourceList\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     ResourceList\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    The list where it happened. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { EventEmitter, Injectable } from '@angular/core';\nimport { Item } from '@ec.components/core';\nimport DMAssetList from 'ec.sdk/lib/resources/publicAPI/DMAssetList';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetList from 'ec.sdk/lib/resources/publicAPI/PublicAssetList';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { TypeConfigService } from '../model-config/type-config.service';\nimport { ResourceConfig } from '../resource-config/resource-config.service';\nimport { ResourceService } from '../resource-config/resource.service';\nimport { ResourceList } from '../resource-list/resource-list';\nimport { SdkService } from '../sdk/sdk.service';\n\n/** Instances of Update are emitted by the changes EventEmitter of the FileService. */\nexport interface Upload {\n  /** The relevant asset. */\n  asset?: PublicAssetResource;\n  /** The relevant assets (when uploading multiple). */\n  assets?: PublicAssetResource[];\n  /** The uploaded asset as item */\n  item?: Item;\n  /** The uploaded asset as item */\n  items?: Array>;\n  /** The list where it happened. */\n  list?: ResourceList;\n}\n\n/** Interface for file options used by new assets */\nexport interface FileOptions {\n  /** Preserves Filenames */\n  preserveFilenames?: boolean;\n  /** Includes assetID in path */\n  includeAssetIDInPath?: boolean;\n  /** Ignores duplicates */\n  ignoreDuplicates?: boolean;\n  /** Optional custom names for assets. Mapped by indices to assets. */\n  fileName?: string[];\n  /** Custom file form fieldName */\n  fieldName?: string;\n  /** Deduplicate upload */\n  deduplicate?: boolean;\n}\n\n/** The CRUD service is meant to be used when modifying entries.\n * As the letters state it should be used to create update and delete entries.\n * Each action fires up a change that can be subscribed upon in any component to react to relevant\n * changes.\n * */\n@Injectable()\nexport class FileService {\n  /** Promise that resolves assetGroupList from sdk */\n  assetGroupListPromise: Promise;\n  /** The changes event is emitted everytime an entry is created or updated. */\n  public uploads: EventEmitter = new EventEmitter();\n  /** Default options for file upload */\n  public defaultOptions: FileOptions = {\n    preserveFilenames: true,\n    includeAssetIDInPath: true,\n    ignoreDuplicates: false,\n    deduplicate: false,\n    fileName: []\n  };\n  /** config for new assets */\n  public dmAssetConfig = Object.assign({}, this.resourceConfig.get('dmAsset'));\n  /** config for legacy assets */\n  public legacyAssetConfig = Object.assign({}, this.resourceConfig.get('legacyAsset'), { forceGroup: true });\n  /** All the possible assetGroupIDs that are interpreted as old. Comes from validation of field */\n  public oldAssetGroupIDs = ['image', 'video', 'audio', 'plain', 'document', 'spreadsheet', 'legacyAsset'];\n\n  /** Injects sdk */\n  constructor(private sdk: SdkService,\n    private typeConfig: TypeConfigService,\n    private resourceService: ResourceService,\n    private resourceConfig: ResourceConfig) {\n  }\n\n  public getAssetConfig(assetGroupID) {\n    if (this.isOldAssetGroupID(assetGroupID)) {\n      const config = Object.assign({}, this.legacyAssetConfig);\n      if (this.oldAssetGroupIDs.includes(assetGroupID) && assetGroupID !== 'legacyAsset') {\n        config.filter = Object.assign({}, (config.filter || {}), {\n          type: assetGroupID\n        });\n      }\n      return config;\n    } else {\n      return Object.assign({}, this.dmAssetConfig);\n    }\n  }\n\n  /** returns true if the given asset is a new one (DMAssetResource) */\n  public isNewAsset(asset: Array | string | DMAssetResource | PublicAssetResource, only = false) {\n    if (Array.isArray(asset)) {\n      return asset.reduce(\n        (match, a) =>\n          ((only && (match && this.isNewAsset(a)) ||\n            (!only && (match || this.isNewAsset(a)))))\n        , only);\n    }\n    const id = typeof asset === 'string' ? asset : asset.assetID;\n    return /^[a-zA-Z0-9\\-_]{22}$/.test(id);\n  }\n\n  /** Returns form data for a file list. You have to append options (even if empty) to get formData for new assets! */\n  public getFormData(files: FileList, options?: FileOptions): FormData {\n    const formData: FormData = new FormData();\n    for (let i = 0; i  {\n          if (key in options) {\n            formData.append(key, `${options[key]}`);\n          }\n        });\n    }\n    return formData;\n  }\n\n  /** Upload New Assets */\n  public uploadAssets(files, assetGroupID, options: FileOptions = {}, api = this.sdk.api): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = files[0].url ? files.map(f => f.url) : this.getFormData(files, options);\n    return api.createDMAssets(assetGroupID, data, options)\n      .then((assetList: DMAssetList) => {\n        const assets = assetList.getAllItems();\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('dmAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('dmAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'dmAsset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Upload old assets */\n  public uploadFiles(files): Promise {\n    if (!files.length) {\n      return;\n    }\n    const data = this.getFormData(files);\n    return Promise.resolve().then((): Promise Promise> => {\n      if (files.length === 1) {\n        return this.sdk.api.createAsset(data, {});\n      }\n      return this.sdk.api.createAssets(data, {});\n    })\n      .then(res => res())\n      .then((response) => {\n        if (response['getAllItems']) {\n          return response['getAllItems']();\n        }\n        return [response];\n      }).then((assets) => {\n        return {\n          asset: assets[0],\n          assets,\n          item: new Item(assets[0], this.resourceConfig.get('legacyAsset')),\n          items: assets.map(asset => new Item(asset, this.resourceConfig.get('legacyAsset')))\n        };\n      }).then((upload: Upload) => {\n        this.uploads.emit(upload);\n        this.resourceService.changes.next({ relation: 'legacyAsset', type: 'post' });\n        this.resourceService.changes.next({ relation: 'asset', type: 'post' });\n        return upload;\n      });\n  }\n\n  /** Resolves all assetIDs to PublicAssetResources */\n  public resolveAssets(assets: Array, assetGroupID?: string):\n    Promise> {\n    console.warn('FileService#resolveAssets is deprecated. I doubt somebody ever used it but if you see this, stop it. please.');\n    const unresolved = assets.reduce((ids, asset) => {\n      if (typeof asset === 'string') {\n        ids.push(asset);\n      }\n      return ids;\n    }, []);\n    if (unresolved.length === 0) {\n      return Promise.resolve(>assets);\n    }\n    if (!assetGroupID && this.isNewAsset(unresolved)) {\n      console.warn('wont resolve new asset without knowing assetGroupID');\n      return Promise.resolve([]);\n    }\n    if (assetGroupID) { // new assets\n      return this.sdk.api.dmAssetList(assetGroupID, { assetID: { any: unresolved }, size: 100 })\n        .then(dmAssetList => dmAssetList.getAllItems());\n    }\n    return Promise.resolve().then((): any => {\n      if (unresolved.length === 1) {\n        return this.sdk.api.asset(unresolved[0]).then(asset => {\n          return [asset];\n        });\n      }\n      return this.sdk.api.assetList({ assetID: { any: unresolved }, page: 1 })\n        .then((assetList) => {\n          const resolved = assetList.getAllItems();\n          return assets.map((asset) =>\n            typeof asset === 'string' ?\n              resolved.find((resource) => resource.assetID === asset) : asset);\n        });\n\n    });\n  }\n\n  public assetGroupList(forceReload = false) {\n    return (!forceReload && this.assetGroupListPromise) || this.sdk.api.assetGroupList();\n  }\n\n  /** Yields true if the given assetGroupID is an old one. Also checks for old validation types */\n  public isOldAssetGroupID(assetGroupID) {\n    return !assetGroupID || this.oldAssetGroupIDs.includes(assetGroupID);\n  }\n  /** Yields true if the given assetGroupID is not an old one, meaning it is defined and legacyAsset or an old asset type. */\n  public isNewAssetGroupID(assetGroupID) {\n    return !this.isOldAssetGroupID(assetGroupID);\n  }\n\n  /** method that can be called after the upload to select the uploaded item(s). */\n  selectUpload(upload: Upload, selection: any) {\n    if (!selection) {\n      console.warn('no selection');\n      return;\n    }\n    if (selection.config.solo) {\n      selection.select(upload.item);\n    } else {\n      selection.toggleAll(upload.items, false, true);\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadComponent.html":{"url":"components/UploadComponent.html","title":"component - UploadComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload/upload.component.ts\n\n\n    \n        Description\n    \n    \n        This component will render an input field to upload files to the datamanager. TODO: demo \n\n    \n\n\n    \n        Implements\n    \n    \n                WithLoader\n                WithNotifications\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload\n            \n\n\n\n\n            \n                templateUrl\n                ./upload.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                event\n                            \n                            \n                                fileInput\n                            \n                            \n                                    Public\n                                filesToUpload\n                            \n                            \n                                notifications\n                            \n                            \n                                pop\n                            \n                            \n                                uploadPromise\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change\n                            \n                            \n                                clear\n                            \n                            \n                                setGroup\n                            \n                            \n                                trigger\n                            \n                            \n                                upload\n                            \n                            \n                                uploadFiles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                api\n                            \n                            \n                                assetGroupID\n                            \n                            \n                                custom\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                placeholder\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                groupChanged\n                            \n                            \n                                success\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(sdk: SdkService, fileService: FileService, loaderService: LoaderService, notificationService: NotificationsService, symbol: SymbolService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        sdk\n                                                  \n                                                        \n                                                                    SdkService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        loaderService\n                                                  \n                                                        \n                                                                    LoaderService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        notificationService\n                                                  \n                                                        \n                                                                    NotificationsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        api\n                    \n                \n                \n                    \n                        Type :     PublicAPI\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:30\n                            \n                        \n                \n                    \n                        The api to use for the upload. Defaults to sdk.api \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:24\n                            \n                        \n                \n                    \n                        The asset group to upload into. If not defined, old assets will be used! \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:26\n                            \n                        \n                \n                    \n                        If true, a pop to rename files + customize flags will appear before uploading. \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:22\n                            \n                        \n                \n                    \n                        The loader that should be used while uploading\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:28\n                            \n                        \n                \n                    \n                        Upload options \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        placeholder\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:20\n                            \n                        \n                \n                    \n                        The input placeholder\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:34\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        success\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:32\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            change\n                            \n                            \n                        \n                    \n                \n                \n                    \nchange(e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:65\n                            \n                        \n\n\n                \n                    \n                            Uploads the files from the input event. Handles loader and notifications. \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            clear\n                            \n                            \n                        \n                    \n                \n                \n                    \nclear()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:73\n                            \n                        \n\n\n                \n                    \n                            clears the file input \n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:59\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            trigger\n                            \n                            \n                        \n                    \n                \n                \n                    \ntrigger(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:49\n                            \n                        \n\n\n                \n                    \n                            opens the system upload window by triggering the input \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            upload\n                            \n                            \n                        \n                    \n                \n                \n                    \nupload(files, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:99\n                            \n                        \n\n\n                \n                    \n                            Triggers upload of current selected files \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFiles\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFiles(files, e, api)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:80\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                                    Default value\n                                            \n                                        \n                                        \n                                                \n                                                        files\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n\n                                                \n                                                \n                                                        api\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                this.sdk.api\n                                                        \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            event\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            fileInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild('fileInput')\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:36\n                            \n                        \n\n                \n                    \n                        Reference to the input[type=file] element \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            filesToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     any\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            notifications\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Notification[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:40\n                            \n                        \n\n                \n                    \n                        Error Notifications \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            pop\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     PopComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(PopComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:38\n                            \n                        \n\n                \n                    \n                        Pop child for new asset options. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadPromise\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     Promise\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload/upload.component.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import { Component, ElementRef, EventEmitter, Input, Output, ViewChild } from '@angular/core';\nimport {\n  LoaderComponent, LoaderService, Notification, NotificationsService,\n  PopComponent, SymbolService, WithLoader, WithNotifications\n} from '@ec.components/ui';\nimport PublicAPI from 'ec.sdk/lib/PublicAPI';\nimport { SdkService } from '../../sdk/sdk.service';\nimport { FileOptions, FileService, Upload } from '../file.service';\n\n/** This component will render an input field to upload files to the datamanager. TODO: demo */\n@Component({\n  selector: 'ec-upload',\n  templateUrl: './upload.component.html',\n})\nexport class UploadComponent implements WithLoader, WithNotifications {\n  event: any;\n  uploadPromise: Promise;\n  public filesToUpload: any;\n  /** The input placeholder*/\n  @Input() placeholder: string;\n  /** The loader that should be used while uploading*/\n  @Input() loader: LoaderComponent;\n  /** The asset group to upload into. If not defined, old assets will be used! */\n  @Input() assetGroupID: string;\n  /** If true, a pop to rename files + customize flags will appear before uploading. */\n  @Input() custom: boolean;\n  /** Upload options */\n  @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n  /** The api to use for the upload. Defaults to sdk.api */\n  @Input() api: PublicAPI;\n  /** Emits when an upload is complete. */\n  @Output() success: EventEmitter = new EventEmitter();\n  /** emits when the group has been set from the upload pop */\n  @Output() groupChanged: EventEmitter = new EventEmitter();\n  /** Reference to the input[type=file] element */\n  @ViewChild('fileInput') fileInput: ElementRef;\n  /** Pop child for new asset options. */\n  @ViewChild(PopComponent) pop: PopComponent;\n  /** Error Notifications */\n  notifications: Notification[] = [];\n\n  constructor(private sdk: SdkService,\n    private fileService: FileService,\n    private loaderService: LoaderService,\n    private notificationService: NotificationsService,\n    private symbol: SymbolService) {\n  }\n  /** opens the system upload window by triggering the input */\n  trigger(e) {\n    if (!this.fileInput) {\n      console.error('cannot trigger upload: file input element not found!');\n      return;\n    }\n    /* this.clear(); */\n    this.fileInput.nativeElement.click();\n  }\n\n  /** Sets the asset group to upload to */\n  setGroup(group) {\n    this.assetGroupID = group;\n    this.groupChanged.emit(group);\n  }\n\n  /** Uploads the files from the input event. Handles loader and notifications. */\n  change(e, api = this.sdk.api) {\n    if (!e || !e.target || !e.target.files || !e.target.files.length) {\n      return;\n    }\n    return this.uploadFiles(e.target.files, e, api);\n  }\n\n  /** clears the file input */\n  clear() {\n    if (!this.fileInput) {\n      return;\n    }\n    this.fileInput.nativeElement.value = ''; // clear input to eventually trigger change on same file\n  }\n\n  uploadFiles(files, e, api = this.sdk.api) {\n    files = typeof files === 'string'\n      ? files.split('\\n').map(url => ({ name: url, url }))\n      : files;\n    if (files[0].url && this.fileService.isOldAssetGroupID(this.assetGroupID)) {\n      delete this.assetGroupID;\n    }\n    this.filesToUpload = files;\n    e.preventDefault();\n    e.stopPropagation();\n    if (this.custom || !this.assetGroupID) {\n      this.event = e;\n      this.pop.show();\n      return Promise.resolve();\n    }\n    return this.upload(files, api);\n  }\n\n  /** Triggers upload of current selected files */\n  upload(files, api = this.sdk.api) {\n    this.uploadPromise = (this.fileService.isNewAssetGroupID(this.assetGroupID) ?\n      this.fileService.uploadAssets(files, this.assetGroupID, this.options, api) :\n      this.fileService.uploadFiles(files))\n      .then((_upload) => {\n        this.success.emit(_upload);\n        this.notificationService.emit({\n          title: this.symbol.resolve('success.upload'),\n          type: 'success',\n          hide: this.notifications\n        });\n        this.pop.hide();\n        return _upload;\n      }).catch((err) => {\n        console.error(err);\n        this.notificationService.emit({\n          title: this.symbol.resolve('error.upload'),\n          error: err,\n          sticky: true,\n          hide: this.notifications,\n          append: this.notifications\n        });\n      });\n    this.loaderService.wait(this.uploadPromise, this.loader);\n    this.uploadPromise.then(() => {\n      delete this.uploadPromise;\n    });\n    return this.uploadPromise;\n  }\n}\n\n    \n\n    \n        \n\n    \n        \n            \n        \n    \n    \n        \n            {{'upload.assetGroup' | symbol}}\n            \n        \n        \n            \n                \n                \n                    \n                    {{'upload.preserveFilenames' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.includeAssetIDInPath' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.ignoreDuplicates' | symbol}}\n                \n            \n            \n                \n                \n                    \n                    {{'upload.deduplicate' | symbol}}\n                \n            \n            \n                {{ f.name }}\n                \n                    \n                \n            \n        \n        Upload\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                            {{\\'upload.assetGroup\\' | symbol}}                                                                                                                {{\\'upload.preserveFilenames\\' | symbol}}                                                                                                                {{\\'upload.includeAssetIDInPath\\' | symbol}}                                                                                                                {{\\'upload.ignoreDuplicates\\' | symbol}}                                                                                                                {{\\'upload.deduplicate\\' | symbol}}                                                        {{ f.name }}                                                                                Upload    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UploadSelectComponent.html":{"url":"components/UploadSelectComponent.html","title":"component - UploadSelectComponent","body":"\n                   \n\n\n\n\n\n  Components\n  UploadSelectComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    packages/data/src/lib/files/upload-select/upload-select.component.ts\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                ec-upload-select\n            \n\n\n\n\n            \n                templateUrl\n                ./upload-select.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                fileService\n                            \n                            \n                                    Public\n                                focusEvent\n                            \n                            \n                                showUrlInput\n                            \n                            \n                                    Public\n                                symbol\n                            \n                            \n                                uploader\n                            \n                            \n                                urlsToUpload\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                setGroup\n                            \n                            \n                                toggleUrlInput\n                            \n                            \n                                triggerUpload\n                            \n                            \n                                uploadFromUrls\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                assetGroupID\n                            \n                            \n                                config\n                            \n                            \n                                custom\n                            \n                            \n                                disableDrop\n                            \n                            \n                                loader\n                            \n                            \n                                options\n                            \n                            \n                                readOnly\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                browse\n                            \n                            \n                                groupChanged\n                            \n                            \n                                uploaded\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(symbol: SymbolService, fileService: FileService)\n                    \n                \n                        \n                            \n                                Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        symbol\n                                                  \n                                                        \n                                                                    SymbolService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        fileService\n                                                  \n                                                        \n                                                                    FileService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        assetGroupID\n                    \n                \n                \n                    \n                        Type :     string\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        config\n                    \n                \n                \n                    \n                        Type :     CrudConfig\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        custom\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:17\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        disableDrop\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:18\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        loader\n                    \n                \n                \n                    \n                        Type :     LoaderComponent\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:20\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        options\n                    \n                \n                \n                    \n                        Type :     FileOptions\n\n                    \n                \n                \n                    \n                        Default value : Object.assign({}, this.fileService.defaultOptions)\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        readOnly\n                    \n                \n                \n                    \n                        Type :     boolean\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:16\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        browse\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:26\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        groupChanged\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:23\n                            \n                        \n                \n                    \n                        emits when the group has been set from the upload pop \n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        uploaded\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:25\n                            \n                        \n                \n                    \n                        Emits when an upload is complete. \n\n                    \n                \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:39\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setGroup\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetGroup(group)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:42\n                            \n                        \n\n\n                \n                    \n                            Sets the asset group to upload to \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        group\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            toggleUrlInput\n                            \n                            \n                        \n                    \n                \n                \n                    \ntoggleUrlInput()\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:47\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            triggerUpload\n                            \n                            \n                        \n                    \n                \n                \n                    \ntriggerUpload(e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:60\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploadFromUrls\n                            \n                            \n                        \n                    \n                \n                \n                    \nuploadFromUrls(urls, e)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:54\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        urls\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        e\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            fileService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FileService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            focusEvent\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     EventEmitter\n\n                        \n                    \n                    \n                        \n                            Default value : new EventEmitter()\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:35\n                            \n                        \n\n                \n                    \n                        The event that focuses the url input \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            showUrlInput\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:33\n                            \n                        \n\n                \n                    \n                        Wether or not the url input should be visible \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            symbol\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     SymbolService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:37\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            uploader\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     UploadComponent\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ViewChild(UploadComponent)\n                            \n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:29\n                            \n                        \n\n                \n                    \n                        The nested upload component \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            urlsToUpload\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                    \n                        \n                            Default value : ''\n                        \n                    \n                        \n                            \n                                    Defined in packages/data/src/lib/files/upload-select/upload-select.component.ts:31\n                            \n                        \n\n                \n                    \n                        The Url to upload from \n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit, Input, EventEmitter, Output, ViewChild } from '@angular/core';\nimport { LoaderComponent } from '@ec.components/ui';\nimport { CrudConfig } from '../../crud/crud-config.interface';\nimport DMAssetResource from 'ec.sdk/lib/resources/publicAPI/DMAssetResource';\nimport PublicAssetResource from 'ec.sdk/lib/resources/publicAPI/PublicAssetResource';\nimport { SymbolService } from '@ec.components/ui';\nimport { UploadComponent } from '../upload/upload.component';\nimport { Upload, FileOptions, FileService } from '../file.service';\n\n@Component({\n    selector: 'ec-upload-select',\n    templateUrl: './upload-select.component.html'\n})\n\nexport class UploadSelectComponent implements OnInit {\n    @Input() readOnly: boolean;\n    @Input() custom: boolean;\n    @Input() disableDrop: boolean;\n    @Input() assetGroupID: string;\n    @Input() loader: LoaderComponent;\n    @Input() options: FileOptions = Object.assign({}, this.fileService.defaultOptions);\n    /** emits when the group has been set from the upload pop */\n    @Output() groupChanged: EventEmitter = new EventEmitter();\n    /** Emits when an upload is complete. */\n    @Output() uploaded: EventEmitter = new EventEmitter();\n    @Output() browse: EventEmitter = new EventEmitter();\n    @Input() config: CrudConfig;\n    /** The nested upload component */\n    @ViewChild(UploadComponent) uploader: UploadComponent;\n    /** The Url to upload from */\n    urlsToUpload = '';\n    /** Wether or not the url input should be visible */\n    showUrlInput = false;\n    /** The event that focuses the url input */\n    public focusEvent: EventEmitter = new EventEmitter();\n\n    constructor(public symbol: SymbolService, public fileService: FileService) { }\n\n    ngOnInit() { }\n\n    /** Sets the asset group to upload to */\n    setGroup(group) {\n        this.assetGroupID = group;\n        this.groupChanged.emit(group);\n    }\n\n    toggleUrlInput() {\n        this.showUrlInput = !this.showUrlInput;\n        setTimeout(() => {\n            this.focusEvent.emit(true);\n        });\n    }\n\n    uploadFromUrls(urls, e) {\n        this.uploader.uploadFiles(urls, e).then(() => {\n            this.urlsToUpload = '';\n            this.showUrlInput = false;\n        });\n    }\n    triggerUpload(e) {\n        this.uploader.trigger(e);\n    }\n}\n\n    \n\n    \n        \n    Drop to upload\n    \n    {{'upload.link' | symbol}}\n     {{'upload.or' | symbol}}\n        {{'upload.url' | symbol}}\n    \n     {{'upload.or' | symbol}}\n        {{'upload.browse' | symbol}}\n    \n    \n        \n        {{'upload.url.start' | symbol}}\n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    Drop to upload        {{\\'upload.link\\' | symbol}}     {{\\'upload.or\\' | symbol}}        {{\\'upload.url\\' | symbol}}         {{\\'upload.or\\' | symbol}}        {{\\'upload.browse\\' | symbol}}                        {{\\'upload.url.start\\' | symbol}}    '\n    var COMPONENTS = [{'name': 'AceComponent', 'selector': 'ec-ace'},{'name': 'ActionbarComponent', 'selector': 'ec-actionbar'},{'name': 'AdminEntryInputComponent', 'selector': ''},{'name': 'ApiActionbarComponent', 'selector': 'ec-api-actionbar'},{'name': 'AssetgroupSelectComponent', 'selector': 'ec-assetgroup-select'},{'name': 'AssetListComponent', 'selector': 'ec-asset-list'},{'name': 'AssetListPopComponent', 'selector': 'ec-asset-list-pop'},{'name': 'AssetSelectComponent', 'selector': 'ec-asset-select'},{'name': 'CalendarComponent', 'selector': 'ec-calendar'},{'name': 'CrudComponent', 'selector': 'ec-crud'},{'name': 'DaterangeComponent', 'selector': 'ec-daterange'},{'name': 'DatetimeComponent', 'selector': 'ec-datetime'},{'name': 'DefaultEntryInputComponent', 'selector': ''},{'name': 'DefaultEntryOutputComponent', 'selector': 'ec-default-entry-output'},{'name': 'DefaultInputComponent', 'selector': ''},{'name': 'DefaultOutputComponent', 'selector': 'ec-default-output'},{'name': 'DynamicRackComponent', 'selector': ''},{'name': 'DynamicSlotComponent', 'selector': 'ec-dynamic-slot'},{'name': 'EntryFormComponent', 'selector': 'ec-entry-form'},{'name': 'EntryListComponent', 'selector': 'ec-entry-list'},{'name': 'EntryListPopComponent', 'selector': 'ec-entry-list-pop'},{'name': 'EntryListSelectComponent', 'selector': 'ec-entry-list-select'},{'name': 'EntryPopComponent', 'selector': 'ec-entry-pop'},{'name': 'EntrySelectComponent', 'selector': 'ec-entry-select'},{'name': 'ErrorComponent', 'selector': 'ec-error'},{'name': 'FormComponent', 'selector': 'ec-form'},{'name': 'HeatmapComponent', 'selector': 'ec-heatmap'},{'name': 'IconComponent', 'selector': 'ec-icon'},{'name': 'ImageSelectPopComponent', 'selector': 'ec-image-select-pop'},{'name': 'InputComponent', 'selector': 'ec-input'},{'name': 'InputErrorsComponent', 'selector': 'ec-input-errors'},{'name': 'ListComponent', 'selector': 'ec-list'},{'name': 'ListHeaderComponent', 'selector': 'ec-list-header'},{'name': 'ListItemsComponent', 'selector': 'ec-list-items'},{'name': 'LoaderComponent', 'selector': 'ec-loader'},{'name': 'LocationMapComponent', 'selector': 'ec-location-map'},{'name': 'LocationPickerComponent', 'selector': 'ec-location-picker'},{'name': 'LocationSearchComponent', 'selector': 'ec-location-search'},{'name': 'LoginComponent', 'selector': 'ec-login'},{'name': 'LoginFormComponent', 'selector': 'ec-login-form'},{'name': 'MediumEditorComponent', 'selector': 'ec-medium-editor'},{'name': 'MenuComponent', 'selector': 'ec-menu,[ec-menu]'},{'name': 'ModalComponent', 'selector': 'ec-modal'},{'name': 'MonthComponent', 'selector': 'ec-month'},{'name': 'NotificationsComponent', 'selector': 'ec-notifications'},{'name': 'OutputComponent', 'selector': 'ec-output'},{'name': 'PaginationComponent', 'selector': 'ec-pagination'},{'name': 'PasswordResetComponent', 'selector': 'ec-password-reset'},{'name': 'PopComponent', 'selector': 'ec-pop'},{'name': 'ResourceActionbarComponent', 'selector': 'ec-resource-actionbar'},{'name': 'ResourceCrudComponent', 'selector': 'ec-resource-crud'},{'name': 'ResourceDeletePopComponent', 'selector': 'ec-resource-delete-pop'},{'name': 'ResourceFormComponent', 'selector': 'ec-resource-form'},{'name': 'ResourceListComponent', 'selector': 'ec-resource-list'},{'name': 'ResourceListPopComponent', 'selector': 'ec-resource-list-pop'},{'name': 'ResourcePopComponent', 'selector': 'ec-resource-pop'},{'name': 'ResourceSelectComponent', 'selector': 'ec-resource-select'},{'name': 'SearchbarComponent', 'selector': 'ec-searchbar'},{'name': 'SelectComponent', 'selector': 'ec-select'},{'name': 'SignupComponent', 'selector': 'ec-signup'},{'name': 'SignupFormComponent', 'selector': 'ec-signup-form'},{'name': 'TabComponent', 'selector': 'ec-tab'},{'name': 'TabsComponent', 'selector': 'ec-tabs'},{'name': 'TagSelectComponent', 'selector': 'ec-tag-select'},{'name': 'TinymceComponent', 'selector': 'ec-tinymce'},{'name': 'ToggleComponent', 'selector': 'ec-toggle'},{'name': 'UploadComponent', 'selector': 'ec-upload'},{'name': 'UploadSelectComponent', 'selector': 'ec-upload-select'}];\n    var DIRECTIVES = [{'name': 'AssetDirective', 'selector': '[ecAsset]'},{'name': 'DropzoneDirective', 'selector': '[ecDropzone]'},{'name': 'EntriesDirective', 'selector': '[ecEntries]'},{'name': 'EntryDirective', 'selector': '[ecEntry]'},{'name': 'FocusDirective', 'selector': '[ecFocus]'},{'name': 'ImageDirective', 'selector': 'img [ecImage]'},{'name': 'SlotHostDirective', 'selector': '[ecSlotHost]'}];\n    var ACTUAL_COMPONENT = {'name': 'UploadSelectComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UtilityModule.html":{"url":"modules/UtilityModule.html","title":"module - UtilityModule","body":"\n                   \n\n\n\n\n    Modules\n    UtilityModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_imports\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nFocusDirective\n\nFocusDirective\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nIoModule\n\nIoModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/utility/utility.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            IoModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            FocusDirective\n                        \n                        \n                            LoginFormComponent\n                        \n                        \n                            MenuComponent\n                        \n                        \n                            SignupFormComponent\n                        \n                        \n                            TabComponent\n                        \n                        \n                            TabsComponent\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { IoModule } from '../io/io.module';\nimport { FocusDirective } from './focus/focus.directive';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { MenuComponent } from './menu/menu.component';\nimport { SignupFormComponent } from './signup-form/signup-form.component';\nimport { TabComponent } from './tab/tab.component';\nimport { TabsComponent } from './tabs/tabs.component';\n\nexport const utilityModuleConfig = {\n  entryComponents: [],\n  declarations: [\n    TabsComponent,\n    TabComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n  ],\n  imports: [\n    FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    CommonModule,\n    RouterModule,\n  ],\n  exports: [\n    /* FormsModule,\n    ReactiveFormsModule,\n    IoModule,\n    */\n    TabsComponent,\n    TabComponent,\n    MenuComponent,\n    LoginFormComponent,\n    SignupFormComponent,\n    FocusDirective,\n    RouterModule,\n  ],\n  providers: [],\n};\n\n@NgModule(utilityModuleConfig)\nexport class UtilityModule {\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"pipes/VisibleFieldsPipe.html":{"url":"pipes/VisibleFieldsPipe.html","title":"pipe - VisibleFieldsPipe","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Pipes\n  VisibleFieldsPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            packages/ui/src/lib/form/visible-fields.pipe.ts\n        \n\n            \n                Description\n            \n            \n                The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. \n\n            \n\n\n        \n            Metadata\n            \n                \n                    \n                        Name\n                        visibleFields\n                    \n                \n            \n        \n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            transform\n                            \n                            \n                        \n                    \n                \n                \n                    \ntransform(fields: Array, form: Form)\n                    \n                \n\n\n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:12\n                            \n                        \n\n\n                \n                    \n                            Filters out all fields that should not be displayed in a regular form \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fields\n                                                        \n                                                                    Array\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        form\n                                                        \n                                                                    Form\n                                                        \n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     any\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            formService\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :     FormService\n\n                        \n                    \n                        \n                            \n                                    Defined in packages/ui/src/lib/form/visible-fields.pipe.ts:10\n                            \n                        \n\n\n            \n        \n\n\n    \n\n\n    \n        import { Pipe, PipeTransform } from '@angular/core';\nimport { Field, Form } from '@ec.components/core';\nimport { FormService } from './form.service';\n\n/** The VisibleFieldsPipe filters an array of Fields to only give back the ones that have form NOT set to false. */\n@Pipe({\n  name: 'visibleFields'\n})\nexport class VisibleFieldsPipe implements PipeTransform {\n  constructor(public formService: FormService) { }\n  /** Filters out all fields that should not be displayed in a regular form */\n  transform(fields: Array, form: Form): any {\n    return fields.filter((field) =>\n      this.formService.shouldBePartOfForm(field, form)\n      && !field.hideInForm\n    );\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithLoader.html":{"url":"interfaces/WithLoader.html","title":"interface - WithLoader","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithLoader\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/loader/with-loader.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses a loader. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        loader\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        loader\n                                    \n                                \n                                \n                                    \n                                        loader:     LoaderComponent\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     LoaderComponent\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    The loader that is contacted on any kind of loading operation. \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { LoaderComponent } from './loader.component';\n/** This interface can be used on a component that uses a loader. */\nexport interface WithLoader {\n  /** The loader that is contacted on any kind of loading operation. */\n  loader: LoaderComponent;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/WithNotifications.html":{"url":"interfaces/WithNotifications.html","title":"interface - WithNotifications","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  WithNotifications\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            packages/ui/src/lib/notifications/with-notifications.interface.ts\n        \n\n            \n                Description\n            \n            \n                This interface can be used on a component that uses notifications. \n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        notifications\n                                \n                                \n                                            Optional\n                                        silent\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        notifications\n                                    \n                                \n                                \n                                    \n                                        notifications:     Notification[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Notification[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Stores notification history for later access. E.g. stores errors that should be hidden later. \n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        silent\n                                    \n                                \n                                \n                                    \n                                        silent:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    If true, no notifications will be emitted \n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Notification } from './notification';\n\n\n/** This interface can be used on a component that uses notifications. */\nexport interface WithNotifications {\n    /** Stores notification history for later access. E.g. stores errors that should be hidden later. */\n    notifications?: Notification[];\n    /** If true, no notifications will be emitted */\n    silent?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            component\n            AceComponent\n            \n                80 %\n                (20/25)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.component.ts\n            \n            variable\n            ace\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ace/src/lib/ace.module.ts\n            \n            variable\n            aceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ace/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar.module.ts\n            \n            variable\n            calendarModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/calendar.component.ts\n            \n            component\n            CalendarComponent\n            \n                76 %\n                (42/55)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            component\n            MonthComponent\n            \n                68 %\n                (24/35)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/calendar/month.component.ts\n            \n            interface\n            Day\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/daterange/daterange.component.ts\n            \n            component\n            DaterangeComponent\n            \n                67 %\n                (25/37)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/datetime.pipe.ts\n            \n            pipe\n            DatetimePipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/lib/heatmap/heatmap.component.ts\n            \n            component\n            HeatmapComponent\n            \n                67 %\n                (29/43)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/calendar/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/collection/collection.ts\n            \n            class\n            Collection\n            \n                100 %\n                (16/16)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/config.ts\n            \n            class\n            Config\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config-property.interface.ts\n            \n            interface\n            FieldConfigProperty\n            \n                100 %\n                (42/42)\n            \n        \n        \n            \n                \n                packages/core/src/lib/config/field-config.interface.ts\n            \n            interface\n            FieldConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/field/field.ts\n            \n            class\n            Field\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form-config.interface.ts\n            \n            interface\n            FormConfig\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/form/form.ts\n            \n            class\n            Form\n            \n                93 %\n                (29/31)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item-config.interface.ts\n            \n            interface\n            ItemConfig\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/core/src/lib/item/item.ts\n            \n            class\n            Item\n            \n                91 %\n                (22/24)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list-config.interface.ts\n            \n            interface\n            ListConfig\n            \n                100 %\n                (26/26)\n            \n        \n        \n            \n                \n                packages/core/src/lib/list/list.ts\n            \n            class\n            List\n            \n                95 %\n                (42/44)\n            \n        \n        \n            \n                \n                packages/core/src/lib/pagination/pagination.ts\n            \n            class\n            Pagination\n            \n                100 %\n                (22/22)\n            \n        \n        \n            \n                \n                packages/core/src/lib/selection/selection.ts\n            \n            class\n            Selection\n            \n                94 %\n                (47/50)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            class\n            Sorter\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortBoolean\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortNumber\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            function\n            sortString\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/lib/sorter/sorter.ts\n            \n            variable\n            collator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/core/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/asset-list/asset-list.component.ts\n            \n            component\n            AssetListComponent\n            \n                61 %\n                (11/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth-guard.service.ts\n            \n            guard\n            AuthGuard\n            \n                75 %\n                (3/4)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.module.ts\n            \n            function\n            cookieFactory\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                84 %\n                (11/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/email-available.validator.ts\n            \n            variable\n            emailAvailable\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            backendErrorCodes\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/errors.ts\n            \n            variable\n            errors\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/password-reset/password-reset.component.ts\n            \n            component\n            PasswordResetComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/auth/signup/signup.component.ts\n            \n            component\n            SignupComponent\n            \n                81 %\n                (13/16)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud-config.interface.ts\n            \n            interface\n            CrudConfig\n            \n                100 %\n                (27/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/crud/crud.component.ts\n            \n            component\n            CrudComponent\n            \n                77 %\n                (14/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/data.module.ts\n            \n            variable\n            dataModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entries/entries.directive.ts\n            \n            directive\n            EntriesDirective\n            \n                60 %\n                (12/20)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/admin-entry-input.component.ts\n            \n            component\n            AdminEntryInputComponent\n            \n                46 %\n                (6/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-input.component.ts\n            \n            component\n            DefaultEntryInputComponent\n            \n                50 %\n                (6/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/default-entry-output.component.ts\n            \n            component\n            DefaultEntryOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-form/entry-form.component.ts\n            \n            component\n            EntryFormComponent\n            \n                90 %\n                (39/43)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-pop/entry-list-pop.component.ts\n            \n            component\n            EntryListPopComponent\n            \n                44 %\n                (13/29)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list-select/entry-list-select.component.ts\n            \n            component\n            EntryListSelectComponent\n            \n                68 %\n                (31/45)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.component.ts\n            \n            component\n            EntryListComponent\n            \n                60 %\n                (15/25)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-list/entry-list.ts\n            \n            class\n            EntryList\n            \n                86 %\n                (20/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-pop/entry-pop.component.ts\n            \n            component\n            EntryPopComponent\n            \n                71 %\n                (30/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry-select/entry-select.component.ts\n            \n            component\n            EntrySelectComponent\n            \n                68 %\n                (63/92)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.directive.ts\n            \n            directive\n            EntryDirective\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                packages/data/src/lib/entry/entry.service.ts\n            \n            injectable\n            EntryService\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-list-pop/asset-list-pop.component.ts\n            \n            component\n            AssetListPopComponent\n            \n                59 %\n                (25/42)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset-select/asset-select.component.ts\n            \n            component\n            AssetSelectComponent\n            \n                64 %\n                (53/82)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/asset/asset.directive.ts\n            \n            directive\n            AssetDirective\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/assetgroup-select/assetgroup-select.component.ts\n            \n            component\n            AssetgroupSelectComponent\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/dropzone/dropzone.directive.ts\n            \n            directive\n            DropzoneDirective\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            injectable\n            FileService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            FileOptions\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/file.service.ts\n            \n            interface\n            Upload\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image-select-pop/image-select-pop.component.ts\n            \n            component\n            ImageSelectPopComponent\n            \n                64 %\n                (18/28)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/image/image.directive.ts\n            \n            directive\n            ImageDirective\n            \n                63 %\n                (7/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/mime-types.ts\n            \n            variable\n            mimeTypes\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/tag-select/tag-select.component.ts\n            \n            component\n            TagSelectComponent\n            \n                60 %\n                (56/92)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload-select/upload-select.component.ts\n            \n            component\n            UploadSelectComponent\n            \n                30 %\n                (7/23)\n            \n        \n        \n            \n                \n                packages/data/src/lib/files/upload/upload.component.ts\n            \n            component\n            UploadComponent\n            \n                77 %\n                (17/22)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.interface.ts\n            \n            interface\n            ModelConfig\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-config.service.ts\n            \n            injectable\n            ModelConfigService\n            \n                100 %\n                (10/10)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/model-configuration.interface.ts\n            \n            interface\n            ModelConfiguration\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/sdk-field.ts\n            \n            interface\n            SdkField\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/model-config/type-config.service.ts\n            \n            injectable\n            TypeConfigService\n            \n                88 %\n                (8/9)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/api-actionbar.component.ts\n            \n            component\n            ApiActionbarComponent\n            \n                0 %\n                (0/27)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            component\n            ResourceActionbarComponent\n            \n                0 %\n                (0/29)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-actionbar/resource-actionbar.component.ts\n            \n            interface\n            ResourceActionbarState\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource-config.service.ts\n            \n            injectable\n            ResourceConfig\n            \n                66 %\n                (8/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            injectable\n            ResourceService\n            \n                91 %\n                (11/12)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-config/resource.service.ts\n            \n            interface\n            Update\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-crud/resource-crud.component.ts\n            \n            component\n            ResourceCrudComponent\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-delete-pop/resource-delete-pop.component.ts\n            \n            component\n            ResourceDeletePopComponent\n            \n                61 %\n                (22/36)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.component.ts\n            \n            component\n            ResourceFormComponent\n            \n                86 %\n                (39/45)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-form/resource-form.ts\n            \n            class\n            ResourceForm\n            \n                85 %\n                (30/35)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list-pop/resource-list-pop.component.ts\n            \n            component\n            ResourceListPopComponent\n            \n                40 %\n                (12/30)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.component.ts\n            \n            component\n            ResourceListComponent\n            \n                77 %\n                (34/44)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-list/resource-list.ts\n            \n            class\n            ResourceList\n            \n                91 %\n                (56/61)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-pop/resource-pop.component.ts\n            \n            component\n            ResourcePopComponent\n            \n                72 %\n                (29/40)\n            \n        \n        \n            \n                \n                packages/data/src/lib/resource-select/resource-select.component.ts\n            \n            component\n            ResourceSelectComponent\n            \n                67 %\n                (57/84)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/history.service.ts\n            \n            injectable\n            HistoryService\n            \n                54 %\n                (6/11)\n            \n        \n        \n            \n                \n                packages/data/src/lib/sdk/sdk.service.ts\n            \n            injectable\n            SdkService\n            \n                88 %\n                (16/18)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/data/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            injectable\n            GeocodeService\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/location/src/lib/geocode.service.ts\n            \n            variable\n            google\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-map.component.ts\n            \n            component\n            LocationMapComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-picker.component.ts\n            \n            component\n            LocationPickerComponent\n            \n                62 %\n                (15/24)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location-search.component.ts\n            \n            component\n            LocationSearchComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            LOCATION_COMPONENTS\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/location/src/lib/location.module.ts\n            \n            variable\n            locationModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/location/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.component.ts\n            \n            component\n            MediumEditorComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/lib/medium-editor.module.ts\n            \n            variable\n            mediumModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/medium-editor/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce.module.ts\n            \n            variable\n            tinymceModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce-settings.ts\n            \n            variable\n            editorSettings\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/lib/tinymce/tinymce.component.ts\n            \n            component\n            TinymceComponent\n            \n                85 %\n                (18/21)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/tinymce/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            component\n            ActionbarComponent\n            \n                53 %\n                (34/63)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            Action\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/actionbar/actionbar.component.ts\n            \n            interface\n            ActionbarConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/datetime/datetime.component.ts\n            \n            component\n            DatetimeComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-input/default-input.component.ts\n            \n            component\n            DefaultInputComponent\n            \n                70 %\n                (7/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/default-output/default-output.component.ts\n            \n            component\n            DefaultOutputComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.html.ts\n            \n            variable\n            formTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.component.ts\n            \n            component\n            FormComponent\n            \n                91 %\n                (31/34)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.module.ts\n            \n            variable\n            formModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/form.service.ts\n            \n            injectable\n            FormService\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/max-items.pipe.ts\n            \n            pipe\n            MaxItemsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/toggle/toggle.component.ts\n            \n            component\n            ToggleComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/form/visible-fields.pipe.ts\n            \n            pipe\n            VisibleFieldsPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/ec-icons.ts\n            \n            variable\n            ecIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/emoji-icons.ts\n            \n            variable\n            emojiIcons\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.component.ts\n            \n            component\n            IconComponent\n            \n                57 %\n                (4/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/icon/icon.service.ts\n            \n            injectable\n            IconService\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-rack/dynamic-rack.component.ts\n            \n            component\n            DynamicRackComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/dynamic-slot/dynamic-slot.component.ts\n            \n            component\n            DynamicSlotComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input-errors/input-errors.component.ts\n            \n            component\n            InputErrorsComponent\n            \n                80 %\n                (4/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/input/input.component.ts\n            \n            component\n            InputComponent\n            \n                73 %\n                (19/26)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/output/output.component.ts\n            \n            component\n            OutputComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/io/slot-host.directive.ts\n            \n            directive\n            SlotHostDirective\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/group.pipe.ts\n            \n            pipe\n            GroupPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-config.service.ts\n            \n            injectable\n            ListConfigService\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-header/list-header.component.ts\n            \n            component\n            ListHeaderComponent\n            \n                35 %\n                (7/20)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list-items/list-items.component.ts\n            \n            component\n            ListItemsComponent\n            \n                76 %\n                (10/13)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.html.ts\n            \n            variable\n            listTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.component.ts\n            \n            component\n            ListComponent\n            \n                78 %\n                (22/28)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/list.module.ts\n            \n            variable\n            listModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination-config.interface.ts\n            \n            class\n            PaginationConfig\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/pagination/pagination.component.ts\n            \n            component\n            PaginationComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/list/searchbar/searchbar.component.ts\n            \n            component\n            SearchbarComponent\n            \n                77 %\n                (28/36)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.component.ts\n            \n            component\n            LoaderComponent\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/loader.service.ts\n            \n            injectable\n            LoaderService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/loader/with-loader.interface.ts\n            \n            interface\n            WithLoader\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/modal/modal.component.ts\n            \n            component\n            ModalComponent\n            \n                80 %\n                (25/31)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/error/error.component.ts\n            \n            component\n            ErrorComponent\n            \n                83 %\n                (5/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notification.ts\n            \n            class\n            Notification\n            \n                100 %\n                (12/12)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.component.ts\n            \n            component\n            NotificationsComponent\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            injectable\n            NotificationsService\n            \n                100 %\n                (8/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/notifications.service.ts\n            \n            variable\n            window\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/notifications/with-notifications.interface.ts\n            \n            interface\n            WithNotifications\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.component.ts\n            \n            component\n            PopComponent\n            \n                73 %\n                (11/15)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.module.ts\n            \n            variable\n            popModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/pop/pop.service.ts\n            \n            injectable\n            PopService\n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.html.ts\n            \n            variable\n            selectTemplate\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.component.ts\n            \n            component\n            SelectComponent\n            \n                68 %\n                (35/51)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/select/select.module.ts\n            \n            variable\n            selectModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/de.ts\n            \n            variable\n            de\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/en.ts\n            \n            variable\n            en\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.interface.ts\n            \n            interface\n            Symbol\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            injectable\n            SymbolPipe\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.pipe.ts\n            \n            pipe\n            SymbolPipe\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/symbol/symbol.service.ts\n            \n            injectable\n            SymbolService\n            \n                64 %\n                (9/14)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/ui.module.ts\n            \n            variable\n            uiModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.directive.ts\n            \n            directive\n            FocusDirective\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/focus/focus.interface.ts\n            \n            interface\n            Focus\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/login-form/login-form.component.ts\n            \n            component\n            LoginFormComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/menu/menu.component.ts\n            \n            component\n            MenuComponent\n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/signup-form/signup-form.component.ts\n            \n            component\n            SignupFormComponent\n            \n                96 %\n                (25/26)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tab/tab.component.ts\n            \n            component\n            TabComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/tabs/tabs.component.ts\n            \n            component\n            TabsComponent\n            \n                62 %\n                (5/8)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/utility.module.ts\n            \n            variable\n            utilityModuleConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/email.validator.ts\n            \n            variable\n            emailValidator\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/lib/utility/validators/field-validators.ts\n            \n            variable\n            FieldValidators\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            context\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                packages/ui/src/test.ts\n            \n            variable\n            require\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @agm/core : 1.0.0-beta.5\n        \n            @angular/animations : ^7.2.7\n        \n            @angular/common : ^7.2.7\n        \n            @angular/compiler : ^7.2.7\n        \n            @angular/core : ^7.2.7\n        \n            @angular/forms : ^7.2.7\n        \n            @angular/platform-browser : ^7.2.7\n        \n            @angular/platform-browser-dynamic : ^7.2.7\n        \n            @angular/router : ^7.2.7\n        \n            @ec.components/ace : *\n        \n            @ec.components/calendar : *\n        \n            @ec.components/core : *\n        \n            @ec.components/data : *\n        \n            @ec.components/location : *\n        \n            @ec.components/medium-editor : *\n        \n            @ec.components/style : *\n        \n            @ec.components/tinymce : *\n        \n            @ec.components/ui : *\n        \n            x.ui : ^9.1.3\n        \n            ace-builds : ^1.4.3\n        \n            core-js : ^2.6.5\n        \n            ec.sdk : ^0.19.2\n        \n            googlemaps : ^1.12.0\n        \n            lerna : ^3.13.1\n        \n            medium-editor : ^5.23.2\n        \n            moment-es6 : ^1.0.0\n        \n            ngx-cookie : ^2.0.1\n        \n            ngx-drag-drop : ^1.1.0\n        \n            rxjs : ~6.3.3\n        \n            tinymce : ^4.9.3\n        \n            tslib : ^1.9.0\n        \n            zone.js : ^0.8.29\n    \n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            cookieFactory   (packages/.../auth.module.ts)\n                        \n                        \n                            sortBoolean   (packages/.../sorter.ts)\n                        \n                        \n                            sortNumber   (packages/.../sorter.ts)\n                        \n                        \n                            sortString   (packages/.../sorter.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/data/src/lib/auth/auth.module.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            cookieFactory\n                            \n                            \n                        \n                    \n                \n                \n                    \ncookieFactory()\n                    \n                \n\n\n\n\n                \n                    \n                            loads CookieModule \n\n\n                            \n                                Returns :     ModuleWithProviders\n\n                            \n                    \n                \n            \n        \n\n    packages/core/src/lib/sorter/sorter.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            sortBoolean\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortBoolean(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts booleans \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortNumber\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortNumber(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts numbers \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            sortString\n                            \n                            \n                        \n                    \n                \n                \n                    \nsortString(a, b)\n                    \n                \n\n\n\n\n                \n                    \n                            Sorts strings (naturally) \n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        a\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        b\n                                                    \n                                                    \n                                                            No\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CalendarModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DataModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FilesModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        FormModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IconModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        IoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ListModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoaderModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LocationModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MediumEditorModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        NotificationsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PopModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ResourceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SdkModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SelectModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SymbolModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TinymceModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UiModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UtilityModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AceModule\n\n\n\ncluster_AceModule_declarations\n\n\n\ncluster_AceModule_AceComponent_providers\n\n\n\ncluster_AceModule_imports\n\n\n\ncluster_AceModule_exports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_declarations\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CalendarModule\n\n\n\ncluster_CalendarModule_declarations\n\n\n\ncluster_CalendarModule_exports\n\n\n\ncluster_DataModule\n\n\n\ncluster_DataModule_declarations\n\n\n\ncluster_DataModule_imports\n\n\n\ncluster_DataModule_exports\n\n\n\ncluster_DataModule_providers\n\n\n\ncluster_FilesModule\n\n\n\ncluster_FilesModule_declarations\n\n\n\ncluster_FilesModule_exports\n\n\n\ncluster_FilesModule_providers\n\n\n\ncluster_FormModule\n\n\n\ncluster_FormModule_declarations\n\n\n\ncluster_FormModule_imports\n\n\n\ncluster_FormModule_exports\n\n\n\ncluster_FormModule_providers\n\n\n\ncluster_IconModule\n\n\n\ncluster_IconModule_declarations\n\n\n\ncluster_IconModule_exports\n\n\n\ncluster_IconModule_providers\n\n\n\ncluster_IoModule\n\n\n\ncluster_IoModule_declarations\n\n\n\ncluster_IoModule_exports\n\n\n\ncluster_ListModule\n\n\n\ncluster_ListModule_declarations\n\n\n\ncluster_ListModule_exports\n\n\n\ncluster_ListModule_providers\n\n\n\ncluster_LoaderModule\n\n\n\ncluster_LoaderModule_declarations\n\n\n\ncluster_LoaderModule_exports\n\n\n\ncluster_LoaderModule_providers\n\n\n\ncluster_LocationModule\n\n\n\ncluster_LocationModule_declarations\n\n\n\ncluster_LocationModule_exports\n\n\n\ncluster_LocationModule_providers\n\n\n\ncluster_MediumEditorModule\n\n\n\ncluster_MediumEditorModule_declarations\n\n\n\ncluster_MediumEditorModule_MediumEditorComponent_providers\n\n\n\ncluster_MediumEditorModule_exports\n\n\n\ncluster_NotificationsModule\n\n\n\ncluster_NotificationsModule_declarations\n\n\n\ncluster_NotificationsModule_exports\n\n\n\ncluster_NotificationsModule_providers\n\n\n\ncluster_PopModule\n\n\n\ncluster_PopModule_declarations\n\n\n\ncluster_PopModule_exports\n\n\n\ncluster_PopModule_providers\n\n\n\ncluster_ResourceModule\n\n\n\ncluster_ResourceModule_declarations\n\n\n\ncluster_ResourceModule_exports\n\n\n\ncluster_ResourceModule_providers\n\n\n\ncluster_SdkModule\n\n\n\ncluster_SdkModule_providers\n\n\n\ncluster_SelectModule\n\n\n\ncluster_SelectModule_declarations\n\n\n\ncluster_SelectModule_SelectComponent_providers\n\n\n\ncluster_SelectModule_exports\n\n\n\ncluster_SymbolModule\n\n\n\ncluster_SymbolModule_declarations\n\n\n\ncluster_SymbolModule_exports\n\n\n\ncluster_SymbolModule_providers\n\n\n\ncluster_TinymceModule\n\n\n\ncluster_TinymceModule_declarations\n\n\n\ncluster_TinymceModule_exports\n\n\n\ncluster_UiModule\n\n\n\ncluster_UiModule_exports\n\n\n\ncluster_UtilityModule\n\n\n\ncluster_UtilityModule_declarations\n\n\n\ncluster_UtilityModule_exports\n\n\n\n\nAceComponent\n\nAceComponent\n\n\n\nAceModule\n\nAceModule\n\nAceModule -->\n\nAceComponent->AceModule\n\n\n\n\n\nAceComponent \n\nAceComponent \n\nAceComponent  -->\n\nAceModule->AceComponent \n\n\n\n AceComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}\n\n AceComponent), multi: true\n}->AceComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => AceComponent), multi: true\n}->AceComponent\n\n\n\n\n\nUiModule\n\nUiModule\n\nAceModule -->\n\nUiModule->AceModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUiModule->AuthModule\n\n\n\n\n\nDataModule\n\nDataModule\n\nDataModule -->\n\nUiModule->DataModule\n\n\n\n\n\nFilesModule\n\nFilesModule\n\nFilesModule -->\n\nUiModule->FilesModule\n\n\n\n\n\nResourceModule\n\nResourceModule\n\nResourceModule -->\n\nUiModule->ResourceModule\n\n\n\n\n\nPopModule \n\nPopModule \n\nPopModule  -->\n\nUiModule->PopModule \n\n\n\n\n\nUtilityModule \n\nUtilityModule \n\nUtilityModule  -->\n\nUiModule->UtilityModule \n\n\n\n\n\nFormModule \n\nFormModule \n\nFormModule  -->\n\nUiModule->FormModule \n\n\n\n\n\nLocationModule\n\nLocationModule\n\nLocationModule -->\n\nUiModule->LocationModule\n\n\n\n\n\nListModule \n\nListModule \n\nListModule  -->\n\nUiModule->ListModule \n\n\n\n\n\nIconModule \n\nIconModule \n\nIconModule  -->\n\nUiModule->IconModule \n\n\n\n\n\nLoaderModule \n\nLoaderModule \n\nLoaderModule  -->\n\nUiModule->LoaderModule \n\n\n\n\n\nNotificationsModule \n\nNotificationsModule \n\nNotificationsModule  -->\n\nUiModule->NotificationsModule \n\n\n\n\n\nSelectModule \n\nSelectModule \n\nSelectModule  -->\n\nUiModule->SelectModule \n\n\n\n\n\nSymbolModule \n\nSymbolModule \n\nSymbolModule  -->\n\nUiModule->SymbolModule \n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAuthModule -->\n\nLoginComponent->AuthModule\n\n\n\n\n\nPasswordResetComponent\n\nPasswordResetComponent\n\nAuthModule -->\n\nPasswordResetComponent->AuthModule\n\n\n\n\n\nSignupComponent\n\nSignupComponent\n\nAuthModule -->\n\nSignupComponent->AuthModule\n\n\n\n\n\nLoginComponent \n\nLoginComponent \n\nLoginComponent  -->\n\nAuthModule->LoginComponent \n\n\n\n\n\nPasswordResetComponent \n\nPasswordResetComponent \n\nPasswordResetComponent  -->\n\nAuthModule->PasswordResetComponent \n\n\n\n\n\nSignupComponent \n\nSignupComponent \n\nSignupComponent  -->\n\nAuthModule->SignupComponent \n\n\n\nDataModule -->\n\nAuthModule->DataModule\n\n\n\n\n\ncookieFactory()\n\ncookieFactory()\n\nAuthModule -->\n\ncookieFactory()->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nCalendarComponent\n\nCalendarComponent\n\n\n\nCalendarModule\n\nCalendarModule\n\nCalendarModule -->\n\nCalendarComponent->CalendarModule\n\n\n\n\n\nDaterangeComponent\n\nDaterangeComponent\n\nCalendarModule -->\n\nDaterangeComponent->CalendarModule\n\n\n\n\n\nDatetimePipe\n\nDatetimePipe\n\nCalendarModule -->\n\nDatetimePipe->CalendarModule\n\n\n\n\n\nHeatmapComponent\n\nHeatmapComponent\n\nCalendarModule -->\n\nHeatmapComponent->CalendarModule\n\n\n\n\n\nMonthComponent\n\nMonthComponent\n\nCalendarModule -->\n\nMonthComponent->CalendarModule\n\n\n\n\n\nCalendarComponent \n\nCalendarComponent \n\nCalendarComponent  -->\n\nCalendarModule->CalendarComponent \n\n\n\n\n\nDaterangeComponent \n\nDaterangeComponent \n\nDaterangeComponent  -->\n\nCalendarModule->DaterangeComponent \n\n\n\n\n\nDatetimePipe \n\nDatetimePipe \n\nDatetimePipe  -->\n\nCalendarModule->DatetimePipe \n\n\n\n\n\nHeatmapComponent \n\nHeatmapComponent \n\nHeatmapComponent  -->\n\nCalendarModule->HeatmapComponent \n\n\n\n\n\nMonthComponent \n\nMonthComponent \n\nMonthComponent  -->\n\nCalendarModule->MonthComponent \n\n\n\n\n\nFormModule\n\nFormModule\n\nFormModule -->\n\nCalendarModule->FormModule\n\n\n\n\n\nAdminEntryInputComponent\n\nAdminEntryInputComponent\n\nDataModule -->\n\nAdminEntryInputComponent->DataModule\n\n\n\n\n\nCrudComponent\n\nCrudComponent\n\nDataModule -->\n\nCrudComponent->DataModule\n\n\n\n\n\nDefaultEntryInputComponent\n\nDefaultEntryInputComponent\n\nDataModule -->\n\nDefaultEntryInputComponent->DataModule\n\n\n\n\n\nDefaultEntryOutputComponent\n\nDefaultEntryOutputComponent\n\nDataModule -->\n\nDefaultEntryOutputComponent->DataModule\n\n\n\n\n\nEntriesDirective\n\nEntriesDirective\n\nDataModule -->\n\nEntriesDirective->DataModule\n\n\n\n\n\nEntryDirective\n\nEntryDirective\n\nDataModule -->\n\nEntryDirective->DataModule\n\n\n\n\n\nEntryFormComponent\n\nEntryFormComponent\n\nDataModule -->\n\nEntryFormComponent->DataModule\n\n\n\n\n\nEntryListComponent\n\nEntryListComponent\n\nDataModule -->\n\nEntryListComponent->DataModule\n\n\n\n\n\nEntryListPopComponent\n\nEntryListPopComponent\n\nDataModule -->\n\nEntryListPopComponent->DataModule\n\n\n\n\n\nEntryListSelectComponent\n\nEntryListSelectComponent\n\nDataModule -->\n\nEntryListSelectComponent->DataModule\n\n\n\n\n\nEntryPopComponent\n\nEntryPopComponent\n\nDataModule -->\n\nEntryPopComponent->DataModule\n\n\n\n\n\nEntrySelectComponent\n\nEntrySelectComponent\n\nDataModule -->\n\nEntrySelectComponent->DataModule\n\n\n\n\n\nAuthModule \n\nAuthModule \n\nAuthModule  -->\n\nDataModule->AuthModule \n\n\n\n\n\nCrudComponent \n\nCrudComponent \n\nCrudComponent  -->\n\nDataModule->CrudComponent \n\n\n\n\n\nEntriesDirective \n\nEntriesDirective \n\nEntriesDirective  -->\n\nDataModule->EntriesDirective \n\n\n\n\n\nEntryDirective \n\nEntryDirective \n\nEntryDirective  -->\n\nDataModule->EntryDirective \n\n\n\n\n\nEntryFormComponent \n\nEntryFormComponent \n\nEntryFormComponent  -->\n\nDataModule->EntryFormComponent \n\n\n\n\n\nEntryListComponent \n\nEntryListComponent \n\nEntryListComponent  -->\n\nDataModule->EntryListComponent \n\n\n\n\n\nEntryListPopComponent \n\nEntryListPopComponent \n\nEntryListPopComponent  -->\n\nDataModule->EntryListPopComponent \n\n\n\n\n\nEntryListSelectComponent \n\nEntryListSelectComponent \n\nEntryListSelectComponent  -->\n\nDataModule->EntryListSelectComponent \n\n\n\n\n\nEntryPopComponent \n\nEntryPopComponent \n\nEntryPopComponent  -->\n\nDataModule->EntryPopComponent \n\n\n\n\n\nEntrySelectComponent \n\nEntrySelectComponent \n\nEntrySelectComponent  -->\n\nDataModule->EntrySelectComponent \n\n\n\n\n\nFilesModule \n\nFilesModule \n\nFilesModule  -->\n\nDataModule->FilesModule \n\n\n\n\n\nResourceModule \n\nResourceModule \n\nResourceModule  -->\n\nDataModule->ResourceModule \n\n\n\n\n\nSdkModule \n\nSdkModule \n\nSdkModule  -->\n\nDataModule->SdkModule \n\n\n\n\n\nUiModule \n\nUiModule \n\nUiModule  -->\n\nDataModule->UiModule \n\n\n\nDataModule -->\n\nFilesModule->DataModule\n\n\n\nSdkModule  -->\n\nFilesModule->SdkModule \n\n\n\n\n\nAssetDirective \n\nAssetDirective \n\nAssetDirective  -->\n\nFilesModule->AssetDirective \n\n\n\n\n\nAssetListComponent \n\nAssetListComponent \n\nAssetListComponent  -->\n\nFilesModule->AssetListComponent \n\n\n\n\n\nAssetListPopComponent \n\nAssetListPopComponent \n\nAssetListPopComponent  -->\n\nFilesModule->AssetListPopComponent \n\n\n\n\n\nAssetSelectComponent \n\nAssetSelectComponent \n\nAssetSelectComponent  -->\n\nFilesModule->AssetSelectComponent \n\n\n\n\n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent \n\nAssetgroupSelectComponent  -->\n\nFilesModule->AssetgroupSelectComponent \n\n\n\n\n\nDropzoneDirective \n\nDropzoneDirective \n\nDropzoneDirective  -->\n\nFilesModule->DropzoneDirective \n\n\n\n\n\nImageDirective \n\nImageDirective \n\nImageDirective  -->\n\nFilesModule->ImageDirective \n\n\n\n\n\nImageSelectPopComponent \n\nImageSelectPopComponent \n\nImageSelectPopComponent  -->\n\nFilesModule->ImageSelectPopComponent \n\n\n\n\n\nTagSelectComponent \n\nTagSelectComponent \n\nTagSelectComponent  -->\n\nFilesModule->TagSelectComponent \n\n\n\n\n\nUploadComponent \n\nUploadComponent \n\nUploadComponent  -->\n\nFilesModule->UploadComponent \n\n\n\n\n\nUploadSelectComponent \n\nUploadSelectComponent \n\nUploadSelectComponent  -->\n\nFilesModule->UploadSelectComponent \n\n\n\nDataModule -->\n\nResourceModule->DataModule\n\n\n\nFilesModule -->\n\nResourceModule->FilesModule\n\n\n\nSdkModule  -->\n\nResourceModule->SdkModule \n\n\n\nUiModule  -->\n\nResourceModule->UiModule \n\n\n\n\n\nApiActionbarComponent \n\nApiActionbarComponent \n\nApiActionbarComponent  -->\n\nResourceModule->ApiActionbarComponent \n\n\n\n\n\nResourceActionbarComponent \n\nResourceActionbarComponent \n\nResourceActionbarComponent  -->\n\nResourceModule->ResourceActionbarComponent \n\n\n\n\n\nResourceCrudComponent \n\nResourceCrudComponent \n\nResourceCrudComponent  -->\n\nResourceModule->ResourceCrudComponent \n\n\n\n\n\nResourceDeletePopComponent \n\nResourceDeletePopComponent \n\nResourceDeletePopComponent  -->\n\nResourceModule->ResourceDeletePopComponent \n\n\n\n\n\nResourceFormComponent \n\nResourceFormComponent \n\nResourceFormComponent  -->\n\nResourceModule->ResourceFormComponent \n\n\n\n\n\nResourceListComponent \n\nResourceListComponent \n\nResourceListComponent  -->\n\nResourceModule->ResourceListComponent \n\n\n\n\n\nResourceListPopComponent \n\nResourceListPopComponent \n\nResourceListPopComponent  -->\n\nResourceModule->ResourceListPopComponent \n\n\n\n\n\nResourcePopComponent \n\nResourcePopComponent \n\nResourcePopComponent  -->\n\nResourceModule->ResourcePopComponent \n\n\n\n\n\nResourceSelectComponent \n\nResourceSelectComponent \n\nResourceSelectComponent  -->\n\nResourceModule->ResourceSelectComponent \n\n\n\n\n\nSdkModule\n\nSdkModule\n\nDataModule -->\n\nSdkModule->DataModule\n\n\n\nFilesModule -->\n\nSdkModule->FilesModule\n\n\n\nResourceModule -->\n\nSdkModule->ResourceModule\n\n\n\n\n\nEntryService\n\nEntryService\n\nDataModule -->\n\nEntryService->DataModule\n\n\n\n\n\nHistoryService\n\nHistoryService\n\nDataModule -->\n\nHistoryService->DataModule\n\n\n\n\n\nModelConfigService\n\nModelConfigService\n\nDataModule -->\n\nModelConfigService->DataModule\n\n\n\n\n\nTypeConfigService\n\nTypeConfigService\n\nDataModule -->\n\nTypeConfigService->DataModule\n\n\n\n\n\nAssetDirective\n\nAssetDirective\n\nFilesModule -->\n\nAssetDirective->FilesModule\n\n\n\n\n\nAssetListComponent\n\nAssetListComponent\n\nFilesModule -->\n\nAssetListComponent->FilesModule\n\n\n\n\n\nAssetListPopComponent\n\nAssetListPopComponent\n\nFilesModule -->\n\nAssetListPopComponent->FilesModule\n\n\n\n\n\nAssetSelectComponent\n\nAssetSelectComponent\n\nFilesModule -->\n\nAssetSelectComponent->FilesModule\n\n\n\n\n\nAssetgroupSelectComponent\n\nAssetgroupSelectComponent\n\nFilesModule -->\n\nAssetgroupSelectComponent->FilesModule\n\n\n\n\n\nDropzoneDirective\n\nDropzoneDirective\n\nFilesModule -->\n\nDropzoneDirective->FilesModule\n\n\n\n\n\nImageDirective\n\nImageDirective\n\nFilesModule -->\n\nImageDirective->FilesModule\n\n\n\n\n\nImageSelectPopComponent\n\nImageSelectPopComponent\n\nFilesModule -->\n\nImageSelectPopComponent->FilesModule\n\n\n\n\n\nTagSelectComponent\n\nTagSelectComponent\n\nFilesModule -->\n\nTagSelectComponent->FilesModule\n\n\n\n\n\nUploadComponent\n\nUploadComponent\n\nFilesModule -->\n\nUploadComponent->FilesModule\n\n\n\n\n\nUploadSelectComponent\n\nUploadSelectComponent\n\nFilesModule -->\n\nUploadSelectComponent->FilesModule\n\n\n\n\n\nFileService\n\nFileService\n\nFilesModule -->\n\nFileService->FilesModule\n\n\n\n\n\nDatetimeComponent\n\nDatetimeComponent\n\nFormModule -->\n\nDatetimeComponent->FormModule\n\n\n\n\n\nDefaultInputComponent\n\nDefaultInputComponent\n\nFormModule -->\n\nDefaultInputComponent->FormModule\n\n\n\n\n\nDefaultOutputComponent\n\nDefaultOutputComponent\n\nFormModule -->\n\nDefaultOutputComponent->FormModule\n\n\n\n\n\nFormComponent\n\nFormComponent\n\nFormModule -->\n\nFormComponent->FormModule\n\n\n\n\n\nMaxItemsPipe\n\nMaxItemsPipe\n\nFormModule -->\n\nMaxItemsPipe->FormModule\n\n\n\n\n\nToggleComponent\n\nToggleComponent\n\nFormModule -->\n\nToggleComponent->FormModule\n\n\n\n\n\nVisibleFieldsPipe\n\nVisibleFieldsPipe\n\nFormModule -->\n\nVisibleFieldsPipe->FormModule\n\n\n\nUiModule -->\n\nFormModule->UiModule\n\n\n\n\n\nDatetimeComponent \n\nDatetimeComponent \n\nDatetimeComponent  -->\n\nFormModule->DatetimeComponent \n\n\n\n\n\nFormComponent \n\nFormComponent \n\nFormComponent  -->\n\nFormModule->FormComponent \n\n\n\n\n\nIoModule \n\nIoModule \n\nIoModule  -->\n\nFormModule->IoModule \n\n\n\n\n\nMaxItemsPipe \n\nMaxItemsPipe \n\nMaxItemsPipe  -->\n\nFormModule->MaxItemsPipe \n\n\n\nPopModule  -->\n\nFormModule->PopModule \n\n\n\n\n\nToggleComponent \n\nToggleComponent \n\nToggleComponent  -->\n\nFormModule->ToggleComponent \n\n\n\nUtilityModule  -->\n\nFormModule->UtilityModule \n\n\n\n\n\nVisibleFieldsPipe \n\nVisibleFieldsPipe \n\nVisibleFieldsPipe  -->\n\nFormModule->VisibleFieldsPipe \n\n\n\n\n\nListModule\n\nListModule\n\nListModule -->\n\nFormModule->ListModule\n\n\n\n\n\nIconModule\n\nIconModule\n\nUiModule -->\n\nIconModule->UiModule\n\n\n\nFormModule -->\n\nIconModule->FormModule\n\n\n\n\n\nPopModule\n\nPopModule\n\nPopModule -->\n\nIconModule->PopModule\n\n\n\n\n\nIconComponent \n\nIconComponent \n\nIconComponent  -->\n\nIconModule->IconComponent \n\n\n\nListModule -->\n\nIconModule->ListModule\n\n\n\n\n\nNotificationsModule\n\nNotificationsModule\n\nNotificationsModule -->\n\nIconModule->NotificationsModule\n\n\n\n\n\nIoModule\n\nIoModule\n\nFormModule -->\n\nIoModule->FormModule\n\n\n\n\n\nUtilityModule\n\nUtilityModule\n\nUtilityModule -->\n\nIoModule->UtilityModule\n\n\n\n\n\nDynamicRackComponent \n\nDynamicRackComponent \n\nDynamicRackComponent  -->\n\nIoModule->DynamicRackComponent \n\n\n\n\n\nDynamicSlotComponent \n\nDynamicSlotComponent \n\nDynamicSlotComponent  -->\n\nIoModule->DynamicSlotComponent \n\n\n\n\n\nInputComponent \n\nInputComponent \n\nInputComponent  -->\n\nIoModule->InputComponent \n\n\n\n\n\nInputErrorsComponent \n\nInputErrorsComponent \n\nInputErrorsComponent  -->\n\nIoModule->InputErrorsComponent \n\n\n\n\n\nOutputComponent \n\nOutputComponent \n\nOutputComponent  -->\n\nIoModule->OutputComponent \n\n\n\n\n\nSlotHostDirective \n\nSlotHostDirective \n\nSlotHostDirective  -->\n\nIoModule->SlotHostDirective \n\n\n\n\n\nLoaderModule\n\nLoaderModule\n\nUiModule -->\n\nLoaderModule->UiModule\n\n\n\nFormModule -->\n\nLoaderModule->FormModule\n\n\n\n\n\nLoaderComponent \n\nLoaderComponent \n\nLoaderComponent  -->\n\nLoaderModule->LoaderComponent \n\n\n\n\n\nSelectModule\n\nSelectModule\n\nSelectModule -->\n\nLoaderModule->SelectModule\n\n\n\nUiModule -->\n\nPopModule->UiModule\n\n\n\nFormModule -->\n\nPopModule->FormModule\n\n\n\nNotificationsModule -->\n\nPopModule->NotificationsModule\n\n\n\n\n\nModalComponent \n\nModalComponent \n\nModalComponent  -->\n\nPopModule->ModalComponent \n\n\n\n\n\nPopComponent \n\nPopComponent \n\nPopComponent  -->\n\nPopModule->PopComponent \n\n\n\n\n\nSymbolModule\n\nSymbolModule\n\nUiModule -->\n\nSymbolModule->UiModule\n\n\n\nFormModule -->\n\nSymbolModule->FormModule\n\n\n\nListModule -->\n\nSymbolModule->ListModule\n\n\n\n\n\nSymbolPipe \n\nSymbolPipe \n\nSymbolPipe  -->\n\nSymbolModule->SymbolPipe \n\n\n\nUiModule -->\n\nUtilityModule->UiModule\n\n\n\nFormModule -->\n\nUtilityModule->FormModule\n\n\n\nListModule -->\n\nUtilityModule->ListModule\n\n\n\n\n\nFocusDirective \n\nFocusDirective \n\nFocusDirective  -->\n\nUtilityModule->FocusDirective \n\n\n\n\n\nLoginFormComponent \n\nLoginFormComponent \n\nLoginFormComponent  -->\n\nUtilityModule->LoginFormComponent \n\n\n\n\n\nMenuComponent \n\nMenuComponent \n\nMenuComponent  -->\n\nUtilityModule->MenuComponent \n\n\n\n\n\nSignupFormComponent \n\nSignupFormComponent \n\nSignupFormComponent  -->\n\nUtilityModule->SignupFormComponent \n\n\n\n\n\nTabComponent \n\nTabComponent \n\nTabComponent  -->\n\nUtilityModule->TabComponent \n\n\n\n\n\nTabsComponent \n\nTabsComponent \n\nTabsComponent  -->\n\nUtilityModule->TabsComponent \n\n\n\n\n\nFormService\n\nFormService\n\nFormModule -->\n\nFormService->FormModule\n\n\n\n\n\nIconComponent\n\nIconComponent\n\nIconModule -->\n\nIconComponent->IconModule\n\n\n\n\n\nIconService\n\nIconService\n\nIconModule -->\n\nIconService->IconModule\n\n\n\n\n\nDynamicRackComponent\n\nDynamicRackComponent\n\nIoModule -->\n\nDynamicRackComponent->IoModule\n\n\n\n\n\nDynamicSlotComponent\n\nDynamicSlotComponent\n\nIoModule -->\n\nDynamicSlotComponent->IoModule\n\n\n\n\n\nInputComponent\n\nInputComponent\n\nIoModule -->\n\nInputComponent->IoModule\n\n\n\n\n\nInputErrorsComponent\n\nInputErrorsComponent\n\nIoModule -->\n\nInputErrorsComponent->IoModule\n\n\n\n\n\nOutputComponent\n\nOutputComponent\n\nIoModule -->\n\nOutputComponent->IoModule\n\n\n\n\n\nSlotHostDirective\n\nSlotHostDirective\n\nIoModule -->\n\nSlotHostDirective->IoModule\n\n\n\n\n\nGroupPipe\n\nGroupPipe\n\nListModule -->\n\nGroupPipe->ListModule\n\n\n\n\n\nListComponent\n\nListComponent\n\nListModule -->\n\nListComponent->ListModule\n\n\n\n\n\nListHeaderComponent\n\nListHeaderComponent\n\nListModule -->\n\nListHeaderComponent->ListModule\n\n\n\n\n\nListItemsComponent\n\nListItemsComponent\n\nListModule -->\n\nListItemsComponent->ListModule\n\n\n\n\n\nPaginationComponent\n\nPaginationComponent\n\nListModule -->\n\nPaginationComponent->ListModule\n\n\n\n\n\nSearchbarComponent\n\nSearchbarComponent\n\nListModule -->\n\nSearchbarComponent->ListModule\n\n\n\nUiModule -->\n\nListModule->UiModule\n\n\n\nFormModule  -->\n\nListModule->FormModule \n\n\n\n\n\nGroupPipe \n\nGroupPipe \n\nGroupPipe  -->\n\nListModule->GroupPipe \n\n\n\n\n\nListComponent \n\nListComponent \n\nListComponent  -->\n\nListModule->ListComponent \n\n\n\n\n\nListHeaderComponent \n\nListHeaderComponent \n\nListHeaderComponent  -->\n\nListModule->ListHeaderComponent \n\n\n\n\n\nListItemsComponent \n\nListItemsComponent \n\nListItemsComponent  -->\n\nListModule->ListItemsComponent \n\n\n\n\n\nPaginationComponent \n\nPaginationComponent \n\nPaginationComponent  -->\n\nListModule->PaginationComponent \n\n\n\n\n\nSearchbarComponent \n\nSearchbarComponent \n\nSearchbarComponent  -->\n\nListModule->SearchbarComponent \n\n\n\nSelectModule -->\n\nListModule->SelectModule\n\n\n\n\n\nListConfigService\n\nListConfigService\n\nListModule -->\n\nListConfigService->ListModule\n\n\n\n\n\nLoaderComponent\n\nLoaderComponent\n\nLoaderModule -->\n\nLoaderComponent->LoaderModule\n\n\n\n\n\nLoaderService\n\nLoaderService\n\nLoaderModule -->\n\nLoaderService->LoaderModule\n\n\n\n\n\nLocationMapComponent\n\nLocationMapComponent\n\nLocationModule -->\n\nLocationMapComponent->LocationModule\n\n\n\n\n\nLocationPickerComponent\n\nLocationPickerComponent\n\nLocationModule -->\n\nLocationPickerComponent->LocationModule\n\n\n\n\n\nLocationSearchComponent\n\nLocationSearchComponent\n\nLocationModule -->\n\nLocationSearchComponent->LocationModule\n\n\n\n\n\nLocationMapComponent \n\nLocationMapComponent \n\nLocationMapComponent  -->\n\nLocationModule->LocationMapComponent \n\n\n\n\n\nLocationPickerComponent \n\nLocationPickerComponent \n\nLocationPickerComponent  -->\n\nLocationModule->LocationPickerComponent \n\n\n\n\n\nLocationSearchComponent \n\nLocationSearchComponent \n\nLocationSearchComponent  -->\n\nLocationModule->LocationSearchComponent \n\n\n\n\n\nGeocodeService\n\nGeocodeService\n\nLocationModule -->\n\nGeocodeService->LocationModule\n\n\n\n\n\nMediumEditorComponent\n\nMediumEditorComponent\n\n\n\nMediumEditorModule\n\nMediumEditorModule\n\nMediumEditorModule -->\n\nMediumEditorComponent->MediumEditorModule\n\n\n\n\n\nMediumEditorComponent \n\nMediumEditorComponent \n\nMediumEditorComponent  -->\n\nMediumEditorModule->MediumEditorComponent \n\n\n\n MediumEditorComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}\n\n MediumEditorComponent), multi: true\n}->MediumEditorComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => MediumEditorComponent), multi: true\n}->MediumEditorComponent\n\n\n\n\n\nErrorComponent\n\nErrorComponent\n\nNotificationsModule -->\n\nErrorComponent->NotificationsModule\n\n\n\n\n\nNotificationsComponent\n\nNotificationsComponent\n\nNotificationsModule -->\n\nNotificationsComponent->NotificationsModule\n\n\n\nUiModule -->\n\nNotificationsModule->UiModule\n\n\n\n\n\nErrorComponent \n\nErrorComponent \n\nErrorComponent  -->\n\nNotificationsModule->ErrorComponent \n\n\n\n\n\nNotificationsComponent \n\nNotificationsComponent \n\nNotificationsComponent  -->\n\nNotificationsModule->NotificationsComponent \n\n\n\n\n\nNotificationsService\n\nNotificationsService\n\nNotificationsModule -->\n\nNotificationsService->NotificationsModule\n\n\n\n\n\nModalComponent\n\nModalComponent\n\nPopModule -->\n\nModalComponent->PopModule\n\n\n\n\n\nPopComponent\n\nPopComponent\n\nPopModule -->\n\nPopComponent->PopModule\n\n\n\n\n\nPopService\n\nPopService\n\nPopModule -->\n\nPopService->PopModule\n\n\n\n\n\nApiActionbarComponent\n\nApiActionbarComponent\n\nResourceModule -->\n\nApiActionbarComponent->ResourceModule\n\n\n\n\n\nResourceActionbarComponent\n\nResourceActionbarComponent\n\nResourceModule -->\n\nResourceActionbarComponent->ResourceModule\n\n\n\n\n\nResourceCrudComponent\n\nResourceCrudComponent\n\nResourceModule -->\n\nResourceCrudComponent->ResourceModule\n\n\n\n\n\nResourceDeletePopComponent\n\nResourceDeletePopComponent\n\nResourceModule -->\n\nResourceDeletePopComponent->ResourceModule\n\n\n\n\n\nResourceFormComponent\n\nResourceFormComponent\n\nResourceModule -->\n\nResourceFormComponent->ResourceModule\n\n\n\n\n\nResourceListComponent\n\nResourceListComponent\n\nResourceModule -->\n\nResourceListComponent->ResourceModule\n\n\n\n\n\nResourceListPopComponent\n\nResourceListPopComponent\n\nResourceModule -->\n\nResourceListPopComponent->ResourceModule\n\n\n\n\n\nResourcePopComponent\n\nResourcePopComponent\n\nResourceModule -->\n\nResourcePopComponent->ResourceModule\n\n\n\n\n\nResourceSelectComponent\n\nResourceSelectComponent\n\nResourceModule -->\n\nResourceSelectComponent->ResourceModule\n\n\n\n\n\nResourceConfig\n\nResourceConfig\n\nResourceModule -->\n\nResourceConfig->ResourceModule\n\n\n\n\n\nResourceService\n\nResourceService\n\nResourceModule -->\n\nResourceService->ResourceModule\n\n\n\n\n\nSdkService\n\nSdkService\n\nSdkModule -->\n\nSdkService->SdkModule\n\n\n\n\n\nActionbarComponent\n\nActionbarComponent\n\nSelectModule -->\n\nActionbarComponent->SelectModule\n\n\n\n\n\nSelectComponent\n\nSelectComponent\n\nSelectModule -->\n\nSelectComponent->SelectModule\n\n\n\nUiModule -->\n\nSelectModule->UiModule\n\n\n\n\n\nActionbarComponent \n\nActionbarComponent \n\nActionbarComponent  -->\n\nSelectModule->ActionbarComponent \n\n\n\nListModule  -->\n\nSelectModule->ListModule \n\n\n\n\n\nSelectComponent \n\nSelectComponent \n\nSelectComponent  -->\n\nSelectModule->SelectComponent \n\n\n\n SelectComponent), multi: true\n} -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n}\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n}\n\n SelectComponent), multi: true\n}->SelectComponent -->\n\n{\n    provide: NG_VALUE_ACCESSOR, useExisting: forwardRef(() => SelectComponent), multi: true\n}->SelectComponent\n\n\n\n\n\nSymbolPipe\n\nSymbolPipe\n\nSymbolModule -->\n\nSymbolPipe->SymbolModule\n\n\n\n\n\nSymbolService\n\nSymbolService\n\nSymbolModule -->\n\nSymbolService->SymbolModule\n\n\n\n\n\nTinymceComponent\n\nTinymceComponent\n\n\n\nTinymceModule\n\nTinymceModule\n\nTinymceModule -->\n\nTinymceComponent->TinymceModule\n\n\n\n\n\nTinymceComponent \n\nTinymceComponent \n\nTinymceComponent  -->\n\nTinymceModule->TinymceComponent \n\n\n\n\n\nFocusDirective\n\nFocusDirective\n\nUtilityModule -->\n\nFocusDirective->UtilityModule\n\n\n\n\n\nLoginFormComponent\n\nLoginFormComponent\n\nUtilityModule -->\n\nLoginFormComponent->UtilityModule\n\n\n\n\n\nMenuComponent\n\nMenuComponent\n\nUtilityModule -->\n\nMenuComponent->UtilityModule\n\n\n\n\n\nSignupFormComponent\n\nSignupFormComponent\n\nUtilityModule -->\n\nSignupFormComponent->UtilityModule\n\n\n\n\n\nTabComponent\n\nTabComponent\n\nUtilityModule -->\n\nTabComponent->UtilityModule\n\n\n\n\n\nTabsComponent\n\nTabsComponent\n\nUtilityModule -->\n\nTabsComponent->UtilityModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        21 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    68 Components\n                \n            \n        \n        \n            \n                \n                    \n                    7 Directives\n                \n            \n        \n        \n            \n                \n                    \n                    18 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Pipes\n                \n            \n        \n        \n            \n                \n                    \n                    14 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    20 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            ActionFunction   (packages/.../actionbar.component.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    packages/ui/src/lib/actionbar/actionbar.component.ts\n    \n    \n        \n            \n                \n                    \n                    ActionFunction\n                \n            \n            \n                \n                        function\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/angular-7-upgrade-guide.html":{"url":"additional-documentation/angular-7-upgrade-guide.html","title":"additional-page - Angular 7 Upgrade Guide","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAngular7 update: BREAKING changes\nThe following breaking changes need to be considered when updating the components with angular 7. This update guide is just for @ec.components and angular 7. A whole angular 7 update guide can be found here.\nAngular 7 is used since the following versions:\n\n@ec.components/ace@0.6.0\n@ec.components/calendar@0.2.0\n@ec.components/core@0.19.0\n@ec.components/data@0.42.0\n@ec.components/location@0.18.0\n@ec.components/medium-editor@0.4.0\n@ec.components/style@0.21.0\n@ec.components/tinymce@0.5.0\n@ec.components/ui@0.36.0\n\nIt is recommended you use the most recent versions. Also add @ec.components/calendar to your package.json if you use datetime pipe or calendars / date pickers.\n1. All imports now go from the packages roots\nold:\nimport { EntryForm } from '@ec.components/data/src/entry-form/entry-form.component'new:\nimport { EntryForm } from '@ec.components/data'=> make sure you never import anything from src, since this folder no longer exists in the package\nPRO TIP\nUse VSCode \"Search: Replace in Files\" with the following Regex:\n\nSearch: _'@ec.components/(\\w+).*'_\nReplace: _'@ec.components/$1'_\n\n2. SCSS import changes\nold:\n@import '~@ec.components/style/components';new:\n@import '~@ec.components/style/scss/components';3. MediumModule has been renamed to MediumEditorModule\n4. Build Errors\nIf you are getting this:\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'http' in '/your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/eventsource/lib/eventsource.js\nModule not found: Error: Can't resolve 'https' in 'your-project/node_modules/eventsource/lib'\nERROR in ./node_modules/jsonpath-plus/lib/jsonpath.js\nModule not found: Error: Can't resolve 'vm' in 'your-project/node_modules/jsonpath-plus/lib'To fix it, you need a custom webpack config. Eject is not available any more so we need to use angular-builders:\nnpm i @angular-builders/custom-webpack @angular-builders/dev-server @angular-devkit/build-angular --save-devThe following versions were used in this guide:\n\"@angular-builders/custom-webpack\": \"^7.2.0\",\n\"@angular-builders/dev-server\": \"^7.2.1\",\n\"@angular-devkit/build-angular\": \"^0.12.3\",In angular.json make following changes -\n\"architect\": {\n    \"build\": {\n        \"builder\": \"@angular-builders/custom-webpack:browser\",\n        \"options\": {\n        \"customWebpackConfig\": {\"path\": \"./custom-webpack.config.js\"},Notice change in builder and new option customWebpackConfig. Also change\n\"serve\": {\n    \"builder\": \"@angular-builders/dev-server:generic\",Now create a custom-webpack.config.js file in the root directory, containing:\nconst path = require(\"path\");\nmodule.exports = {\n    node: {\n        crypto: 'empty',\n        fs: 'empty',\n        http: 'empty',\n        https: 'empty',\n    }\n};Check this for more info.\nOther Problems you might run into\n\nCan't bind to 'ngModel' since it isn't a known property of 'input'\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial.html":{"url":"additional-documentation/project-setup-tutorial.html","title":"additional-page - Project Setup Tutorial","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nSetting up a new project with ec.components\nThis tutorial will show you how to set up a new project with the ec.components.\n1. Prequisites\nInstall angular-cli globally:\nnpm install -g @angular/cliThe following versions have been used for this tutorial:\n\n@angular/cli: 1.3.2\n@angular/animations: 4.3.6\n@angular/common: 4.3.6\n@angular/compiler: 4.3.6\n@angular/core: 4.3.6\n@angular/forms: 4.3.6\n@angular/http: 4.3.6\n@angular/platform-browser: 4.3.6\n@angular/platform-browser-dynamic: 4.3.6\n@angular/router: 4.3.6\n@angular/cli: 1.3.2\n@angular/compiler-cli: 4.3.6\n@angular/language-service: 4.3.6\ntypescript: 2.4.2\n\nYou can lookup your versions with ng --version\n2. Generate new Project\nng new ec-project --prefix ec-admin --routing true --style scssMake sure you replace ec-project with your project name and the prefix ec-admin with a project related shorthand symbol.\nMore info on the options for new.\n3. Install @ec.components/data\ncd ec-project\nyarn add @ec.components/data --save\nyarn add @ec.components/style --saveThis will install the data package which depends on ui and core packages.\nThe style package contains styles for ui and data.\n4. Import Styles\nInto your styles.scss, import the following styles:\n@import \"~xlcss/sass/xlcss.scss\";\n@import \"~x.ui/src/_config\";\n@import \"~x.ui/src/x.ui-sandbox.scss\";\n@import \"~@ec.components/style/components.scss\";5. Setup environment\nIn src/environments, you can find the different environment files.\nBy Default, there is a dev and a prod environment. For this tutorial, those two should be enough. We will use the dev environment for dev and staging and the prod environment for live. You could also add more environments, for more information, look here. \nsrc/environments/environment.ts:\nexport const environment = {\n  production: false,\n  environment: 'stage', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-dev-client' // your clientID\n};src/environments/environment.prod.ts:\nexport const environment = {\n  production: true,\n  environment: 'live', // https://entrecode.github.io/ec.sdk/#environment\n  datamanagerID: 'XXXXXXXX', // datamanager shortID\n  clientID: 'my-live-client' // your clientID\n};The .prod environment will be used when running ng build for production.\nThe client should use token method body. The callback URL does not matter.\n6. Add DataModule\nGo to src/app/app.module and add DataModule to your imports:\nimport { DataModule } from '@ec.components/data';\nimport { environment } from '../environments/environment';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    DataModule.forEnvironment(environment),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }Here we are importing the DataModule along with the environment to then import it into our AppModule with the forEnvironment method.\n7. Add --ssl flag\nin your package.json, edit your start script to look like this:\n\"start\": \"ng serve --ssl\",Without the --ssl flag, the authorization won't work, because it enforces https.\n8. Add a component\ne.g. add to src/app/app.component.html:\nThis assumes that the model muffin exists inside the datamanager provided through your environment.\n9. Run the fun\nThats it! Now you can run the app using:\nnpm run startnow navigate to https://localhost:4200\n10. Add Notifications\nTo your app.component, you can add a global notification component, outside of your routing:\nThis will display all messages sent by the components or your own modules.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/routes.html":{"url":"additional-documentation/project-setup-tutorial/routes.html","title":"additional-page - Routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding Routes\nThis short tutorial demonstrates how to quickly generate routes with components.\nIn the following tutorials, refer to this when you are called to create a new route.\n1. Create Component\nGenerate a new component\nng generate component muffinsAdd template to src/app/muffins/muffins.component.html\n2. Add a Route\nsrc/app/app-routing.module.ts:\nimport { MuffinsComponent } from './muffins/muffins.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    children: []\n  },\n  {\n    path: 'muffins',\n    component: MuffinsComponent\n  }\n];3. Run the Route\nNow you can access the muffin crud at https://localhost:4200/muffins\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/authorization.html":{"url":"additional-documentation/project-setup-tutorial/authorization.html","title":"additional-page - Authorization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/localization.html":{"url":"additional-documentation/project-setup-tutorial/localization.html","title":"additional-page - Localization","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nLocalization\nYou can setup localization via the SymbolService:\nimport en from './en';\n\n@Component({\n  templateUrl: './app.component.html',\n})\nexport class AppComponent {\n  constructor(private symbols: SymbolService) {\n   this.symbols.set(en);\n  }\n}It is expected that you pass an array of Symbol's to SymbolService#set\nDate Localization\nIf you are using datepickers, you have to include the following line to your root component:\nmoment.locale(this.symbols.resolve('moment.locale'));Using symbols in templates\nTo translate symbols in a template, use the symbol pipe:\n{{'symbol.language' | symbol}} Overwriting\nThe names of the symbols act as unique identifier, meaning you can overwrite any preexisting symbols. The default preexisting symbols of ec.components can be looked up here, or directly at the source: EN, DE\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-fields-config.html":{"url":"additional-documentation/project-setup-tutorial/custom-fields-config.html","title":"additional-page - Custom Fields Config","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nCustom Field Configuration\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nExample\nYou can configure a models behaviour over the ModelConfigService.\nIt is recommended to configure a model in a parent component of all possible ec-crud lists or nested forms.\nSee the related doc links for default values / possible config values.\nexport class MuffinsComponent {\n  constructor(private modelConfig: ModelConfigService) {\n    moment.locale('de'); //set moment locale\n\n    this.modelConfig.set('muffin', {\n      fields: {\n        pictures: {\n          label: 'Bilder' //this label is shown above the form field and in the table header\n        },\n        name: {\n          label: 'Muffin Name',\n          group: (name) => {\n            return name[0].toUpperCase() //the return value is used to show group headers in a sorted list\n          },\n          required: true //when required, a new entry form cannot be saved without a value set for the field\n        },\n        _created: { //you can also access the system properties\n          label: 'Erstellt',\n          form: false, //this will hide the field inside the form\n          group: (value) => moment(value).format('YYYY')\n        },\n        amazement_factor: {\n          label: 'Amazement Faktor',\n          display: (value) => { //this will transform the value for output e.g. in a list cell\n            return (value * 10) + '%'\n          },\n          group: (value) => {\n            return value > 5 ? 'Größer als 50%' : 'Kleiner als 50%';\n          },\n          validate: (value) => { //this function will run when validating the value inside a form\n            if (typeof value !== 'number') {\n              return; //value is valid\n            }\n            if (value  10) {\n              return 'Darf maximal 10 sein';\n            }\n          }\n        },\n      }\n    });\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-list.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-list.html","title":"additional-page - Custom Entry List","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec-entry-list\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry Lists load multiple entries from a model and display them in a paginated list. It supports load error notifications, loader, filtering, sorting and automatic reloading + many customizations.\nDefault Usage\nThe above snippet will either consume the config for muffin in ModelConfigService, or if no config is found, generate one from the model schema.\nPassing a Config\nThe following snippet will assign the given config to the model/schema config:\ncolumnClicked output\nYou can react to column clicks via the columnClicked output:\nselect(item) {\n    console.log('entry',item.getBody(),item.id());\n}Seperated header/items/pagination markup\nIf you need a seperation of the list-header -items and -pagination, you can use the sub components of list.component:\n\n\n\n\nCreate Custom Cells via transform methods\nIf you want to custom cell values that do not require a custom markup, you can use transforms\ndisplay\nThe display transform method is used to display the value (say what?).\nIt is called from inside ec-output, which is used in list-cells and form readOnly fields.\nYou can change the display behaviour like this:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            display: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});group\nYou can use grouping to get a clearer outline over sorted data:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            group: (value, item) => {\n                if(value===10) {\n                    return 'AMAZING!';\n                } else if(value > 7) {\n                    return 'amazing';\n                }\n                return 'not so amazing';\n            }\n        }\n    }\n});The syntax is the same as for display but the result is used as a group label when the property is sorted.\nresolve\nThe value that is passed to the transform methods like display, group etc. can be changed beforehand with the resolve method. NOTE: the params are different than for the transform methods:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            resolve: (body, item) => {\n                if(body.amazement_factor === -1) {\n                    return 0;\n                }\n                return body.amazement_factor;\n            }\n        }\n    }\n});this will also affect your forms!\npseudo properties via resolve\nYou can also define pseudo properties, meaning properties that do not exist on the original object:\nthis.modelConfig.set('muffin', {\n    fields: {\n        ranking: {\n            resolve: (body, item) => body.amazement_factor*body.flavour/body.price\n        }\n    }\n});This comes in handy when you want to display a often combined value out of multiple values.\nNOTE: pseudo properties should not be passed to the backend...\nCustom Cells via custom output component\nIf you want to custom cell values that do require a custom markup, you can use a custom output component:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            output: StrongComponent\n        }\n    }\n});In your strong.component.ts, you can inherit OutputComponent, giving you access to the field and item of your cell:\n@Component({\n  selector: 'app-strong',\n  template: `{{item.resolve(field.property)}}`\n})\nexport class StrongComponent extends OutputComponent {}NOTE: customizing the output component will also change the look of forms using that config, if the property is set readOnly.\nFiltering Lists\nBy default, each column that hosts a filterable property contains a search icon in its header. If the property is filterable is defined either by the field config (filterable) or falls back to the backend types that support filters. The search icon will open a pop with a field type specific filter input inside.\nCustom Filtering\nIf you do not want that (currently pretty clunky) pop filters, you can set filterable to false and manually call list.load with the desired filter:\n\n    show amazing muffins\n\nClicking the link will now show all muffins with exactly amazement_factor 10.\nCustom filter operators\nBy default, the entry-list will filter the property by its default filterOperator (see type config). If you want to change the default operator you can set it in the config:\nthis.modelConfig.set('muffin', {\n    fields: {\n        amazement_factor: {\n            filterOperator: 'from'\n        }\n    }\n});\n    show amazing muffins\n\nIf you now click the link, all muffins with amazement_factor>=5 will be loaded.\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/project-setup-tutorial/custom-entry-forms.html":{"url":"additional-documentation/project-setup-tutorial/custom-entry-forms.html","title":"additional-page - Custom Entry Forms","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nEntry Forms\nRelated Doc:\n\nAll Possible field config properties\nDefault Type Config\nListConfig (also see ItemConfig parent)\nItem Doc\n\nEntry forms can edit and create entries. They support notifications, loader, validation error handling and dynamic config generation out of the box.\nNOTE: it is expected you have placed a ec-notifications tag somewhere in your root component.\nDefault Behaviour\nCreate\nsubmitting the form will create a new entry and then switch to edit mode.\nEdit\nDynamic Edit/Create from template\nYou can also access the form from the template and call edit or create:\n\n\n    \n      {{muffin.name}}\n    \n  \nCreate new MuffinConfiguration\nIf nothing else is configured, the form will parse the schema of muffin and generate a generic field config.\nIf you configured the model via ModelConfigService (see Custom Fields), the form will use that config.\nAlternatively, you can also pass a config directly:\nThe given config will be Object.assigned to the possible preexisting modelConfig.\nCustom Markup with ec-input/ec-output\nMost times, you'll want more freedom over your forms markup etc. This is where ec-input and ec-output come into play:\n  \n    \n    Title\n        \n    \n    \n    Amazement Factor\n    \n    Submit\n  As soon as the ec-entry-form contains elements (or you pass empty=true, as meantioned below), the contents will be rendered instead of the default form.\nFeatures you have to add manually (if needed)\n\nsubmit button\nfield.readOnly handling (show ec-output instead of ec-input)\nlocal ec-loader\n\nNOTE: dont wrap labels around complex input components, because they fire ghost clicks!\nCustom input/output markup\nOf course you can remove another layer of abstraction to further customize the form:\n  \n    \n    Title\n    \n    \n    \n    Amazement Factor\n    {{form.display('amazement_factor')}}\n\n    Submit\n  Features you have to add manually:\n\nhandling of input errors (ec-input-errors)\nmaking sure your markup handles the field type correctly\nmaking sure your markup handles the field value correctly\n\nIt is generally recommended to use ec-input over hard coded forms.\nThe empty flag\nYou can also place the ec-input elements somewhere else and just tell the ec-entry-form that it shouldn't render the default form with the empty flag:\n\nNOTE: Always make sure the property accessed by ec-input is also present in your config (or you dont use a config at all). Otherwise, the input wont know what to render.\nCreating custom inputs\n1. Create Custom Input Component\nng g c custom-inputThis component will serve as a container for all possible custom input fields.\n2. Extend InputComponent (custom-input.component.ts)\nTo make the current field information available to the template, you need to extend InputComponent from @ec.components/ui:\nimport { Component } from '@angular/core';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'clubapp-custom-input',\n  templateUrl: './custom-input.component.html',\n  styleUrls: ['./custom-input.component.scss']\n})\nexport class CustomInputComponent extends InputComponent {\n}CMD+Click on InputComponent to see which properties you can now use!\n3. Add Markup (custom-input.component.html)\nNow we can decide which custom input should be used, based on e.g. the fields view value:\n\n  \n  \n    \n  \n  \n     -->\n  \nOf course you could also switch based on property name or type, depending on your application.\nThe id property of field is referenced in the label of the form. By adding it to the input makes sure your label click enters the input.\n4. Add CustomInputComponent to entryComponents:\nBecause the custom component will be loaded dynamically, your module needs to declare it as entryComponent:\n@NgModule({\n  entryComponents: [\n    CustomInputComponent\n  ]\n  /** more stuff **/\n})\nexport class AppModule {\n}5. Add CustomInputComponent to field config:\nNow you can add the Component as input to your field config:\nthis.modelConfig.set('muffin', {\n      fields: {\n        url: {\n          label: 'URL',\n          view: 'speakingurl',\n          input: CustomInputComponent\n        },\n        openingHours: {\n          label: 'Öffnungszeiten',\n          view: 'openingHours',\n          input: CustomInputComponent\n        }\n})By changing the view option, we can now decide which case will be met!\nCustom Form Controls\nNow what if you want to use a custom form control that does not rely on primitve inputs like number or text?\nIn the above custom-input.component template, we use  with a formControl input.\nTo have access to the form control's value, you need to provide a ControlValueAccessor:\nimport { Component, forwardRef } from '@angular/core';\nimport { ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\nimport { InputComponent } from '@ec.components/ui';\n\n@Component({\n  selector: 'ec-opening-hours',\n  templateUrl: './opening-hours.component.html',\n  styleUrls: ['./opening-hours.component.scss'],\n  providers: [\n    {\n      provide: NG_VALUE_ACCESSOR,\n      useExisting: forwardRef(() => OpeningHoursComponent),\n      multi: true\n    }\n  ]\n})Now you can implement your own logic and call propagateChange when you change the value from your component, and react to change via the writeValue method!\nYou now could also use your component with ngModel or formControl in another context!\nMore information on this pattern: https://blog.thoughtram.io/angular/2016/07/27/custom-form-controls-in-angular-2.html\nCustom Fields without wrapper\nYou can also use custom components as input directly without needing to wrap them in \"CustomFieldsComponent\".\nJust make sure you implement ControlValueAccessor like above. When changes occur from the template, call propagateChange. You can react to outside model changes in writeValue.\nimport { Component, OnInit, Input } from '@angular/core';\nimport { InputComponent } from '../../../packages/ui';\nimport { ControlValueAccessor } from '@angular/forms';\n\n@Component({\n    selector: 'ec-counter',\n    templateUrl: './counter.component.html'\n})\n\nexport class CounterComponent extends InputComponent implements ControlValueAccessor {\n\n    value = 0;\n\n    increment() {\n        this.propagateChange(++this.value);\n    }\n\n    decrement() {\n        this.propagateChange(--this.value);\n    }\n\n    writeValue(value: any) {\n        this.value = value;\n        console.log('received value', value);\n    }\n\n    propagateChange = (_: any) => {\n    };\n\n    registerOnChange(fn) {\n        this.propagateChange = fn;\n    }\n\n    registerOnTouched() {\n    }\n\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme.html":{"url":"additional-documentation/readme.html","title":"additional-page - README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nec.components\nThis project contains all sorts of angular components for creating data driven applications.\nIt is mainly used for entrecode admin applications in combination with the entrecode using ec.sdk.\nPackages\nMain Packages\n\n@ec.components/core: contains core typescript classes (no angular/datamanager)\n@ec.components/ui: contains core ui components (not datamanager specific)\n@ec.components/data: contains ui components for datamanager.\n@ec.components/style: contains styles for all components, built on x.ui.\n\nThe dependencies stack up from core to data (data > ui > core). You could also omit data, using just the ui components.\nOptional Packages\n\n@ec.components/calendar: contains calendar components, uses moment.\n@ec.components/location: wraps angular-google-maps.\n@ec.components/tinymce: wraps tinymce wysiwyg editor.\n@ec.components/medium-editor: wraps medium wysiwyg editor.\n@ec.components/ace: wraps ace code editor.\n\nDocumentation\nThe main documentation is located at entrecode.github.io/ec.components. You can find a getting started guide there.\nDemo\nA Demo is available at components.entrecode.de.\nDeveloping with Lerna + Yarn Workspaces\nThe repository is a monorepo, managed by lerna and yarn workspaces.\nAll folders inside dist + packages/style will be used as symlinks in node_modules/@ec.components/*.\nYou can update the symlinks by running yarn (e.g. after adding a new package).\nDev Setup\nAfter a fresh clone of the repo, run this:\nyarn install\nnpm run dev-setup\nnpm run startThe dev-setup script builds all packages and symlinks them to the node_modules.\nReleasing\nRun release task and select versions:\nnpm run releaseTo publish a new package for the first time, make sure you run npm publish --access=public before running lerna. See add-new-package for more info on creating a new package.\nAlso make sure to use Conventional Commits for proper changelogging.\nDefault README\nThis project was generated with Angular CLI version 7.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:1337/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the --prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\nImpressum & Datenschutz\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/data-readme.html":{"url":"additional-documentation/readme/data-readme.html","title":"additional-page - data README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/data\nThis package contains all ec.datamanager related components.\nBeing wether framework agnostic nor backend agnostic, it is lowest fruit on the abstraction tree.\nIt extends the classes of the core module to create datamanager specific classes that are then used in the components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/data --save2. Add Module\nimport { DataModule } from '@ec.components/data';\n\n@NgModule({\n  imports: [\n    DataModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ui-readme.html":{"url":"additional-documentation/readme/ui-readme.html","title":"additional-page - ui README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ui\nThis package contains all angular components that have no ec.datamanager references.\nIt utilizes the classes of the @ec.components/core package.\nBeing the middle layer in the abstraction tree, it is still backend agnostic but not framework agnostic.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ui --save2. Add Module\nimport { UiModule } from '@ec.components/ui';\n\n@NgModule({\n  imports: [\n    UiModule\n  ]\n})\nexport class AppModule {\n}\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/core-readme.html":{"url":"additional-documentation/readme/core-readme.html","title":"additional-page - core README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/core\nThis package contains all the core typescript classes.\nIt is the highest abstraction layer and is therefor framework and backend agnostic.\nThis means it contains no angular or ec.datamanager references.\nOverview\n\nCHANGELOG\nAvailable Classes\n\nInstallation\nnpm i @ec.components/coreimport { Item } from '@ec.components/core';\nconst primitive = new Item('a');\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/style-readme.html":{"url":"additional-documentation/readme/style-readme.html","title":"additional-page - style README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/style\nThis package contains all scss styles for the ec.components packages.\nOverview\n\nCHANGELOG\nx.ui\n\nInstallation\nMethod A: With prebuilt CSS styles\nIf you are not using scss or you just want to add styles without hassle, just add this css to your index.html:\nMethod B: Custom Styles with SCSS\nIf you want to use your own styles, you can use scss to import and build the styles with x.ui:\n1. Install package\nnpm install @ec.components/style --saveThis will also install x.ui.\n3. Add styles\nDetails on how to setup your config can be found in the x.ui README.\n@import 'config';\n@import '~x.ui/src/x.ui.scss';\n@import '~@ec.components/style/scss/components';\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/calendar-readme.html":{"url":"additional-documentation/readme/calendar-readme.html","title":"additional-page - calendar README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/calendar\nThis package provides calendar and date components as part of ec.components.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/calendar --save2. Add Module\nimport { CalendarModule } from '@ec.components/calendar';\n\n@NgModule({\n  imports: [\n    CalendarModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/location-readme.html":{"url":"additional-documentation/readme/location-readme.html","title":"additional-page - location README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/location\nThis package wraps the angular-google-maps to be suitable for forms.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/location --save2. Add Module\nimport { LocationModule } from '@ec.components/location';\n\n@NgModule({\n  imports: [\n    LocationModule\n  ]\n})\nexport class AppModule {\n}3. Use it as default input for location fields\n  constructor(private typeConfig: TypeConfigService) {\n    this.typeConfig.set('location', {\n      input: LocationPickerComponent\n    });\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/ace-readme.html":{"url":"additional-documentation/readme/ace-readme.html","title":"additional-page - ace README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/ace\nThis package wraps the ace editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/ace --save2. Add Module\nimport { AceModule } from '@ec.components/ace';\n\n@NgModule({\n  imports: [\n    AceModule\n  ]\n})\nexport class AppModule {\n}3. Add CDN\nEither add the cdn src to your index.html:\n  \n`Or import from ace-builds (in app.module):\nimport 'ace-builds/src-noconflict/ace.js';When importing, you also need to import all extensions/modes/themes that you want to use manually.\n4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/medium-editor-readme.html":{"url":"additional-documentation/readme/medium-editor-readme.html","title":"additional-page - medium-editor README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/medium-editor\nThis package wraps the medium-editor as an Angular Directive.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/medium-editor --save2. Add Module\nimport { MediumModule } from '@ec.components/medium-editor';\n\n@NgModule({\n  imports: [\n    MediumModule\n  ]\n})\nexport class AppModule {\n}3. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/readme/tinymce-readme.html":{"url":"additional-documentation/readme/tinymce-readme.html","title":"additional-page - tinymce README","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n@ec.components/tinymce\nThis package wraps the tinymce editor as an Angular Component.\nOverview\n\nModule Overview Page\nCHANGELOG\n\nInstallation\n1. Install package\nnpm install @ec.components/tinymce --save2. Add Module\nimport { TinymceModule } from '@ec.components/tinymce';\n\n@NgModule({\n  imports: [\n    TinymceModule\n  ]\n})\nexport class AppModule {\n}3. Add styles files to angular.json\n\"styles\": [\n  \"node_modules/tinymce/skins/lightgray/skin.min.css\",\n  \"node_modules/tinymce/skins/lightgray/content.min.css\"\n],4. Use it\n \n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog.html":{"url":"additional-documentation/changelog.html","title":"additional-page - CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nEach package has its own changelog:\n\n@ec.components/data\n@ec.components/ui\n@ec.components/core\n@ec.components/calendar\n@ec.components/style\n@ec.components/ace\n@ec.components/location\n@ec.components/medium-editor\n@ec.components/tinymce\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/data-changelog.html":{"url":"additional-documentation/changelog/data-changelog.html","title":"additional-page - data CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.46.7 (2019-04-05)\nNote: Version bump only for package @ec.components/data\n0.46.6 (2019-04-01)\nNote: Version bump only for package @ec.components/data\n0.46.5 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.4 (2019-03-29)\nNote: Version bump only for package @ec.components/data\n0.46.3 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.2 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.46.1 (2019-03-29)\nBug Fixes\n\ncircular dependency in resource-config (d8ad11d)\n\n0.46.0 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nno default filter for tag-select (dd83e20)\nremove model config cache after sdk fix (2e97a10)\nresource-pop hasMethod could throw error (7f99383)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nadded dropdownFields option to CrudConfig (0256008)\n\n0.45.6 (2019-03-22)\nBug Fixes\n\nmodel config is now only requested once (a542c43)\nnow using sdk 0.18.7 (ac3bb86)\n\n0.45.5 (2019-03-22)\nBug Fixes\n\nentry-list-select undefined array (bc9bb53)\npass readOnly + config to asset-select (b7d33e2)\n\n0.45.4 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.45.3 (2019-03-08)\nNote: Version bump only for package @ec.components/data\n0.45.2 (2019-03-01)\nBug Fixes\n\nadd resource-list to data public_api (2b0b354)\n\n0.45.1 (2019-02-25)\nNote: Version bump only for package @ec.components/data\n0.45.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.44.2 (2019-02-15)\nBug Fixes\n\nresource-select focus searchbar + fire editItem if puttable (b2cf446)\n\n0.44.1 (2019-02-15)\nBug Fixes\n\ntypo in resource-select (4650da9)\n\n0.44.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.43.10 (2019-02-15)\nNote: Version bump only for package @ec.components/data\n0.43.9 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.43.8 (2019-02-08)\nBug Fixes\n\nfixed asset-list-pop search + set inital size to 24 (651f1de)\n\n0.43.7 (2019-02-04)\nBug Fixes\n\nresource-select stop propagation on item click (68f12f5)\n\n0.43.6 (2019-02-04)\nBug Fixes\n\nresource-select click item (42301aa)\n\n0.43.5 (2019-02-04)\nBug Fixes\n\ncan now set itemClick in field config + fix resouce-select config (9e23457)\n\n0.43.4 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.43.3 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop now really fixed (8abc48b)\n\n0.43.2 (2019-02-01)\nNote: Version bump only for package @ec.components/data\n0.43.1 (2019-02-01)\nBug Fixes\n\nresource-select#togglePop (79c1a6d)\n\n0.43.0 (2019-02-01)\nFeatures\n\nResourceConfig#set (ba52443)\n\n0.42.16 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.15 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.14 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.13 (2019-01-28)\nNote: Version bump only for package @ec.components/data\n0.42.12 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.42.11 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.42.10 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.9 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.8 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.7 (2019-01-25)\nNote: Version bump only for package @ec.components/data\n0.42.6 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.5 (2019-01-21)\nNote: Version bump only for package @ec.components/data\n0.42.4 (2019-01-21)\nBug Fixes\n\nauth.service clientID check + removed broadcast load on env switch (def9084)\ncalling entry-pop create twice would edit the first entry (d5dc292)\nclear searchbar when changing asset group (1cfc328)\nclientID if statement (43c7da5)\nconfig generation for empty forms was bugged since last commit (789e7ca)\ncould not define custom components for entry field types (0b433be)\ncould not pass config to entry-list seperately (4a14246)\ncould not set custom asset list config (06b615c)\ndndDraggable stringify error (a992381)\nEDITOR-187 (de51159)\nendless ecEntries could concat same page multiple times (fed2c52)\nentry-list.component (431e3fd)\nfiles index (bcbefd1)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfocus asset list pop searchbar when changing group (24868b9)\nform without config would bug (5892365)\ngroup resource-config (020e689)\nlinter bug (b4d03eb)\nModelConfigService now using CrudConfig instead of ItemConfig (eb506da)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nparseType would not recognize relations with \"-\" (a08a9d6)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nrelative path in data.module (fcfdf32)\nremoveItem still activated entry-select + entry-select demo (364482b)\nresource-list.component (2826ac4)\nselect assetGroup if legacyAsset and url upload (7580583)\nselection was broken for ec-entry-select list (121566c)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\nwrong method reference (f3590a7)\n\nFeatures\n\nsdk changesEnvironment + resource service env update broadcast (ad58c68)\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ui-changelog.html":{"url":"additional-documentation/changelog/ui-changelog.html","title":"additional-page - ui CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.41.5 (2019-04-01)\nNote: Version bump only for package @ec.components/ui\n0.41.4 (2019-03-29)\nBug Fixes\n\nadd titles with original field names (0dbce91)\n\n0.41.3 (2019-03-29)\nBug Fixes\n\nset form true in list header (7664cb2)\nset immutable false for filtering (8ab4791)\n\n0.41.2 (2019-03-29)\nBug Fixes\n\nshowHeader back to list template (ea4ba17)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nrevert test task running (cbe9627)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.1 (2019-03-29)\nBug Fixes\n\ndesc/asc icon reversed in field dropdown (add3ee6)\nshow filter input even if disableHeader true (9ea65ad)\n\n0.41.0 (2019-03-29)\nBug Fixes\n\nformControl Input for select (bcbbc51)\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\nlist-header: could not retoggle list-filter (041cd83)\nrxjs throwError import (c0c7f17)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\nhideOnEscape option for pop (7d50c5f)\nready emitter for input component (e2bbf1a)\nreworked list-header (ea24c06)\n\n0.40.0 (2019-03-22)\nBug Fixes\n\nEDITOR-289 list-header filter inputs autofocus (9915311)\n\nFeatures\n\nDefaultEntryInputComponent#autofocus (cea52fc)\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.39.3 (2019-03-14)\nBug Fixes\n\nEDITOR-277 + started COM-237 (b5a578d)\n\n0.39.2 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\n\n0.39.1 (2019-03-01)\nBug Fixes\n\nadded lazy option for new input/form behaviour (878e9df)\n\n0.39.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.38.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.37.4 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.3 (2019-02-15)\nNote: Version bump only for package @ec.components/ui\n0.37.2 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.37.1 (2019-02-01)\nBug Fixes\n\ndefault input config to empty object (46d4a1f)\n\n0.37.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\nnow passing field config to input component (25a36aa)\n\n0.36.15 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.14 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.13 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.12 (2019-01-28)\nNote: Version bump only for package @ec.components/ui\n0.36.11 (2019-01-28)\nBug Fixes\n\nadd missing exports (d7fa72b)\n\n0.36.10 (2019-01-25)\nBug Fixes\n\nlanguage imports (6e961b8)\n\n0.36.9 (2019-01-25)\nBug Fixes\n\nnow exporting languages by name (7733151)\n\n0.36.8 (2019-01-25)\nBug Fixes\n\nexport de + en from ui package barrel (c950461)\n\n0.36.7 (2019-01-25)\nNote: Version bump only for package @ec.components/ui\n0.36.6 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.5 (2019-01-21)\nNote: Version bump only for package @ec.components/ui\n0.36.4 (2019-01-21)\nBug Fixes\n\nclear searchbar when changing asset group (1cfc328)\ncontrol binding (fd41ccc)\ndndDraggable stringify error (a992381)\ndynamic-slot make inject public to be able to call super (b7460e6)\nec-input bug (1d9e231)\nfilterOperators of entry and asset + default filterPopClass of nested types is now modal (9e671b9)\nfirst tab selection was throwing an error (50e2d98)\nfocus asset list pop searchbar when changing group (24868b9)\nform.create would not reinstantiate with config being undefined (f7b65f4)\ninit control in input.component (3fb8f47)\nlint errors (1cb8b1c)\nlinter errors (70d5e24)\nnew assets on entry create + removed hacks from input.component (04fffbd)\nonly show size select if total>0 (7a88da8)\nquery could be overwritten while typing + fixed asset select (1c382d1)\nstop select pop event bubbling + selectMode in select component (47a7930)\ntodos (9bf067d)\nwrong import (b760780)\n\nFeatures\n\nsearchbar, ecFocus + added searchbar to asset-list-pop (8236caf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/core-changelog.html":{"url":"additional-documentation/changelog/core-changelog.html","title":"additional-page - core CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.24.3 (2019-04-01)\nNote: Version bump only for package @ec.components/core\n0.24.2 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.24.1 (2019-03-29)\nNote: Version bump only for package @ec.components/core\n0.24.0 (2019-03-29)\nBug Fixes\n\nkeep list header filter form immutable (6f53065)\n\nFeatures\n\nadded defaultFilter setting to ListConfig (d8c67be)\ndefaultFilter setting for listConfig (efb984e)\n\n0.23.0 (2019-03-22)\nFeatures\n\nField#autofocus + InputComponent#focus (8f56fb2)\n\n0.22.0 (2019-02-21)\nFeatures\n\nreworked list-header filters (624aecf)\n\n0.21.0 (2019-02-15)\nFeatures\n\ndisableRemove (98ae3d0)\n\n0.20.2 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.1 (2019-02-15)\nNote: Version bump only for package @ec.components/core\n0.20.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.19.12 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.11 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.10 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.9 (2019-01-28)\nNote: Version bump only for package @ec.components/core\n0.19.8 (2019-01-25)\nNote: Version bump only for package @ec.components/core\n0.19.7 (2019-01-21)\nNote: Version bump only for package @ec.components/core\n0.19.6 (2019-01-21)\nBug Fixes\n\nlinter errors (70d5e24)\nselection has + docs (e8b0e49)\nselection.toggle would emit change twice sometimes (b3e8115)\ntodos (9bf067d)\nwhen using objects as prefill, the next prefilled value would return the reference of the one before (c89591a)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/style-changelog.html":{"url":"additional-documentation/changelog/style-changelog.html","title":"additional-page - style CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.22.6 (2019-04-01)\nNote: Version bump only for package @ec.components/style\n0.22.5 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.22.4 (2019-03-29)\nNote: Version bump only for package @ec.components/style\n0.22.3 (2019-03-29)\nBug Fixes\n\nimproved input focus behaviour (35022a6)\nkeep list header filter form immutable (6f53065)\n\n0.22.2 (2019-02-15)\nBug Fixes\n\nresource-select config merging + ec-output-tags are now oneline (c483625)\n\n0.22.1 (2019-02-01)\nBug Fixes\n\nresource-select dropdown + config (4920dd4)\n\n0.22.0 (2019-02-01)\nFeatures\n\nec-select disableDropdown flag (7430c70)\n\n0.21.6 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.5 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.4 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.3 (2019-01-28)\nNote: Version bump only for package @ec.components/style\n0.21.2 (2019-01-25)\nNote: Version bump only for package @ec.components/style\n0.21.1 (2019-01-21)\nNote: Version bump only for package @ec.components/style\n0.21.0 (2019-01-21)\nBug Fixes\n\nadded optional to btn._clear extension (373bebf)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/calendar-changelog.html":{"url":"additional-documentation/changelog/calendar-changelog.html","title":"additional-page - calendar CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.2.14 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.2.14 (2019-03-29)\nNote: Version bump only for package @ec.components/calendar\n0.2.13 (2019-03-08)\nBug Fixes\n\nCOM-232 datetime safari cursor jump issue of death (0777809)\nCOM-255 (ac4aec3)\n\n0.2.12 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.11 (2019-02-15)\nNote: Version bump only for package @ec.components/calendar\n0.2.10 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.9 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.8 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.7 (2019-01-28)\nNote: Version bump only for package @ec.components/calendar\n0.2.6 (2019-01-25)\nNote: Version bump only for package @ec.components/calendar\n0.2.5 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.4 (2019-01-21)\nNote: Version bump only for package @ec.components/calendar\n0.2.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/location-changelog.html":{"url":"additional-documentation/changelog/location-changelog.html","title":"additional-page - location CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\nrevert test task running (cbe9627)\n\n0.18.13 (2019-03-29)\nBug Fixes\n\nformService bugs (ab86f41)\n\n0.18.12 (2019-02-25)\nNote: Version bump only for package @ec.components/location\n0.18.11 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.10 (2019-02-15)\nNote: Version bump only for package @ec.components/location\n0.18.9 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.8 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.7 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.6 (2019-01-28)\nNote: Version bump only for package @ec.components/location\n0.18.5 (2019-01-25)\nNote: Version bump only for package @ec.components/location\n0.18.4 (2019-01-21)\nNote: Version bump only for package @ec.components/location\n0.18.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/ace-changelog.html":{"url":"additional-documentation/changelog/ace-changelog.html","title":"additional-page - ace CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.6.12 (2019-03-29)\nBug Fixes\n\nace ui dependency (cd90ef7)\nrevert test task running (cbe9627)\n\n0.6.12 (2019-03-29)\nNote: Version bump only for package @ec.components/ace\n0.6.11 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.10 (2019-02-15)\nNote: Version bump only for package @ec.components/ace\n0.6.9 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.8 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.7 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.6 (2019-01-28)\nNote: Version bump only for package @ec.components/ace\n0.6.5 (2019-01-25)\nNote: Version bump only for package @ec.components/ace\n0.6.4 (2019-01-21)\nNote: Version bump only for package @ec.components/ace\n0.6.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/medium-editor-changelog.html":{"url":"additional-documentation/changelog/medium-editor-changelog.html","title":"additional-page - medium-editor CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.4.12 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.4.12 (2019-03-29)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.11 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.10 (2019-02-15)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.9 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.8 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.7 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.6 (2019-01-28)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.5 (2019-01-25)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.4 (2019-01-21)\nNote: Version bump only for package @ec.components/medium-editor\n0.4.3 (2019-01-21)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/changelog/tinymce-changelog.html":{"url":"additional-documentation/changelog/tinymce-changelog.html","title":"additional-page - tinymce CHANGELOG","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nChange Log\nAll notable changes to this project will be documented in this file.\nSee Conventional Commits for commit guidelines.\n0.5.13 (2019-03-29)\nBug Fixes\n\nrevert test task running (cbe9627)\n\n0.5.13 (2019-03-29)\nNote: Version bump only for package @ec.components/tinymce\n0.5.12 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.11 (2019-02-15)\nNote: Version bump only for package @ec.components/tinymce\n0.5.10 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.9 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.8 (2019-01-28)\nNote: Version bump only for package @ec.components/tinymce\n0.5.7 (2019-01-28)\nBug Fixes\n\ntinymce fix version 4.7.4 due to angular-cli/issues/11041 (b365847)\n\n0.5.6 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.5 (2019-01-25)\nNote: Version bump only for package @ec.components/tinymce\n0.5.4 (2019-01-21)\nNote: Version bump only for package @ec.components/tinymce\n0.5.3 (2019-01-21)\nBug Fixes\n\ncould not writeValue before init component (00a2e2e)\ntinyMCE promise error (8fab72f)\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/adding-new-packages.html":{"url":"additional-documentation/adding-new-packages.html","title":"additional-page - Adding New Packages","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAdding a new Package in 10 easy steps\nThe following steps need to be done to generate a new library that is standards compliant.\nJust replace the example name \"data\" with the new package name.\n1. Run CLI command to generate a new library\nng generate library data -p ecThis will create a new folder under packages/ (see newProjectRoot in angular.json).\n2. Prefix packages/data/package.json#name with @ec.components\nalso make sure the version is correct\n3. Prefix root tsconfig.json paths \"data\" and \"data/*\" with @ec.components\nalso change value to \"packages/data/dist/*\"\n4. Move src files to packages/data/lib\n5. add dependencies (e.g. ec.sdk) to both root and lib package.json\n6. add whitelistedNonPeerDependencies and dest to ng-package.json\n  \"dest\": \"./dist\",\n  \"whitelistedNonPeerDependencies\": [\n    \".\"\n  ]7. fix relative imports\nimport { Notification } from '../../../../ui/src/notifications/notification';\nimport { WithNotifications } from '../../../../ui/src/notifications/with-notifications.interface';\n// replace with\nimport { WithNotifications, Notification } from '@ec.components/ui';8. fix rxjs imports\nimport { Subject } from 'rxjs/Subject';\n// to\nimport { Subject } from 'rxjs';9. fix other lint errors like semicolon stuff\nbuild it\nng build datarun yarn to link dist/data to node_modules\n10. add dependency to root package.json\n11. add CHANGELOG.md of package to summary.json (like others)\n11. add link to package changelog page to CHANGELOG.md (like others)\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/stackblitz.html":{"url":"additional-documentation/stackblitz.html","title":"additional-page - Stackblitz","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nStackblitz Demos\n\nCreate Angular Stackblitz\nimport styles to index.html:\n\n\n\nAdd @ec.components package(s):\n\n\"@ec.components/calendar\": \"^0.2.6\",\n/** any other components module */\nimport module(s):\n\nimport { CalendarModule } from '@ec.components/calendar';\n@NgModule({\n  imports:      [ /* .. */ CalendarModule ],\n  /* ... */\n})\nexport class AppModule { }\nuse component(s) in app.component.html:\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"additional-documentation/publishing.html":{"url":"additional-documentation/publishing.html","title":"additional-page - Publishing","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAuthorization Flow\nThis Tutorial will show how to properly set up authorization with ec.components.\nMake sure you have a project running that follows the Setup Tutorial.\nLogin\n1. Create a new Route\nRefer to the routes tutorial. We create a route called login with a LoginComponent.\n2. Add route redirect to login.component.ts:\n  constructor(public router: Router) {\n  }\n\n  redirect() {\n    this.router.navigate(['profile'])\n  }3. Add Login Component to template\nUse this in your login.component.html template:\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
